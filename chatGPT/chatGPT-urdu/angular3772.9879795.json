[
    {
        "Question": "کونیی",
        "Answer": "کونیی ایک مشہور اوپن سورس ویب ایپلی کیشن فریم ورک ہے جو گوگل کے ذریعہ تیار اور برقرار رکھا گیا ہے۔یہ متحرک سنگل پیج ایپلی کیشنز (ایس پی اے) کی تعمیر کے لئے استعمال ہوتا ہے اور یہ ماڈل ویو کنٹرولر (ایم وی سی) آرکیٹیکچرل پیٹرن پر مبنی ہے۔ یہاں کونیی سے وابستہ کچھ اہم خصوصیات اور تصورات ہیں: ٹائپ اسکرپٹ: کونییولر ٹائپ اسکرپٹ میں لکھا جاتا ہے ، ایک سپرسیٹ ، ایک سپرسیٹ میں لکھا جاتا ہے۔جاوا اسکرپٹ کاٹائپ اسکرپٹ میں جاوا اسکرپٹ میں جامد ٹائپنگ اور دیگر خصوصیات شامل ہوتی ہیں ، جس سے یہ زیادہ مضبوط اور برقرار رکھنے والا ہوتا ہے۔ہر جزو HTML ٹیمپلیٹ ، CSS شیلیوں ، اور جزو کی منطق کو شامل کرتا ہے۔"
    },
    {
        "Question": "کونیی کیا ہے اور اس کی کلیدی خصوصیات کیا ہیں؟",
        "Answer": "کونیی ایک مشہور اوپن سورس ویب ایپلی کیشن فریم ورک ہے جو گوگل نے تیار کیا ہے۔یہ متحرک اور توسیع پذیر سنگل پیج ایپلی کیشنز (ایس پی اے) کی تعمیر کے لئے استعمال ہوتا ہے اور یہ ماڈل ویو کنٹرولر (ایم وی سی) آرکیٹیکچرل پیٹرن پر مبنی ہے۔کونیولر خصوصیات اور ٹولز کا ایک جامع مجموعہ فراہم کرتا ہے جو ڈویلپرز کو مضبوط اور برقرار رکھنے والے ویب ایپلی کیشنز بنانے میں مدد کرتا ہے۔ کونیی کی کلید خصوصیات میں شامل ہیں: جزو پر مبنی فن تعمیر: کونیی ایک جزو پر مبنی نقطہ نظر کی پیروی کرتا ہے ، جہاں درخواست دوبارہ قابل استعمال اور ماڈیولر اجزاء میں تقسیم ہوتی ہے۔ہر جزو اپنے اپنے HTML ٹیمپلیٹس ، سی ایس ایس اسٹائلز ، اور کاروباری منطق کا احاطہ کرتا ہے ، جس سے ترقی ، جانچ اور برقرار رکھنے میں آسانی ہوتی ہے۔ ٹائپ اسکرپٹ: کونییولر ٹائپ اسکرپٹ کے ساتھ بنایا گیا ہے ، جو جاوا اسکرپٹ کا ایک مستحکم ٹائپ شدہ سپر سیٹ ہے۔ٹائپ اسکرپٹ میں جاوا اسکرپٹ میں جامد ٹائپنگ ، کلاسز ، انٹرفیس ، اور ماڈیول جیسی خصوصیات شامل کی گئی ہیں ، بہتر ٹولنگ ، غلطی کا پتہ لگانے ، اور کوڈ آرگنائزیشن کو چالو کرنا۔) خود بخود نظارے کو اپ ڈیٹ کریں ، اور اس کے برعکس۔اس سے اعداد و شمار اور UI کے مابین ہم آہنگی کو آسان بنایا جاتا ہے ، جس سے بوائلر پلیٹ کوڈ کی مقدار کو کم کیا جاتا ہے۔ ڈائرکٹوز: کونیولر طاقتور ہدایتوں کو متعارف کراتا ہے جو اضافی طرز عمل اور فعالیت کے ساتھ HTML کو بڑھاتا ہے۔ہدایت آپ کو ڈوم میں جوڑ توڑ کرنے ، کنٹرول رینڈرنگ ، ایونٹ کے ہینڈلرز کو شامل کرنے ، اور دوبارہ قابل استعمال اجزاء بنانے کی اجازت دیتی ہے۔ انحصار انجیکشن: کونیولر میں ایک بلٹ ان انحصار انجیکشن سسٹم ہوتا ہے جو مختلف اجزاء اور خدمات کے مابین انحصار کو سنبھالنے میں مدد کرتا ہے۔اس سے اجزاء کو آسانی سے ڈوپل اور آزادانہ طور پر جانچنے کی اجازت دے کر ماڈیولر اور قابل جانچ کوڈ کو فروغ ملتا ہے۔یہ ڈویلپرز کو راستوں کی وضاحت کرنے ، اجزاء کے ساتھ منسلک کرنے ، اور بغیر کسی مکمل صفحے کے بغیر مختلف نظریات کے مابین نیویگیشن کو سنبھالنے کی اجازت دیتا ہے۔ ری ایکٹیو پروگرامنگ: کونییولر آر ایکس جے ایس (جاوا اسکرپٹ کے لئے رد عمل توسیع) کے استعمال سے رد عمل پروگرامنگ کو قبول کرتا ہے۔آر ایکس جے ایس غیر متزلزل ڈیٹا اسٹریمز کے ساتھ کام کرنے کے ل tools ٹولز کا ایک بھرپور سیٹ فراہم کرتا ہے اور ڈویلپرز کو جوابدہ اور توسیع پذیر ایپلی کیشنز بنانے کی اجازت دیتا ہے۔ ٹسٹنگ: کونیی یونٹ ٹیسٹنگ اور اختتام سے آخر ٹیسٹنگ کے لئے بہترین مدد کی پیش کش کرتا ہے۔یہ اجزاء ، خدمات اور دیگر اطلاق کے دیگر حصوں کی جانچ کے لئے کرما اور جیسمین جیسے ٹولز مہیا کرتا ہے ، کوڈ بیس کی وشوسنییتا اور برقرار رکھنے کو یقینی بناتا ہے۔ یہ صرف کونیی کی کچھ اہم خصوصیات ہیں۔اس فریم ورک میں لائبریریوں ، ٹولز اور کمیونٹی سپورٹ کا ایک وسیع ماحولیاتی نظام موجود ہے ، جس سے یہ پیچیدہ ویب ایپلی کیشنز کی تعمیر کے لئے ایک مقبول انتخاب ہے۔"
    },
    {
        "Question": "کونیی میں NGModule اور جزو میں کیا فرق ہے؟",
        "Answer": "کونیی میں ، این جی موڈول اور جزو دونوں ایک ایپلی کیشن کے اہم بلڈنگ بلاکس ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں۔ این جی ایم او ڈیول: ایک این جی ماڈل ایک ایسا سجاوٹ ہے جو کلاس کو کونیی ماڈیول کی حیثیت سے نشان زد کرتا ہے۔اس کا استعمال متعلقہ اجزاء ، خدمات ، ہدایات ، اور دیگر نمونے کے ایک مربوط سیٹ کی وضاحت کے لئے کیا جاتا ہے جو ایپلی کیشن کی ایک فنکشنل یونٹ تشکیل دینے کے لئے مل جاتے ہیں۔ این جی موڈول درخواست کے اجزاء اور خدمات کو منظم کرنے اور تشکیل دینے کے لئے کنٹینر کے طور پر کام کرتا ہے۔یہ اطلاق کے مختلف حصوں کے مابین انحصار کو سنبھالنے میں مدد کرتا ہے اور درخواست کی تالیف اور عملدرآمد کے لئے ایک سیاق و سباق فراہم کرتا ہے۔ این جی ماڈل عام طور پر اپنے برآمد شدہ اجزاء ، ہدایتوں اور خدمات تک رسائی کے ل other دوسرے این جی ماڈل کو درآمد کرتا ہے۔ این جی ایم او ڈیول میں میٹا ڈیٹا بھی فراہم کرتا ہے جو اندراج کی وضاحت کرتا ہے۔اجزاء ، فراہم کنندگان ، اور ماڈیول کے لئے ترتیب دینے کے دیگر اختیارات۔یہ ایپلی کیشن کے اندر دوبارہ قابل استعمال اور خود ساختہ UI بلڈنگ بلاک کی نمائندگی کرتا ہے۔ ایک جزو صارف کے انٹرفیس کے ایک مخصوص حصے کے لئے پریزنٹیشن منطق ، HTML ٹیمپلیٹس ، اور سی ایس ایس اسٹائل کو انکاسٹ کرتا ہے۔دوسرے اجزاء سے ہونے والے واقعات سے اعداد و شمار عام طور پر ایک این جی ماڈل کے اندر اعلان کیے جاتے ہیں اور پوری ایپلی کیشن میں دوبارہ استعمال کیے جاسکتے ہیں۔ خلاصہ میں ، ایک این جی ایم او ڈیول ایک ماڈیول کی وضاحت کے لئے استعمال کیا جاتا ہے جو متعلقہ اجزاء اور خدمات کے ایک گروپ کو ترتیب دیتا ہے اور اس کی تشکیل کرتا ہے ، جبکہ ایک اجزاءدرخواست کے اندر ایک مخصوص UI عنصر کی نمائندگی کرتا ہے اور اس کی پیش کش منطق کو گھیراتا ہے۔NGModule ایک اعلی سطحی تنظیم اور تشکیل فراہم کرتا ہے ، جبکہ جزو انفرادی UI عناصر کے نفاذ اور پیش کش پر مرکوز ہے۔"
    },
    {
        "Question": "آپ کونیی سی ایل آئی کا استعمال کرتے ہوئے نیا کونیی پروجیکٹ کیسے بناتے ہیں؟",
        "Answer": "کونیی سی ایل آئی (کمانڈ لائن انٹرفیس) کا استعمال کرتے ہوئے ایک نیا کونیی پروجیکٹ بنانے کے ل these ، ان اقدامات پر عمل کریں: نوڈ. جے ایس انسٹال کریں: اس بات کو یقینی بنائیں کہ آپ کے سسٹم پر نوڈ ڈاٹ جے ایس انسٹال ہے۔آپ اسے آفیشل نوڈ ڈاٹ جے ایس ویب سائٹ (https://nodejs.org) سے ڈاؤن لوڈ کرسکتے ہیں اور اپنے آپریٹنگ سسٹم کے لئے تنصیب کی ہدایات پر عمل کرسکتے ہیں۔ کونیی سی ایل آئی کو انسٹال کریں: ایک ٹرمینل یا کمانڈ پرامپٹ کھولیں اور عالمی سطح پر کونیی سی ایل آئی انسٹال کرنے کے لئے مندرجہ ذیل کمانڈ چلائیں۔آپ کے سسٹم پر: بشکپی کوڈن پی ایم انسٹال -گ @کونیی/کلیکریئٹ ایک نیا پروجیکٹ: ایک بار کونیی سی ایل آئی انسٹال ہونے کے بعد ، آپ ایک نیا کونییولر تشکیل دے سکتے ہیں"
    },
    {
        "Question": "کونیی جزو لائف سائیکل ہکس کی وضاحت کریں۔",
        "Answer": "کونیی لائف سائیکل ہکس کا ایک سیٹ فراہم کرتا ہے جو آپ کو ایک کے مختلف مراحل میں ٹیپ کرنے کی اجازت دیتا ہے"
    },
    {
        "Question": "کونیی جزو میں ٹیمپلیٹ یو آر ایل اور اسٹائل یو آر ایل کی خصوصیات کا مقصد کیا ہے؟",
        "Answer": "کونیی اجزاء میں ، ٹیمپلیٹورل اور اسٹائلورلز کی خصوصیات کو جزو کے لئے بیرونی ٹیمپلیٹ اور اسٹائل فائلوں کی وضاحت کرنے کے لئے استعمال کیا جاتا ہے۔ان خصوصیات کا مقصد یہ ہے: ٹیمپلیٹورل:"
    },
    {
        "Question": "آپ کونیی میں صارف کے ان پٹ کو کس طرح سنبھالتے ہیں؟",
        "Answer": "کونیی میں ، صارف کے ان پٹ کو آپ کی درخواست کی مخصوص ضروریات کے مطابق مختلف طریقوں سے سنبھالا جاسکتا ہے۔کونیی میں صارف کے ان پٹ کو سنبھالنے کے لئے یہاں کچھ عام نقطہ نظر ہیں: ٹیمپلیٹ سے چلنے والی شکلیں: کونیی HTML فارم کا استعمال کرتے ہوئے صارف کے ان پٹ کو سنبھالنے کے لئے ٹیمپلیٹ سے چلنے والا نقطہ نظر فراہم کرتا ہے۔پروسیس صارف ان پٹ۔ فارم ان پٹ فیلڈز کے پابند ہیں اور دو طرفہ ڈیٹا بائنڈنگ کا استعمال کرتے ہوئے جزو کے ڈیٹا ماڈل کو اپ ڈیٹ کریں۔"
    },
    {
        "Question": "کونیی روٹنگ کیا ہے اور یہ کیسے کام کرتا ہے؟",
        "Answer": "کونیی روٹنگ ایک ایسا طریقہ کار ہے جو آپ کو کونیی ایپلی کیشن کے اندر مختلف نظریات اور اجزاء کے مابین تشریف لے جانے کی اجازت دیتا ہے۔یہ براؤزر میں دکھائے گئے مواد کو مکمل صفحہ دوبارہ لوڈ کی ضرورت کے بغیر متحرک طور پر اپ ڈیٹ کرکے سنگل پیج ایپلی کیشنز (ایس پی اے) کی تشکیل کو قابل بناتا ہے۔کونیی کی روٹنگ راستوں کے تصور پر مبنی ہے ، جو یو آر ایل اور اجزاء کے مابین نقشہ سازی کی وضاحت کرتی ہے۔ یہاں کہ کونیی روٹنگ کس طرح کام کرتی ہے: روٹر کو ترتیب دینا: کونیی ایپلی کیشن میں روٹنگ کا استعمال کرنے کے ل you ، آپ کو @کونیی/ @کونیولر/ روٹس کو درآمد کرنے کی ضرورت ہے۔آپ کی ایپلی کیشن کی ماڈیول فائل (جیسے ، app.module.ts) میں روٹر۔ روٹس سرنی آپ کی درخواست کے راستوں کی وضاحت کرتی ہے۔ہر راستہ ایک راستہ اور ایک پر مشتمل ہوتا ہے"
    },
    {
        "Question": "کونیی میں انحصار انجیکشن کیا ہے اور یہ کیوں ضروری ہے؟",
        "Answer": "انحصار انجیکشن (ڈی آئی) ایک ڈیزائن کا نمونہ اور کونیی کی ایک اہم خصوصیت ہے جو آپ کو کلاس کے اندر تخلیق کرنے کی بجائے بیرونی ذرائع سے فراہم کرکے کلاس کے انحصار کا انتظام کرنے کی اجازت دیتا ہے۔کونیی میں ، ڈی آئی کو ان کلاسوں کو اجزاء ، خدمات ، اور دیگر انحصار فراہم کرنے کے لئے بڑے پیمانے پر استعمال کیا جاتا ہے جن کی ضرورت ہوتی ہے۔ یہاں انحصار انجیکشن کونیی میں اہم ہے: کوڈ ماڈیولریٹی اور دوبارہ استعمال کی صلاحیت: انحصار انجکشن ان کے انحصار سے منحصر کلاسوں کو ڈیکپل کرکے کوڈ ماڈیولریٹی کو فروغ دیتا ہے۔.یہ آپ کو ایسی کلاسیں لکھنے کی اجازت دیتا ہے جو ان کی انحصار پیدا کرنے یا ان کا انتظام کرنے کی فکر کیے بغیر ان کی مخصوص فعالیت پر مرکوز ہیں۔"
    },
    {
        "Question": "آپ کونیی میں اجزاء کے مابین کیسے بات چیت کرتے ہیں؟",
        "Answer": "کونیی میں ، تعلقات اور مطلوبہ مواصلات کی سمت پر منحصر ہے ، اجزاء کے مابین بات چیت کرنے کے متعدد طریقے ہیں۔یہاں"
    },
    {
        "Question": "کونیی میں نگموڈل ہدایت کا مقصد کیا ہے؟",
        "Answer": "کونیی میں این جی ایم او ڈی ای ایل ہدایت کو فارم کنٹرولز (جیسے ان پٹ فیلڈز ، چیک باکسز ، اور منتخب آپشنز) اور جزو کی خصوصیات کے مابین دو طرفہ ڈیٹا بائنڈنگ کو قابل بنانے کے لئے استعمال کیا جاتا ہے۔یہ آپ کو جزو کی کلاس میں متعلقہ خصوصیات کے ساتھ فارم کنٹرول کی اقدار کو ہم آہنگ کرنے کی اجازت دیتا ہے۔ یہاں این جی ماڈل کی ہدایت کے کلیدی مقاصد اور خصوصیات ہیں: دو طرفہ ڈیٹا بائنڈنگ: این جی موڈل ڈائریکٹیو ایک سنگل میں پراپرٹی بائنڈنگ اور ایونٹ کے پابند کو جوڑتا ہے۔ہدایت ، دو طرفہ ڈیٹا بائنڈنگ کو چالو کرنا۔ یہ فارم کنٹرول اور جزو کی پراپرٹی کے مابین ایک تعلق قائم کرتا ہے ، اس بات کو یقینی بناتا ہے کہ کسی میں تبدیلیاں خود بخود دوسرے میں جھلکتی ہیں۔ اجزاء کی پراپرٹی: جب صارف این جی ایم او ڈی ای ایل کے ساتھ پابند فارم کنٹرول کے ساتھ بات چیت کرتا ہے ،جیسے ان پٹ فیلڈ میں ٹائپ کرنا یا کسی آپشن کو منتخب کرنا ، قدر"
    },
    {
        "Question": "کونیولر میں نظریاتی اور نظریہ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں ، نظریہ کیپسولیشن اینوم جزو کے شیلیوں کے ل different مختلف encapsulation کے اختیارات مہیا کرتی ہے۔اس سے طے ہوتا ہے کہ جزو کے اسلوب کو کس طرح ڈوم میں لاگو اور اسکوپ کیا جاتا ہے۔نظریہ کی دو عام طور پر استعمال ہونے والی اقدار نظریہ کیپسولیشن ہیں۔ ایمولیٹڈ اور ویوینکپسولیشن۔یہاں ہے"
    },
    {
        "Question": "کونیی میں کسی صف پر تکرار کرنے کے لئے آپ NGFOR کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، NGFOR ہدایت نامہ کسی صف یا قابل تقلید شے کے اوپر تکرار کرنے اور HTML عناصر کو متحرک طور پر پیدا کرنے کے لئے استعمال کیا جاتا ہے۔یہ آپ کو صف میں ہر آئٹم کے لئے HTML کوڈ کے ایک حصے کو دہرانے کی اجازت دیتا ہے۔یہ ہے کہ آپ کسی سرنی کے اوپر تکرار کے لئے NGFOR کا استعمال کیسے کرسکتے ہیں: کامن ماڈل کو درآمد کریں: NGFOR استعمال کرنے سے پہلے ، اس بات کو یقینی بنائیں کہ آپ نے ماڈیول فائل میں کامن ماڈل کو درآمد کیا ہے جہاں آپ کا جزو رہتا ہے۔ امپورٹ بیان: '@کونیی/عام' سے درآمد {عام ماڈل} '@کونیی/عام' سے درآمد کریں۔؛ استعمال کریں"
    },
    {
        "Question": "کونیی میں واقعہ کی کلاس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں واقعہ کی کلاس کلاس @کونیی/کور پیکیج کا ایک حصہ ہے اور اسے کسٹم واقعات کو نافذ کرنے اور واقعہ پر مبنی میکانزم کے ذریعہ جزو مواصلات کی سہولت فراہم کرنے کے لئے استعمال ہوتا ہے۔یہ بچوں سے والدین کے اجزاء سے متعلق مواصلات کے نمونہ کو چالو کرنے میں کلیدی کردار ادا کرتا ہے۔ ایونٹیمیٹر کلاس ایک جز کو کسٹم واقعات کو خارج کرنے کی اجازت دیتا ہے جس کی سبسکرائب کو دوسرے اجزاء یا ہدایتوں کے ذریعہ کیا جاسکتا ہے۔ایونٹیمیٹر کلاس کا مقصد اور استعمال یہاں ہے: کسٹم ایونٹ کی تخلیق: ایونٹ میٹٹر کلاس کونیی کے اجزاء کے اندر کسٹم واقعات کی تخلیق کو قابل بناتا ہے۔ ایونٹیمیٹر کی مثال کی وضاحت کرتے ہوئے ، ایک جزو مخصوص تنخواہوں کے ساتھ کسٹم واقعات کا اعلان اور خارج کرسکتا ہے ۔2"
    },
    {
        "Question": "آپ کونیولر میں @ویوچلڈ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، @ویوچلڈ ڈیکوریٹر والدین کے جزو سے بچوں کے اجزاء ، ہدایات ، یا ڈوم عناصر تک رسائی حاصل کرنے کے لئے استعمال ہوتا ہے۔یہ والدین کے جزو کو اپنے ٹیمپلیٹ کے اندر مخصوص عناصر یا اجزاء کے ساتھ استفسار اور تعامل کرنے کی اجازت دیتا ہے۔یہ ہے کہ آپ @ویوچائڈ کو کس طرح استعمال کرسکتے ہیں: ویوڈائڈ ڈیکوریٹر کو درآمد کریں: اپنے اجزاء کی فائل میں @کونیی/کور سے ویوچائڈ ڈیکوریٹر درآمد کریں۔"
    },
    {
        "Question": "کونیی میں NGCLASS ہدایت کا مقصد کیا ہے؟",
        "Answer": "کونیی میں NGCLASS ہدایت نامہ کچھ تاثرات یا شرائط پر مبنی HTML عناصر پر CSS کلاسوں کو مشروط طور پر لاگو کرنے کے لئے استعمال ہوتا ہے۔یہ آپ کو عنصر پر سی ایس ایس کلاسوں کی موجودگی یا عدم موجودگی کو متحرک طور پر کنٹرول کرنے کی اجازت دیتا ہے ، جس سے جزو منطق یا صارف کی بات چیت کی بنیاد پر مختلف شیلیوں کا اطلاق آسان ہوجاتا ہے۔این جی سی ایل اے ایس کی ہدایت مندرجہ ذیل خصوصیات فراہم کرتی ہے: مشروط کلاس بائنڈنگ: این جی سی ایل اے ایس سی کا بنیادی مقصد یہ ہے کہ سی ایس ایس کلاس کو جزو میں بیان کردہ شرائط پر مبنی عناصر سے باندھنا ہے۔کلاس کے نام پر"
    },
    {
        "Question": "آپ کونیی میں والدین اور بچوں کے اجزاء کے مابین ڈیٹا کیسے گزرتے ہیں؟",
        "Answer": "کونیی میں ، والدین اور بچوں کے اجزاء کے مابین ڈیٹا منتقل کرنے کے متعدد طریقے ہیں۔یہاں کچھ عام طور پر استعمال ہونے والے طریقے ہیں: ان پٹ اور آؤٹ پٹ پراپرٹیز: والدین سے بچے: والدین کے جزو سے ڈیٹا کو بچے کے جزو میں منتقل کرنے کے لئے ان پٹ پراپرٹیز (@ان پٹ ()) استعمال کریں۔ بچوں سے والدین: آؤٹ پٹ پراپرٹیز (@آؤٹ پٹ ()) واقعات (ایونٹ میٹرٹر) کے ساتھ بچوں کے جزو سے والدین کے جزو تک ڈیٹا خارج کرنے کے لئے۔ والدین کا جزو بچوں کے اجزاء کی ان پٹ پراپرٹی کو ایک قدر باندھتا ہے اور بچوں کے اجزاء کے ذریعہ خارج ہونے والے واقعات کی آواز سنتا ہے۔-چڈ: بچوں کے اجزاء یا عنصر کا حوالہ حاصل کرنے اور اس کی خصوصیات یا طریقوں تک براہ راست رسائی حاصل کرنے کے لئے @ویوچائلڈ یا @کونٹینٹائڈ کا استعمال کریں۔"
    },
    {
        "Question": "کونیی میں نگونیٹ اور نگفٹر ویونائٹ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں ، نگونینٹ اور نگفٹر ویونائٹ لائف سائیکل ہکس ہیں جنہیں کسی جزو کی زندگی کے مختلف مراحل پر کہا جاتا ہے۔یہاں دونوں کے مابین فرق ہے: نگونیٹ: نگونینٹ ایک لائف سائیکل ہک ہے جس کے بعد کہا جاتا ہے"
    },
    {
        "Question": "آپ کونیی میں پائپ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، پائپوں کو ٹیمپلیٹس میں ڈیٹا کو تبدیل کرنے اور فارمیٹ کرنے کے لئے استعمال کیا جاتا ہے۔وہ آپ کو صارف کو ظاہر کرنے سے پہلے ڈیٹا میں تبدیلیوں کا اطلاق کرنے کی اجازت دیتے ہیں۔کونیی عام تبدیلیوں کے ل several کئی بلٹ ان پائپ مہیا کرتا ہے ، اور آپ کسٹم پائپ بھی تشکیل دے سکتے ہیں۔یہ ہے کہ آپ کونیی میں پائپوں کا استعمال کیسے کرسکتے ہیں: بلٹ ان پائپ: کونیولر کئی بلٹ ان پائپ مہیا کرتا ہے جسے آپ اپنے ٹیمپلیٹس میں براہ راست استعمال کرسکتے ہیں۔ بلٹ ان پائپ استعمال کرنے کے ل you ، آپ اسے انٹرپولیشن اظہار میں رکھتے ہیں ({{}}) یا بائنڈنگ اظہار ([])۔ پائپ آپریٹر (|) کا استعمال کرتے ہوئے پائپوں کا اطلاق ہوتا ہے ، اس کے بعد پائپ کا نام اور کوئی ضروری پیرامیٹرز۔ htmlcopy کوڈ"
    },
    {
        "Question": "کونیی میں نگونچینجز اور این جی ڈوچیک میں کیا فرق ہے؟",
        "Answer": "کونیی میں ، دونوں نگونچینجز اور این جی ڈوچیک لائف سائیکل ہکس ہیں جو جزو کی خصوصیات یا جزو کے نظریہ میں تبدیلیوں کا پتہ لگانے اور ان پر رد عمل ظاہر کرنے کے لئے مختلف میکانزم مہیا کرتے ہیں۔دونوں کے مابین فرق یہ ہے: نگونچینجس: نگونچنگس ایک لائف سائیکل ہک ہے جسے جب اجزاء کی ان پٹ پراپرٹیز میں سے ایک یا زیادہ تبدیل کیا جاتا ہے۔ یہ نگونینٹ سے پہلے ہی متحرک ہوتا ہے اور جب بھی جزو کی ان پٹ خصوصیات میں تبدیلی آتی ہے۔ایک دلیل ، جس میں ان پٹ پراپرٹیز کی موجودہ اور سابقہ اقدار شامل ہیں۔ آپ ان پٹ پراپرٹیز میں ہونے والی تبدیلیوں کا جواب دینے اور تبدیلیوں کی بنیاد پر اضافی اعمال انجام دینے کے لئے اس ہک کا استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی میں کسٹم کی توثیق کرنے والا کیسے بناتے ہیں؟",
        "Answer": "کونیی میں کسٹم کی توثیق کنندہ بنانے کے ل you ، آپ ان مراحل پر عمل کرسکتے ہیں: اپنے کسٹم تصدیق کنندہ کے لئے ایک نئی ٹائپ اسکرپٹ فائل بنائیں۔مثال کے طور پر ، آپ @کونیی/فارم سے ضروری ماڈیولز اور افعال کے نام سے متعلق ایک فائل تشکیل دے سکتے ہیں۔اس میں خلاصہ کنٹرول ، توثیق کے ایرروں ، اور ویلڈیٹر ایف این۔ ٹائپسکرپٹ کوپی کوڈیمپورٹ {خلاصہ کنٹرول ، توثیق کے ایرورز ، ویلیوئٹر ایف این} سے '@کونیی/فارمز' شامل ہیں۔ ایک ایسی تقریب کی وضاحت کریں جو کسٹم کی توثیق کرنے والے کے طور پر کام کرے گا۔اس فنکشن میں مندرجہ ذیل دستخط ہونا چاہئے: validatorfn.typescriptcopy کوڈ ای ایکسپورٹ فنکشن کسٹم ویلیڈیٹر (): validatorfn {"
    },
    {
        "Question": "مشترکہ ماڈیول اور کونیی میں فیچر ماڈیول میں کیا فرق ہے؟",
        "Answer": "کونیی میں ، مشترکہ ماڈیول اور فیچر ماڈیول دو قسم کے ماڈیول ہیں جو مختلف مقاصد کو پورا کرتے ہیں۔ان دونوں کے مابین فرق یہ ہے: مشترکہ ماڈیول: مشترکہ ماڈیول ایک ماڈیول ہے جس میں اجزاء ، ہدایات اور پائپ شامل ہیں جو متعدد فیچر ماڈیولز میں استعمال ہوتے ہیں۔ اس کا بنیادی مقصد ایک میں عام فعالیت ، اجزاء اور خدمات کے درمیان ایک سے زیادہ ماڈیولز کے درمیان اشتراک کرنا ہے۔ایپلیکیشن۔ شیئرڈ ماڈیول کوڈ کی نقل سے بچنے میں مدد کرتے ہیں اور مشترکہ انحصار کے انتظام کے لئے ایک مرکزی جگہ فراہم کرتے ہیں۔ مشترکہ ماڈیول میں شامل اشیاء کی عام مثالوں کو عام طور پر UI اجزاء ، افادیت کے افعال ، پائپوں اور مشترکہ خدمات کا استعمال کیا جاتا ہے۔ فیچر ماڈیول: ایک خصوصیت کا ماڈیول A ہے۔ماڈیول جو انکپ کرتا ہے"
    },
    {
        "Question": "آپ کونیی میں خدمت کیسے بناتے ہیں؟",
        "Answer": "کونیی میں خدمت بنانے کے ل you ، آپ ان اقدامات پر عمل کرسکتے ہیں: نئی سروس فائل تیار کرنے کے لئے کونیی سی ایل آئی کا استعمال کریں۔اپنا کمانڈ پرامپٹ یا ٹرمینل کھولیں اور پروجیکٹ کی روٹ ڈائرکٹری پر جائیں۔پھر مندرجہ ذیل کمانڈ کو چلائیں: پرل کوپی کوڈینگ سروس سروس میری-سروسز کمانڈ میری خدمت کے نام سے ایک نئی سروس فائل تشکیل دیتی ہے۔کوڈ ایڈیٹر۔ ضروری ماڈیولز اور انحصار۔مثال کے طور پر ، اگر آپ کو خدمت کو دوسرے اجزاء میں انجیکشن کرنے کی ضرورت ہے تو ،@@کونیی/کور سے انجیکشن لگائیں۔"
    },
    {
        "Question": "کونیی میں HTTPClient ماڈیول کا مقصد کیا ہے؟",
        "Answer": "کونیی میں HTTPClient ماڈیول آپ کی درخواست سے سرورز یا بیرونی APIs تک HTTP کی درخواستیں کرنے کا ایک طریقہ فراہم کرتا ہے۔یہ @کونیی/عام/HTTP پیکیج کا ایک حصہ ہے اور مختلف HTTP آپریشنوں کو سنبھالنے کے لئے ایک اعلی سطحی API پیش کرتا ہے جیسے GET ، POST ، PUT ، DELETE ، وغیرہ۔ HTTPCLIENT ماڈیول کونیولر میں متعدد مقاصد کی خدمت کرتا ہے: HTTP کی درخواستیں بھیجنا:HTTPClient ماڈیول کا بنیادی مقصد سرورز یا APIs کو HTTP درخواستیں بھیجنا ہے۔یہ طریقے مہیا کرتا ہے"
    },
    {
        "Question": "آپ کونیی میں مشاہدہ کرنے والے افراد کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "مشاہدہ کرنے والے کونیی میں رد عمل پروگرامنگ کا ایک لازمی حصہ ہے اور اسینکرونس آپریشنوں کو سنبھالنے کے لئے وسیع پیمانے پر استعمال کیا جاتا ہے ، جس میں HTTP درخواستیں ، ایونٹ ہینڈلنگ ، اور ڈیٹا اسٹریمز شامل ہیں۔یہ ہے کہ آپ کونیی میں مشاہدہ کرنے والے افراد کو کس طرح استعمال کرسکتے ہیں: ضروری ماڈیولز درآمد کریں: پہلے ، آر ایکس جے ایس لائبریری سے مشاہدہ کرنے والے طبقے اور دیگر متعلقہ کلاسوں کو درآمد کریں۔مثال کے طور پر: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {مشاہدہ کرنے والا ، 'RXJs' سے} کا مشاہدہ کرنے والا بنائیں: آپ مشاہدہ کرنے والے کلاس کنسٹرکٹر کا استعمال کرتے ہوئے ایک قابل مشاہدہ تشکیل دے سکتے ہیں۔کنسٹرکٹر ایک دلیل کے طور پر ایک فنکشن لیتا ہے ، جو ڈیٹا اسٹریم کے پروڈیوسر کی نمائندگی کرتا ہے۔"
    },
    {
        "Question": "کونیی میں HTTP انٹرسیپٹرز کا مقصد کیا ہے؟",
        "Answer": "کونیی میں HTTP انٹرسیپٹرس سرور کو بھیجنے یا درخواست کے ذریعہ موصول ہونے سے پہلے عالمی سطح پر HTTP درخواستوں اور ردعمل کو روکنے اور اس میں ترمیم کرنے کا ایک طریقہ فراہم کرتے ہیں۔وہ آپ کو تمام HTTP درخواستوں اور ردعمل میں مشترکہ فعالیت اور طرز عمل کو شامل کرنے کی اجازت دیتے ہیں ، جیسے ہیڈر شامل کرنا ، غلطیاں سنبھالنا ، لاگنگ ، کیچنگ ، توثیق اور بہت کچھ۔HTTP انٹرسیپٹرز کے مقصد کا خلاصہ اس طرح کیا جاسکتا ہے: درخواستوں میں ترمیم کریں: HTTP انٹرسیپٹر آپ کو سرور پر بھیجنے سے پہلے باہر جانے والی HTTP درخواستوں میں ترمیم کرنے کے قابل بناتے ہیں۔آپ درخواستوں کو روک سکتے ہیں اور ہیڈر شامل کرسکتے ہیں ، استفسار کے پیرامیٹرز کو شامل کرسکتے ہیں ، درخواست باڈی کو تبدیل کرسکتے ہیں ، یا کسی اور ضروری ترمیم کو انجام دے سکتے ہیں۔ جواب دیں ردعمل: انٹرسیپٹرز آپ کو کالنگ کوڈ تک پہنچنے سے پہلے آنے والے HTTP ردعمل کو روکنے کی اجازت دیتے ہیں۔اس سے آپ کو عام ردعمل کے نمونوں کو سنبھالنے کی صلاحیت ملتی ہے ، اس طرح"
    },
    {
        "Question": "آپ کونیی میں غلطیوں کو کس طرح سنبھالتے ہیں؟",
        "Answer": "کونیی میں ، سیاق و سباق اور جس قسم کی غلطی کا سامنا کرنا پڑتا ہے اس کی بنیاد پر غلطیوں کو سنبھالنے کے ل several کئی نقطہ نظر موجود ہیں۔کونیولر میں غلطی سے نمٹنے کے لئے کچھ عام تکنیک یہ ہیں: HTTP درخواستوں میں غلطی سے نمٹنے: جب HTTP درخواستیں کونیولر کے HTTPClient کا استعمال کرتے ہوئے کرتے ہیں تو ، آپ RXJS/آپریٹرز ماڈیول سے کیچیرر آپریٹر کو زنجیر بنا کر غلطیوں کو سنبھال سکتے ہیں۔یہ آپریٹر آپ کو HTTP درخواست کے دوران پیش آنے والی غلطیوں کو پکڑنے اور سنبھالنے کی اجازت دیتا ہے۔(کیچ ایرر ((غلطی) => {// غلطی کنسول کو سنبھالیں۔"
    },
    {
        "Question": "کونیی میں طرز عمل اور ریپلیسوبیکج کے درمیان کیا فرق ہے؟",
        "Answer": "RXJs میں دونوں طرز عمل اور ریپلیسوبیکجک مضامین کی قسم ہیں ، ایک لائبریری جو ایک لائبریری کو بڑے پیمانے پر کونیی میں رد عمل کے پروگرامنگ کے لئے استعمال ہوتی ہے۔تاہم ، وہ اس میں مختلف ہیں کہ وہ خارج ہونے والی اقدار اور صارفین کو کس طرح سنبھالتے ہیں۔یہاں طرز عمل اور ریپلیسوبیکجیکٹ کے مابین ایک موازنہ ہے: طرز عمل: ایک طرز عمل سبجیکٹ تازہ ترین خارج ہونے والی قدر کو اسٹور کرتا ہے اور اسے نئے صارفین کے لئے خارج کرتا ہے۔ جب ایک نیا سبسکرائبر کسی طرز عمل کے لئے سبسکرائب کرتا ہے تو ، اسے فوری طور پر سب سے حالیہ قیمت حاصل ہوتی ہے۔ یہ تازہ ترین قیمت کو برقرار رکھتی ہے۔چونکہ اس کی موجودہ قیمت اور اس کے بعد کے کسی بھی صارفین کو اس کا اخراج کرتا ہے۔ اگر ابھی تک کوئی قیمت خارج نہیں ہوئی ہے ،"
    },
    {
        "Question": "آپ کونییولر میں کینیکٹیوٹیٹ اور کینڈی کو کیسے استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، کینیکٹیویٹیٹ اور کینڈی ایکٹیویٹیٹ روٹ گارڈ ہیں جو آپ کو کچھ شرائط کی بنیاد پر راستوں اور نیویگیشن کی کارروائیوں تک رسائی پر قابو پانے کی اجازت دیتے ہیں۔یہ ہے کہ آپ ان کو کس طرح استعمال کرسکتے ہیں: کینیکٹیوٹیٹ: کینیکٹیوٹیٹ کا استعمال اس بات کا تعین کرنے کے لئے کیا جاتا ہے کہ آیا کسی صارف کو کسی خاص روٹ تک رسائی حاصل کرنے کی اجازت ہے یا نہیں ، کینیکٹیویٹ استعمال کرنے کے ل you ، آپ کو کینیکٹیویٹ انٹرفیس کو نافذ کرنے یا کسی کلاس میں @انجیکشن () ڈیکوریٹر استعمال کرنے کی ضرورت ہے جو اس کو نافذ کرے۔کینیکیٹیٹ انٹرفیس۔ یہاں کینیکٹیویٹ کو استعمال کرنے کی ایک مثال ہے: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {انجیکشن} سے '@کونیی/کور' سے امپورٹ {Canactivate ، ایکٹیویٹ راؤسٹنپ شاٹ ، روٹسٹیٹیسناپ شاٹ ، urltree} سے '@کونیی/راؤٹر' سے import درآمد i درآمد itel'؛ injectable ({فراہم کردہ:' روٹ '}) ایکسپورٹ کلاس اتیگ گارڈ کے ذریعہ کینیکٹیوٹیٹ {کینیکٹیوٹیٹ (اگلا: ایکٹیویٹڈ روٹسناپ شاٹ ، ریاست: روٹسٹیٹیسناپ شاٹ): مشاہدہ <بولین |urltree> |وعدہ <بولین |urltree> |بولین |urltree {// چیک کریں کہ آیا صارف کی توثیق کی گئی ہے یا کسی دوسری حالت سے ملاقات کی گئی ہے // اگر رسائی کی اجازت ہے تو ، یا غلط/urltree اگر رسائی سے انکار کیا گیا ہے تو}} کینڈی کو ایکٹیویٹیٹ کریں: کینڈیٹیو کو اس بات کا تعین کرنے کے لئے استعمال کیا جاتا ہے کہ آیا کسی صارف کو اس سے دور ہونے کی اجازت ہے یا نہیںایک خاص روٹ/جزو۔ کینیکٹیویٹ کرنے کے لئے ، آپ کو کینڈی ایکٹیویٹ انٹرفیس کو نافذ کرنے کی ضرورت ہے یا کسی کلاس پر @انکجیکٹ ایبل () ڈیکوریٹر استعمال کرنے کی ضرورت ہے جو کینڈی ایکٹیویٹ انٹرفیس کو نافذ کرتا ہے۔ کینڈی کوٹیویٹ استعمال کرنے کا طریقہ: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {انجیکشن ایبل} سے ''@کونیی/کور '؛ درآمد {کینڈی ایکٹیویٹ} سے'@کونیی/روٹر 'سے' rxjs 'سے درآمد {مشاہدہ}@انجیکشن ایبل ({فراہم کردہ:' روٹ '}) ایکسپورٹ کلاس فارم گارڈ کینڈیکیٹیٹ <کوئی بھی> {کینڈیٹیٹیٹ (جزو (جزو: کوئی): مشاہدہ کرنے والا <بولین> |وعدہ <بولین> |بولین {// چیک کریں کہ آیا صارف کو جزو سے دور کرنے کی اجازت ہے // واپس سچ کی واپسی کی اجازت ہے اگر نیویگیشن کی اجازت ہے ، یا غلط اگر نیویگیشن سے انکار کیا گیا ہے تو} these ان محافظوں کو راستوں پر لاگو کرنے کے لئے ، آپ کو روٹر ماڈل میں اپنے راستوں کو تشکیل دینے کی ضرورت ہےکینیکٹیوٹیٹ اور کینڈیکٹیویٹ پراپرٹیز۔ روٹ کنفیگریشن میں گارڈز کو کس طرح استعمال کرنے کی ایک مثال ہے: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ngmodule 'سے'@کونیی/کور 'سے درآمد {روٹس ، روٹرموڈول} سے'@کونیی/راؤٹر 'import درآمد {گھریلو اجزاء i درآمد کریں {سے './home.component' ؛ import {propilecompient} سے': روٹس = [{راستہ: '' ، جزو: گھریلو اجزاء} ، {راستہ: 'پروفائل' ، جزو: پروفائلکومیپینٹ ، کینیکٹیویٹ: [اتیگ گارڈ] ، کینڈی ایکٹیویٹیٹ: [فارم گارڈ]} ،]@ngmodule ({درآمدات: [روٹرموڈول۔فورروٹ (روٹس)] ، برآمدات: [روٹرموڈول]}) اس مثال کے طور پر ، اس کی مثال کے طور پر ، تصو .ر گارڈ /پروفائل روٹ تک رسائی کی حفاظت کے لئے استعمال کیا جاتا ہے ، جبکہ فارم گارڈ کو نیویگیشن کو پروفیلکومپینٹ سے دور رکھنے کے لئے استعمال کیا جاتا ہے۔آپ کو اپنے ماڈیول کی فراہم کنندگان کی صف میں یا فراہم کردہ فراہم کرنے والے: 'روٹ' ترتیب کو انجیکشن کے لئے دستیاب کرنے کے لئے انحصار کے طور پر ان محافظوں کو فراہم کرنے کی ضرورت ہے۔ ان کو انجیکشن کے لئے دستیاب کرنے کے لئے۔آپ کے کسٹم منطق کی بنیاد پر راستوں اور نیویگیشن کی کارروائیوں تک رسائی۔"
    },
    {
        "Question": "کونیی میں async پائپ کا مقصد کیا ہے؟",
        "Answer": "کونیی میں async پائپ ایک بلٹ ان پائپ ہے جو غیر متزلزل ڈیٹا اسٹریمز کو سنبھالنے کو آسان بناتا ہے ، خاص طور پر جو مشاہدہ کرنے والے یا وعدے کی اشیاء پر مبنی ہیں۔اس کا مقصد کسی قابل مشاہدہ کی سبسکرائب کرنا یا کسی وعدے کا انتظار کرنا اور خارج شدہ اقدار یا حل شدہ ڈیٹا کے ساتھ خود بخود نظریہ کو اپ ڈیٹ کرنا ہے۔ یہاں ASYNC پائپ کے استعمال کے کلیدی مقاصد اور فوائد ہیں: غیر متزلزل ڈیٹا کو سنبھالنا: ASYNC پائپ غیر متزلزل ڈیٹا اسٹریمز کو سنبھالنے میں مدد کرتا ہے۔دستی طور پر ان کو سبسکرائب کیے بغیر اور دستی طور پر سبسکرپشن کا انتظام کیے بغیر۔یہ خود بخود فراہم کردہ مشاہدہ کرنے والے کو سبسکرائب کرتا ہے یا وعدے کا انتظار کرتا ہے اور خارج شدہ اقدار یا حل شدہ ڈیٹا کو کھول دیتا ہے۔ آٹومیٹک سبسکرپشن مینجمنٹ: ASYNC پائپ مشاہدہ کرنے یا وعدے سے سبسکرائب کرنے اور ان سبسکرائب کرنے کا خیال رکھتا ہے۔یہ"
    },
    {
        "Question": "آپ کونیی میں این جی مشمولات کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، NG-مشمول ہدایت کو والدین کے جزو سے مواد کو بچوں کے جزو میں پیش کرنے کے لئے استعمال کیا جاتا ہے۔یہ والدین کے جزو کے ٹیمپلیٹ سے مشمولات کو بچوں کے اجزاء کے سانچے کو منتقل کرنے کا ایک طریقہ فراہم کرتا ہے۔یہ خاص طور پر مفید ہے جب آپ دوبارہ قابل استعمال اجزاء بنانا چاہتے ہیں جو متحرک مواد کو قبول کرسکتے ہیں۔ یہاں کہ آپ کس طرح این جی مشمولات استعمال کرسکتے ہیں: والدین کے جزو ٹیمپلیٹ (پیرنٹ ڈاٹ کامپینٹ ایچ ٹی ایم ایل) بنائیں: HTMLCOPY کوڈ <Div class = \"والدین کے اجزاء\"> <h2> والدین کا جز </h2> <ng-content> </ng-content> </div> اس مثال میں ، <ng-content> </ng-content> پلیس ہولڈر کو یہ واضح کرنے کے لئے استعمال کیا جاتا ہے کہ پیش گوئی شدہ مواد کہاں ہےوالدین کے جزو سے پیش کیا جائے گا۔ والدین کے جزو اور پروجیکٹ کے مواد کو چائلڈ جزو ٹیمپلیٹ سے استعمال کریں (چائلڈ ڈاٹ کامپینٹ۔ ایچ ٹی ایم ایل): ایچ ٹی ایم ایل کوپی کوڈ <ڈیو کلاس = \"چائلڈ-اجزاء\"> <h3> چائلڈ جز </h3> <ng-content> </ng-content> <p> بچوں کے جزو میں اضافی مواد۔والدین کے اجزاء سے پیش گوئی شدہ مواد کو وصول کرنے اور پیش کرنے کے لئے جزو۔ والدین کے جزو کے اندر بچے کے جزو کو شامل کریں (app.compointer.html): htmlcopy کوڈ <div class = \"app-concent\"> <pp-parent> <p> یہمشمولات کا تخمینہ والدین کے جزو سے ہوتا ہے۔ </p> <p> مزید متوقع مواد۔سانچے.<ایپ پیرنٹ> کے افتتاحی اور اختتامی ٹیگ کے درمیان منسلک مواد کا امکان والدین کے جزو کے این جی-مواد پلیس ہولڈر میں پیش کیا جائے گا۔ جب ایپلی کیشن چلتی ہے تو ، مہیا کی گئی آؤٹ پٹ ہوگی: HTMLCOPY کوڈ <Div class = \"App-Component\"> <div class =\" والدین کا اجزاء \"> <h2> والدین کا جز </h2> <div class =\" چائلڈ اجزاء \"> <h3> چائلڈ جز </h3> <p> یہ مواد والدین سے پیش کیا جاتا ہےجزو۔ </p> <p> مزید متوقع مواد۔ </p> <p> بچوں کے جزو میں اضافی مواد۔والدین کے اجزاء کے ٹیمپلیٹ میں <ایپ پیرنٹ> ٹیگز کے اندر بیان کردہ والدین اور بچوں دونوں کے اجزاء کے این جی-مواد پلیس ہولڈر میں پیش گوئی کی جاتی ہے۔ این جی-مواد کا استعمال کرتے ہوئے ، آپ لچکدار اور دوبارہ قابل استعمال اجزاء تشکیل دے سکتے ہیں جو متحرک مواد کو قبول اور پیش کرسکتے ہیں۔ان کے والدین کے اجزاء سے۔یہ کونیی ایپلی کیشنز میں زیادہ سے زیادہ جزو کی تشکیل اور تخصیص کی اجازت دیتا ہے۔"
    },
    {
        "Question": "کونیی میں ہدایت اور جزو کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی کے تناظر میں ، دونوں ہدایت اور اجزاء صارف کے انٹرفیس بنانے کے لئے استعمال ہونے والے کلیدی بلڈنگ بلاکس ہیں۔اگرچہ وہ کچھ مماثلتوں کو شریک کرتے ہیں ، ان کے مابین اہم اختلافات موجود ہیں۔وہ خود ساختہ یونٹ ہیں جو صارف کے انٹرفیس کے کسی حصے کے نظریہ اور طرز عمل دونوں کو شامل کرتے ہیں۔دوسرے لفظوں میں ، اجزاء HTML ٹیمپلیٹس ، سی ایس ایس اسٹائلز ، اور ٹائپ اسکرپٹ کوڈ کو دوبارہ استعمال کے قابل UI عناصر بنانے کے لئے جوڑتے ہیں۔ایک جزو عام طور پر اسکرین کے ایک حصے کی نمائندگی کرتا ہے ، جیسے ہیڈر ، فوٹر ، سائڈبار ، یا زیادہ پیچیدہ عنصر جیسے فارم یا کارڈ۔"
    },
    {
        "Question": "آپ کونیی میں کسٹم ہدایت کیسے بناتے ہیں؟",
        "Answer": "کونیی میں ایک کسٹم ہدایت بنانے کے ل you ، آپ ان اقدامات پر عمل کرسکتے ہیں: ہدایت تیار کریں: کونیی میں ، آپ اپنی ہدایت کے لئے ضروری فائلوں کو تیار کرنے کے لئے کونیی سی ایل آئی (کمانڈ لائن انٹرفیس) استعمال کرسکتے ہیں۔ایک ٹرمینل یا کمانڈ پرامپٹ کھولیں اور مندرجہ ذیل کمانڈ چلائیں: گراف کیو ایل کوپی کوڈینگ ڈائریکٹیو ڈائریکٹیو-نامہ کمانڈ ہدایت نامہ تیار کرے گا ، جس میں ٹائپ اسکرپٹ کلاس فائل ، ایک ٹیسٹ فائل ، اور ضروری ماڈیول کی تشکیل شامل ہے۔آپ کے ترجیحی کوڈ ایڈیٹر میں ٹائپ اسکرپٹ کلاس فائل (.directive.ts کے ساتھ ختم)"
    },
    {
        "Question": "کونیی میں میزبان بائنڈنگ ڈیکوریٹر کا مقصد کیا ہے؟",
        "Answer": "کونیی میں میزبان بائنڈنگ ڈیکوریٹر کا استعمال کلاس پراپرٹی کو میزبان عنصر کی وصف یا جائیداد سے باندھنے کے لئے کیا جاتا ہے۔یہ آپ کو اجازت دیتا ہے"
    },
    {
        "Question": "آپ کونیی میں NG-Template کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، این جی-ٹیمپلیٹ ایک طاقتور ساختی ہدایت ہے جو آپ کو اپنے جزو کے HTML مارک اپ میں دوبارہ قابل استعمال ٹیمپلیٹس کی وضاحت کرنے کی اجازت دیتا ہے۔یہ ان منظرناموں کے لئے مفید ہے جہاں آپ مشروط طور پر پیش کرنا چاہتے ہیں یا مواد کے کسی بلاک پر حقیقت میں فوری طور پر پیش کیے بغیر اس کی تکرار کرنا چاہتے ہیں۔آپ NGIF ، NGFOR ، یا NGSWICHCASS. HERE کی ایک مثال کونیولر میں NG-Template کو کس طرح استعمال کرنے کی ایک مثال کے ساتھ مل کر NG- ٹیمپلیٹ کا استعمال کرسکتے ہیں: HTMLCOPY کوڈ <"
    },
    {
        "Question": "کونیی میں دیکھنے والے بچوں اور مشمولات کے بچوں میں کیا فرق ہے؟",
        "Answer": "کونیی میں ، دونوں نقطہ نظر اور مشمولات بچے والدین کے جزو میں بچوں کے اجزاء یا عناصر کو استفسار کرنے اور ان تک رسائی کے لئے استعمال ہونے والے سجاوٹ ہیں۔تاہم ، وہ اپنی تلاش کے دائرہ کار اور ان عناصر میں مختلف ہیں جن کو وہ نشانہ بناتے ہیں۔"
    },
    {
        "Question": "آپ کونیی میں ایلیمیمرف کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، ایلیمیمرف ایک کلاس ہے جو @کونیی/کور ماڈیول کے ذریعہ فراہم کیا جاتا ہے جو آپ کو کسی جزو یا ہدایت کے بنیادی ڈوم عنصر تک رسائی اور ان میں ہیرا پھیری کرنے کی سہولت دیتا ہے۔یہ آبائی عنصر کا براہ راست حوالہ فراہم کرتا ہے ، جس سے آپ کو اس کی خصوصیات اور طریقوں تک کم سطح کی رسائی مل جاتی ہے۔ عنصری ریف کو استعمال کرنے کے ل these ، ان مراحل پر عمل کریں: @کونیی/کور سے عنصر ریف کلاس درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {عنصر ریف 'سے' @کونیولر/سے 'لازمی'؛"
    },
    {
        "Question": "کونیی میں رینڈر 2 کا مقصد کیا ہے؟",
        "Answer": "کونیی میں ، رینڈرر 2 @کونیی/کور ماڈیول کے ذریعہ فراہم کردہ ایک خلاصہ ہے جو آپ کو پلیٹ فارم-اگنوسٹک انداز میں بنیادی ڈوم کے ساتھ بات چیت کرنے کی اجازت دیتا ہے۔یہ ایلیمنٹ ریف کا استعمال کرتے ہوئے براہ راست DOM تک رسائی کے مقابلے میں DOM کو جوڑنے کے ل a ایک محفوظ اور زیادہ کونیی دوستانہ نقطہ نظر فراہم کرتا ہے۔ رینڈر 2 کا مقصد DOM کو جزو کی منطق سے پیش کرنے اور جوڑ توڑ کرنے کے خدشات کو الگ کرنا ہے۔یہ طریقوں کا ایک مجموعہ فراہم کرتا ہے جو عام ڈوم آپریشنوں کو شامل کرتا ہے ، جیسے عناصر بنانا ، صفات میں ترمیم کرنا ، کلاسوں کو شامل کرنا اور اسے ہٹانا ، شیلیوں میں ہیرا پھیری اور بہت کچھ۔رینڈر 2 کا استعمال کرکے ، آپ یہ یقینی بناسکتے ہیں کہ آپ کا جزو مختلف رینڈرنگ ماحول ، جیسے سرور سائیڈ رینڈرنگ یا کے ساتھ ہم آہنگ رہتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں NGSWitch ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، NGSWitch ہدایت ایک ساختی ہدایت ہے جو آپ کو متعدد معاملات کی بنیاد پر مشروط طور پر مواد پیش کرنے کی اجازت دیتی ہے۔یہ ایک سے زیادہ *این جی آئی ایف ہدایات کا استعمال کیے بغیر متعدد ، باہمی خصوصی معاملات کو سنبھالنے کا ایک آسان طریقہ فراہم کرتا ہے۔ این جی ایس ڈبلیوچ ہدایت کا استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: این جی ایس ڈبلیوچ ہدایت کو کنٹینر عنصر پر رکھیں: HTMLCOPY کوڈ <div [ngswitch] = \"اظہار\">><!-مشروط طور پر پیش کیا جائے-> </div>"
    },
    {
        "Question": "کونیی میں ویوچائڈ اور مشمولات کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں ، دونوں ویوچائلڈ اور مشمولات دونوں ہی والدین کے جزو کے اندر بچوں کے عناصر یا اجزاء تک رسائی کے لئے استعمال ہونے والے سجاوٹ ہیں ، لیکن وہ ان عناصر کے لحاظ سے مختلف ہیں جن تک وہ رسائی حاصل کرسکتے ہیں۔ ویوچائلڈ: ویوچائڈ ڈیکوریٹر کسی ایک بچے کے عنصر کا حوالہ حاصل کرنے کے لئے استعمال ہوتا ہے یاجزو جو والدین کے جزو کے ٹیمپلیٹ کے اندر بیان کیا گیا ہے۔ یہ آپ کو بچوں کے عناصر یا اجزاء تک رسائی حاصل کرنے کی سہولت دیتا ہے جو عنصر یا جزو کے انتخاب کنندہ کا استعمال کرتے ہوئے والدین کے جزو کے ٹیمپلیٹ کے اندر براہ راست پیش گوئی کی جاتی ہیں۔ ویو چائلڈ کو عناصر ، اجزاء ، ہدایت یا ٹیمپلیٹس کے ساتھ استعمال کیا جاسکتا ہے۔.یہ منظر کی سطح پر عناصر یا اجزاء تک رسائی حاصل کرسکتا ہے ، اس کا مطلب ہے کہ وہ والدین کے جزو کے ٹیمپلیٹ میں موجود ہونا ضروری ہے۔ ویو چائلڈ کو ٹیمپلیٹ ریفرنس متغیر یا جزو کلاس/قسم کے ساتھ استعمال کیا جاسکتا ہے۔ ویوڈائڈ کا مثال کے طور پر استعمال: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {اجزاء ، ویوڈائڈ۔، عنصری ریف} سے '@کونیی/کور' ؛@اجزاء ({سلیکٹر: 'ایپ پیرنٹ' ، ٹیمپلیٹ: `<div> <h1 #ہیڈیریلیمنٹ> چائلڈ ہیڈر </h1> </div>` `) ایکسپورٹ کلاس پیرنٹ کامپینٹ{ @ویوچائلڈ ('ہیڈریلیمنٹ') ہیڈر!: عنصر ریف ؛ngafterviewinit () {console.log (this.header.nativelement.textContent) ؛// بچے کے عنصر کے متن کے مواد تک رسائی}} contindershild: مشمولات کی سجاوٹ کو کسی ایک ہی بچے کے عنصر یا جزو کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے جو <ng-content> tag. اس کی اجازت دیتا ہے۔بچوں کے عناصر یا اجزاء تک رسائی حاصل کرنے کے لئے جو جزو کے ٹیگ کے مشمولات سے والدین کے جزو میں پیش کیے جاتے ہیں۔اجزاء کا ٹیمپلیٹ۔ کنٹینٹائڈ کو اجزاء کی کلاس/قسم کے ساتھ استعمال کیا جاسکتا ہے۔کلاس چائلڈ ڈائریکٹیو {پیغام = 'چائلڈ ڈائریکٹیو' ؛}@جزو ({سلیکٹر: 'ایپ پیرنٹ' ، ٹیمپلیٹ: `<div> <ng-content> </ng-content> </div>` `) برآمدی کلاس پیرنٹ کامپینٹcontent @کنٹینٹائلڈ (چائلڈ ڈائریکٹیو) بچہ !: چائلڈ ڈائریکٹیو ؛ngaftercontentinit () {console.log (this.child.message) ؛// متوقع بچے کے جزو کی میسج پراپرٹی تک رسائی}} اس مثال میں ، بچوں کی سمت <ng-content> کا استعمال کرتے ہوئے پیرنٹکپینٹ میں پیش کی جاتی ہے۔مشمولات کی تلاش میں ڈیکوریٹر کا استعمال والدین کے اندر متوقع بچوں کی ہدایت تک رسائی کے لئے کیا جاتا ہے۔ خلاصہ یہ ہے کہ ، ویوڈائڈ کو والدین کے جزو کے ٹیمپلیٹ کے اندر بیان کردہ بچوں کے عناصر یا اجزاء تک رسائی حاصل کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ مشمولات کا استعمال بچوں کے عناصر یا اجزاء تک رسائی کے لئے استعمال کیا جاتا ہے جو والدین کے جزو کے ٹیمپلیٹ میں پیش گوئی کرتے ہیں۔<ng-content> کا استعمال کرتے ہوئے۔"
    },
    {
        "Question": "کونیی روٹنگ میں پاتھ لوکیشن اسٹریٹی اور ہیشلوکیشن اسٹریٹی کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، براؤزر میں یو آر ایل کو سنبھالنے اور اس کی نمائش کے لئے پاتھ لوکیشن اسٹریٹی اور ہیشلوکیشن اسٹریٹیجی ہے۔یہ آپ کو ہیش علامت (#) کے بغیر صاف اور پڑھنے کے قابل یو آر ایل رکھنے کی اجازت دیتا ہے۔مثال کے طور پر ، اگر آپ اس حکمت عملی کا استعمال کرتے ہوئے/مصنوعات پر تشریف لے جاتے ہیں تو ، براؤزر کے ایڈریس بار میں موجود یو آر ایل http://example.com/products http://example.com/#/products. کے بجائے pathlocationsTrategy استعمال کرنے کے لئے ہوگا ،آپ کو یو آر ایل کی دوبارہ لکھنے کی حمایت کے ل your اپنے سرور کو تشکیل دینے کی ضرورت ہے۔یہ ضروری ہے کیونکہ جب صارف براہ راست کسی مخصوص یو آر ایل تک رسائی حاصل کرتا ہے تو ، سرور کو یہ جاننے کی ضرورت ہوتی ہے کہ اسے کونیی ایپلی کیشن کے انٹری پوائنٹ (انڈیکس ایچ ٹی ایم ایل) کی خدمت کرنی چاہئے تاکہ کونیی روٹنگ کو سنبھال سکے۔سرور کو تمام راستوں کے لئے ایک ہی انڈیکس ایچ ٹی ایم ایل فائل کو واپس کرنے کے ل config ترتیب دیا جانا چاہئے یا درخواستوں کو درست فائل پر بھیجنے کے لئے یو آر ایل رائٹنگ کے قواعد کا استعمال کریں۔ جدید براؤزرز کے لئے یہ حکمت عملی تجویز کی گئی ہے جو HTML5 ہسٹری API کی حمایت کرتے ہیں۔یہ ایک زیادہ صارف دوست اور روایتی یو آر ایل ڈھانچہ مہیا کرتا ہے۔جب آپ اس حکمت عملی کا استعمال کرتے ہوئے کسی راستے پر جاتے ہیں تو ، # علامت کے بعد راستہ یو آر ایل میں شامل ہوجاتا ہے۔مثال کے طور پر ، اس حکمت عملی کا استعمال کرتے ہوئے/مصنوعات پر تشریف لے جانے کے نتیجے میں URL http://example.com/#/productions کا نتیجہ ہوگا۔ ہیشلوکیشن اسٹریٹی کا فائدہ یہ ہے کہ یہ بغیر کسی سرور سائیڈ کنفیگریشن کے خانے سے باہر کام کرتا ہے۔جب براؤزر سرور سے درخواست کرتا ہے تو ، # علامت کے بعد یو آر ایل کا حصہ سرور کو نہیں بھیجا جاتا ہے۔لہذا ، سرور ہمیشہ انڈیکس ایچ ٹی ایم ایل فائل کو واپس کرے گا ، اور کونیی کلائنٹ سائیڈ پر روٹنگ سنبھال سکتا ہے اور اسے سنبھال سکتا ہے۔ یہ حکمت عملی پرانے براؤزرز کے لئے مفید ہے جو HTML5 ہسٹری API کی حمایت نہیں کرتی ہے یا ایسے منظرناموں میں جہاں سرور کی تشکیل ہے۔محدود یا ممکن نہیں۔یہ اس بات کو یقینی بناتا ہے کہ روٹنگ کی فعالیت مختلف ماحول میں مستقل طور پر کام کرتی ہے۔ کونیی ایپلی کیشن میں روٹنگ کی حکمت عملی کی وضاحت کرنے کے ل you ، آپ کو مقامات کی تشکیل کو درآمد کرنے کی ضرورت ہے اور اسے اپنے ایپلی کیشن کے روٹ ماڈیول (ایپموڈول) یا ایک مخصوص روٹنگ ماڈیول میں فراہم کرنے کی ضرورت ہے۔مثال کے طور پر: ٹائپ اسکرپٹ کوپی کوڈیم پورٹ {ngmodule ''@کونیی/کور 'سے'@کونیی/پلیٹ فارم-براؤزر 'سے درآمد {براؤزرموڈول} امپورٹ {مقامات کی تعمیر ،'@کونیی/عام 'سے@ngmodule ({درآمدات:۔اس کے بجائے ہیش پر مبنی حکمت عملی کو استعمال کرنے کے ل You آپ اسے ہیشلوکیشن اسٹریٹی سے تبدیل کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں متحرک درآمد نحو کے ساتھ آپ لوڈچولین پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، روٹ کی ترتیب میں لوڈچنین پراپرٹی کو سست لوڈ ماڈیولز کے لئے استعمال کیا جاتا ہے۔جب راستے تک رسائی حاصل ہوتی ہے تو متحرک درآمد نحو ماڈیول آن ڈیمانڈ کو لوڈ کرنے کے لئے استعمال ہوتا ہے۔یہ ہے کہ آپ کونیی روٹنگ میں متحرک امپورٹ نحو کے ساتھ بوجھ بچوں کو کس طرح استعمال کرسکتے ہیں: ایک سست بھری ہوئی ماڈیول بنائیں: سب سے پہلے ، آپ کو ایک علیحدہ ماڈیول بنانے کی ضرورت ہے جسے آپ سست بوجھ کرنا چاہتے ہیں۔اس ماڈیول کو اجزاء ، راستوں اور اس خصوصیت/ماڈیول سے متعلق کسی بھی دوسرے انحصار کی وضاحت کرنی چاہئے۔آئیے فرض کریں کہ آپ کے پاس لازیموڈول نامی ایک ماڈیول ہے۔ اپ ڈیٹ روٹ کنفیگریشن: آپ کے روٹ کی تشکیل میں (عام طور پر ایپ روٹنگ.موڈول ڈاٹ ٹی ایس میں بیان کردہ) میں ، لوڈچولڈرین پراپرٹی کو متحرک درآمد کی ترکیب کے ساتھ بتائیں۔/کور '؛ درآمد {روٹس ، روٹر موڈل} سے'@کونیی/روٹر '؛ کانسٹ روٹس: راستے = [// عام راستے {راستہ:' گھر '، جزو: گھریلو اجزاء} ، {راستہ:' کے بارے میں '، اجزا} ، // سست-لوڈ کردہ ماڈیول {راستہ: 'سست' ، لوڈچنین: () => درآمد ('./ lazy.module')'' ، ری ڈائریکٹٹو: '/ہوم' ، پاتھ میچ: 'مکمل'}]@@ngmodule ({درآمدات: [روٹرموڈول.فوروٹ) (راستے)] ، برآمدات: [روٹرموڈول]}) ماضی میں مثال کے طور پر ، کلاس سے متعلق کلاس سے متعلق املاک کی وضاحت کریں ،جب /سست روٹ تک رسائی حاصل کی جاتی ہے تو ، لازیموڈول کو امپورٹ () فنکشن کا استعمال کرتے ہوئے متحرک طور پر بھری جاتی ہے۔اس کے بعد () طریقہ کار کو ماڈیول کے برآمد شدہ ماڈیول (ایم لازیموڈول) کو بازیافت کرنے کے نتیجے میں وعدہ کیا جاتا ہے۔ لیزی لوڈڈ ماڈیول کی تشکیل کریں: لازیموڈول ماڈیول میں ، اس ماڈیول سے مخصوص راستوں کی وضاحت کریں۔@کونیی/کور '؛ امپورٹ {روٹس ، روٹر موڈل} سے'@کونیی/روٹر '؛ امپورٹ {لازکمپینٹ} سے'؛@ngmodule ({درآمدات: [routermodule.forchild (راستے)] ، برآمدات: [روٹرموڈول]}) برآمد کلاس لازیروٹنگ موڈول {{اس مثال میں ، لازیموڈول میں ایک خالی راستہ ہوتا ہے جو لازکومیپینٹ پر نقشہ بناتا ہے۔سست بھری ہوئی ماڈیول: آخر میں ، لازیموڈول اور کسی بھی دوسرے ضروری اجزاء یا خدمات میں لازیروٹنگ موڈول کو درآمد کرنا یقینی بنائیں۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ngmodule} سے '@کونیی/کور' سے '@کونیی/عام' سے درآمد {@مشترکہ ماڈل '@@کونیی/مشترکہ' سے درآمد کریں ؛{lazyroutingmodule} from './lazy-routing.module' ؛ import {lazycompiention' سے 'completed ان مراحل کے مکمل ہونے کے ساتھ ، جب درخواست میں /سست روٹ تک رسائی حاصل کی جائے تو ، لازیموڈول کو سست روی سے بھری جائے گی ، اور لازکمپینٹ پیش کیا جائے گا۔متحرک امپورٹ نحو ماڈیول کو مطالبہ پر لوڈ کرنے کی اجازت دیتا ہے ، ابتدائی بنڈل سائز کو کم کرتا ہے اور ایپلی کیشن کی لوڈنگ کارکردگی کو بہتر بناتا ہے۔ نوٹ: اس بات کو یقینی بنائیں کہ آپ کا کونیی ورژن درآمد () فنکشن کا استعمال کرتے ہوئے متحرک درآمدات کی حمایت کرتا ہے۔اس خصوصیت کو ایک ماس اسکرپٹ 6 میں متعارف کرایا گیا تھا اور جدید براؤزرز میں اس کی تائید کی گئی ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینیکٹیویٹیچیلڈ انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، کینیکٹیویٹیچیلڈ انٹرفیس خاص طور پر بچوں کے راستوں کی حفاظت کے لئے روٹ گارڈز کو نافذ کرنے کے لئے استعمال ہوتا ہے۔اس سے آپ کو ایک سے زیادہ محافظوں کی وضاحت کرنے کی اجازت ملتی ہے جو کسی خاص راستے کے بچوں کے راستوں کو چالو کرنے سے پہلے عمل میں لایا جائے گا۔ ایک سے زیادہ محافظوں کے ساتھ کینیکٹیویٹیکلڈ انٹرفیس کے استعمال کا مقصد یہ ہے کہ سیکیورٹی یا شرائط کی ایک اضافی پرت فراہم کی جائے جو بچے تک رسائی کی اجازت دینے سے پہلے پورا ہونا ضروری ہے۔راستےزنجیر میں ہر گارڈ میں یہ کنٹرول کرنے کی صلاحیت ہوتی ہے کہ آیا بچوں کے راستوں کو چالو کیا جانا چاہئے یا نہیں۔ یہاں یہ کام کیسے کرتا ہے: کینیکٹیویٹیکلڈ انٹرفیس کو نافذ کریں: بچوں کے راستوں کی حفاظت کے لئے ایک سے زیادہ محافظوں کا استعمال کرنے کے ل you ، آپ کو کسی خدمت میں کینیکٹیویٹیکلڈ انٹرفیس کو نافذ کرنے کی ضرورت ہے یاایک جزواس انٹرفیس کے لئے آپ کو کینیکٹیویٹیچیلڈ () کے طریقہ کار کی وضاحت کرنے کی ضرورت ہے جو ایک مشاہدہ کرنے والا << بولین> یا وعدہ <بولین> یا ایک سادہ بولین ویلیو۔ ٹائپسکرپٹ کوپی کوڈیم پورٹ {انجیکشن ایبل@'@کونیولر/کور' سے درآمد {کینٹیٹویٹیسیٹ ، ایکٹیویٹیٹ روٹسناپشوٹ ، روٹریوٹیسیٹ ، رتسیٹیٹیٹیسٹی}'@کونیی/راؤٹر' سے ؛ درآمد {مشاہدہ} سے 'rxjs' سے ؛@انجیکشن ایبل ({فراہم کردہ: 'روٹ'}) برآمدی کلاس مائی چائلڈ گارڈ کا اطلاق کینیکٹیویٹیچیلڈ {کینیکٹیویٹیچیلڈ (روٹ: ایکٹیویٹیڈ روٹسناپ شاٹ ، ریاست: روٹسٹیٹسناپ شاٹ): مشاہدہ <بوولین> |وعدہ <بولین> |بولین {// گارڈ منطق یہاں واپس آجاتی ہے۔// یا غلط} row روٹ کی ترتیب میں گارڈ کی وضاحت کریں: آپ کے راستے کی تشکیل میں ، آپ مائیچلڈ گارڈ (یا کوئی دوسرا گارڈ جو کینیکٹیویٹیٹیچلڈ کو نافذ کرنے والے) کو کسی مخصوص روٹ یا والدین کے روٹ کی کینیکیٹیٹیکلڈ پراپرٹی میں تفویض کرسکتے ہیں۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {این جی ایم او ڈیول}'@کونیی/کور' سے import درآمد {روٹس ، روٹر موڈل} سے '@کونیی/راؤٹر' ؛ درآمد {ہومکومپینٹ} سے './home.component' ؛ import {mychild گارڈ} سے './my-child-guard.serce'؛ کنسٹ روٹس: روٹس = [{راستہ:' گھر '، جزو: گھریلو اجزاء ، کینیکٹیویٹیچیلڈ: [مائی چائلڈ گارڈ] ، بچے: [// بچوں کے راستے کی تعریفیں]}]@ngmodule ({درآمدات: [routermodule.forroot (راستے)] ، برآمدات: [روٹر موڈل]}) مندرجہ بالا مثال کے طور پر ، برآمدی کلاس ایپروٹنگ موڈول {} ، مائی سائیڈ گارڈ کو گھر کے راستے کی کینیکٹیویٹیکلڈ پراپرٹی کو تفویض کیا گیا ہے۔اس کا مطلب یہ ہے کہ گھر کے راستے کے تحت بیان کردہ بچوں میں سے کسی بھی راستے کو چالو کرنے سے پہلے گارڈ کو پھانسی دی جائے گی۔یا نہیں.اس میں توثیق ، اجازت ، کردار پر مبنی رسائی ، ڈیٹا کی توثیق ، یا آپ کی کسی بھی دوسری شرائط کی جانچ پڑتال شامل ہوسکتی ہے۔ طریقہ کار براہ راست بولین ویلیو کو براہ راست واپس کرسکتا ہے ، یا غیر متزلزل آپریشنوں کو سنبھالنے کے لئے ایک مشاہدہ کرنے والا <بولین> یا وعدہ <بولین>۔اگر لوٹی ہوئی قیمت درست ہے تو ، بچوں کے راستے چالو ہوجائیں گے۔اگر لوٹی ہوئی قیمت غلط ہے یا ایک قابل مشاہدہ/وعدہ جو غلط سے حل ہوتا ہے تو ، بچوں کے راستے چالو نہیں ہوں گے ، اور صارف کو ان تک رسائی سے دوبارہ ہدایت یا روک دیا جائے گا۔ کینیکٹیوٹیٹیکلڈ انٹرفیس کے ساتھ ایک سے زیادہ محافظوں کا استعمال کرتے ہوئے ، آپ ایک زنجیر تشکیل دے سکتے ہیں۔گارڈز جو ترتیب میں پھانسی دیئے جاتے ہیں۔ہر گارڈ مختلف چیک اور توثیق کرسکتا ہے ، جس سے آپ کو بچوں کے راستوں کی چالو کرنے پر عمدہ کنٹرول مل جاتا ہے۔اس سے پیچیدہ رسائی کنٹرول کے قواعد کو نافذ کرنے اور اس بات کو یقینی بنانے میں مدد ملتی ہے کہ بچوں کے راستوں تک رسائی کی اجازت دینے سے پہلے ضروری شرائط پوری ہوجائیں۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ریپلورل آپشن کے ساتھ راؤٹر ڈاٹ نیویگیٹ بائورل () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، روٹر.نویگیٹ بائورل () کا طریقہ ایک مخصوص یو آر ایل پروگرام میں تشریف لے جانے کے لئے استعمال ہوتا ہے۔ریپلیسورل آپشن کو نیا اندراج شامل کرنے کے بجائے براؤزر کے ہسٹری اسٹیک میں موجودہ یو آر ایل کو تبدیل کرنے کے لئے استعمال کیا جاتا ہے۔اس کا مطلب یہ ہے کہ ریگورل کے ساتھ تشریف لے جانے سے براؤزر کی تاریخ میں کوئی نئی انٹری نہیں ہوگی ، اور صارف براؤزر کے بیک بٹن کو پچھلے یو آر ایل پر تشریف لے جانے کے لئے استعمال نہیں کرے گا۔ یہاں کہ آپ کس طرح راؤٹر ڈاٹ نیویگیٹ بائورل () کے ساتھ استعمال کرسکتے ہیں۔ریپلیسورل آپشن: مطلوبہ انحصار درآمد کریں: پہلے ، اس جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کرنا یقینی بنائیں جہاں آپ نیویگیٹ بائورل () استعمال کرنا چاہتے ہیں۔راؤٹر مثال: اگلا ، اجزاء کے تعمیر کنندہ میں راؤٹر مثال انجیکشن کریں۔ ٹائپ اسکرپٹ کوپی کوڈکونٹرکٹر (نجی روٹر: روٹر) {}}}}}} repeoldurl کے ساتھ: اب ، آپ نیویگیٹ بائیورل () کے طریقہ کار کو استعمال کرسکتے ہیں جس میں نیویگیٹ بائیورل () کا طریقہ استعمال کیا جاسکتا ہے تاکہ نیویگیٹ بائیورل () کا طریقہ استعمال کیا جاسکے۔ایک مخصوص یو آر ایل اور تاریخ میں موجودہ یو آر ایل کو تبدیل کریں۔ ٹائپ اسکرپٹ کوپی کوڈینویگیٹیٹونیو پیج (): باطل {this.router.navegatByurl ('/new- صفحہ' ، {تبدیل کریں: سچ}) ؛} مذکورہ مثال میں ، نیویگیٹیٹونیو پیج () طریقہنیویگیٹ بائورل () کے طریقہ کار کا استعمال کرتے ہوئے /نئے صفحے کے یو آر ایل پر نیویگیٹ کرتا ہے۔ریپلیسورل: سچے آپشن کو اس طریقہ کار کے دوسرے پیرامیٹر کے طور پر منظور کیا جاتا ہے ، جس سے یہ ظاہر ہوتا ہے کہ موجودہ یو آر ایل کو براؤزر کی تاریخ میں تبدیل کیا جانا چاہئے۔ جب اس طریقہ کار پر عمل درآمد ہوتا ہے تو ، براؤزر کے ایڈریس بار میں موجود یو آر ایل کو HTTP: // مثال کے طور پر اپ ڈیٹ کیا جائے گا۔.com/نیا صفحہ ، اور پچھلے URL کو تاریخ کے اسٹیک میں تبدیل کیا جائے گا۔صارف پچھلے URL پر واپس جانے کے لئے بیک بٹن کا استعمال نہیں کرسکے گا۔ نوٹ کریں کہ تبدیل کرنے والا آپشن صرف براؤزر کی تاریخ کے طرز عمل کو متاثر کرتا ہے۔اس سے کونیی روٹنگ یا جزو پیش کرنے پر کوئی اثر نہیں پڑتا ہے۔کونیی میں ، نیویگیٹ بائورل () میں بیان کردہ روٹ کو اب بھی چالو کیا جائے گا ، اور اسی جزو کو معمول کے مطابق پیش کیا جائے گا۔پروگرام میں تشریف لے جانے کے وقت بروزر کے تاریخ کے طرز عمل کو سنبھالنے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں کینیکٹیویٹیٹ اور کینیٹی ویٹیٹیچیلڈ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، کینیکٹیوٹیٹ اور کینیکٹیویٹیچیلڈ دو مختلف روٹ گارڈ انٹرفیس ہیں جو مختلف مقاصد کی تکمیل کرتے ہیں: کینیکٹیوٹیٹ: کینیکٹیویٹ انٹرفیس انفرادی راستوں تک رسائی کی حفاظت اور ان پر قابو پانے کے لئے استعمال ہوتا ہے۔یہ آپ کو منطق پر عمل درآمد کرنے کی اجازت دیتا ہے تاکہ اس بات کا تعین کیا جاسکے کہ صارف کو کسی خاص راستے کو چالو کرنے کی اجازت ہے یا نہیں۔جب کسی راستے پر تشریف لے جاتا ہے تو ، کینیکٹیویٹ گارڈ کا اندازہ کیا جاتا ہے ، اور اگر یہ سچ واپس آجاتا ہے تو ، راستہ چالو ہوجاتا ہے اور اس سے متعلقہ جزو پیش کیا جاتا ہے۔اگر یہ غلط یا وعدہ/مشاہدہ کرنے والا جو جھوٹا سے حل ہوتا ہے تو ، نیویگیشن کو مسدود کردیا جاتا ہے ، اور صارف کو یا تو کسی دوسرے راستے پر بھیج دیا جاتا ہے یا محفوظ راستے تک رسائی سے روکتا ہے۔ کین ایکٹیویٹ گارڈ عام طور پر اجازت اور توثیق کی جانچ پڑتال کے لئے استعمال ہوتا ہے۔ایک مخصوص راستے پر۔مثال کے طور پر ، آپ اس کی جانچ کرنے کے لئے استعمال کرسکتے ہیں کہ آیا صارف کی توثیق کی گئی ہے یا کسی خاص صفحے کو دیکھنے کے لئے ضروری اجازت ہے۔راسته.یہ آپ کو اضافی چیکوں یا شرائط کی وضاحت کرنے کی اجازت دیتا ہے جن کو بچوں کے راستوں کو چالو کرنے سے پہلے پورا کرنا ضروری ہے۔جب بچوں کے راستوں کے ساتھ کسی راستے پر تشریف لائے جاتے ہیں تو ، بچے کے راستے کو چالو کرنے سے پہلے کینیکٹیویٹیچلڈ گارڈ کا اندازہ کیا جاتا ہے۔اگر یہ سچ واپس آجاتا ہے تو ، بچوں کے راستے چالو اور مہیا کردیئے جاتے ہیں۔اگر یہ غلط یا وعدہ/مشاہدہ کرنے والا واپس آجاتا ہے جو جھوٹے سے حل ہوتا ہے تو ، نیویگیشن کو مسدود کردیا جاتا ہے ، اور بچوں کے راستے چالو نہیں ہوتے ہیں۔ جب آپ والدین کے راستے کے بچوں کے راستوں پر اضافی پابندیاں یا شرائط نافذ کرنا چاہتے ہیں تو کینیکٹیو ٹیچیلڈ گارڈ مفید ہے۔یہ قواعد کے مشترکہ سیٹ کی بنیاد پر متعلقہ راستوں کے ایک گروپ کو بچانے کا ایک طریقہ فراہم کرتا ہے۔مثال کے طور پر ، آپ اس کی جانچ پڑتال کے ل use استعمال کرسکتے ہیں کہ آیا کسی صارف کے پاس متعدد بچوں کے راستوں پر مشتمل ایپلی کیشن کے ایک حصے کو دیکھنے کے لئے مخصوص کردار پر مبنی رسائی کی اجازت ہے یا نہیں۔ خلاصہ یہ ہے کہ ، کینیکٹیویٹ اور کینیکٹیویٹیچیلڈ کے درمیان بنیادی فرق ان کا دائرہ کار اور مقصد ہے۔کینیکیٹیٹ انفرادی روٹ کے تحفظ کے لئے استعمال ہوتا ہے ، جبکہ کینیکٹیویٹیچیلڈ والدین کے راستے کے بچوں کے راستوں کی حفاظت کے لئے استعمال ہوتا ہے۔دونوں محافظ آپ کو اپنی مخصوص ضروریات کی بنیاد پر راستوں تک رسائی پر قابو پانے کے لئے کسٹم منطق کو نافذ کرنے کی اجازت دیتے ہیں۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایکٹیویٹیڈ روٹ ڈاٹ ڈیٹا پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، ایکٹیویٹ روٹ ڈیٹا پراپرٹی سمیت فی الحال چالو راستے کے بارے میں معلومات تک رسائی فراہم کرتا ہے۔ڈیٹا پراپرٹی آپ کو کسٹم ڈیٹا کو کسی روٹ سے منسلک کرنے کی اجازت دیتی ہے ، جو اس روٹ سے وابستہ اجزاء کو اضافی معلومات منتقل کرنے کے لئے مفید ثابت ہوسکتی ہے۔ یہاں آپ ایکٹیویٹیٹ روٹ کو کس طرح استعمال کرسکتے ہیں۔ ڈیٹا پراپرٹی: مطلوبہ انحصار درآمد کریں: پہلے ، یقینی بنائیں کہ اس بات کو یقینی بنائیں۔@کونیی/روٹر سے اس جزو میں ایکٹیویٹیڈ راؤٹ کلاس درآمد کریں جہاں آپ روٹ ڈیٹا تک رسائی حاصل کرنا چاہتے ہیں۔اجزاء۔ ٹائپ اسکرپٹ کوپی کوڈکونٹرکٹر (نجی روٹ: ایکٹیویٹڈ روٹ) {} ڈیٹا پراپرٹی تک رسائی حاصل کریں: اب ، آپ موجودہ روٹ سے وابستہ کسٹم ڈیٹا کو بازیافت کرنے کے لئے ایکٹیویٹیڈ روٹ کی ڈیٹا پراپرٹی تک رسائی حاصل کرسکتے ہیں۔.route.data.subscribe (ڈیٹا => {// روٹ کنسول سے وابستہ کسٹم ڈیٹا تک رسائی حاصل کریں۔ایکٹیویٹ روٹ کیڈیٹا پراپرٹی ایک قابل مشاہدہ ہے ، لہذا آپ کو اصل ڈیٹا حاصل کرنے کے ل it اس کو سبسکرائب کرنے کی ضرورت ہے۔ سبسکرپشن کے اندر ، آپ راستے سے وابستہ کسٹم ڈیٹا تک رسائی حاصل کرسکتے ہیں۔ڈیٹا پراپرٹی کو عام طور پر روٹ کی تعریف میں ڈیٹا پراپرٹی کا استعمال کرتے ہوئے روٹ کی ترتیب میں بیان کیا جاتا ہے۔مثال کے طور پر: ٹائپ اسکرپٹ کوپی کوڈکونسٹ روٹس: راستے = [{راستہ: 'مثال' ، جزو: مثال کے طور پر ، اعداد و شمار: {کسٹم ڈیٹا: 'کچھ کسٹم ڈیٹا'}}] ؛ مذکورہ روٹ کی تشکیل میں ، ڈیٹا پراپرٹی کو کسٹم ڈیٹا کو منسلک کرنے کے لئے استعمال کیا جاتا ہےمثال کے راستے پر۔جب مثال کے اجزاء کو چالو کیا جاتا ہے اور نگونینٹ () کا طریقہ کہا جاتا ہے تو ، آپ ڈیٹا پراپرٹی کو سبسکرائب کرکے کسٹم ڈیٹا تک رسائی حاصل کرسکتے ہیں جیسا کہ مرحلہ 3 میں دکھایا گیا ہے۔، یا کوئی دوسری معلومات جو راستے سے وابستہ جزو سے متعلق ہے۔اس سے آپ کو اپنی درخواست کے اندر کسی خاص راستے سے وابستہ متحرک ڈیٹا کو پاس کرنے اور ان تک رسائی حاصل کرنے کی سہولت ملتی ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں پاتھ میچ پراپرٹی کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، پاتھ میچ پراپرٹی کو یہ کنٹرول کرنے کے لئے استعمال کیا جاتا ہے کہ راؤٹر کس طرح راستے کی ترتیب میں تشکیل شدہ راستے پر کسی راستے کے URL سے مماثل ہے۔یہ راستے کے راستے والے حصے کے لئے مماثل حکمت عملی کا تعین کرتا ہے۔ پاتھ میچ پراپرٹی میں مندرجہ ذیل اقدار میں سے ایک ہوسکتی ہے: 'سابقہ' (پہلے سے طے شدہ): اگر یہ راستہ مچ واضح طور پر بیان نہیں کیا گیا ہے تو یہ پہلے سے طے شدہ قیمت ہے۔اس کا مطلب یہ ہے کہ اگر یہ یو آر ایل کا سابقہ ہے تو روٹر تشکیل شدہ راستے سے مماثل ہوگا۔دوسرے لفظوں میں ، اگر یو آر ایل تشکیل شدہ راستے سے شروع ہوتا ہے تو یہ مماثل ہوگا۔یہ سب سے عام طور پر استعمال ہونے والی قدر ہے۔ مثال کے طور پر ، اگر راستہ {راستے کے ساتھ تشکیل دیا گیا ہے: 'مثال' ، جزو: مثال کے اجزاء} ، یہ URL '/مثال' کے ساتھ ساتھ کسی بھی URL سے بھی مماثل ہوگا جو '/مثال/سے شروع ہوتا ہے۔'/مثال/بچہ' ، '/مثال/تفصیلات' ، وغیرہ۔یہ صرف اس صورت میں مماثل ہوگا جب یو آر ایل تشکیل شدہ راستے کا عین مطابق میچ ہو۔مثال کے طور پر 'بالکل ، لیکن یہ'/مثال/بچے '،'/مثال/تفصیلات 'جیسے یو آر ایل سے مماثل نہیں ہوگا۔ پاتھ میچ پراپرٹی کا مقصد روٹ کے راستوں کی وضاحت اور ان سے کس طرح یو آر ایل سے مماثل ہے اس پر قابو پانے میں لچک فراہم کرنا ہے۔راستے.یہ آپ کو یہ بتانے کی اجازت دیتا ہے کہ آیا آپ کے مخصوص روٹنگ کی ضروریات پر منحصر ہے ، اس راستے کو کسی سابقہ کے طور پر یا عین مطابق میچ کے طور پر مماثل ہونا چاہئے۔ ڈیفالٹ کے ذریعہ ، 'سابقہ' حکمت عملی استعمال کی جاتی ہے ، جو زیادہ تر معاملات کے لئے موزوں ہے جہاں آپ راستوں سے ملنا چاہتے ہیں۔جو یو آر ایل کے سابقہ ہیں۔تاہم ، کچھ منظرناموں میں ، جیسے کہ جب آپ کسی عین مطابق میچ کو نافذ کرنا چاہتے ہیں تو ، آپ راستے کی تشکیل میں پاتھ میچ کی پراپرٹی کو 'مکمل' پر ترتیب دے کر 'مکمل' حکمت عملی کا استعمال کرسکتے ہیں۔ اس بات کو ذہن میں رکھیں کہ پاتھ میچ کی پراپرٹی صرف اس بات پر اثر انداز ہوتی ہے کہ کس طرح اس پر اثر پڑتا ہے۔روٹر یو آر ایل کو راستے کے راستے سے ملتا ہے۔اس سے جزو کی پیش کش یا روٹنگ سلوک کے کسی دوسرے پہلو کو متاثر نہیں ہوتا ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایکٹیویٹیڈ راؤٹ۔ کوئیرپرمپ پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، ایکٹیویٹ روٹ کوئری پیرا ایم اے پی پراپرٹی کے ذریعے فی الحال چالو راستے کے استفسار پیرامیٹرز تک رسائی فراہم کرتا ہے۔یہ پراپرٹی آپ کو نقشہ کی طرح آبجیکٹ فراہم کرتی ہے جس میں URL سے نکالے گئے استفسار کے پیرامیٹرز ہوتے ہیں۔ یہاں آپ ایکٹیویٹیڈ راؤٹ کو استعمال کرسکتے ہیں۔ کوئیرپرمپ پراپرٹی: مطلوبہ انحصار درآمد کریں: پہلے ، @کونیی/روٹر سے ایکٹیویٹیڈ روٹ کلاس درآمد کرنا یقینی بنائیں۔وہ جزو جہاں آپ استفسار پیرامیٹرز تک رسائی حاصل کرنا چاہتے ہیں۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ایکٹیویٹ راؤٹ} سے '@کونیی/راؤٹر' ؛ ایکٹیویٹیڈ روٹ مثال کے طور پر انجیکشن کریں: اگلا ، اجزاء کے کنسٹرکٹر میں ایکٹیویٹ روٹ انکیٹ کو انجیکشن کریں۔questive questive paramamap پراپرٹی تک رسائی حاصل کریں: اب ، آپ موجودہ روٹ سے وابستہ استفسار پیرامیٹرز کو بازیافت کرنے کے لئے ایکٹیویٹڈ راؤٹ کی استفسار پراپرٹ پراپرٹی تک رسائی حاصل کرسکتے ہیں۔{// استفسار کے پیرامیٹرز تک رسائی حاصل کریں۔استفسار پریمپ پراپرٹی ایک مشاہدہ کرنے والا ہے ، لہذا آپ کو اصل استفسار پیرامیٹرز حاصل کرنے کے ل it اس کو سبسکرائب کرنے کی ضرورت ہے۔ سبسکرپشن کے اندر ، آپ پیرام آبجیکٹ پر دستیاب مختلف طریقوں کا استعمال کرتے ہوئے استفسار پیرامیٹرز تک رسائی حاصل کرسکتے ہیں۔مثال کے طور پر ، پیرامس ڈاٹ گیٹ ('پیرام نام') 'پیرام نام' نامی ایک مخصوص استفسار پیرامیٹر کی قدر کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔آپ 'پیرام نام' کو استفسار پیرامیٹر کے اصل نام کے ساتھ تبدیل کرسکتے ہیں جس تک آپ رسائی حاصل کرنا چاہتے ہیں۔ استفسار پرامپ کوئیر پیرامیٹرز تک رسائی کے ل get گیٹ () ، گیٹال () ، اور () جیسے طریقے فراہم کرتے ہیں۔آپ تمام استفسار پیرامیٹر کیز کی ایک صف حاصل کرنے کے لئے کلیدوں کی پراپرٹی کا بھی استعمال کرسکتے ہیں۔ یہاں ایک ایسی مثال ہے جو استفسار کے پیرامیٹرز تک رسائی کے مختلف طریقوں کو ظاہر کرتی ہے: ٹائپ اسکرپٹ کوپی کوڈینگونینٹ (): باطل {کانٹ questeraparams = this.route.queryparammap.subscribe (پیرامس => {// ایک واحد استفسار پیرامیٹر ویلیو CONT پیرامولیو = پیرامس.یٹ ('پیرام نام') ؛ کنسول.لوگ (پیرامولیو) تک رسائی حاصل کریں ؛ // کسی استفسار پیرامیٹر کی تمام اقدار کو سرنی کرامالیس = پیرامس۔ گیٹل ('پیرام نامہ۔') ؛ کنسول.لوگ (پیراموالیوز) ؛ // چیک کریں کہ آیا کوئی استفسار پیرامیٹر موجود ہے کیوںپیرامس.کیس ؛ کنسول.لوگ (پیرامکیز) ؛}) ؛} استفسار پریمپ پراپرٹی آپ کو موجودہ راستے سے وابستہ استفسار پیرامیٹرز کے ساتھ بازیافت اور کام کرنے کی اجازت دیتی ہے۔یہ آپ کے کونیی ایپلی کیشن میں استفسار کے پیرامیٹرز تک رسائی اور ہیرا پھیری کا ایک آسان طریقہ فراہم کرتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں [روٹر لنک] اور روٹر لنکیکٹیو آپشن کے درمیان کیا فرق ہے؟",
        "Answer": "[روٹر لنک] ہدایت نامہ اور روٹر لنکیکٹیو آپشنز کونیی روٹنگ میں مختلف فنکشنلیاں مہیا کرتے ہیں: [روٹر لنک]: [روٹر لنک] ہدایت نامہ لنکس بنانے کے لئے استعمال کیا جاتا ہے جو آپ کے کونیی ایپلی کیشن کے اندر مختلف راستوں پر تشریف لے جاتے ہیں۔یہ آپ کو راستے کے راستے پر پابند کرکے نیویگیشن لنک کی وضاحت کرنے کی اجازت دیتا ہے۔جب لنک پر کلک کیا جاتا ہے تو ، کونیی کا روٹر مخصوص روٹ پر جاتا ہے۔ مثال کے طور پر ، آپ [روٹر لنک] کو مندرجہ ذیل استعمال کرسکتے ہیں: htmlcopy کوڈ <a [routerlinklink #=\" ء/ڈیش بورڈ '<<> ڈیش بورڈ </a>کوڈ کے ٹکڑوں کے اوپر ، [روٹر لنک] ہدایت کا استعمال ایک لنک بنانے کے لئے کیا جاتا ہے جو کلیک ہونے پر /ڈیش بورڈ روٹ پر جاتا ہے۔یہ ایک صف کا پابند ہے جو راستے کے راستے کی نمائندگی کرتا ہے۔آپ ضرورت کے مطابق اضافی روٹ پیرامیٹرز یا استفسار پیرامیٹرز کی وضاحت کرسکتے ہیں۔ روٹر لنکیکٹیو آپشنز: روٹر لنک ایکٹیویکٹیو آپشنز ایک وصف ہدایت ہے جو آپ کو فعال راستے پر مبنی عنصر کے طرز عمل اور اسٹائل پر قابو پانے کی اجازت دیتا ہے۔اس کا استعمال [روٹر لنک] کے ساتھ مل کر استعمال کیا جاتا ہے جب اس سے وابستہ روٹ فعال ہوتا ہے تو عنصر میں سی ایس ایس کلاسوں یا دیگر خصوصیات کو متحرک طور پر لاگو کرنے کی ہدایت کی ہدایت کی جاتی ہے۔ روٹر لنکیکٹیو آپشنز کے ساتھ ، آپ اس کے لئے اختیارات کی وضاحت کرسکتے ہیں کہ فعال ریاست کو عنصر پر کس طرح لاگو کیا جانا چاہئے۔کچھ عام اختیارات میں عین مطابق ، عین مطابق اور isactive شامل ہیں۔A> مذکورہ کوڈ کے ٹکڑے میں ، روٹر لنکیکٹیو وصف کا استعمال سی ایس ایس کلاس کو <a> عنصر پر فعال کرنے کے لئے استعمال کیا جاتا ہے جب وابستہ راستہ فعال ہوتا ہے۔[روٹر لنکیکٹیو پیشنز] ہدایت نامہ {عین مطابق: سچ} پر سیٹ کیا گیا ہے ، جو اس بات کو یقینی بناتا ہے کہ فعال کلاس صرف اس وقت لاگو ہوتی ہے جب روٹ ایک عین مطابق میچ ہوتا ہے۔ روٹر لنکیکٹیو آپشنز کا استعمال کرتے ہوئے ، آپ متحرک طور پر نیویگیشن لنکس کی فعال حالت کا انتظام کرسکتے ہیں اور مختلف اسٹائل کا اطلاق کرسکتے ہیں۔موجودہ روٹ پر مبنی طرز عمل۔ خلاصہ کریں ، [روٹر لنک] نیویگیشن لنکس بنانے کے لئے استعمال کیا جاتا ہے جو روٹ نیویگیشن کو متحرک کرتے ہیں ، جبکہ روٹر لنکیکٹیو آپشنز فعال راستے پر مبنی عناصر کے طرز عمل اور اسٹائل کو کنٹرول کرنے کے لئے استعمال ہوتے ہیں۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں سروس کے ساتھ کین ایکٹیویٹ انٹرفیس کا استعمال کیسے کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، بوجھ کے بچے پراپرٹی کو سست ماڈیول کو بے بنیاد طور پر لوڈ کرنے کے لئے استعمال کیا جاتا ہے۔جب آپ وابستہ راستہ چالو ہوجاتے ہیں تو یہ رن ٹائم کے وقت متحرک طور پر ایک ماڈیول درآمد کرنے کی اجازت دیتا ہے۔متحرک امپورٹ نحو کو اس کو حاصل کرنے کے ل the لوڈچولڈین پراپرٹی کے ساتھ مل کر استعمال کیا جاتا ہے۔ یہاں کہ آپ کونیی روٹنگ میں متحرک درآمد کے نحو کے ساتھ لوڈچولین پراپرٹی کا استعمال کیسے کرسکتے ہیں: لوڈچینڈرین پراپرٹی کی وضاحت کریں: روٹ کی تشکیل میں ، لوڈچینڈرین پراپرٹی کو راستے کے ساتھ بتائیں۔وہ ماڈیول جسے آپ سست بوجھ کرنا چاہتے ہیں۔متحرک امپورٹ نحو کا استعمال کرتے ہوئے راستے کی وضاحت کی جانی چاہئے۔.lazymodule)}] ؛ مذکورہ بالا مثال میں ، لوڈچیلین پراپرٹی کو ایک ایسے فنکشن پر سیٹ کیا گیا ہے جو متحرک طور پر './lazy/lazy.module' فائل سے لازیموڈول کو درآمد کرتا ہے۔امپورٹ () فنکشن ایک وعدہ لوٹاتا ہے جو ماڈیول پر حل ہوتا ہے۔ماڈیول جو آپ سست بوجھ کرنا چاہتے ہیں ، اس ماڈیول سے متعلق راستوں کی وضاحت کرنا یقینی بنائیں۔ ٹائپ اسکرپٹ کوپی کوڈکونسٹ راستوں: روٹس = [{راستہ: '' ، جز: لازیکومیپینٹ} ، // سست لولی والے ماڈیول سے متعلق دیگر راستے] ؛ngmodule ({درآمدات: [routermodule.forchild (راستے)] ، برآمدات: [روٹرموڈول]}) کلاس لازیموڈول برآمد کریں {{مذکورہ بالا مثال میں ، لازیموڈول ایک علیحدہ ماڈیول ہے جس کے اپنے راستوں کے ساتھ ہے۔ماڈیول کنفیگریشن میں راؤٹر موڈیول.فورمڈول (روٹس) اور ایکسپورٹ روٹر موڈل کو درآمد کرنا یقینی بنائیں۔ آپ سست بوجھ والے ماڈیول کے لئے مخصوص راستوں کی وضاحت کر سکتے ہیں۔لوڈچولین پراپرٹی کا استعمال کرتے ہوئے سست بھری ہوئی ماڈیول۔ ٹائپ اسکرپٹ کوپی کوڈکونسٹ روٹس: روٹس = [// دوسرے راستے {راستہ: 'کاہل' ، لوڈچنین: () => درآمد ('./ سست/سست.موڈول')۔ پھر (ایم (ایم=> m.lazymodule)} ، // دوسرے راستے]@@ngmodule ({درآمدات: [routermodule.forroot (راستے)] ، برآمدات: [روٹرموڈول]}) کلاس سے متعلق کلاس سے متعلق امور کی قیمت {{las مندرجہ بالا مثال کے طور پر ، کاہلی سے بھرے ہوئےماڈیول کو متحرک درآمد syntax.note کے ساتھ لوڈچولڈین پراپرٹی کی وضاحت کرکے آفیوٹنگ موڈول میں شامل کیا جاتا ہے کہ آپ کو روٹرموڈول کو درآمد کرنا چاہئے۔ روٹ روٹنگ ماڈیول کو تشکیل دینے کے لئے۔جب وابستہ راستہ چالو ہوجاتا ہے تو متضاد طور پر بھری ہوئی ہے۔آپ کی ایپلی کیشن کے ابتدائی بوجھ کے وقت کو بہتر بنانے کے بعد ، سست بھری ہوئی ماڈیول اور اس کے راستوں کو صرف لوڈ کیا جائے گا۔تعمیر کے عمل کے دوران بھری ہوئی ماڈیول۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹ۔ بچوں کی پراپرٹی کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں کینیکٹیو ٹیچیلڈ انٹرفیس روٹ گارڈز کو نافذ کرنے کے لئے استعمال کیا جاتا ہے جو بچوں کے راستوں کی حفاظت کرسکتے ہیں۔یہ خاص طور پر ایک درجہ بندی کے راستے میں بچوں کے راستوں کی حفاظت کے ل multiple متعدد محافظوں کے ساتھ مل کر استعمال کرنے کے لئے ڈیزائن کیا گیا ہے۔ جب آپ کے پاس ایک یا زیادہ بچوں کے راستوں کے ساتھ والدین کا راستہ ہوتا ہے تو ، کینیکٹیویٹچلڈ انٹرفیس آپ کو کسی محافظ یا گارڈز کے ایک سیٹ کی وضاحت کرنے کی اجازت دیتا ہے۔بچوں کے تمام راستوں پر لاگو ہوگا۔اس انٹرفیس کا مقصد والدین کے راستے میں بچوں کے تمام راستوں کی حفاظت کے لئے ایک مرکزی میکانزم فراہم کرنا ہے۔ یہاں کہ آپ کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینیکٹیویٹیٹیچیلڈ انٹرفیس کا استعمال کرسکتے ہیں: کینیکٹیویٹیکلڈ انٹرفیس کو نافذ کریں: ایک گارڈ کلاس بنائیں اور اس پر عمل درآمد کریں۔کینیکٹیو ٹیچیلڈ انٹرفیس۔روٹسٹیٹیسناپ شاٹ): قابل مشاہدہ <بولین |urltree> |وعدہ <بولین |urltree> |بولین |urltree {// بچوں کے راستوں کے لئے گارڈ منطق درست لوٹتا ہے۔// یا نیویگیشن کو کنٹرول کرنے کے لئے غلط یا urltree واپس کریں}}}}}}}.اس طریقہ کار کو روٹر نے اس بات کا تعین کرنے کے لئے بلایا ہے کہ آیا بچوں کے راستوں کو چالو کیا جانا چاہئے یا نہیں۔ روٹنگ ماڈیول میں گارڈ کی تشکیل کریں: روٹنگ ماڈیول میں جہاں آپ والدین کے راستے کی وضاحت کرتے ہیں جس میں بچوں کے راستے ہوتے ہیں ، گارڈ کو ترتیب دیںوالدین کے راستے کی کینیکٹیویٹیچیلڈ پراپرٹی۔ ٹائپ اسکرپٹ کوپی کوڈکونسٹ روٹس: راستے = [{راستہ: 'والدین' ، جزو: پیرنٹ کمپوینٹی ، کینیکٹیویٹیچیلڈ: [مائی گارڈ] ، بچے: [// بچوں کے راستے]}] above مذکورہ بالا مثال میں ، مائی گارڈ ہے ، مائی گارڈ آئی ایس ہےوالدین کے راستے کی کینیکٹیو ٹیچیلڈ پراپرٹی میں شامل کیا گیا۔اس سے یہ یقینی بنتا ہے کہ مائی گارڈ کے ذریعہ بیان کردہ گارڈز کا اطلاق 'والدین' کے روٹ کے تحت بچوں کے تمام راستوں پر کیا جائے گا۔ آپ کینیکٹیوٹیکلڈ پراپرٹی کو محافظوں کی ایک صف فراہم کرکے متعدد محافظوں کی بھی وضاحت کرسکتے ہیں۔گارڈز کو اس ترتیب میں پھانسی دی جائے گی جس کی وہ فہرست میں ہیں۔ ٹائپ اسکرپٹ کوپی کوڈیکانیکٹیویٹیٹیچلڈ: [می گارڈ 1 ، مائی گارڈ 2 ، مائی گارڈ 3] ، مذکورہ بالا مثال میں ، مائی گارڈ 1 ، مائی گارڈ 2 ، اور مائی گارڈ 3 تین الگ الگ محافظ ہیں جو بچے کی حفاظت کے لئے استعمال کیے جائیں گے۔روٹس۔ کے ذریعہ کینیکٹیو ٹیچیلڈ انٹرفیس کا استعمال کرتے ہوئے ، آپ ایسے محافظوں کی وضاحت کرسکتے ہیں جو خاص طور پر والدین کے راستے میں بچوں کے راستوں کی حفاظت کے لئے ڈیزائن کیے گئے ہیں۔اس سے آپ کو پیچیدہ اجازت یا توثیق کی منطق کو نافذ کرنے کی اجازت ملتی ہے جو بچوں کے راستوں کے ایک گروپ پر لاگو ہوتا ہے ، اس بات کو یقینی بناتا ہے کہ ان تک رسائی سے قبل ان کی حفاظت کی جائے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں رشتہ دار راستوں اور استفسار پیرم کے ساتھ روٹر ڈاٹ نیویگیٹ بائورل () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، روٹر.نویگیٹ بائورل () کا طریقہ ایک مخصوص یو آر ایل پروگرام میں تشریف لے جانے کے لئے استعمال ہوتا ہے۔ریپلیسورل آپشن ، جب سچ پر سیٹ کیا جاتا ہے تو ، براؤزر کی تاریخ میں موجودہ یو آر ایل کی جگہ نئے یو آر ایل کے ساتھ لے جاتا ہے ، موجودہ یو آر ایل کو تاریخ کے اسٹیک سے مؤثر طریقے سے ہٹا دیتا ہے۔ یہاں آپ روٹر کو کس طرح استعمال کرسکتے ہیں۔مطلوبہ انحصار: سب سے پہلے ، روٹر کلاس کو @کونیی/روٹر سے جزو یا خدمت میں درآمد کرنا یقینی بنائیں جہاں آپ راؤٹر۔ نیویگیٹ بائورل () طریقہ۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ { @کونیی/روٹر 'سے انجکشن لگائیں انجکشن انجکشن لگائیں۔راؤٹر مثال: اگلا ، اجزاء یا خدمت کے تعمیر کنندہ میں روٹر مثال انجیکشن کریں۔ ٹائپ اسکرپٹ کوپی کوڈکونٹرکٹر (نجی روٹر: روٹر) {} rowter.navegatbyurl () طریقہ استعمال کریں: آپ نیویگیٹ کرنے کے لئے Router.navegagatByurl () طریقہ استعمال کرسکتے ہیں۔ایک مخصوص یو آر ایل کو۔مطلوبہ یو آر ایل کو پیرامیٹر کے طور پر طریقہ کے طور پر پاس کریں۔ ٹائپ اسکرپٹ کوپی کوڈینویگیٹیٹو ایکسیمپل پیج (): باطل {this.router.navegatbyurl ('/مثال' ، {تبدیل کرنے والی شکل: سچ}) ؛} مذکورہ بالا مثال میں ، نیویگیٹیٹو ایکسمپل پیج () طریقہ کار پر تشریف لے جاتا ہے۔/مثال کے طور پر یو آر ایل راؤٹر.نویگیٹ بائورل () طریقہ کا استعمال کرتے ہوئے۔کسی شے کو دوسرے پیرامیٹر کے طور پر پاس کرکے تبدیل کرنے والا آپشن درست ہے۔اس سے یہ یقینی بنتا ہے کہ موجودہ یو آر ایل کو براؤزر کی تاریخ میں نئے یو آر ایل کے ساتھ تبدیل کیا گیا ہے۔اگر صارف براؤزر میں بیک بٹن پر کلیک کرتا ہے تو ، نیویگیشن ہونے سے پہلے وہ پچھلے یو آر ایل میں واپس نہیں جاسکیں گے۔ اگر تبدیل کریں یو آر ایل فراہم نہیں کیا جاتا ہے یا غلط پر سیٹ نہیں کیا جاتا ہے تو ، نیا یو آر ایل تاریخ کے اسٹیک میں شامل کیا جائے گا ، اورصارف بیک بٹن پر کلک کرکے پچھلے یو آر ایل میں واپس جا سکتا ہے۔ نوٹ کریں کہ راؤٹر ڈاٹ نیویگیٹ بائورل () طریقہ نیویگیشن کے لئے دوسرے اختیارات کو بھی قبول کرسکتا ہے ، جیسے استفسار پیرمز ، ٹکڑے اور ریاست۔یہ اختیارات آپ کو نیویگیشن کے ساتھ استفسار پیرامیٹرز ، ٹکڑے ، یا کسٹم اسٹیٹ ڈیٹا کو پاس کرنے کی اجازت دیتے ہیں۔ راؤٹر.نویگیٹ بائورل () کے طریقہ کار کا استعمال کرتے ہوئے ، تبدیل کریں ، آپ براؤزر کی تاریخ میں موجودہ یو آر ایل کی جگہ لے کر ایک نئے یو آر ایل میں تشریف لے جاسکتے ہیں۔، صارف کے لئے بغیر کسی نیویگیشن کا تجربہ فراہم کرنا۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر موڈل.فورچولڈ () اور روٹرموڈول۔ فوروروٹ () کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، دونوں کینیکٹیوٹیٹ اور کینیکٹیویٹیچیلڈ روٹ گارڈ انٹرفیس ہیں جو آپ کو راستوں تک رسائی پر قابو پانے کی اجازت دیتے ہیں۔تاہم ، وہ اپنے استعمال اور دائرہ کار میں مختلف ہیں: کینیکٹیوٹیٹ: کینیکٹیویٹ انٹرفیس انفرادی راستوں کی حفاظت کے لئے استعمال ہوتا ہے۔یہ آپ کو کسی گارڈ یا محافظوں کے ایک سیٹ کی وضاحت کرنے کی اجازت دیتا ہے جو اس بات کا تعین کرتا ہے کہ آیا کسی خاص راستے کو چالو کیا جاسکتا ہے یا نہیں۔کسی خاص روٹ پر تشریف لاتے وقت کین ایکٹیویٹ گارڈ کا اندازہ کیا جاتا ہے۔ یہاں ایک مثال ہے: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {کینیکٹیوٹیٹ ، ایکٹیویٹیٹ راؤسٹنپ شاٹ ، روٹسٹیٹسناپ شاٹ ، urltree 'سے'@کونیی/راؤٹر '؛ امپورٹ {مشاہدہ {آر ایکس جے ایس کلاس مائیگگورڈ سے متعلق}کینیکٹیویٹ (روٹ: ایکٹیویٹیڈ روٹسناپ شاٹ ، ریاست: روٹسٹیٹس ناپ شاٹ): مشاہدہ کرنے والا <بولین |urltree> |وعدہ <بولین |urltree> |بولین |urltree {// روٹ کی واپسی کے لئے گارڈ منطق درست ؛// یا نیویگیشن کو کنٹرول کرنے کے لئے غلط یا urltree واپس کریں}}}}}}} مثال کے طور پر ، مائی گارڈ کلاس کین ایکٹیویٹ انٹرفیس کو نافذ کرتی ہے اور کینیکٹیویٹ طریقہ کے لئے عمل درآمد فراہم کرتی ہے۔اس طریقہ کار کو روٹر نے اس بات کا تعین کرنے کے لئے بلایا ہے کہ آیا راستہ چالو کیا جاسکتا ہے یا نہیں۔ کینیکٹیویٹیٹیچلڈ: کینیکٹیویٹیچیلڈ انٹرفیس والدین کے راستے میں بچوں کے راستوں کی حفاظت کے لئے استعمال ہوتا ہے۔یہ آپ کو کسی گارڈ یا محافظوں کے سیٹ کی وضاحت کرنے کی اجازت دیتا ہے جو اس بات کا تعین کرتا ہے کہ والدین کے راستے میں موجود تمام بچوں کے راستے چالو ہوسکتے ہیں یا نہیں۔والدین کے راستے میں بچوں کے کسی بھی راستوں پر تشریف لے جاتے وقت کینیکٹیویٹیچیلڈ گارڈ کا اندازہ کیا جاتا ہے۔ یہاں ایک مثال ہے: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {کینیکٹیویٹیچیلڈ ، ایکٹیویٹیٹ روٹسناپ شاٹ ، روٹسٹیٹیسناپ شاٹ ، urltree 'سے'@کونیی/راؤٹر 'سے' rass '؛ایکسپورٹ کلاس مائی گارڈ نے کینیکٹیویٹیچیلڈ {کینیکٹیویٹیچیلڈ (روٹ: ایکٹیویٹیڈ روٹسناپ شاٹ ، ریاست: روٹسٹیٹیسناپ شاٹ) کا اطلاق کیا: مشاہدہ کرنے والا <بولین |urltree> |وعدہ <بولین |urltree> |بولین |urltree {// بچوں کے راستوں کے لئے گارڈ منطق درست لوٹتا ہے۔// یا نیویگیشن کو کنٹرول کرنے کے لئے غلط یا urltree واپس کریں}}}}}}}.اس طریقہ کار کو روٹر نے اس بات کا تعین کرنے کے لئے بلایا ہے کہ آیا والدین کے راستے میں موجود بچوں کے تمام راستوں کو چالو کیا جاسکتا ہے یا نہیں۔ خلاصہ کرنے کے لئے: کینیکیٹیٹ انفرادی راستوں کی حفاظت کے لئے استعمال کیا جاتا ہے اور کسی خاص روٹ پر تشریف لے جانے کے وقت اس کا اندازہ کیا جاتا ہے۔والدین کے راستے میں راستے اور اس کا اندازہ اس وقت کیا جاتا ہے جب والدین کے راستے میں بچوں کے کسی بھی راستے پر تشریف لے جاتے ہیں۔ دونوں کینٹیٹیٹیٹ اور کینیکٹیویٹیچیلڈ گارڈز کو آپ کے کونیی ایپلی کیشن میں راستوں تک جامع رسائی کنٹرول فراہم کرنے کے لئے مل کر استعمال کیا جاسکتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں نیویگیشن اسٹارٹ ایونٹ کو سنبھالنے کے لئے آپ راؤٹر.ایونس.سبیسکرائب () طریقہ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، ایکٹیویٹیٹ روٹ۔ ڈیٹا پراپرٹی آپ کو کسی راستے سے وابستہ ڈیٹا تک رسائی حاصل کرنے کی اجازت دیتی ہے۔یہ کسٹم ڈیٹا کو کسی راستے پر منتقل کرنے اور اس ڈیٹا کو بازیافت کرنے کا ایک طریقہ مہیا کرتا ہے جب راستہ چالو ہوتا ہے۔ یہاں کہ آپ کونیی روٹنگ میں ایکٹیویٹیٹ روٹ۔ ڈیٹا پراپرٹی کو کس طرح استعمال کرسکتے ہیں: کسی راستے کے لئے ڈیٹا کی وضاحت کریں: اپنے راستے کی ترتیب میں ، ڈیٹا کی وضاحت کریں ، ڈیٹا کی وضاحت کریں۔کسی خاص راستے کے لئے پراپرٹی۔یہ پراپرٹی آپ کو روٹ کے ساتھ کسٹم ڈیٹا کو منسلک کرنے کی اجازت دیتی ہے۔ ٹائپ اسکرپٹ کوپی کوڈکونسٹ راستوں: راستے = [{راستہ: 'مثال' ، جزو: مثال کے طور پر ، اعداد و شمار: {عنوان: 'مثال کے صفحے' ، تفصیل: 'یہ ایک مثال کا صفحہ ہے'}}] ؛ مذکورہ بالا مثال میں ، ڈیٹا پراپرٹی کو 'مثال' کے راستے میں شامل کیا جاتا ہے۔اس میں کسٹم ڈیٹا شامل ہے جیسے روٹ سے وابستہ عنوان اور تفصیل۔ جزو میں موجود اعداد و شمار کی رسائی: چالو روٹ کے مطابق جزو میں ، آپ ایکٹیویٹیٹ روٹ.ڈیٹا پراپرٹی کا استعمال کرتے ہوئے ڈیٹا تک رسائی حاصل کرسکتے ہیں۔کونیی/کور '؛ امپورٹ {ایکٹیویٹ روٹ} سے'@کونیی/روٹر '؛@جزو ({// جزو کی تشکیل}) ایکسپورٹ کلاس مثال کے طور پر {کنسٹرکٹر (نجی روٹ: ایکٹیویٹڈ روٹ) {} ngoninit () {this.route.data.سبسکرائب کریں (ڈیٹا => {کونٹ ٹائٹل = ڈیٹا۔ ٹائٹل ؛ کانسٹ ڈسٹری = ڈیٹا.ایسکرپشن ؛ // ضرورت کے مطابق ڈیٹا کا استعمال کریں}) ؛}} مذکورہ بالا مثال میں ، ایکٹیویٹ روٹ کو جزو کے کنسٹرکٹر میں انجکشن لگایا جاتا ہے۔ngoninit () کے طریقہ کار میں ، آپ ایکٹیویٹیٹ راؤٹ.ڈیٹا پراپرٹی کو سبسکرائب کرسکتے ہیں اور روٹ سے وابستہ کسٹم ڈیٹا تک رسائی حاصل کرسکتے ہیں۔سبسکرپشن کے اندر ، آپ مخصوص ڈیٹا پراپرٹیز نکال سکتے ہیں اور اپنے جزو میں ضرورت کے مطابق ان کا استعمال کرسکتے ہیں۔ نوٹ کریں کہ ایکٹیویٹ روٹ ڈاٹ ڈیٹا پراپرٹی راستے سے وابستہ جامد اعداد و شمار تک رسائی فراہم کرتی ہے۔اگر آپ کو کسی روٹ کے لئے متحرک ڈیٹا لانے کی ضرورت ہے تو ، آپ روٹ کی ترتیب میں پراپرٹی پراپرٹی کے ساتھ مل کر خدمات یا گارڈز کو حل کرسکتے ہیں۔ ایکٹیویٹیڈ روٹ۔ ڈیٹا پراپرٹی مفید ہے جب آپ کسی راستے سے مخصوص کسٹم ڈیٹا کو پاس کرنا اور ان تک رسائی حاصل کرنا چاہتے ہیں۔یہ آپ کو متحرک راستے کی بنیاد پر اپنے اجزاء کو اضافی معلومات یا ترتیب فراہم کرنے کی اجازت دیتا ہے ، جس سے آپ کے کونیی ایپلی کیشن کی لچک اور تخصیص میں اضافہ ہوتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں ایکٹیویٹڈ راؤٹ.ورل پراپرٹی کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، پاتھ میٹ پراپرٹی کا استعمال اس بات کا تعین کرنے کے لئے کیا جاتا ہے کہ روٹر کو کسی راستے سے یو آر ایل طبقے سے کس طرح ملنا چاہئے۔اس کا استعمال کسی مخصوص روٹ کی ترتیب کے لئے روٹ مماثل حکمت عملی کو کنٹرول کرنے کے لئے کیا جاتا ہے۔ پاتھ میچ پراپرٹی مندرجہ ذیل اقدار میں سے ایک لے سکتی ہے: 'سابقہ': اگر پاتھ میچ کی وضاحت نہیں کی گئی ہے تو یہ پہلے سے طے شدہ قیمت ہے۔اس کا مطلب یہ ہے کہ روٹر درخواست شدہ یو آر ایل طبقے سے روٹ کی ترتیب میں ایک سابقہ کے طور پر بیان کردہ راستے سے مماثل ہوگا۔دوسرے لفظوں میں ، روٹر مماثل ہوگا اگر یو آر ایل مخصوص راستے سے شروع ہوتا ہے۔'/مثال' ، '/مثال/بچے' ، '/مثال/مثال/123' ، اور اسی طرح کے URLs کے لئے میچ کریں گے۔ 'فل': اس قدر سے یہ واضح ہوتا ہے کہ روٹر کو درخواست کردہ یو آر ایل طبقے کو رام میں مخصوص راستے سے ملنا چاہئے۔مکمل طبقہ کے طور پر روٹ کنفیگریشن۔اس کے لئے پورے یو آر ایل طبقے کے لئے ایک عین مطابق میچ کی ضرورت ہے۔عین مطابق URL '/مثال' کے لئے صرف میچ ہوگا۔یہ '/مثال/بچے' یا '/example/123'' جیسے URL سے مماثل نہیں ہوگا۔ پاتھ میچ پراپرٹی کا مقصد روٹر کے مماثل سلوک کو کنٹرول کرنا ہے اور اس بات کا تعین کرنا ہے کہ درخواست کی گئی URL طبقہ کو راستے کے راستے سے کتنا قریب سے ہونا چاہئے۔اس سے آپ کو یہ وضاحت کرنے کی اجازت ملتی ہے کہ آیا روٹر کو راستے کو ایک سابقہ سمجھنا چاہئے یا کسی عین مطابق میچ کی ضرورت ہوتی ہے۔ جب آپ والدین کے راستے کے تحت بچوں کے راستے یا پیرامیٹرائزڈ روٹ ہوتے ہیں تو 'پریفکس' کی ڈیفالٹ ویلیو مفید ہوتی ہے۔یہ والدین کے راستے کو اس سے متعلقہ جزو سے ملنے اور لوڈ کرنے کے قابل بناتا ہے ، جس سے بچوں کو اپنے مخصوص راستوں کو سنبھالنے کی اجازت ملتی ہے۔ دوسری طرف ، 'مکمل' مفید ہے جب آپ کسی خاص راستے کے لئے کسی خاص راستے کے لئے عین مطابق میچ کو یقینی بنانا چاہتے ہیں۔یا یو آر ایل میں اضافی طبقات۔"
    },
    {
        "Question": "کونیی روٹنگ میں کسی فنکشن کے ساتھ آپ کینلوڈ انٹرفیس کا استعمال کیسے کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، موجودہ راستے کے استفسار پیرامیٹرز تک رسائی کے لئے ایکٹیویٹیڈ راؤٹ۔ کوئیرپرمپ پراپرٹی کا استعمال کیا جاتا ہے۔یہ یو آر ایل سے استفسار کے پیرامیٹرز کو بازیافت کرنے اور ان کے ساتھ اپنے جزو میں کام کرنے کا ایک طریقہ فراہم کرتا ہے۔ یہاں کہ آپ کونیی روٹنگ میں ایکٹیویٹیڈ راؤٹ۔ کوئیرپرمپ پراپرٹی کو کس طرح استعمال کرسکتے ہیں: مطلوبہ انحصار درآمد کریں: پہلے ، @ سے ایکٹیویٹیڈ روٹ کلاس درآمد کرنا یقینی بنائیں۔کونیی/روٹر جس جزو میں آپ استفسار کے پیرامیٹرز تک رسائی حاصل کرنا چاہتے ہیں۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ایکٹیویٹیڈ راؤٹ} سے '@کونیی/روٹر' ؛ ایکٹیویٹ راؤٹ مثال کے طور پر انجیکشن کریں: اگلا ، اجزاء کے کنسٹرکٹر میں ایکٹیویٹیڈ روٹ مثال کو انجیکشن کریں۔روٹ: ایکٹیویٹ روٹ) {} استفسار کے پیرامیٹرز تک رسائی حاصل کریں: آپ اپنے اجزاء میں اس. route.queryparammap پراپرٹی کا استعمال کرتے ہوئے استفسار کے پیرامیٹرز تک رسائی حاصل کرسکتے ہیں۔استفسار پیرامیٹرز کونٹ ID = پیرامس۔ گیٹ ('ID') ؛ const name = params.get ('نام') ؛ // ضرورت کے مطابق استفسار کے پیرامیٹرز کا استعمال کریں})} مذکورہ بالا مثال میں ، ایکٹیویٹ روٹ کو جزو میں داخل کیا گیا ہے۔کنسٹرکٹرngoninit () کے طریقہ کار میں ، آپ استفسار کے پیرامیٹرز کو بازیافت کرنے کے لئے اس. route.queryparammap پراپرٹی کو سبسکرائب کرسکتے ہیں۔سبسکرپشن کے اندر ، آپ ان کے ناموں کے ذریعہ استفسار پیرامیٹرز کی اقدار کو بازیافت کرنے کے لئے پیرامپ آبجیکٹ کے get () طریقہ () کو استعمال کرسکتے ہیں۔ نوٹ کریں کہ استفسار پیرامیٹرز عام طور پر URL میں واضح کیے جاتے ہیں؟علامت ، جیسے؟ ID = 123 & نام = جان۔getParam () کا طریقہ آپ کو کسی مخصوص استفسار کے پیرامیٹر کی قدر بازیافت کرنے کی اجازت دیتا ہے۔ اگر کوئی استفسار پیرامیٹر URL میں متعدد بار ظاہر ہوتا ہے تو ، آپ اس سے وابستہ تمام اقدار کی ایک صف کو بازیافت کرنے کے لئے get () کے بجائے getall () طریقہ استعمال کرسکتے ہیں۔اس استفسار پیرامیٹر کے ذریعہ۔اس سے آپ یو آر ایل کے استفسار پیرامیٹرز میں فراہم کردہ اقدار کی بنیاد پر عمل انجام دینے یا اپنے جزو کے طرز عمل کو اپنی مرضی کے مطابق بنانے کے قابل بناتے ہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں کینیکٹیوٹیٹ اور کینڈی ایکٹیویٹیٹ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، [روٹر لنک] اور روٹر لنکیکٹیو آپشنز نیویگیشن کو سنبھالنے اور فعال لنکس پر اسٹائل لگانے کے لئے استعمال ہوتے ہیں۔وہ مختلف مقاصد کی تکمیل کرتے ہیں: [روٹر لنک]: [روٹر لنک] ایک ہدایت ہے جو آپ کے کونیی ایپلی کیشن میں کسی خاص راستے پر لنک باندھنے کے لئے استعمال ہوتا ہے۔جب آپ کو لنک پر کلک کیا جاتا ہے تو یہ آپ کو کسی مختلف راستے پر جانے کی اجازت دیتا ہے۔ یہاں ایک مثال ہے: HTMLCOPY کوڈ <a [routerlink لنک لنک ”” ”” ”/example']\" مثال کے طور پر </b> پر جائیں ، [روٹر لنک] لنک کو /مثال کے راستے سے باندھنے کے لئے استعمال کیا جاتا ہے۔جب لنک پر کلک کیا جاتا ہے تو ، کونیی کا روٹر مخصوص راستے پر تشریف لے جائے گا ، جس کی وجہ سے اسی جزو کو بھری ہوئی ہو۔ روٹر لنک ایکٹیو آپشنز: روٹر لنکیکٹیو آپشنز ایک ان پٹ پراپرٹی ہے جو آپ کو فعال لنکس کے طرز عمل اور اسٹائل کو اپنی مرضی کے مطابق بنانے کی اجازت دیتی ہے۔جب کوئی لنک فعال ہوتا ہے تو سی ایس ایس کلاسز یا دیگر اسٹائلنگ کا اطلاق کرنے کے لئے روٹر لنکیکٹیو ہدایت کے ساتھ مل کر استعمال کیا جاتا ہے۔ یہاں ایک مثال ہے: HTMLCOPY کوڈ <ایک راؤٹر لنک = \"/مثال\" روٹر لنکیکٹیو = \"ایکٹو\" [روٹر لنکیکٹیو آپشن] = \"{عین مطابق: سچ:\"} \"> مثال کے طور پر لنک </a> مذکورہ بالا مثال میں ، روٹر لنکیکٹیو کا استعمال سی ایس ایس کلاس\" ایکٹو \"کو لنک پر لاگو کرنے کے لئے کیا جاتا ہے جب یہ موجودہ فعال راستے سے مطابقت رکھتا ہے۔روٹر لنکیکٹیو آپشن ان پٹ پراپرٹی {عین مطابق: سچ} پر سیٹ کی گئی ہے ، جس کا مطلب ہے کہ لنک صرف اس صورت میں فعال سمجھا جائے گا جب موجودہ روٹ لنک کے ہدف کے راستے سے بالکل مماثل ہے۔اگر عین مطابق سیٹ نہیں کیا گیا ہے یا غلط پر سیٹ کیا گیا ہے تو ، لنک کو فعال سمجھا جائے گا اگر موجودہ راستہ لنک کے ہدف والے راستے کا ایک چائلڈ روٹ ہے۔ روٹر لنکیکٹیو آپشنز پراپرٹی روٹر لنکیکٹیو ڈائریکٹیو کے طرز عمل پر اضافی کنٹرول فراہم کرتی ہے اور آپ کو شرائط کو اپنی مرضی کے مطابق بنانے کی اجازت دیتی ہے۔جس کے تحت فعال کلاس کو لنک ڈاٹ کام پر لاگو کیا جاتا ہے ، [روٹر لنک] نیویگیشن کے لئے کسی خاص راستے پر لنک باندھنے کے لئے استعمال ہوتا ہے ، جبکہ روٹر لنکیکٹیو آپشنز کو فعال لنکس کے طرز عمل اور اسٹائل کو اپنی مرضی کے مطابق بنانے کے لئے استعمال کیا جاتا ہے ، جو روٹر لنکیکٹیو کے ساتھ مل کر کام کرتے ہیں۔ہدایت"
    },
    {
        "Question": "کونیی روٹنگ میں رشتہ دار راستوں اور ٹکڑے کے ساتھ آپ روٹر.نویگیٹ () طریقہ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، کین ایکٹیویٹ انٹرفیس روٹ گارڈز بنانے کے لئے استعمال ہوتا ہے جو کسی خاص راستے تک رسائی کو کنٹرول کرتے ہیں۔آپ کسی خدمت میں کینیکٹیویٹ انٹرفیس کو نافذ کرسکتے ہیں اور اسے روٹ پر نیویگیشن کی اجازت دینے سے پہلے اجازت یا دیگر چیک انجام دینے کے لئے روٹ گارڈ کے طور پر استعمال کرسکتے ہیں۔ یہاں کہ آپ کونیی روٹنگ میں سروس کے ساتھ کینیکٹیویٹ انٹرفیس کا استعمال کیسے کرسکتے ہیں: کینیکٹیویٹ کو نافذ کرنے والی ایک خدمت بنائیں۔انٹرفیس: ایک ایسی خدمت بنائیں جو کینیکٹیویٹ انٹرفیس کو نافذ کرے اور اس بات کا تعین کرنے کے لئے ضروری منطق فراہم کرتا ہے کہ آیا راستہ چالو کیا جاسکتا ہے یا نہیں۔خدمت کو کینیکٹیویٹ انٹرفیس سے کینیکٹیوٹیٹ طریقہ پر عمل درآمد کرنا چاہئے۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {انجیکشن} سے '@کونیی/کور' ؛ درآمد {کینیکٹیوٹیٹ ، ایکٹیویٹیٹ راؤسٹنپ شاٹ ، روٹسٹیٹیسناپ شاٹ in '@کونیی/راؤٹر' ؛{کینیکٹیویٹ (روٹ: ایکٹیویٹڈ راؤٹ ایس این اے پی شاٹ ، ریاست: روٹسٹیٹس ناپ شاٹ): بولین {// اپنی اجازت یا رسائی کی جانچ پڑتال یہاں انجام دیں // اگر رسائی کی اجازت ہے تو صحیح لوٹائیں ، یا غلط دوسری صورت میں سچ واپس ؛}} مذکورہ بالا مثال میں ، مائی گارڈس سروس کینیکٹیویٹ انٹرفیس کو نافذ کرتی ہے اور کینیکٹیویٹ طریقہ کے لئے عمل درآمد فراہم کرتی ہے۔کینیکٹیویٹ طریقہ کے اندر ، آپ ضروری چیک (جیسے اجازت ، توثیق ، کردار پر مبنی رسائی) انجام دے سکتے ہیں تاکہ اس بات کا تعین کیا جاسکے کہ راستہ چالو کیا جاسکتا ہے یا نہیں۔ خدمت کو روٹ گارڈ کی حیثیت سے فراہم کریں: آپ کو اپنے راستے کی ترتیب میں ، آپ کو ضرورت ہے ، آپ کو ضرورت ہے۔آپ ان راستوں کے لئے روٹ گارڈ کی حیثیت سے خدمت کی وضاحت کریں جس کی آپ حفاظت کرنا چاہتے ہیں۔یہ راستے کی کینیکٹیویٹ پراپرٹی میں یا کسی مخصوص بچے کے روٹ کی کینیکٹیویٹ پراپرٹی میں خدمت شامل کرکے کیا جاتا ہے۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {روٹس '@کونیی/روٹر' سے ؛خدمت '؛ امپورٹ {mycompointent} منجانب'.'محفوظ' راستے کی کینیکٹیویٹ پراپرٹی کو۔اس کا مطلب یہ ہے کہ 'محفوظ' روٹ پر نیویگیشن کی اجازت دینے اور مائکمپمنٹ کو پیش کرنے سے پہلے ، مائی گارڈس سروس کو اس بات کا تعین کرنے کے لئے درخواست کی جائے گی کہ آیا رسائی کی اجازت ہے یا نہیں۔ خدمت کو رجسٹر کریں: یہ یقینی بنائیں کہ یہ کونیی ماڈیول میں ایک فراہم کنندہ کے طور پر رجسٹریشن کریں جہاں یہ ہوگا۔استعمال شدہ۔ ٹائپ اسکرپٹ کوپی کوڈیم پورٹ {ngmodule} سے '@کونیی/کور' ؛ درآمد {myguardservice} منجانب '، مائی گارڈروائس کو ماڈیول کے فراہم کنندگان کی صفوں میں شامل کیا جاتا ہے ، جس سے یہ انحصار انجیکشن کے لئے دستیاب ہوتا ہے۔ کسی خدمت میں کینیکٹیویٹ انٹرفیس کو نافذ کرنے اور اسے روٹ گارڈ کے طور پر فراہم کرنے کے بعد ، آپ کسی خاص راستے پر نیویگیشن کی اجازت دینے سے پہلے کسٹم ایکسیس کنٹرول چیک انجام دے سکتے ہیں۔آپ کی کونیی ایپلی کیشن میں۔اس کی مدد سے آپ اپنی درخواست کی ضروریات کی بنیاد پر عمدہ اناج کی اجازت یا رسائی کی دیگر پابندیوں کو نافذ کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر پرلوڈر کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، روٹ۔ بچوں کی پراپرٹی والدین کے راستے میں بچوں کے راستوں کی وضاحت کے لئے استعمال ہوتی ہے۔یہ آپ کو گھوںسلا یا درجہ بندی کے روٹنگ ڈھانچے بنانے کی اجازت دیتا ہے ، جہاں بچوں کے راستوں کو والدین کے راستے کی اولاد کے طور پر بیان کیا جاتا ہے۔ روٹ کا مقصد۔ بچوں کی جائیداد ایک مشترکہ والدین کے راستے کے تحت متعلقہ راستوں کو منظم کرنا اور گروپ کرنا ہے۔یہ خاص طور پر مفید ہے جب آپ کے پاس پیچیدہ اطلاق کی ترتیب یا خصوصیات ہیں جن میں روٹنگ کی ایک سے زیادہ سطح کی ضرورت ہوتی ہے۔ روٹ کے استعمال کی وضاحت کرنے کے لئے ایک مثال ہے۔ بچوں: ٹائپ اسکرپٹ کوپی کوڈکونسٹ روٹس: راستے = [{راستہ: 'ڈیش بورڈ' ، جزو: ڈیش بورڈ کامپینٹ ، بچے.'، اجزاء: ترتیبات کا مقابلہ}]} ، // دوسرے اعلی درجے کے راستے ...] مذکورہ بالا مثال میں ، راستے' ڈیش بورڈ 'کے ساتھ والدین کا راستہ اس کے جزو کے طور پر ڈیش بورڈکمپریشن کے ساتھ بیان کیا گیا ہے۔بچوں کی جائیداد 'ڈیش بورڈ' روٹ کے لئے بچوں کے راستوں کی وضاحت کے لئے استعمال ہوتی ہے۔ بچوں کے سرے کے ساتھ ، آپ اضافی راستوں کی وضاحت کرسکتے ہیں جو والدین کے راستے کی اولاد ہیں۔اس معاملے میں ، 'جائزہ' ، 'رپورٹس' ، اور 'ترتیبات' 'ڈیش بورڈ' روٹ کے بچوں کے راستے ہیں۔ گھوںسلا کرنے والے راستے اس طرح سے ، آپ اپنی درخواست کے مختلف حصوں کے لئے الگ الگ اجزاء اور آراء کی وضاحت کرسکتے ہیں۔جب کسی بچے کے راستے پر تشریف لے جاتے ہیں تو ، والدین کے راستے کے جزو کو بچوں کے راستے کے جزو کے ساتھ بھرا دیا جائے گا ، جس سے ایک درجہ بندی نیویگیشن ڈھانچہ تشکیل دیا جائے گا۔ روٹ۔ بچوں کی پراپرٹی آپ کو روٹ کے درجہ بندی کی وضاحت کرنے کی اجازت دیتی ہے ، اور آپ کو اپنی درخواست کی روٹنگ ترتیب کو تبدیل کرنے اور ترتیب دینے کے قابل بناتا ہے۔یہ پیچیدہ ایپلی کیشنز کو تشکیل دینے میں مدد کرتا ہے اور گھریلو راستوں کو سنبھالنے کا ایک آسان طریقہ فراہم کرتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں ایکسٹرا آپشن کے ساتھ آپ روٹر ڈاٹ نیویگیٹ () طریقہ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، روٹر.نویگیٹ بائورل () کا طریقہ روٹر کا استعمال کرتے ہوئے ایک مخصوص یو آر ایل میں تشریف لے جانے کے لئے استعمال ہوتا ہے۔آپ اپنی درخواست کے اندر تشریف لانے کے لئے اس طریقہ کار کے ساتھ رشتہ دار راستوں اور استفسار کے پیرامیٹرز کا استعمال کرسکتے ہیں۔ آپ رشتہ دار راستوں اور استفسار کے پیرامیٹرز کے ساتھ راؤٹر ڈاٹ نیویگیٹ بورل () کو کس طرح استعمال کرسکتے ہیں: مطلوبہ انحصار درآمد کریں: پہلے ، @ سے روٹر کلاس درآمد کرنا یقینی بنائیں۔کونیی/روٹر جس جزو میں آپ روٹر استعمال کرنا چاہتے ہیں۔ نیویگیٹ بائورل ().یو آر ایل ایک رشتہ دار راستہ ہوسکتا ہے ، جو موجودہ روٹ پر مبنی ہے ، اور اس میں استفسار پیرامیٹرز شامل ہوسکتے ہیں۔ ٹائپ اسکرپٹ کوپی کوڈینویگیٹیٹو ایکسپلیمپل () {کانسٹور کوئیر پیرامس = {ID: 123 ، نام: 'مثال'} ؛this.router.navegatByurl ('/مثال؟ پیرام 1 = ویلیو 1 اور پیرام 2 = ویلیو 2' ، {استفسار پیرایمس})} مذکورہ بالا مثال میں ، نیویگیٹیٹو ایکسپلیمپل () کا طریقہ روٹر ڈاٹ نیویگیٹ بائورل () کے استعمال کو ظاہر کرتا ہے۔یہ سوال پیرامیٹرز کے پیرام 1 = ویلیو 1 اور پیرام 2 = ویلیو 2'. کے ساتھ /مثال کے راستے پر جاتا ہے۔ رشتہ دار راستہ /مثال موجودہ راستے پر مبنی ہے۔اگر موجودہ راستہ /ڈیش بورڈ ہے تو ، نتیجے میں مطلق URL /ڈیش بورڈ /مثال ہوگا؟ پیرام 1 = ویلیو 1 اور پیرام 2 = ویلیو 2۔اگر موجودہ راستہ /دوسرا ہے تو ، نتیجے میں مطلق url /other/example؟param1=value1&param2=value2. یہ استفسار پیرامس آبجیکٹ راؤٹر ڈاٹ نیویگیٹ بائورل () کو دوسری دلیل کے طور پر فراہم کیا گیا ہے ، جس سے آپ کو یو آر ایل کے لئے استفسار پیرامیٹرز کی وضاحت کی جاسکتی ہے۔اس مثال میں ، استفسار پیرامس آبجیکٹ میں پیرامیٹرز ID اور نام شامل ہیں ، جو url.note میں شامل کیا جائے گا۔متعلقہ راستے اور استفسار پیرامیٹرز ، آپ موجودہ راستے کی بنیاد پر اپنی کونیی ایپلی کیشن میں تشریف لے سکتے ہیں اور یو آر ایل میں استفسار پیرامیٹرز شامل کرسکتے ہیں۔یہ طریقہ آپ کو پروگرام کے ساتھ نیویگیشن کو متحرک کرنے اور ضرورت کے مطابق استفسار پیرامیٹرز کے ذریعے ڈیٹا کو منتقل کرنے کی اجازت دیتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں اختیاری اور مطلوبہ پیرامیٹرز میں کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، روٹنگ ماڈیول کو تشکیل دینے کے لئے روٹر ماڈل کے ذریعہ دو طریقے فراہم کیے گئے ہیں: فورڈ () اور فورروٹ ()۔یہ طریقے اس سے مختلف ہیں کہ وہ روٹنگ ماڈیول کی تخلیق اور راستوں کی رجسٹریشن کو کس طرح سنبھالتے ہیں۔یا ایک سست بھری ہوئی ماڈیول۔ یہ امپورٹ پراپرٹی کا استعمال کرتے ہوئے فیچر ماڈیول کی روٹنگ ماڈیول فائل کے اندر کہا جاتا ہے۔ فورس () طریقہ کار روٹر سروس کی نئی مثال بنائے بغیر فیچر ماڈیول کے راستوں کو رجسٹر کرتا ہے۔یہ روٹ ماڈیول کے روٹر کے راستوں کے ساتھ راستوں کو ضم کرتا ہے ۔فیٹچر ماڈیولز کے اپنے بچوں کے راستے فار چلڈ () کا استعمال کرتے ہوئے ہوسکتے ہیں ، اور وہ دوسرے ماڈیولز میں درآمد ہوسکتے ہیں۔: فورروٹ () کو استعمال کیا جاتا ہے جب آپ کی ایپلی کیشن کے روٹ ماڈیول کے روٹنگ ماڈیول کی تشکیل کرتے وقت ، عام طور پر Appmodule.it کو درآمد کی پراپرٹی کا استعمال کرتے ہوئے روٹ ماڈیول کی روٹنگ ماڈیول فائل میں کہا جاتا ہے۔ فورروٹ () طریقہ راؤٹر کی ایک نئی مثال تخلیق کرتا ہے۔خدمت اور روٹ ماڈیول کے لئے راستوں کو تشکیل دیتا ہے۔ اسے صرف ایک بار روٹ ماڈیول میں کہا جانا چاہئے ، اور یہ روٹر سروس کو پورے ایپلی کیشن میں سنگلٹن کے طور پر فراہم کرتا ہے۔ مثال کے طور پر استعمال: روٹرموڈول۔ فوروروٹ (راستے) فورس کے درمیان کلیدی فرق ()اور فوروروٹ () اس میں جھوٹ بولتا ہے کہ وہ روٹر سروس کی تخلیق اور راستوں کی رجسٹریشن کو کس طرح سنبھالتے ہیں۔روٹر سروس کی ایک نئی مثال بنانے اور راستوں کو تشکیل دینے کے لئے روٹ ماڈیول کے لئے فورروٹ () کا استعمال کیا جاتا ہے ، جبکہ فورسچڈ () کو روٹر سروس کی نئی مثال بنائے بغیر روٹس کو رجسٹر کرنے کے لئے فیچر ماڈیول کے لئے استعمال کیا جاتا ہے۔ یہ استعمال کرنا اہم ہےمناسب طریقہ کار پر مبنی مناسب طریقہ کار پر مبنی روٹنگ کی مناسب ترتیب کو یقینی بنانے اور روٹ کی تعریفوں کے مابین تنازعات سے بچنے کے لئے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں اسکیپلوکیشن چینج پراپرٹی کے ساتھ روٹر ڈاٹ نیویگیٹ () طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، آپ روٹر کے واقعات کو سبسکرائب کرنے اور اسی کے مطابق سنبھالنے کے لئے روٹر.ایونٹس۔ سبسکرائب () کا طریقہ استعمال کرسکتے ہیں۔نیویگیشن اسٹارٹ ایونٹ کو خاص طور پر سنبھالنے کے ل you ، آپ ان مراحل پر عمل کرسکتے ہیں: مطلوبہ انحصار درآمد کریں: @کونیی/راؤٹر سے روٹر اور نیویگیشن اسٹارٹ کلاس درآمد کریں۔اپنے اجزاء یا سروس کے کنسٹرکٹر میں راؤٹر مثال کے طور پر انجیکشن کریں۔ ٹائپ اسکرپٹ کوپی کوڈکونٹرکٹر (نجی روٹر: روٹر) {} نیویگیشن اسٹارٹ ایونٹ کو سبسکرائب کریں: راؤٹر کا استعمال کریں۔ مشاہدہ کرنے والے اور اس کو سبسکرائب کریں۔سبسکرپشن کے اندر ، نیویگیشن اسٹارٹ ایونٹ کی جانچ پڑتال کریں اور مطلوبہ عمل انجام دیں۔ ٹائپ اسکرپٹ کوپی کوڈینگونیٹ () {this.router.events.subscribe (واقعہ => {اگر (واقعہ نیویگیشن اسٹارٹ) {// نیویگیشن اسٹارٹ ایونٹ کنسول.لوگ (ہینڈل کریں ('نیویگیشن کا آغاز ہوا! ') ؛ // ضرورت کے مطابق اضافی اعمال انجام دیں}}})} مذکورہ بالا مثال میں ، نگونینٹ () کا طریقہ روٹر کو سبسکرائب کرنے کے لئے استعمال کیا جاتا ہے۔سبسکرپشن کے اندر ، یہ جانچ پڑتال کرتا ہے کہ آیا واقعہ نیویگیشن اسٹارٹ کی ایک مثال ہے اور مطلوبہ اقدامات انجام دیتا ہے ، جیسے کسی پیغام کو لاگ ان کرنا یا نیویگیشن اسٹارٹ ایونٹ سے متعلق اضافی منطق پر عملدرآمد کرنا۔ نوٹ کریں کہ نیویگیشن اسٹارٹ روٹر کے ذریعہ خارج ہونے والے بہت سے واقعات میں سے ایک ہے۔واقعات قابل مشاہدہ۔مختلف نیویگیشن ایونٹس کو سنبھالنے کے ل You آپ اسی طرح دوسرے روٹر واقعات ، جیسے نیویگیشن ، نیویگیشن ایرر ، وغیرہ کو سبسکرائب کرسکتے ہیں۔کونیی روٹنگ میں واقعہ اور اس کے مطابق کسٹم ایکشن انجام دیں۔جب صارف آپ کی درخواست میں کسی نئے راستے پر جاتا ہے تو یہ آپ کو مخصوص طرز عمل یا منطق پر عمل درآمد کرنے کی اجازت دیتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں Canactivatechild.interface.ts فائل کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، ایکٹیویٹیڈ روٹ ڈاٹ آر ایل پراپرٹی موجودہ روٹ کے یو آر ایل طبقات کی نمائندگی کرتی ہے۔یہ ایک مشاہدہ کرنے والے تک رسائی فراہم کرتا ہے جو یو آر ایل سیگمنٹ آبجیکٹ کی ایک صف کو خارج کرتا ہے ، جو یو آر ایل کے انفرادی طبقات کی نمائندگی کرتا ہے۔ ایکٹیویٹیٹ روٹ ڈاٹ آر ایل پراپرٹی کا مقصد موجودہ راستے کے لئے یو آر ایل کے طبقات کو بازیافت کرنا اور اس کا مشاہدہ کرنا ہے۔یہ مفید ہے جب آپ کو یو آر ایل کے مخصوص طبقات کو نکالنے یا یو آر ایل ڈھانچے کی بنیاد پر متحرک روٹنگ انجام دینے کی ضرورت ہوتی ہے۔ یہاں آپ ایکٹیویٹیڈ روٹ ڈاٹ آر ایل پراپرٹی کو کس طرح استعمال کرسکتے ہیں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ایکٹیویٹیڈ راؤٹ} سے '@کونیی/روٹر' ؛کنسٹرکٹر (نجی روٹ: ایکٹیویٹڈ روٹ) {} ngoninit () {this.route.url.subscribe (urlsegments => {// url طبقات کونسول.لوگ (urlsegments) کو سنبھالیں ؛ // اضافی عمل کی ضرورت کے مطابق}) ؛ in in inمذکورہ بالا مثال ، ngoninit () طریقہ کار کو ایکٹیویٹیٹ راؤٹ. url کو سبسکرائب () کے طریقہ کار کا استعمال کرتے ہوئے مشاہدہ کرنے والا سبسکرائب کرتا ہے۔سبسکرپشن کے اندر ، urlsegments سرنی حاصل کی جاتی ہے ، جو موجودہ روٹ کے لئے URL کے طبقات کی نمائندگی کرتی ہے۔ پھر آپ ضرورت کے مطابق urlsegments صف پر کارروائی کرسکتے ہیں۔مثال کے طور پر ، آپ انڈیکسنگ (urlsegments [0] ، urlsegments [1] ، وغیرہ) کا استعمال کرتے ہوئے مخصوص طبقات تک رسائی حاصل کرسکتے ہیں ، طبقات سے پیرامیٹرز نکال سکتے ہیں ، یا یو آر ایل ڈھانچے کی بنیاد پر مشروط روٹنگ انجام دے سکتے ہیں۔کونیی روٹنگ میں موجودہ روٹ کے لئے یو آر ایل طبقات تک رسائی حاصل کریں اور ان کا مشاہدہ کریں۔یہ آپ کو یو آر ایل ڈھانچے کی بنیاد پر متحرک طور پر روٹنگ کو سنبھالنے اور یو آر ایل سے معلومات نکالنے کی اجازت دیتا ہے تاکہ آپ کی درخواست کے طرز عمل کو اپنی مرضی کے مطابق بنایا جاسکے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایکٹیویٹیڈ روٹ۔ فریگمنٹ پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، کینلوڈ انٹرفیس کا استعمال خصوصیت کے ماڈیولز کی لوڈنگ کو لازمی طور پر کنٹرول کرنے کے لئے کیا جاتا ہے۔یہ آپ کو کسی گارڈ کی وضاحت کرنے کی اجازت دیتا ہے تاکہ یہ چیک کیا جاسکے کہ آیا سست بوجھ والے ماڈیول کو لوڈ کیا جانا چاہئے یا کچھ شرائط پر مبنی نہیں۔آپ کسٹم منطق کو انجام دینے کے ل a کسی فنکشن کے ساتھ کین لوڈ انٹرفیس کو نافذ کرسکتے ہیں اور اس بات کا تعین کرسکتے ہیں کہ آیا کسی ماڈیول کو لوڈ کیا جاسکتا ہے یا نہیں۔ کونیی روٹنگ میں کسی فنکشن کے ساتھ کینلوڈ انٹرفیس کا استعمال کرنے کے لئے ، ان مراحل کی پیروی کریں: ایک ایسا گارڈ بنائیں جو کینلوڈ انٹرفیس کو نافذ کرے: تخلیق کریں: تخلیق کریں۔ایک گارڈ کلاس جو کین لوڈ انٹرفیس کو نافذ کرتا ہے اور کینلوڈ () کے طریقہ کار کی وضاحت کرتا ہے۔اس طریقہ کار میں آپ کی کسٹم منطق پر مشتمل ہوگا تاکہ اس بات کا تعین کیا جاسکے کہ ماڈیول کو لوڈ کیا جاسکتا ہے۔ ٹائپ اسکرپٹ کوپی کوڈیم پورٹ {انجیکشن ایبل} سے '@کونیی/کور' ؛ درآمد {کینلوڈ ، روٹ ، یو آر ایل سیگمنٹ ، ایکٹیویٹیڈ روٹسناپ شاٹ ، روٹسٹیٹیسناپ شاٹ ، urltree} سے '@انجولر/روٹر' سے ''' Rxjs 'سے {مشاہدہ کرنے والا@@انجیکشن ایبل ({فراہم کردہ:' روٹ '}) برآمد کلاس مائیکنلوڈ گارڈ کے اوزار کینلوڈ {کین لوڈ (روٹ: روٹ ، طبقات: urlsegment []): مشاہدہ <بولین |urltree> |وعدہ <بولین |urltree> |بولین |urltree {// اپنی مرضی کے مطابق منطق اس بات کا تعین کرنے کے لئے کہ آیا ماڈیول کو لادا جاسکتا ہے const canloadmodule = ... ؛// یہاں اپنے چیک انجام دیں کینلوڈموڈول واپس کریں۔}} روٹنگ کنفیگریشن میں گارڈ کو رجسٹر کریں: آپ کی روٹنگ ماڈیول فائل میں ، جہاں آپ راستوں کی وضاحت کرتے ہیں ، کین لوڈ پراپرٹی کو سست لوڈ والے راستے میں شامل کریں اور آپ کے تخلیق کردہ گارڈ کو تفویض کریں۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ngmodule 'سے'@کونیی/ سے '@کونیی/ سے'@کونیی/کور 'import درآمد {راؤٹرڈول ، روٹ} سے'@کونیی/روٹر '؛ درآمد {مائیکنلوڈ گارڈ} سے'۔: () => درآمد ('./ سست/لازی.موڈول'):.گارڈ کے کینلوڈ () کے طریقہ کار میں منطق: گارڈ کے کینلوڈ () کے طریقہ کار میں ، اپنے کسٹم منطق کو نافذ کریں تاکہ اس بات کا تعین کیا جاسکے کہ ماڈیول کو بھری ہوئی ہے یا نہیں۔آپ کسی بھی چیک یا شرائط کو انجام دے سکتے ہیں جس کی آپ کو ضرورت ہوتی ہے۔ ٹائپ اسکرپٹ کوپی کوڈیکان لوڈ (روٹ: روٹ ، طبقات: urlsegment []): قابل مشاہدہ <بولین |urltree> |وعدہ <بولین |urltree> |بولین |urltree {// اپنی مرضی کے مطابق منطق اس بات کا تعین کرنے کے لئے کہ آیا ماڈیول کو لادا جاسکتا ہے const canloadmodule = ... ؛// یہاں اپنے چیک انجام دیں کینلوڈموڈول واپس کریں ؛} کینلوڈ () کے طریقہ کار کو بولین ویلیو یا قابل مشاہدہ ، وعدہ ، یا urltree واپس کرنا چاہئے جو بولین قدر سے حل ہوتا ہے۔اگر ماڈیول کو لوڈ کیا جاسکتا ہے تو سچائی واپس کریں ، اور غلط اگر اسے لوڈنگ سے روکنا چاہئے۔ کسی فنکشن کے ساتھ کین لوڈ انٹرفیس آپ کو اپنی مرضی کے مطابق منطق انجام دینے کی اجازت دیتا ہے تاکہ یہ معلوم کیا جاسکے کہ سست لوڈ شدہ ماڈیول کو لوڈ کیا جانا چاہئے یا نہیں۔کسی گارڈ میں کینلوڈ () کے طریقہ کار کو نافذ کرکے اور اس گارڈ کو سست بوجھ والے راستے کی کینلوڈ پراپرٹی کو تفویض کرکے ، آپ اپنی مخصوص شرائط کی بنیاد پر ماڈیولز کی لوڈنگ کو کنٹرول کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں راستے اور ایکٹیویٹ روٹ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، کینیکٹیوٹیٹ اور کینڈی ایکٹیویٹیٹ دو مختلف روٹ گارڈز ہیں جو بالترتیب کسی خاص راستے پر اور جانے والے نیویگیشن کو کنٹرول کرنے کے لئے استعمال ہوتے ہیں۔ان کے مابین اختلافات کا ایک خرابی یہ ہے: کینیکٹیوٹیٹ: کینیکٹیوٹیٹ گارڈ کا استعمال اس بات کا تعین کرنے کے لئے کیا جاتا ہے کہ آیا کسی صارف کو کسی مخصوص روٹ پر تشریف لے جانے کی اجازت ہے یا نہیں۔ یہ روٹ کو چالو کرنے (لوڈنگ) سے پہلے ہی عمل میں لایا جاتا ہے اور واپس شدہ بولین کی بنیاد پر نیویگیشن کی اجازت دیتا ہے یا بلاکس نیویگیشن کی اجازت دیتا ہے۔value.FANActivate گارڈ درست لوٹتا ہے تو ، نیویگیشن کی اجازت ہے ، اور راستہ چالو ہوجاتا ہے۔ اگر کین ایکٹیویٹ گارڈ غلط یا URLTERE شے کو واپس کرتا ہے تو ، نیویگیشن کو مسدود کردیا جاتا ہے ، اور صارف کو ری ڈائریکٹ کیا جاتا ہے یا موجودہ صفحے پر رہتا ہے ، اس پر منحصر ہے۔واپس آنے والی قیمت۔ آپ ایک روٹ پر متعدد کینیکٹیویٹ گارڈز کو تفویض کرسکتے ہیں ، اور ان سب کو نیویگیشن کو آگے بڑھنے کے ل true سچائی واپس کرنا ہوگی۔موجودہ روٹ کو چھوڑتے وقت پھانسی دی جاتی ہے اور واپس شدہ بولین ویلیو کی بنیاد پر نیویگیشن کی اجازت دیتا ہے یا بلاک کرتا ہے۔ اگر کینڈی ایکٹیویٹ گارڈ واپس آجاتا ہے تو ، نیویگیشن کی اجازت ہے ، اور صارف موجودہ روٹ چھوڑ سکتا ہے۔ اگر کینڈی ایکٹیویٹ گارڈ غلط یا urltree آبجیکٹ کو واپس کرتا ہے۔، نیویگیشن کو مسدود کردیا گیا ہے ، اور صارف موجودہ روٹ پر رہتا ہے۔ اسی طرح کینٹیکیٹو کرنے کے لئے ، آپ متعدد کینڈیکیٹیٹ گارڈز کو کسی راستے پر تفویض کرسکتے ہیں ، اور ان سب کو نیویگیشن کو آگے بڑھنے کے ل true درست لوٹنا ہوگا۔کسی خاص راستے پر تشریف لے جاسکتے ہیں ، جبکہ کینڈی ایکٹیویٹ کو کنٹرول کرتا ہے کہ آیا کوئی صارف موجودہ راستے سے دور ہوسکتا ہے۔وہ نیویگیشن پابندیوں کو نافذ کرنے میں لچک فراہم کرتے ہیں اور آپ کو اپنی درخواست کی ضروریات کی بنیاد پر کسٹم منطق کو نافذ کرنے کی اجازت دیتے ہیں۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں تبدیل کرنے والے آپشن اور ٹکڑے کے ساتھ روٹر ڈاٹ نیویگیٹ () طریقہ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، آپ کسی ٹکڑے کے ساتھ کسی رشتہ دار راستے پر تشریف لے جانے کے لئے روٹر۔ نیویگیٹ () کا طریقہ استعمال کرسکتے ہیں۔ٹکڑا یو آر ایل کا ایک حصہ ہے جو ہیش (#) علامت کے ساتھ پیش کیا جاتا ہے اور عام طور پر کسی صفحے کے اندر کسی مخصوص حصے میں سکرول کرنے کے لئے استعمال ہوتا ہے۔رشتہ دار راستوں اور ایک ٹکڑے کے ساتھ راؤٹر۔ نیویگیٹ () استعمال کرنے کے لئے ، ان اقدامات پر عمل کریں: مطلوبہ انحصار درآمد کریں: روٹر کلاس کو @کونیی/راؤٹر سے درآمد کریں۔: اپنے اجزاء یا سروس کے کنسٹرکٹر میں روٹر مثال انجیکشن کریں۔ ٹائپ اسکرپٹ کوپی کوڈکونٹرکٹر (نجی روٹر: روٹر) {} راؤٹر۔ نیویگیٹ () رشتہ دار راستہ اور ٹکڑے کے ساتھ استعمال کریں: روٹر پر نیویگیٹ () طریقہ پر کال کریں اور رشتہ دار کو فراہم کریں۔پیرامیٹرز کے بطور راستہ اور ٹکڑا۔() طریقہ کو موجودہ راستے کے نسبت کسی ہدف والے راستے پر تشریف لے جانے اور ایک ٹکڑا کی وضاحت کرنے کے لئے کہا جاتا ہے۔رشتہ دار راستہ روٹ طبقات (جیسے ، ['../' ، 'ٹارگٹ روٹ']) کی ایک صف کے طور پر متعین کیا گیا ہے ، اور اس ٹکڑے کا آپشن نیویگیٹ () طریقہ کے دوسرے پیرامیٹر میں کسی شے کے طور پر فراہم کیا گیا ہے۔فریگمنٹ آپشن ہدف کے راستے میں سیکشن یا عنصر کی شناخت کی نمائندگی کرنے والی سٹرنگ ویلیو کو قبول کرتا ہے جس پر آپ اسکرول کرنا چاہتے ہیں۔مثال کے طور پر ، اگر آپ کے پاس ٹارگٹ روٹ کے ٹیمپلیٹ میں سیکشن-آئی ڈی کی شناخت والا عنصر ہے تو ، فریگمنٹ سیکشن ID اس صفحے کو اس مخصوص حصے میں نیویگیشن پر سکرول کرے گا۔ راؤٹر کا استعمال کرتے ہوئے۔، آپ موجودہ روٹ کے نسبت کسی خاص راستے پر جاسکتے ہیں اور اس راستے کے اندر کسی مخصوص حصے میں سکرول کرسکتے ہیں۔اس سے آپ کو اپنی کونیی ایپلی کیشن میں ہموار اور ٹارگٹڈ نیویگیشن بنانے کی اجازت ملتی ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں ایکٹیویٹیٹ روٹ۔ آؤٹ لیٹ پراپرٹی کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، روٹر پرلوڈر.نوپرلوڈنگ پراپرٹی کو سست بھری ہوئی ماڈیولز کی پری لوڈنگ کو غیر فعال کرنے کے لئے استعمال کیا جاتا ہے۔کونیی میں پری لوڈنگ کی حکمت عملی آپ کو پس منظر میں سست بوجھ والے ماڈیولز کو لوڈ کرنے کے وقت کو بہتر بنانے کے ل back پس منظر میں لوڈ کرنے کی اجازت دیتی ہے۔جیسے ہی اطلاق شروع ہوجائے گا -لوڈ شدہ ماڈیولز۔تاہم ، ایسے معاملات ہوسکتے ہیں جہاں آپ مخصوص ماڈیولز یا پوری درخواست کے ل pre پری لوڈنگ کو غیر فعال کرنا چاہتے ہیں۔یہ وہ جگہ ہے جہاں روٹر پرلوڈر.نوپرلوڈنگ پراپرٹی کھیل میں آتی ہے۔ روٹر پرلوڈر کا مقصد۔جب یہ پراپرٹی سچ پر سیٹ کی گئی ہے تو ، کونیی کسی بھی سست بھری ہوئی ماڈیول کو پہلے سے لوڈ نہیں کرے گی ، اور جب وہ نیویگیشن کے دوران صارف کی طرف سے واضح طور پر درخواست کی جائے گی تو وہ صرف اس وقت لوڈ ہوں گے۔جب آپ اپنے روٹنگ ماڈیول کو ترتیب دیتے ہیں تو: '@کونیی/کور' سے ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ngmodule} درآمد {راؤٹر موڈول ، راؤٹرپرلوڈر} سے '@کونیی/راؤٹر' ؛@ngmodule ({درآمدات: [راؤٹریموڈول.فوررووٹ (روٹس:.یہ ترتیب اس بات کو یقینی بناتی ہے کہ سست بھری ہوئی ماڈیولز کا کوئی پری لوڈ نہیں ہوتا ہے۔ روٹر پرلوڈر کا استعمال کرتے ہوئے پری لوڈنگ کو غیر فعال کرنے کے بعد۔یہ مفید ثابت ہوسکتا ہے جب آپ ابتدائی لوڈنگ ٹائم کو بہتر بنانا چاہتے ہیں یا جب آپ کے پاس مخصوص نیویگیشن پیٹرن ہوں جس میں پری لوڈنگ کی ضرورت نہیں ہوتی ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کین ایکٹیویٹ انٹرفیس کا استعمال کیسے کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، روٹر۔ نیویگیٹ () طریقہ آپ کو پروگرام کے مطابق کسی مخصوص راستے پر تشریف لے جانے کی اجازت دیتا ہے۔ایکسٹرا آپشن نیویگیشن کے اضافی اختیارات فراہم کرتا ہے جسے آپ نیویگیشن سلوک کو اپنی مرضی کے مطابق بنانے کے لئے استعمال کرسکتے ہیں۔ایکسٹرا آپشن کے ساتھ روٹر۔ نیویگیٹ () کے طریقہ کار کو استعمال کرنے کے لئے ، ان اقدامات پر عمل کریں: مطلوبہ انحصار درآمد کریں: روٹر کلاس کو @کونیی/راؤٹر سے درآمد کریں۔: اپنے اجزاء یا سروس کے کنسٹرکٹر میں راؤٹر مثال کے طور پر انجیکشن کریں۔ ٹائپ اسکرپٹ کوپی کوڈکونٹرکٹر (نجی روٹر: روٹر) {} ایکسٹرا کے آپشن کے ساتھ راؤٹر۔ نیویگیٹ () استعمال کریں: راؤٹر پر نیویگیٹ () کا طریقہ کال کریں اور راستے کا راستہ فراہم کریں۔پہلے پیرامیٹر کے طور پر۔دوسرے پیرامیٹر میں ، نیویگیشن کے اضافی اختیارات کی وضاحت کے لئے ایکسٹرا پراپرٹی کے ساتھ کسی شے کی فراہمی کریں۔.یہ. router.navigate (['ٹارگٹ-روٹ'] ، ایکسٹرا) ؛} مذکورہ بالا مثال میں ، نیویگیٹوروٹ () کے طریقہ کار کو ٹارگٹ روٹ پر تشریف لے جانے اور اضافی آبجیکٹ کے ذریعے اضافی نیویگیشن کے اختیارات کو منتقل کرنے کے لئے کہا جاتا ہے۔ایکسٹرا آبجیکٹ میں مندرجہ ذیل اختیارات شامل ہیں: استفسار پیرامس: ایک شے جس میں استفسار کے پیرامیٹرز کی نمائندگی ہوتی ہے۔استفسار پیرامیٹرز کے ضم ہونے کو سنبھالنے کے لئے۔ممکنہ اقدار 'انضمام' ، 'محفوظ' ، یا '' (پہلے سے طے شدہ) ہیں۔ پریسروفرگمنٹ: ایک بولین قدر جس سے یہ ظاہر ہوتا ہے کہ جب نیویگیشن کرتے وقت موجودہ ٹکڑے کو محفوظ رکھنا ہے یا نہیں۔اندراج۔ آپ نیویگیشن کے اختیارات کے ساتھ ایکسٹرا آبجیکٹ کو اپنی مرضی کے مطابق بناسکتے ہیں جو آپ کی ضروریات کے مطابق ہیں۔ ایکسٹرا آپشن کے ساتھ راؤٹر۔ نیویگیٹ () طریقہ کا استعمال کرتے ہوئے ، آپ کسی مخصوص راستے پر تشریف لے جاسکتے ہیں اور اضافی اختیارات جیسے استفسار پیرامیٹرز ، ٹکڑے ، استفسار فراہم کرسکتے ہیں۔حکمت عملیوں سے نمٹنا ، ٹکڑوں کو محفوظ رکھنا ، یا مقام کی تبدیلیوں کو چھوڑنا۔یہ اختیارات آپ کو آپ کے کونیی ایپلی کیشن میں نیویگیشن سلوک پر زیادہ کنٹرول فراہم کرتے ہیں۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینلوڈ گارڈ انٹرفیس کا استعمال کیسے کرتے ہیں؟",
        "Answer": "کونیی میں ، کینلوڈ گارڈ انٹرفیس کسی ایسے گارڈ کو نافذ کرنے کے لئے استعمال کیا جاتا ہے جو چیک کرتا ہے کہ اگر سست بھری ہوئی ماڈیول کو لوڈ کیا جاسکتا ہے۔جب کونیی روٹنگ میں ایک ہی راستے کے لئے ایک سے زیادہ محافظوں کے ساتھ کام کرتے ہو تو ، آپ ماڈیول کو لوڈ ہونے کی اجازت دینے سے پہلے ان کو ایک ساتھ مل کر ایک سے زیادہ چیک انجام دے سکتے ہیں۔یہ ہے کہ آپ کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینلوڈ گارڈ انٹرفیس کا استعمال کیسے کرسکتے ہیں: اپنے گارڈ کی کلاسیں بنائیں جو کین لوڈ انٹرفیس کو نافذ کریں۔ہر گارڈ کی جانچ پڑتال کے لئے اپنی اپنی منطق ہوگی کہ آیا ماڈیول لوڈ کیا جاسکتا ہے۔مثال کے طور پر: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {انجیکشن ایبل} سے '@کونیی/کور' ؛ امپورٹ {کینلوڈ ، روٹ ، urlsegment 'سے'@کونیی/راؤٹر 'سے@انجیکشن ایبل ({فراہم کردہ:' روٹ '}) ایکسپورٹ کلاس مصنف کے سامان کینلوڈ {کینلوڈ {کین لوڈ.// واپسی آئسیتینٹیکیٹیکیٹک ؛}}@انجیکشن ایبل ({فراہم کردہ: 'روٹ'}) ایکسپورٹ کلاس رولی گارڈ کے اوزار کین لوڈ {کین لوڈ (روٹ: روٹ ، طبقات: urlsegment []): بولین {// کردار پر مبنی چیک انجام دیں اور اس کے مطابق صحیح یا غلط واپس کریں // کے لئے // کے لئے //مثال کے طور پر: // const userrole = ... ؛// واپسی یوزرول === 'ایڈمن' ؛} your آپ کے روٹنگ ماڈیول میں ، روٹ آبجیکٹ پر کینلوڈ پراپرٹی کی وضاحت کریں اور گارڈ کلاسوں کی ایک صف پاس کریں۔مثال کے طور پر: ٹائپ اسکرپٹ کوپی کوڈیم پورٹ {ngmodule} سے '@کونیی/کور' ؛ درآمد {راؤٹرڈول ، '@کونیی/راؤٹر' سے روٹس} امپورٹ {Authguard} سے '/role.guard' ؛ کونسٹ روٹس: راستے = [{راستہ: 'کاہل' ، لوڈچنین: () => درآمد ('./ lazy.module')۔ پھر ((م) => ایم لازیموڈول) ، کینلوڈ:۔صف گارڈ اور رولی گارڈ کلاسوں پر مشتمل سرنی۔کینلوڈ پراپرٹی کا جائزہ فراہم کردہ محافظوں کی ترتیب میں کیا جائے گا۔ محافظوں کو اس ترتیب میں عمل میں لایا جائے گا جس کی وہ کینلوڈ سرنی میں درج ہیں۔ہر گارڈ کے کین لوڈ کا طریقہ طلب کیا جائے گا ، اور ماڈیول صرف اس صورت میں بھری جائے گا جب تمام محافظ سچ ہوجائیں گے۔اگر کوئی گارڈ غلط یا وعدہ واپس کرتا ہے جو غلط سے حل ہوتا ہے تو ، ماڈیول لوڈنگ کو مسدود کردیا جائے گا۔ محافظ توثیق ، کردار پر مبنی چیک ، یا کسی اور کسٹم منطق کو انجام دے سکتے ہیں تاکہ اس بات کا تعین کیا جاسکے کہ ماڈیول کو بھری ہوئی ہے یا نہیں۔کینلوڈ سرنی میں محافظوں کا ترتیب اہم ہے اگر آپ کے پاس چیکوں کے آرڈر پر انحصار یا مخصوص ضروریات ہیں۔ کینلوڈ گارڈ انٹرفیس کا استعمال کرتے ہوئے اور راستے کی کین لوڈ پراپرٹی میں ایک سے زیادہ محافظوں کو زنجیر بنانا ، آپ پیچیدہ اجازت اور رسائی کنٹرول کو نافذ کرسکتے ہیں۔کونیی روٹنگ میں سست بھری ہوئی ماڈیولز کی لوڈنگ کو کنٹرول کرنے کے لئے منطق۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر لنکیکٹیو اپشنز انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں راؤٹر لنکیکٹیو آپشن انٹرفیس کا استعمال روٹر لنکیکٹیو ڈائریکٹیو کے طرز عمل کو اپنی مرضی کے مطابق کرنے کے لئے کیا جاتا ہے۔روٹر لنکیکٹیو ڈائریکٹیو کسی عنصر پر سی ایس ایس کلاس کو لاگو کرنے کے لئے استعمال کیا جاتا ہے جب متعلقہ روٹر لنک فعال ہوتا ہے۔ روٹر لنکیکٹیو پیشنز انٹرفیس آپ کو ایسے اختیارات کی وضاحت کرنے کی اجازت دیتا ہے جو اس بات پر قابو رکھتے ہیں کہ سی ایس ایس کلاس کو کس طرح لاگو کیا جاتا ہے۔یہاں روٹر لنکیکٹی ایکٹیو پیشنز انٹرفیس کی خصوصیات ہیں: عین مطابق: بولین (اختیاری): جب سچ پر سیٹ کیا جائے تو ، سی ایس ایس کلاس صرف اس صورت میں لاگو ہوگی جب"
    },
    {
        "Question": "کونیی روٹنگ میں اختیاری پیرامیٹرز کے ساتھ آپ پیرامیٹرائزڈ روٹ نحو کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، آپ اختیاری پیرامیٹرز کو مربع بریکٹ میں منسلک کرکے پیرامیٹرائزڈ روٹ نحو کا استعمال کرسکتے ہیں []۔اس سے آپ کو ایسے راستوں کی وضاحت کرنے کی اجازت ملتی ہے جن میں یو آر ایل میں اختیاری طبقات ہوسکتے ہیں۔یہاں آپ اختیاری پیرامیٹرز کے ساتھ پیرامیٹرائزڈ روٹ نحو کو کس طرح استعمال کرسکتے ہیں اس کی ایک مثال ہے: اپنے روٹنگ کنفیگریشن میں اختیاری پیرامیٹرز کے ساتھ راستے کی وضاحت کریں: ٹائپ اسکرپٹ کوپی کوڈکونسٹ راستوں: راستے = [{راستہ: 'صارف/: ID' ، اجزاء: صارف کا اجزاء: صارف کا اجزاء} ،} ، {راستہ: 'صارف/: ID/ترمیم' ، اجزاء: صارف ایڈیٹکمپریشن} ، {راستہ: 'صارف/: ID/: سیکشن' ، جز: صارف کے اجزاء} ،] ؛"
    },
    {
        "Question": "کونیی روٹنگ میں urlsegment اور urlsegment گروپ میں کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، urlsegment اور urlsegment گروپ دو طبقے ہیں جو url کے مختلف حصوں کی نمائندگی کرنے کے لئے استعمال ہوتے ہیں۔ urlsegment: url کے ایک ہی حصے کی نمائندگی کرتا ہے۔ IT میں راستہ اور پیرامیٹرز جیسی خصوصیات پر مشتمل ہے۔ راستہ جائیداد URL کے اصل حصے کی نمائندگی کرتی ہے ،جیسے روٹ پاتھ یا پیرامیٹر ویلیو۔ پیرامیٹرز پراپرٹی کی نمائندگی کرتی ہے"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر واقعات کو سنبھالنے کے لئے آپ راؤٹر.ایونس.سبیسکرائب () طریقہ استعمال کیسے کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، آپ روٹر کے واقعات کو سبسکرائب کرنے اور اسی کے مطابق سنبھالنے کے لئے روٹر.ایونٹس۔ سبسکرائب () کا طریقہ استعمال کرسکتے ہیں۔راؤٹر۔ ایونٹ پراپرٹی روٹر واقعات کا ایک مشاہدہ کرنے والا سلسلہ فراہم کرتی ہے جس کی آپ سبسکرائب کرسکتے ہیں۔یہاں آپ روٹر کے واقعات کو سنبھالنے کے لئے راؤٹر.ایونس.سبیسکرائب () کو کس طرح استعمال کرسکتے ہیں اس کی ایک مثال یہ ہے: ضروری انحصار درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {اجزاء ،@@کونیولر/کور 'سے ONINIT ؛ درآمد {راؤٹر ، نیویگیشن اسٹارٹ ، نیویگیشن ایرر}'@کونیی/راؤٹر' سے ؛ اپنے جزو میں ، روٹر انحصار انجیکشن کریں: ٹائپ اسکرپٹ کوپی کوڈیک کنسٹرکٹر (نجی راؤٹر: روٹر) {n ngoninit لائف سائکل ہک یا کسی اور مناسب جگہ میں راؤٹر واقعات کی سبسکرائب کریں: ٹائپ اسکرپٹ کوپی کوڈ"
    },
    {
        "Question": "کونیی روٹنگ میں ایکٹیویٹ روٹ کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، ایکٹیویٹیڈ روٹ۔ پیرنٹ پراپرٹی کا استعمال بچوں کے راستے کے جزو کے اندر والدین کے راستے کے ایکٹیویٹ روٹ آبجیکٹ تک رسائی کے لئے کیا جاتا ہے۔یہ روٹ کے درجہ بندی کو نیویگیٹ کرنے اور والدین کے راستے سے متعلق معلومات تک رسائی حاصل کرنے کا ایک طریقہ فراہم کرتا ہے۔ ایکٹیویٹ روٹ آبجیکٹ فی الحال چالو راستے کی نمائندگی کرتا ہے اور اس میں روٹ کے پیرامیٹرز ، استفسار پیرامیٹرز ، ڈیٹا اور دیگر روٹ سے متعلق تفصیلات کے بارے میں معلومات شامل ہیں۔والدین کی پراپرٹی آپ کو روٹ کے درجہ بندی کو عبور کرنے اور والدین کے ایکٹیویٹ روٹ آبجیکٹ تک رسائی حاصل کرنے کی اجازت دیتی ہے۔ یہاں آپ والدین کی پراپرٹی کو کس طرح استعمال کرسکتے ہیں اس کی ایک مثال ہے: ضروری انحصار درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {اجزاء ، oninit '"
    },
    {
        "Question": "کونیی روٹنگ میں آپ کوئیر پیرمز اور ٹکڑے کی خصوصیات کے ساتھ روٹر ڈاٹ نیویگیٹ () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، آپ روٹر۔ نیویگیٹ () کا طریقہ استعمال کرسکتے ہیں تاکہ پروگرام کو مختلف راستے پر تشریف لے جاسکیں جبکہ استفسار پیرامیٹرز اور ایک ٹکڑے کی بھی وضاحت کریں۔نیویگیشن ایکسٹراس آبجیکٹ کے استفسار پیرمز اور ٹکڑے کی خصوصیات کو اس کو حاصل کرنے کے لئے استعمال کیا جاسکتا ہے۔یہاں ایک مثال ہے: ضروری انحصار درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {اجزا an '@کونیی/کور' سے ؛ درآمد {روٹر ، نیویگیشن ایکسٹراس@'@کونیی/راؤٹر' سے اپنے جزو میں ، روٹر انحصار انجیکشن کریں: ٹائپ اسکرپٹ کوسکوپی کنسٹرکٹر"
    },
    {
        "Question": "کونیی روٹنگ میں پاتھ مچ اسٹریٹی ڈاٹ فل اور پاتھ مچ اسٹریٹی.پرفکس کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، پاتھ مچ اسٹریٹی اینوم راستوں کے مماثل اور حل کرنے کے لئے مختلف حکمت عملی کی نمائندگی کرتا ہے۔پاتھ مچ اسٹریٹی انیم کی دو اقدار یہ ہیں: پاتھ مچ اسٹریٹی ۔فل: جب پاتھ مچ اسٹریٹی ڈاٹ فل کو استعمال کیا جاتا ہے تو ، روٹر متعین راستے کے راستے کے خلاف یو آر ایل کا مکمل میچ انجام دے گا۔ اس کا مطلب یہ ہے کہ پورے یو آر ایل کو روٹ کے راستے سے بالکل ٹھیک ہونا چاہئے۔ایک میچ سمجھا جانے والا راستہ۔ اگر یو آر ایل میں کوئی اضافی راستہ یا استفسار کے پیرامیٹرز موجود ہیں جن کی وضاحت روٹ کے راستے میں نہیں کی گئی ہے تو ، راستے کا مماثل نہیں ہوگا"
    },
    {
        "Question": "کونیی روٹنگ میں کسی فنکشن کے ساتھ آپ کینڈیکٹیویٹ انٹرفیس کا استعمال کیسے کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، آپ کسی گارڈ کو نافذ کرنے کے لئے کینڈی ایکٹیویٹ انٹرفیس کا استعمال کرسکتے ہیں جو آپ کو اس بات پر قابو پانے کی اجازت دیتا ہے کہ آیا صارف کسی خاص راستے سے دور ہوسکتا ہے یا نہیں۔کینڈیکٹیویٹ انٹرفیس کے لئے آپ کو ایک کینڈیکٹیویٹ طریقہ کی وضاحت کرنے کی ضرورت ہوتی ہے جو یا تو بولین ، وعدہ <بولین> ، یا ایک مشاہدہ کرنے والا <بولین> لوٹتا ہے۔آپ `کین کو نافذ کرنے کے لئے ایک فنکشن استعمال کرسکتے ہیں"
    },
    {
        "Question": "کونیی روٹنگ میں راؤٹیرسسٹریجی کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، راؤٹیرسیسٹریٹگی۔ایسا لگتا ہے کہ کوئی الجھن یا غلط فہمی ہوسکتی ہے۔روٹریوسیسٹریٹی انٹرفیس خود راؤٹر کے طرز عمل کو کنٹرول کرنے کے لئے استعمال کیا جاتا ہے جب روٹ نیویگیشن کے لئے جزو کی مثالوں کو دوبارہ استعمال کرتے ہیں۔ راؤٹیرسسٹریجی انٹرفیس میں مندرجہ ذیل خصوصیات اور طریقے ہیں: کیبریسروٹ (مستقبل: ایکٹیویٹیڈ روٹس شوٹ ، کرنٹ: موجودہ روٹ: بوڈین: بوڈین: یہ بات طے کرتی ہے کہ آیا یا کیا اس بات کا تعین کرتا ہے کہ آیا موجودہ روٹ:مستقبل اور موجودہ ایکٹیویٹیڈ راؤٹ ایس این اے پی شاٹ آبجیکٹ کے مابین موازنہ کی بنیاد پر دوبارہ استعمال کیا جائے۔"
    },
    {
        "Question": "کونیی روٹنگ میں ایک فعال روٹر لنک کو اسٹائل کرنے کے لئے آپ روٹر لنکیکٹیو کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، آپ ایک فعال روٹر لنک کو اسٹائل کرنے کے لئے روٹر لنکیکٹیو ڈائریکٹیو اور اس سے وابستہ سی ایس ایس کلاسوں کا استعمال کرسکتے ہیں۔روٹر لنکیکٹیو ڈائریکٹیو سی ایس ایس کلاسز کو اس وقت فعال روٹر لنک پر مبنی ایسوسی ایٹڈ ایچ ٹی ایم ایل عنصر میں شامل کرتا ہے۔ یہاں آپ روٹر لنکیکٹیو ڈائریکٹیو کو اسٹائل ایک فعال روٹر لنک کے لئے کس طرح استعمال کرسکتے ہیں: ضروری انحصار درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {اجزاء@@کونیول/کور سے ''your اپنے جزو کے ٹیمپلیٹ میں ، روٹر لنکیکٹیو ہدایت کو روٹر لنک عنصر پر لگائیں: HTMLCOPY کوڈ <NAV> <A ROUTERLINK = \"/گھر\""
    },
    {
        "Question": "کونیی روٹنگ میں حل کی پراپرٹی اور کینلوڈ گارڈ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں پراپرٹی اور کینلوڈ گارڈ کو مختلف مقاصد کی خدمت کرتے ہیں اور ان کی الگ الگ خصوصیات ہیں: پراپرٹی کو حل کریں: کونیی روٹنگ میں حل کی پراپرٹی آپ کو ڈیٹا لانے یا کسی بھی راستے کو چالو کرنے سے پہلے کسی بھی ضروری آپریشن کو انجام دینے کی اجازت دیتی ہے۔ اس کا استعمال اعداد و شمار کو متنازعہ طور پر بازیافت کرنے اور بنانے کے لئے کیا جاتا ہے۔روٹ کے پیش آنے سے پہلے یہ روٹ کے جزو کو دستیاب ہے۔ حل کی پراپرٹی کو روٹ آبجیکٹ پر سیٹ کیا جاسکتا ہے ، اور یہ کسی چیز یا خدمات یا افعال کی ایک چیز یا صف لیتا ہے جو کسی قدر یا وعدے کو واپس کرتا ہے۔ اس کے بعد حل شدہ ڈیٹا اسی کو منتقل کیا جاتا ہے۔روٹ پیرامیٹر کے طور پر روٹ کا جزو۔ حل کی پراپرٹی عام طور پر کسی روٹ کے جزو کے ذریعہ مطلوبہ اعداد و شمار سے پہلے سے لوڈ کرنے کے لئے استعمال ہوتی ہے ، اس بات کو یقینی بناتے ہوئے کہ جزو کو پیش کرنے سے پہلے ڈیٹا دستیاب ہے۔ یہ اکثر ڈیٹا انحصار کو حل کرنے ، اجازت کی جانچ پڑتال کرنے ، یا استعمال کیا جاتا ہےاجزاء کو پیش کرنے سے پہلے کسی API سے ڈیٹا بازیافت کریں۔ایک روٹ.کینلوڈ گارڈ آپ کو ایک مخصوص روٹ سے وابستہ پورے ماڈیول کو لوڈ کرنے سے پہلے چیک اور توثیق کرنے کی اجازت دیتا ہے۔ گارڈز کو لاگو کرنے سے پہلے کین لوڈ انٹرفیس کا اندازہ کیا جاتا ہے ، اور وہ اس بات کا تعین کرتے ہیں کہ منطق کی بنیاد پر ماڈیول لوڈ یا مسدود ہونا چاہئے یا نہیں۔گارڈ کے کین لوڈ کے طریقہ کار میں نافذ کیا گیا ہے۔ کینلوڈ گارڈ عام طور پر اجازت کے مقاصد کے لئے استعمال ہوتا ہے ، جہاں آپ یہ چیک کرسکتے ہیں کہ آیا کسی صارف کو ضروری اجازت ہے یا اگر کچھ شرائط پوری ہو گئیں۔کونیی روٹنگ میں پراپرٹی اور کینلوڈ گارڈ کو حل کریں یہ ہے کہ روٹ کے اجزاء کی پیش کش سے پہلے حل کی پراپرٹی ڈیٹا کو پہلے سے بازیافت کرنے یا آپریشن کرنے کے لئے استعمال کی جاتی ہے ، جبکہ کینلوڈ گارڈ کو مخصوص شرائط یا اجازت کی جانچ پڑتال پر مبنی سست بھری ہوئی ماڈیولز کی لوڈنگ کو کنٹرول کرنے کے لئے استعمال کیا جاتا ہے۔حل پراپرٹی ڈیٹا کی بازیافت اور تیاری پر مرکوز ہے ، جبکہ کینلوڈ گارڈ ماڈیول تک رسائی کو کنٹرول کرنے پر مرکوز ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں نیویگیشن کو روکنے کے لئے آپ کینڈی کوٹیویٹ پراپرٹی کا استعمال کیسے کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، آپ غیر فعال گارڈ کو نافذ کرکے کسی راستے سے نیویگیشن کو روکنے کے لئے کینڈی ایکٹیویٹ پراپرٹی کا استعمال کرسکتے ہیں۔کینڈی ایکٹیویٹ پراپرٹی آپ کو کسی گارڈ فنکشن کی وضاحت کرنے کی اجازت دیتی ہے جس سے یہ طے ہوتا ہے کہ صارف موجودہ روٹ سے دور ہوسکتا ہے۔ یہاں کہ آپ کونیی روٹنگ میں نیویگیشن کو روکنے کے لئے کینڈی ایکٹیویٹیٹ پراپرٹی کا استعمال کیسے کرسکتے ہیں: ایک غیر فعال گارڈ بنائیں: ایک گارڈ سروس یا جزو بنائیں۔جو کینڈی ایکٹیویٹ انٹرفیس کو نافذ کرتا ہے۔اس انٹرفیس کے لئے آپ کو ایک کینڈی کوٹیویٹ طریقہ کی وضاحت کرنے کی ضرورت ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں عزم کا مقصد کیا ہے۔",
        "Answer": "کونیی روٹنگ میں ، حل انٹرفیس کونیی فریم ورک میں بلٹ ان انٹرفیس یا معیاری فائل نہیں ہے۔لہذا ، کونیی کے ذریعہ فراہم کردہ کوئی حل نہیں ہے۔حل انٹرفیس (یا اسی طرح کے کسٹم انٹرفیس) کو استعمال کرنے کا مقصد ایک حل کرنے والے کی وضاحت کرنا ہے جو روٹ کے لئے ضروری ڈیٹا لاتا ہے۔ عام طور پر ، جب کونیی روٹنگ میں ڈیٹا ریزولوشن کو نافذ کرتے وقت ، آپ کسٹم ریلولور بنائیں گے۔"
    },
    {
        "Question": "کونیی روٹنگ میں سست لوڈنگ کے ل you آپ لوڈچینڈرین پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، لوڈچیلین پراپرٹی سست لوڈنگ ماڈیولز کے لئے استعمال ہوتی ہے۔اس سے آپ کو ماڈیول کو متضاد طور پر لوڈ کرنے کی اجازت ملتی ہے جب اسی راستے تک رسائی حاصل ہوتی ہے ، اس طرح ماڈیول کوڈ کی لوڈنگ کو موخر کرکے ابتدائی ایپلی کیشن لوڈ کے وقت کو بہتر بناتا ہے جب تکآپ کا سست بھری ہوئی ماڈیول: اس ماڈیول کے لئے ایک علیحدہ ماڈیول فائل بنائیں جس کو آپ سست طریقے سے لوڈ کرنا چاہتے ہیں۔اس ماڈیول میں اجزاء ہوں گے"
    },
    {
        "Question": "آپ کونیی روٹنگ میں نیویگیشن کینسل ایونٹ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، جب نیویگیشن منسوخ ہوجاتا ہے تو نیویگیشن کینسل ایونٹ خارج ہوتا ہے۔یہ آپ کی درخواست کے اندر نیویگیشن کی منسوخی کو حاصل کرنے اور ان سے نمٹنے کے لئے کارآمد ثابت ہوسکتا ہے۔یہ ہے کہ آپ کونیی روٹنگ میں نیویگیشن کینسل ایونٹ کو کس طرح استعمال کرسکتے ہیں: ضروری کلاسوں کو درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {روٹر ، نیویگیشن کینسل the سے '@کونیی/راؤٹر' ؛ راؤٹر سروس کو اپنے جزو کے کنسٹرکٹر میں انجیکشن کریں"
    },
    {
        "Question": "کونیی روٹنگ میں ٹارگٹ پراپرٹی کے ساتھ روٹر لنک لنک ہدایت کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، روٹر لنک لنک ہدایت آپ کی درخواست میں مختلف راستوں کے مابین نیویگیشن لنکس بنانے کے لئے استعمال ہوتا ہے۔جب آپ کو لنک پر کلک کیا جاتا ہے یا اس کے ساتھ بات چیت ہوتی ہے تو یہ آپ کو کسی خاص راستے پر تشریف لے جانے کی اجازت دیتا ہے۔ روٹر لنک میں ہدف پراپرٹی کا استعمال اس بات کی وضاحت کرنے کے لئے کیا جاتا ہے کہ جب لنک پر کلک کیا جاتا ہے تو نیویگیشن کیسے ہونا چاہئے۔یہ کنٹرول کرتا ہے جہاں منزل کا راستہ پیش کیا جانا چاہئے۔ہدف پراپرٹی مندرجہ ذیل اقدار کو قبول کرتی ہے: _ خود (پہلے سے طے شدہ): موجودہ براؤزر کے سیاق و سباق میں منزل کا راستہ پیش کیا جاتا ہے ، موجودہ روٹ کی جگہ لے کر۔والدین کے براؤزر کے سیاق و سباق میں پیش کیا گیا۔اگر موجودہ راستہ <iframe> کے اندر ہے تو ، والدین کے فریم کے راستے کو تبدیل کردیا جائے گا۔ہدف پراپرٹی کا استعمال کرتے ہوئے ، آپ یہ کنٹرول کرسکتے ہیں کہ نیویگیشن کس طرح برتاؤ کرتا ہے اور جہاں منزل کا راستہ پیش کیا جانا چاہئے۔یہ صارف کے تجربے اور ایپلی کیشن کے نیویگیشن فلو کو سنبھالنے میں لچک فراہم کرتا ہے۔ ہدف پراپرٹی کے ساتھ روٹر لنک ہدایت کا ایک مثال استعمال: htmlcopy کوڈ <a routerlink=\"/dashboard \"ہدف=\"_blank\"اس مثال کے طور پر ، \"اوپن ڈیش بورڈ\" لنک پر کلک کرنے سے /ڈیش بورڈ کے راستے پر جائیں گے اور اسے ایک نئے براؤزر کے سیاق و سباق یا ٹیب میں کھولیں گے ، جیسا کہ ہدف = \"_ خالی\" پراپرٹی کے ذریعہ بیان کیا گیا ہے۔ نوٹ: روٹر لنک کی ہدف پراپرٹی مختلف ہے۔باقاعدہ HTML <a> ٹیگز میں استعمال ہونے والا ہدف وصف۔روٹر لنک میں ہدف پراپرٹی کونیی روٹ نیویگیشن کے لئے رینڈرنگ سیاق و سباق کو کنٹرول کرتی ہے ، جبکہ باقاعدگی سے HTML میں ہدف کی وصف <a> ٹیگز براؤزنگ کے سیاق و سباق کی وضاحت کرتا ہے ، جیسے _ خود ، _ بلینک ، وغیرہ۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں نیویگیشن ایرر ایونٹ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، جب کسی راستے پر جانے کی غلطی کی وجہ سے کسی راستے پر نیویگیشن ناکام ہوجاتا ہے تو نیویگیشن ایرر ایونٹ خارج ہوتا ہے۔اس کا استعمال آپ کی درخواست میں نیویگیشن کی غلطیوں کو سنبھالنے اور اس کا جواب دینے کے لئے کیا جاسکتا ہے۔یہ ہے کہ آپ کونیی روٹنگ میں نیویگیشن ایرر ایونٹ کو کس طرح استعمال کرسکتے ہیں: ضروری کلاسوں کو درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {راؤٹر ، نیوی گیشن ایرر the '@کونیی/روٹر' سے راؤٹر سروس کو اپنے جزو کے تعمیر کنندہ میں انجیکشن: ٹائپ اسکرپٹ کوپی کوڈکونکٹرکٹر (نجی روٹر: روٹر) {G ngoninit میں نیویگیشن ایر ایونٹ یا اپنے جزو کے کسی بھی مناسب لائف سائیکل ہک میں سبسکرائب کریں: ٹائپ اسکرپٹ کوپی کوڈینگونیٹ () {"
    },
    {
        "Question": "کونیی روٹنگ میں ID اور /: ID کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ،: ID اور /: ID روٹ پیرامیٹرز کی وضاحت کے لئے استعمال ہوتا ہے جو آپ کو URL کے اندر متحرک اقدار کو منتقل کرنے کی اجازت دیتا ہے۔تاہم ، دو نحو :: ID کے مابین ایک لطیف فرق ہے: یہ نحو پچھلے سلیش (\"/\") کی وضاحت کیے بغیر روٹ پیرامیٹر کی وضاحت کرتا ہے۔مثال کے طور پر ، راستہ: 'صارف/: ID' کا مطلب یہ ہے کہ راستہ فارمیٹ/صارف/{متحرک ویلیو} کے ساتھ کسی URL کی توقع کرتا ہے۔روٹ کے راستے میں ID کا حصہ کسی بھی قیمت سے مماثل ہوگا"
    },
    {
        "Question": "کونیی روٹنگ میں رشتہ دار راستوں کے ساتھ آپ روٹر۔ نیویگیٹ () طریقہ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، روٹر۔ نیویگیٹ () کا طریقہ کسی مخصوص راستے پر پروگرام کے مطابق تشریف لے جانے کے لئے استعمال ہوتا ہے۔موجودہ راستے کی بنیاد پر تشریف لے جانے کے لئے روٹر۔ نیویگیٹ () کے طریقہ کار کے ساتھ متعلقہ راستوں کا استعمال کیا جاسکتا ہے۔یہاں آپ روٹر کے ساتھ رشتہ دار راستوں کا استعمال کیسے کرسکتے ہیں۔ نیویگیٹ () طریقہ: ضروری کلاسوں کو درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {راؤٹر 'سے'@کونیی/روٹر 'سے راؤٹر سروس کو اپنے جزو کے کنسٹرکٹر میں انجیکشن کریں: ٹائپ اسکرپٹ کوپی کوڈکونکٹرکٹر (نجی روٹر: روٹر: روٹر) {موجودہ راستے کی بنیاد پر کسی خاص راستے پر تشریف لے جانے کے لئے اپنے کوڈ میں کسی رشتہ دار راستے کے ساتھ نیویگیٹ () کا طریقہ استعمال کریں۔متعلقہ راستوں کی وضاحت کی جاسکتی ہے"
    },
    {
        "Question": "کونیی روٹنگ میں مقام کی خدمت کا مقصد کیا ہے؟",
        "Answer": "کونیی میں مقام کی خدمت براؤزر کے یو آر ایل تک رسائی فراہم کرتی ہے۔یہ براؤزر کے ایڈریس بار میں یو آر ایل کی نمائندگی کرتا ہے اور آپ کو پروگرام کے ساتھ اس کے ساتھ بات چیت کرنے کی اجازت دیتا ہے۔مقام کی خدمت بنیادی طور پر کونیی روٹنگ میں درج ذیل مقاصد کے لئے استعمال کی جاتی ہے: براؤزر کے یو آر ایل کو تبدیل کرنا: مقام کی خدمت آپ کو براؤزر کے یو آر ایل پروگرام کو تبدیل کرنے کی اجازت دیتی ہے۔آپ کسی مخصوص URL پر تشریف لے جانے یا براؤزر کی تاریخ کی نیویگیشن کو متحرک کرنے کے لئے لوکیشن.گو () کا طریقہ استعمال کرسکتے ہیں۔مثال کے طور پر: ٹائپ اسکرپٹ کوپی کوڈیم پورٹ {مقام} سے '@کونیی/عام' ؛ کنسٹرکٹر (نجی مقام: مقام: مقام) {} نیویگیٹیٹو (یو آر ایل: سٹرنگ) {this.location.go (url) ؛}}}"
    },
    {
        "Question": "کونیی روٹنگ میں استفسار پیرامیٹرز کے ساتھ آپ روٹر ڈاٹ نیویگیٹ بائورل () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، روٹر.نویگیٹ بائورل () کا طریقہ ایک مخصوص یو آر ایل پر پروگرام کے مطابق تشریف لے جانے کے لئے استعمال ہوتا ہے۔یہ آپ کو اضافی ڈیٹا یا فلٹرنگ کے مقاصد کے لئے یو آر ایل کے ساتھ استفسار پیرامیٹرز کے ساتھ ساتھ پاس کرنے کی اجازت دیتا ہے۔یہ ہے کہ آپ کس طرح استفسار پیرامیٹرز کے ساتھ راؤٹر.نویگیٹ بائورل () کا طریقہ استعمال کرسکتے ہیں: ضروری کلاسوں کو درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {راؤٹر} سے '@کونیی/روٹر' ؛ روٹر سروس کو اپنے جزو کے کنسٹرکٹر میں انجیکشن کریں: ٹائپ سکریپٹ کوپی کوڈکونسٹرکٹر (نجی روٹر: راؤٹر) {} کسی مخصوص پر تشریف لے جانے کے لئے نیویگیٹ بائورل () کا طریقہ استعمال کریں"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر.ایونٹس اور روٹر۔ ایوینٹس۔ سبسکرائب () میں کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، روٹر۔ پراپرٹی اور روٹر۔ ایوینٹس۔ سبسکرائب () طریقہ دونوں روٹر کے ذریعہ خارج ہونے والے واقعات کو سننے کے لئے استعمال ہوتے ہیں۔تاہم ، وہ ان کے نفاذ اور استعمال میں مختلف ہیں۔.آپ آپریٹرز جیسے فلٹر ، نقشہ ، سبسکرائب ، وغیرہ کو روٹر پر استعمال کرسکتے ہیں۔ مخصوص واقعات کو سنبھالنے یا خارج ہونے والی اقدار کو تبدیل کرنے کے لئے پراپرٹی کا تعین کریں۔، نیویگیشن کینسل ، نیویگیشن ایرر ، اور دیگر۔ یہ آپ کو عالمی سطح پر روٹر واقعات پر رد عمل ظاہر کرنے کی اجازت دیتا ہے ، قطع نظر اس جزو یا جگہ سے قطع نظر جہاں سبسکرپشن بنایا گیا ہے۔ روٹر کا مثال۔'؛ // ... کنسٹرکٹر (نجی روٹر: روٹر) {this.router.events. پائپ (فلٹر ((واقعہ) => واقعہ نیوی گیشن))). سبسکرائب ((واقعہ) => {// نیوی گیشن ایونٹ کو ہینڈل کریں}) ؛} router.events.subscribe () طریقہ: router.events.subscribe () طریقہ کو واضح طور پر روٹر کو سبسکرائب کرنے کے لئے استعمال کیا جاتا ہے۔سبسکرپشن کال بیک فنکشن کے اندر انفرادی طور پر مخصوص واقعات کو سنبھال سکتا ہے۔ یہ آپ کو روٹر کے واقعات کو کب اور کہاں سننا ہے اس پر زیادہ کنٹرول فراہم کرتا ہے ، کیوں کہ آپ واضح طور پر یہ منتخب کرتے ہیں کہ سبسکرپشن کہاں رکھنا ہے۔ جب راؤٹر کو سبسکرائب کرتے ہیں تو ، اجزاء جب ان سبسکرائب کرنا ضروری ہے۔یا سننے والے کو میموری لیک سے بچنے کے لئے تباہ کردیا جاتا ہے۔راؤٹر: روٹر) {this.routersubsction = this.router.events .subscribe ((واقعہ) => {اگر (واقعہ مثال کے طور پر نیویگیشن اینڈ) {// نیوی گیشن ایونٹ کو ہینڈل کریں}})} ngondestroy () {this.routersubsscribt.unsubscrib ()) ؛} اس مثال کے طور پر ، روٹر.ایونس.سوبسکرائب () طریقہ استعمال کیا جاتا ہے روٹر واقعات کو سبسکرائب کرنے اور سبسکرپشن کے اندر نیوی گیشن ایونٹ کو سنبھالنے کے لئے استعمال کیا جاتا ہے۔ خلاصہ۔یہ ہے کہ سابقہ راؤٹر واقعات کا ایک عالمی مشاہدہ کرنے والا سلسلہ فراہم کرتا ہے جس تک پوری درخواست میں رسائی حاصل کی جاسکتی ہے ، جبکہ مؤخر الذکر آپ کو واضح طور پر مشاہدہ کرنے والے کو سبسکرائب کرنے اور سبسکرپشن کے اندر مخصوص واقعات کو سنبھالنے کی اجازت دیتا ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں راؤٹیرسیسٹریٹی انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، راؤٹیرسسٹریجی انٹرفیس روٹ کے اجزاء کے دوبارہ استعمال کے طرز عمل کو کنٹرول کرنے کے لئے استعمال ہوتا ہے۔یہ ایسے طریقے مہیا کرتا ہے جو آپ کو اپنی مرضی کے مطابق بنانے کی اجازت دیتا ہے جب راستوں کے مابین تشریف لے جاتے وقت کونیی کو کس طرح ہینڈل کرتے ہیں۔راؤٹیریسیسٹریٹی انٹرفیس کو نافذ کرکے ، آپ اپنی درخواست کی ضروریات کی بنیاد پر روٹ کے اجزاء کو دوبارہ استعمال کرنے یا دوبارہ بنانے کے لئے اپنی حکمت عملی کی وضاحت کرسکتے ہیں۔ راؤٹیریسیسٹریٹی انٹرفیس کا استعمال کرنے کے لئے ، ان اقدامات پر عمل کریں: ایک کسٹم روٹ کو دوبارہ استعمال کریں حکمت عملی کی کلاس بنائیں جو راؤٹریسیسٹریٹی انٹرفیس کو نافذ کرتی ہے۔یہ کلاس جزو کے دوبارہ استعمال کے ل the منطق کی وضاحت کرے گی۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {راؤٹیریسسٹریجی ، ایکٹیویٹیڈ راؤسٹنپ شاٹ ، ڈیکٹ ڈیروٹ ہینڈل} سے '"
    },
    {
        "Question": "کونیی روٹنگ میں کینیکٹیویٹیکلڈ گارڈ کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، کینیکٹیویٹیچیلڈ گارڈ ایک انٹرفیس ہے جسے کسی گارڈ کے ذریعہ اس پر قابو پانے کے لئے نافذ کیا جاسکتا ہے کہ آیا بچوں کے راستے چالو ہوسکتے ہیں یا نہیں۔یہ ایک طریقہ کار فراہم کرتا ہے"
    },
    {
        "Question": "کونیی روٹنگ میں جزو مثال کے ساتھ آپ کینڈی ایکٹیویٹیگاڈارڈ انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، کینڈی ایکٹیویٹیگاڈارڈ انٹرفیس کو کنٹرول کرنے کے لئے استعمال کیا جاتا ہے کہ آیا کسی جزو کو غیر فعال کیا جاسکتا ہے یا نہیں۔یہ کسی جزو سے دور ہونے کی اجازت دینے سے پہلے تصدیق کے ل ask پوچھنے یا کچھ چیکوں کو انجام دینے کے لئے ایک طریقہ کار مہیا کرتا ہے۔ اجزاء کی مثال کے ساتھ کینڈیکٹیویٹریج انٹرفیس کا استعمال کرنے کے ل these ، ان اقدامات پر عمل کریں: ایک گارڈ کلاس بنائیں جو کینڈی ایکٹیوٹیو گارڈ انٹرفیس کو نافذ کرے۔اس کلاس میں یہ منطق پر مشتمل ہوگا کہ آیا جزو کو غیر فعال کیا جاسکتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر اور روٹرموڈول میں کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، روٹر اور روٹر موڈل مختلف کردار ادا کرتے ہیں اور مختلف مقاصد کی خدمت کرتے ہیں: روٹر: روٹر ایک ایسی خدمت ہے جو کونییولر کے @کونیی/روٹر پیکیج کے ذریعہ فراہم کی گئی ہے۔یہ آپ کی درخواست میں نیویگیشن اور روٹنگ فعالیت کا انتظام کرنے کا ذمہ دار ہے۔روٹر آپ کو مختلف راستوں کے مابین تشریف لے جانے ، نیویگیشن ایونٹس ، رسائی کے روٹ پیرامیٹرز ، استفسار پیرامیٹرز ، اور روٹ ڈیٹا کو سننے اور نیویگیشن سے متعلق دیگر کاموں کو پروگرام کے مطابق انجام دینے کی اجازت دیتا ہے۔آپ اپنے اجزاء میں روٹر سروس انجیکشن کرسکتے ہیں"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایکٹیویٹیڈ روٹ۔ کووریپرامس پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، ایکٹیویٹ روٹ کسی راستے کے بارے میں معلومات تک رسائی فراہم کرتا ہے ، جس میں راستے سے وابستہ استفسار پیرامیٹرز بھی شامل ہیں۔ایکٹیویٹیڈ راؤٹ۔ کوئیرپارامس پراپرٹی آپ کو موجودہ روٹ سے استفسار کے پیرامیٹرز تک رسائی اور بازیافت کرنے کی اجازت دیتی ہے۔ یہاں آپ ایکٹیویٹیڈ راؤٹ کو استعمال کرسکتے ہیں۔ کوئری پیرام پراپرٹی: اپنے جزو میں مطلوبہ ماڈیول درآمد کریں: ٹائپ اسکرپٹ کوڈیمپورٹ {ایکٹیویٹیٹ روٹ} سے '@انجولر/روٹر' سے 'your اپنے اجزاء کے کنسٹرکٹر میں ایکٹیویٹیڈ راؤٹ کو انجیکشن کریں: ٹائپ اسکرپٹ کوپی کوڈکونٹرکٹر (نجی روٹ: ایکٹیویٹیڈ روٹ) {} اپنے جزو کے کوڈ میں ایکٹیویٹ روٹ کی کوئری پیرامس پراپرٹی تک رسائی حاصل کریں۔آپ یہ بات Ngoninit Lifecycle ہک یا کسی اور مناسب طریقہ میں کرسکتے ہیں: ٹائپ اسکرپٹ کوپی کوڈینگونیٹ () {this.route.queryparams.subscribe (پیرامس => {// استفسار پیرامیٹرز کو پیرام 1 = پیرامس ['پیرام 1'] ؛= پیرامس ['پیرام 2'] ؛ // استفسار پیرامیٹرز کنسول.لاگ (پیرام 1) ؛ کنسول.لوگ (پیرام 2) ؛}) ؛} کوئری پیرامس سوسکرائب () کے طریقہ کار کے ساتھ کوئی ضروری کام انجام دیں۔پیرامیٹر آبجیکٹ پیرامس کا استعمال کرتے ہوئے پیرامیٹرز۔پیرامس آبجیکٹ ایک جاوا اسکرپٹ آبجیکٹ ہے جس میں کلیدی قدر کے جوڑے ہوتے ہیں جو استفسار کے پیرامیٹرز کی نمائندگی کرتے ہیں۔ آپ پیرامیٹر کے نام کو کلید کے طور پر استعمال کرتے ہوئے ایک مخصوص استفسار پیرامیٹر تک رسائی حاصل کرسکتے ہیں ، جیسے ، پیرامس ['پیرام 1']آپ کی درخواست کی ضروریات پر مبنی استفسار پیرامیٹرز۔ ایکٹیویٹیڈ راؤٹ۔ کوئریپرامس پراپرٹی ایک قابل مشاہدہ ہے ، لہذا سبسکرائب () کے طریقہ کار کا استعمال آپ کو استفسار کے پیرامیٹرز میں تبدیلیوں پر رد عمل ظاہر کرنے کی اجازت دیتا ہے جب راستہ تبدیل ہوتا ہے۔-route؟ param1 = value1 & param2 = value2 ، مذکورہ بالا کوڈ پیرام 1 اور پیرام 2 کی اقدار کو بالترتیب 'ویلیو 1' اور 'ویلیو 2' کے طور پر لاگ ان کرے گا۔آپ کی کونیی ایپلی کیشن میں ایک مخصوص راستے کے ساتھ۔"
    },
    {
        "Question": "کونیی روٹنگ میں لوکیشن اسٹریٹی انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، مقامات کی تعمیر کا انٹرفیس براؤزر کے یو آر ایل اور تاریخ کو سنبھالنے کے لئے حکمت عملی فراہم کرنے کے لئے استعمال ہوتا ہے۔یہ یو آر ایل میں ہیرا پھیری کرنے ، موجودہ یو آر ایل ریاست کو پڑھنے ، اور براؤزر کی تاریخ کے ساتھ بات چیت کرنے کے طریقوں کی وضاحت کرتا ہے۔ مقامات کی تعمیراتی انٹرفیس کا بنیادی مقصد یو آر ایل مینجمنٹ کی بنیادی نفاذ کی تفصیلات کو خلاصہ کرنا ہے اور مختلف حکمت عملیوں کو استعمال کرنے کی اجازت دینا ہے۔کونیی مقامات کی تعمیراتی انٹرفیس کے مختلف نفاذ فراہم کرتا ہے ، جیسے پاتھ لوکیشن اسٹریٹی اور ہیشلوکیشن اسٹریٹی ، جو یو آر ایل مینجمنٹ کو مختلف نقطہ نظر کا استعمال کرتے ہوئے سنبھالتے ہیں۔ مقامات کی تعمیراتی انٹرفیس کا استعمال کرتے ہوئے ، آپ کنٹرول کرسکتے ہیں کہ کونیی براؤزر کے یو آر ایل اور تاریخ کو کس طرح سنبھالتا ہے ، اور اپنی پر مبنی مناسب حکمت عملی کا انتخاب کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں آپ اسکرولپوزیشن ریسٹوریشن آپشن کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، راستوں کے مابین تشریف لاتے وقت اسکرولنگ سلوک کو کنٹرول کرنے کے لئے اسکرولپوزیشن ریسٹوریشن آپشن کا استعمال کیا جاتا ہے۔اس سے یہ طے ہوتا ہے کہ آیا براؤزر کو صفحہ کے اوپری حصے میں سکرول کرنا چاہئے یا جب کسی روٹ میں تبدیلی آتی ہے تو پچھلی اسکرول پوزیشن کو بحال کرنا چاہئے۔ اسکرولپوزیشن ریسٹوریشن آپشن کو استعمال کرنے کے ل you ، آپ کو روٹر موڈیول.فوروٹ () طریقہ کار کا استعمال کرتے ہوئے اپنے ایپلی کیشن کے روٹنگ ماڈیول میں تشکیل دینے کی ضرورت ہے۔یہاں ایک مثال ہے: ضروری انحصار درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ngmodule 'سے'@کونیی/کور '؛ درآمد {راؤٹرڈول ، روٹس ، اسکرول} سے'@کونیی/روٹر 'سے ؛"
    },
    {
        "Question": "\"[روٹر لنک] =\" \"['/پاتھ' ، {پیرم: ویلیو}]\" \"اور [روٹر لنک] =\" \"['/پاتھ' ، پیرم ، ویلیو]\" \"کے درمیان کیا فرق ہے؟\"",
        "Answer": "[روٹر لنک] = \"'/پاتھ' ، {پیرم: ویلیو}\" اور [روٹر لنک] = \"'/پاتھ' ، پیرم ، ویلیو\" کے درمیان فرق اس بات میں ہے کہ وہ کونیی روٹنگ کے راستے پر پیرامیٹرز کیسے گزرتے ہیں۔ [روٹر لنک]= \"'/پاتھ' ، {پیرم: ویلیو}\": اس نحو میں ، پیرامیٹرز کو کسی شے کے طور پر منظور کیا جاتا ہے۔پیرام پیرامیٹر کا نام ہے ، اور قدر وہ قدر ہے جس کو آپ گزرنا چاہتے ہیں۔یہ نحو"
    },
    {
        "Question": "آپ کونیی روٹنگ میں استفسار پیرام شینڈلنگ پراپرٹی کے ساتھ روٹر۔ نیویگیٹ () طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، روٹر۔ نیویگیٹ () طریقہ کار کو پروگرام کے ساتھ کسی مختلف راستے پر جانے کے لئے استعمال کیا جاتا ہے۔راؤٹر کی کوئری پیرامشینڈلنگ پراپرٹی۔ نیویگیٹ () طریقہ کار کو کنٹرول کرنے کے لئے استعمال کیا جاتا ہے کہ نیویگیشن کے دوران استفسار کے پیرامیٹرز کو کس طرح سنبھالا جاتا ہے۔ استفسار پیرام شینڈلنگ پراپرٹی میں مندرجہ ذیل اقدار ہوسکتی ہیں: 'انضمام': یہ قدر نئے استفسار کے پیرامیٹرز کو موجودہ استفسار کے پیرامیٹرز کے ساتھ ضم کرتی ہے۔اگر کوئی استفسار پیرامیٹر پہلے ہی موجود ہے تو ، اسے نئی قیمت کے ساتھ اوور رائٹ کیا جائے گا۔اگر یہ موجود نہیں ہے تو ، اس کو شامل کیا جائے گا۔ 'پریسرو': یہ قدر"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر پرلوڈر سروس کا مقصد کیا ہے؟",
        "Answer": "میں الجھن کے لئے معذرت خواہ ہوں ، لیکن ستمبر 2021 میں میرے علم کے کٹ آف کے طور پر ، کونیی روٹنگ میں روٹر پرلوڈر نامی کوئی بلٹ ان سروس نہیں ہے۔لہذا ، میں اس کے مقصد یا استعمال کے بارے میں مخصوص معلومات فراہم نہیں کرسکتا۔ تاہم ، میں کونیی روٹنگ میں پری لوڈنگ کے تصور کے بارے میں عمومی معلومات فراہم کرسکتا ہوں۔پری لوڈنگ ایک ایسی تکنیک ہے جو پس منظر میں سست بوجھ والے ماڈیولز کو لوڈ کرنے کے لئے استعمال کی جاتی ہے ، جس سے کونیی ایپلی کیشن کی مجموعی کارکردگی اور صارف کے تجربے کو بہتر بنایا جاتا ہے۔ ڈیفالٹ کے ذریعہ ، جب صارف کسی ایسے راستے پر جاتا ہے جب ان کی ضرورت ہوتی ہے۔اس سے تاخیر کا تعارف ہوسکتا ہے کیونکہ ماڈیول کو پیش کرنے سے پہلے سرور سے لانے کی ضرورت ہے۔پری لوڈنگ آپ کو ابتدائی درخواست کے بوجھ کے دوران یا جب صارف ایپلی کیشن کے ساتھ بات چیت کر رہا ہے تو ان ماڈیولز کو پہلے سے لوڈ کرنے کی اجازت دیتا ہے ، تاکہ ضرورت پڑنے پر وہ آسانی سے دستیاب ہوں۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینیکٹیویٹیکلڈ انٹرفیس کا استعمال کیسے کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، کینیکٹیویٹیچیلڈ انٹرفیس کو روٹ گارڈ کو نافذ کرنے کے لئے استعمال کیا جاتا ہے جو کنٹرول کرتا ہے کہ آیا بچوں کے راستے چالو ہوسکتے ہیں یا نہیں۔یہ گارڈ انٹرفیس آپ کو اپنی مرضی کے مطابق منطق کی وضاحت کرنے کی اجازت دیتا ہے تاکہ اس بات کا تعین کیا جاسکے کہ آیا بچوں کے راستوں کو کچھ مخصوص حالتوں کی بنیاد پر چالو کیا جانا چاہئے۔ کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینیکٹیویٹیکلڈ انٹرفیس کا استعمال کرنے کے ل you ، آپ کو گارڈ کلاس میں انٹرفیس کو نافذ کرنے کی ضرورت ہے۔آپ کے روٹ کنفیگریشن کی کینیکٹیو ٹیچلڈ پراپرٹی میں گارڈ مثال۔"
    },
    {
        "Question": "کونیی روٹنگ میں اسکیپلوکیشن چینج اور اس کی جگہ لینے کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، نیویگیشن کے دوران براؤزر کے یو آر ایل طرز عمل میں ترمیم کرنے کے لئے روٹر ڈاٹ نیویگیٹ () کے ساتھ مل کر اسکیپلوکیشن چینج اور تبدیل کرنے والی دونوں خصوصیات کا استعمال کیا جاتا ہے۔تاہم ، وہ مختلف مقاصد کی تکمیل کرتے ہیں: اسکیپلوکیشن چینج: جب `سچ پر سیٹ کیا جاتا ہے"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں HTTPClientTestingModule کا مقصد کیا ہے؟",
        "Answer": "HTTPClientTestingModule ایک ماڈیول ہے جو کونیی ٹیسٹنگ فریم ورک کے ذریعہ فراہم کیا جاتا ہے جو خاص طور پر کوڈ کی یونٹ ٹیسٹنگ کی سہولت کے لئے ڈیزائن کیا گیا ہے جو HTTPClient سروس کا استعمال کرتا ہے۔یہ آپ کو HTTP کی درخواستوں اور ردعمل کا مذاق اڑانے کی اجازت دیتا ہے ، جو آپ کے کونیی اجزاء اور خدمات کی جانچ کے لئے ایک کنٹرول ماحول فراہم کرتا ہے جو HTTP مواصلات پر انحصار کرتے ہیں۔ HTTPClientTestingModule کا بنیادی مقصد یہ ہے کہ اصل HTTP پسدید کو مذاق کے نفاذ کے ساتھ تبدیل کیا جائے۔اس سے آپ کو HTTP کی درخواستوں کی نقالی کرنے اور متوقع ردعمل کی وضاحت کرنے کی اجازت ملتی ہے جس میں حقیقت میں حقیقی نیٹ ورک کال کیے بغیر۔"
    },
    {
        "Question": "آپ کونیی میں یونٹ ٹیسٹنگ کے لئے مذاق کی خدمت کیسے بناتے ہیں؟",
        "Answer": "کونیی میں یونٹ ٹیسٹنگ کے لئے ایک فرضی خدمت بنانے میں ایک کلاس بنانا شامل ہے جو اصل خدمت کی طرح ہی طریقوں اور خصوصیات کو نافذ کرتا ہے لیکن مذاق کے نفاذ یا ردعمل فراہم کرتا ہے۔اس سے آپ کو امتحان کے تحت کوڈ کو الگ تھلگ کرنے اور جانچ کے دوران خدمت کے طرز عمل کو کنٹرول کرنے کی سہولت ملتی ہے۔یہاں ایک مثال ہے کہ آپ کونیی میں مذاق کی خدمت کیسے تشکیل دے سکتے ہیں: اپنی مذاق کی خدمت کے لئے ایک نئی فائل بنائیں ، جیسے میری خدمت۔ ماک ڈاٹ ٹی ایس۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ٹیسٹ بی ای ڈی۔ کونسفائگوریٹسٹنگ ماڈل کے طریقہ کار کا مقصد کیا ہے؟",
        "Answer": "testbed.configuretestingmodule () کا طریقہ کونیی کے ٹیسٹنگ انفراسٹرکچر کا ایک اہم حصہ ہے۔اس کا استعمال ایک ٹیسٹنگ ماڈیول تشکیل دینے اور بنانے کے لئے کیا جاتا ہے جو یونٹ کی جانچ کونیی اجزاء ، ہدایات ، خدمات اور آپ کی درخواست کے دیگر اکائیوں کے لئے ماحول کو مرتب کرتا ہے۔یہ طریقہ آپ کو آپ کے ٹیسٹ کے ل required انحصار ، فراہم کنندگان اور اعلامیہ کی وضاحت کرنے کی اجازت دیتا ہے۔ یہاں ٹیسٹ بیڈ کے مقصد اور فعالیت کا ایک جائزہ ہے۔اس تصور کی نقالی کرتا ہے۔testbed.configuretestingmodule () کا طریقہ ٹیسٹنگ ماڈیول بنانے کے لئے ذمہ دار ہے جہاں آپ اپنے یونٹ ٹیسٹ کے لئے ضروری ترتیبات تشکیل دے سکتے ہیں۔اس میں فراہم کنندگان ، درآمدات ، اعلامیہ ، اور آپ کے ٹیسٹ کے لئے درکار دیگر ماڈیولز کی وضاحت شامل ہے۔ انحصار انجیکشن سیٹ اپ: کونیی انحصار انجیکشن (DI) پر بہت زیادہ انحصار کرتا ہے"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں اجزاء فکسچر کلاس کس طرح استعمال کرتے ہیں؟",
        "Answer": "اجزاء کی تشکیل کی کلاس ہے"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں جاسوس اور اسٹب میں کیا فرق ہے؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، دونوں جاسوس اور اسٹبس عام طور پر انحصار یا بیرونی انحصار کی تقلید کے لئے ٹیسٹ ڈبلز استعمال کیے جاتے ہیں۔اگرچہ وہ اسی طرح کے مقاصد کو پورا کرتے ہیں ، ان کے طرز عمل میں اختلافات موجود ہیں اور ان کا استعمال کس طرح ہوتا ہے۔کونیی یونٹ ٹیسٹنگ میں جاسوسوں اور اسٹبوں کا موازنہ یہاں ہے: جاسوس: مقصد: جاسوسوں کا استعمال کسی فنکشن یا طریقہ کار کے طرز عمل کو مشاہدہ کرنے اور ٹریک کرنے کے لئے کیا جاتا ہے۔"
    },
    {
        "Question": "آپ کونیی ٹیسٹ چلانے کے لئے کرما کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی پروجیکٹ میں ٹیسٹ چلانے کے لئے کرما کو استعمال کرنے کے ل you ، آپ کو ان اقدامات پر عمل کرنے کی ضرورت ہے: اپنے پروجیکٹ کی روٹ ڈائرکٹری میں مندرجہ ذیل کمانڈ چلا کر ڈویلپمنٹ انحصار کے طور پر کرما انسٹال کریں: بشوپی کوڈن پی ایم کرما انسٹال کریں۔کچھ عام طور پر استعمال ہونے والے پلگ انز میں جیسمین ٹیسٹنگ فریم ورک کے لئے کرما-جیسمین ، گوگل کروم میں ٹیسٹ چلانے کے لئے کرما-کروم لاؤنچر ، اور کوڈ کوریج رپورٹس تیار کرنے کے لئے کرما کوریج شامل ہیں۔مندرجہ ذیل کمانڈ کو چلا کر ان پلگ ان کو انسٹال کریں: بشکوپی کوڈن پی ایم انسٹال کرما-جیسمین کرما-کروم لاکر کرما کوریج-سیو-ڈیوکونفائگور کرما اپنے پروجیکٹ کی روٹ ڈائرکٹری میں کرما.کونف ڈاٹ جے ایس فائل بنا کر۔اس فائل میں کرما کے لئے ترتیب کی ترتیبات ہیں۔آپ چلانے کے ذریعہ ڈیفالٹ کنفیگریشن فائل تیار کرنے کے لئے کرما سی ایل آئی کا استعمال کرسکتے ہیں: بشکپی کوڈن پی ایکس کرما انیش کمانڈ آپ کو کنفیگریشن فائل کے لئے اختیارات منتخب کرنے کا اشارہ کرے گی ، جیسے ٹیسٹنگ فریم ورک ، براؤزر ، فائل کے نمونے ، اور رپورٹرز۔اپنے پروجیکٹ کی ضروریات کے مطابق اختیارات کا انتخاب کریں۔ جیسمین جیسے ٹیسٹنگ فریم ورک کا استعمال کرتے ہوئے اپنے ٹیسٹ لکھیں۔اپنی ٹیسٹ فائلیں .spec.ts توسیع کے ساتھ بنائیں ، مثال کے طور پر ، مثال کے طور پر. compentent.spec.ts۔اپنی ٹیسٹ فائلوں کو ایک ہی ڈائرکٹری میں جزو کی طرح یا ایک علیحدہ اسپیک فولڈر میں رکھیں۔ جیسمین کا استعمال کرتے ہوئے کونیی جزو کے لئے ایک سادہ ٹیسٹ کی ایک مثال: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ٹیسٹ بیڈ ، اجزاء فکسچر} سے '@کونیی/کور/ٹیسٹنگ' ؛ درآمد امپورٹ کریں{explecompiention './example.component' ؛ describe('examplecompient '، () => {جزو: مثال کے طور پر: مثال کے طور پر: اجزاء کی تشکیل <مثال کے طور پر << explecompointed> ؛ پہلے (async () => test ٹیسٹ بیڈ۔اعلامیہ: [مثال کے طور پر]}). کمپیلکمپوننٹس () ؛}) سے پہلے (() => {فکسچر = ٹیسٹ بیڈ.کریٹکومیپینٹ (مثال کے طور پر) ؛ اجزاء = فکسچر ڈاٹ کامپینٹین اسٹینس ؛ فکسچر.ڈیٹٹچینجس () ؛ یہ (') ؛جزو بنائیں '، () => {توقع (جزو)توقع کریں (ٹائٹل۔ ٹیکسٹ کونٹینٹ)ٹیسٹوں کو عملی جامہ پہنانے کے لئے مندرجہ ذیل کمانڈ کا استعمال کریں: بشکپی کوڈن پی ایکس کرما اسٹارٹ یہ کمانڈ کرما ٹیسٹ رنر شروع کرے گی اور تشکیل شدہ براؤزرز میں اپنے ٹیسٹوں کو انجام دے گی۔ٹیسٹ کے نتائج ٹرمینل یا کمانڈ پرامپٹ میں دکھائے جائیں گے۔ آپ این پی ایم یا سوت کا استعمال کرتے ہوئے ٹیسٹ چلانے کے ل your اپنے پیکیج میں اسکرپٹس کو بھی تشکیل دے سکتے ہیں۔مثال کے طور پر: JSONCOPY کوڈ \"اسکرپٹس\": {\"ٹیسٹ\": \"کرما اسٹارٹ\" the اس ترتیب کے ساتھ ، آپ ٹرمینل میں NPM ٹیسٹ یا سوت ٹیسٹ چلا کر اپنے ٹیسٹ چلا سکتے ہیں۔ یہ ہے!اب آپ اپنے کونیی پروجیکٹ میں ٹیسٹ چلانے کے لئے کرما کا استعمال کرسکتے ہیں۔کرما خود بخود فائل کی تبدیلیوں پر نگاہ ڈالے گا ، آپ کے کوڈ کو دوبارہ تشکیل دے گا ، اور جب بھی آپ فائل کو محفوظ کرتے ہیں تو ٹیسٹ دوبارہ شروع کردیں گے۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں جیسمین۔ کسی بھی طریقہ کا مقصد کیا ہے؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، جیسمین ڈاٹ () کا طریقہ جیسمین ٹیسٹنگ فریم ورک کے ذریعہ فراہم کیا جاتا ہے۔یہ ایک مماثل فنکشن ہے جو یہ بتانے کے لئے استعمال ہوتا ہے کہ اصل قدر کسی خاص قسم کی ہے"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں غیر متزلزل کوڈ کی جانچ کیسے کرتے ہیں؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، آپ کو اکثر ایسے منظرناموں کا سامنا کرنا پڑتا ہے جہاں آپ کو اجزاء یا خدمات کے اندر غیر متزلزل کوڈ کی جانچ کرنے کی ضرورت ہوتی ہے ، جیسے اسینکرونس ایچ ٹی ٹی پی کی درخواستیں ، ٹائمر ، یا غیر متزلزل آپریشن۔کونیی غیر متزلزل کوڈ کو مؤثر طریقے سے سنبھالنے اور جانچنے کے ل several کئی میکانزم مہیا کرتا ہے۔کونیی یونٹ ٹیسٹوں میں غیر متزلزل کوڈ کی جانچ کے لئے یہاں کچھ نقطہ نظر ہیں: ASYNC اور انتظار کریں: آپ ASYNC استعمال کرسکتے ہیں اور غیر متزلزل کوڈ کو سنبھالنے کے لئے اپنے ٹیسٹ کے افعال میں مطلوبہ الفاظ کا انتظار کرسکتے ہیں۔ٹیسٹ فنکشن کو ASYNC کے طور پر نشان زد کرکے ، آپ ٹیسٹ کے دعووں کے ساتھ آگے بڑھنے سے پہلے غیر سنجیدہ کارروائیوں کے مکمل ہونے کا انتظار کرنے کے لئے انتظار کرسکتے ہیں۔یہاں ایک مثال ہے: ٹائپ اسکرپٹ کوپی کوڈیٹ ('چاہئے"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں اتلی ٹیسٹ اور گہرے ٹیسٹ میں کیا فرق ہے؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، اصطلاحات \"اتلی جانچ\" اور \"گہری ٹیسٹ\" جانچ کے اجزاء اور ان کے انحصار کے ل different مختلف نقطہ نظر کا حوالہ دیتے ہیں۔اتلی ٹیسٹوں اور گہرے ٹیسٹوں کے مابین اختلافات کی وضاحت یہاں ہے: اتلی امتحان: فوکس: اتلی ٹیسٹ تنہائی میں کسی جزو کی جانچ پر توجہ مرکوز کرتے ہیں ، جبکہ ٹیسٹ کے تحت جزو کی انحصار کو کم سے کم کرتے ہیں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں آپ Async () اور Fakeasync () طریقوں کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، async () اور fakeasync () طریقوں کا استعمال غیر متزلزل کوڈ کو سنبھالنے اور غیر متزلزل کارروائیوں کی درست جانچ کو یقینی بنانے کے لئے کیا جاتا ہے۔یہ طریقے کونیی ٹیسٹنگ فریم ورک کے ذریعہ فراہم کیے جاتے ہیں اور غیر متزلزل سلوک سے نمٹنے کے لئے مختلف نقطہ نظر پیش کرتے ہیں۔یہ ہے کہ آپ اپنے کونیی یونٹ ٹیسٹوں میں Async () اور Fakeasync () کو کس طرح استعمال کرسکتے ہیں: async (): async () طریقہ استعمال کیا جاتا ہے جب"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ٹک () کے طریقہ کار کا مقصد کیا ہے؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، ٹک () کا طریقہ وقت گزرنے اور غیر متزلزل کارروائیوں کو کنٹرول کرنے کے لئے فاکایسینک () فنکشن کے ساتھ مل کر استعمال کیا جاتا ہے۔ٹک () کا طریقہ آپ کو فاکایسینک () بلاک کے اندر ورچوئل گھڑی کو آگے بڑھانے اور زیر التواء غیر متزلزل کاموں پر عمل درآمد کو متحرک کرنے کی اجازت دیتا ہے۔ٹک () کے طریقہ کار کا مقصد اور استعمال یہاں ہے: ٹک کا مقصد (): ٹک () کے طریقہ کار کا بنیادی مقصد جانچ کے دوران ہم آہنگی کی طرح وقت گزرنے کی تقلید کرنا ہے۔یہ آپ کو متضاد کارروائیوں ، جیسے ٹائمر ، وقفوں ، یا ٹائم آؤٹ کے وقت پر قابو پانے کی اجازت دیتا ہے ، اور اس بات کو یقینی بناتا ہے کہ وہ مطلوبہ وقت پر عمل میں لایا جائے۔ ٹک () کے استعمال: ٹک () طریقہ ہے۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں HTTP کی درخواستوں کا مذاق کیسے کرتے ہیں؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، آپ HTTPClientTestingModule اور HTTPTESTINGCONTROLLER کونیولر کے ٹیسٹنگ فریم ورک کے ذریعہ فراہم کردہ HTTPClientTestingModule اور HTTPTESTINGCONTROLLER کا استعمال کرتے ہوئے HTTP درخواستوں کا مذاق اڑ سکتے ہیں۔یہ افادیت آپ کو اپنے کوڈ کے ذریعہ کی گئی HTTP درخواستوں کو روکنے اور جانچ کے مقاصد کے لئے فرضی ردعمل فراہم کرنے کی اجازت دیتی ہے۔یہ ہے کہ آپ کونیی یونٹ ٹیسٹوں میں HTTP کی درخواستوں کا مذاق اڑ سکتے ہیں: ضروری انحصار درآمد کریں: پہلے ، آپ کو اپنے ٹیسٹ فائل میں HTTPClientTestingModule اور HttptestingController درآمد کرنے کی ضرورت ہے۔'@کونیی/کور/ٹیسٹنگ' سے درآمد {ٹیسٹ بیڈ} ؛"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں testbed.inject اور testbed.get کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، ٹیسٹ بیڈ ڈاٹ اینجیکٹ اور ٹیسٹ بیڈ دونوں کو ٹیسٹ کے معاملات میں خدمات یا انحصار کی مثالوں کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔تاہم ، ان کے طرز عمل اور تجویز کردہ استعمال میں ایک لطیف فرق ہے: testbed.inject (تجویز کردہ): testbed.inject کونیی یونٹ ٹیسٹوں میں انحصار بازیافت کرنے کا تجویز کردہ طریقہ ہے کیونکہ کونیی ورژن 9.0. یہ A کو بازیافت کرنے کا ایک قسم کا طریقہ ہے۔کونیی کے ٹیسٹنگ فریم ورک کے ذریعہ فراہم کردہ انحصار انجیکشن (DI) سسٹم کا استعمال کرتے ہوئے خدمت یا انحصارانحصار کی صحیح قسم فراہم کی گئی ہے اور اسے بازیافت کیا گیا ہے۔ واپسی کی قسم ٹیسٹ بیڈ ڈاٹ اینجیکٹ کو مطلوبہ انحصار کی بنیاد پر سمجھا جاتا ہے ، جس سے دستی قسم کی کاسٹنگ کی ضرورت کو ختم کیا جاتا ہے۔ یہ انحصار کو بازیافت کرنے ، کوڈ پڑھنے کی اہلیت کو بڑھانے اور برقرار رکھنے کا ایک مستقل اور محفوظ طریقہ فراہم کرتا ہے۔. testbed.inject کا مثال کے طور پر استعمال: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {Testbed} سے '@کونیی/کور/ٹیسٹنگ' ؛ درآمد {میسروائس} سے './my.service' ؛// ... پہلے (() => {ٹیسٹ بی۔کنفیگریٹسٹنگ موڈیول ({// انحصار فراہم کریں اور ٹیسٹنگ ماڈیول فراہم کرنے والوں کو تشکیل دیں: [مائروائس]}) ؛}) ؛ یہ ('ٹیسٹ بیڈ ڈاٹ اینجیکٹ کا استعمال کرتے ہوئے میسروائس کو بازیافت کرنا چاہئے ، () => {میسروائس = ٹیسٹ بیڈ ڈاٹ اینجیکٹ (میسروائس) ؛// ٹیسٹ کی توقعات کی توقع (میسروس)وہ طریقہ جو آپ کو انحصار کی نمائندگی کرتے ہوئے انحصار کو بازیافت کرنے کی اجازت دیتا ہے۔سیفٹی اور مرتب کرنے والے چیکوں کو بطور ٹیسٹ بیڈ ڈاٹ اینجیکٹ۔ جب تک ٹیسٹ بیڈ۔ جی ای ٹی اب بھی پرانے کوڈ بیس یا منظرناموں میں استعمال کی جاسکتی ہے جہاں 9.0 سے پہلے کونیی ورژن استعمال کیے جاتے ہیں ، اس کی سفارش کی جاتی ہے کہ بہتر قسم کی حفاظت اور مستقل مزاجی کے لئے جانچ پڑتال کریں۔testbed.get: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ٹیسٹ بیڈ} سے '@کونیی/کور/ٹیسٹنگ' ؛ درآمد {میسروائس} سے './my.service' ؛/ انحصار فراہم کریں اور ٹیسٹنگ ماڈیول فراہم کرنے والوں کو تشکیل دیں: [مائروائس]}) ؛}) ؛ یہ ('ٹیسٹ بیڈ ڈاٹ گیٹ کا استعمال کرتے ہوئے میسروائس کو بازیافت کرنا چاہئے' ، () => {کانسٹ میسروائس = ٹیسٹ بیڈ (میسروائس) بطور میسروائس ؛// ٹیسٹ کی توقعات کی توقع (میسروس)یہ قسم کی حفاظت ، مرتب چیک ، اور بہتر پڑھنے کی اہلیت فراہم کرتا ہے۔testbed.get میراثی طریقہ ہے جو اب بھی تائید کی جاتی ہے لیکن قسم کی حفاظت اور مرتب کرنے والے چیکوں کی ایک ہی سطح کا فقدان ہے۔بہتر جانچ کے طریقوں کے ل test ٹیسٹ بیڈ ڈاٹ انجیکٹ میں ہجرت کرنے کی سفارش کی جاتی ہے۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں اسپائیون () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، اسپائیون () کا طریقہ کسی شے یا کلاس کے طریقہ کار پر جاسوس بنانے کے لئے استعمال ہوتا ہے۔جاسوس آپ کو طریقہ کار کی کالوں کو ٹریک کرنے ، ان کے طرز عمل پر قابو پانے اور اپنے ٹیسٹوں میں ان کے استعمال کے بارے میں دعوی کرنے کی اجازت دیتے ہیں۔یہ ہے کہ آپ کونیی یونٹ ٹیسٹنگ میں اسپائیون () کو کس طرح استعمال کرسکتے ہیں: ایک جاسوس بنائیں: جاسوس بنانے کے ل you ، آپ کو کسی شے یا طبقاتی مثال اور جس طریقہ پر آپ جاسوسی کرنا چاہتے ہیں اس کا نام درکار ہے۔آپ جاسوس بنانے اور جاسوس کے ساتھ اصل طریقہ کو تبدیل کرنے کے لئے اسپائیون () کا استعمال کرسکتے ہیں۔یہاں ایک مثال ہے:"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ایکٹیویٹر آؤٹ اسٹب کا مقصد کیا ہے؟",
        "Answer": "اصطلاح \"ایکٹیویٹر آؤٹ اسٹب\" کونیی یونٹ کی جانچ میں کسی مخصوص تصور یا افادیت کے مطابق نہیں ہے۔تاہم ، یہ ممکن ہے کہ آپ کسی کسٹم اسٹب یا موک آبجیکٹ کا حوالہ دے رہے ہو جو کونیی یونٹ ٹیسٹ میں ایکٹیویٹیڈ راؤٹ کو نقالی کرنے کے لئے استعمال کیا جاتا ہے۔ ایکٹیویٹیڈ روٹ ایک ایسی خدمت ہے جو کونیی کے ذریعہ فراہم کی گئی ہے جو موجودہ راستے کی معلومات تک رسائی فراہم کرتی ہے ، جیسے روٹ پیرامیٹرز ،سوال پیرامیٹرز ، اور روٹ ڈیٹا۔جب ایسے اجزاء کی جانچ کرتے ہو جو ایکٹیویٹ روٹ پر انحصار کرتے ہیں"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں ایکٹیویٹیڈ روٹسناپ شاٹ کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، ایکٹیویٹیڈ راؤسٹنپ شاٹ کلاس موجودہ راستے کی ایک مذاق سنیپ شاٹ بنانے اور تشکیل دینے کے لئے استعمال کی جاتی ہے۔یہ آپ کو روٹ کی حالت کی تقلید کرنے اور مخصوص روٹ پیرامیٹرز ، استفسار پیرامیٹرز ، اور جانچ کے اجزاء کے ل roat روٹ ڈیٹا فراہم کرنے کی اجازت دیتا ہے جو ایکٹیویٹیڈ روٹ پر منحصر ہیں۔ یہاں آپ کیسے کر سکتے ہیں اس کی ایک مثال ہے۔"
    },
    {
        "Question": "کونیی یونٹ کی جانچ میں پہلے اور بیفوریل کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، ٹیسٹنگ فریم ورک (جیسمین) کے ذریعہ ٹیسٹ ماحول قائم کرنے اور ضروری تیاریوں کو انجام دینے کے لئے پہلے سے پہلے اور بیفوریل دونوں لائف سائیکل ہکس ہیں۔تاہم ، ان دونوں کے مابین ایک خاص فرق ہے: پہلے: پہلے کی تقریب"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں اجزاء فکسٹوراؤٹوڈیٹیکٹ حکمت عملی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، جزو خصوصیات میں تبدیلیوں کا پتہ لگانے اور ٹیسٹوں میں ٹرگر تبدیلی کا پتہ لگانے کے لئے اجزاء فکسٹوراؤٹوڈیٹیکٹ حکمت عملی کا استعمال کیا جاتا ہے۔یہ حکمت عملی مفید ہے جب آپ اس بات کو یقینی بنانا چاہتے ہیں کہ جزو کی خصوصیات میں تبدیلیوں کا پتہ لگایا جائے اور دستی طور پر تبدیلی کا پتہ لگانے کے بغیر اس کی تشہیر کی جائے۔ کونیی یونٹ کی جانچ میں اجزاء فکسٹوراؤٹوڈیٹیکٹ حکمت عملی کا استعمال کرنے کے لئے ، ان اقدامات پر عمل کریں: ضروری انحصار درآمد کریں: اجزاء فکسٹوریٹوٹیٹ کو استعمال کرنے سے پہلے ، آپ کو درآمد کرنے کی ضرورت ہے ، درآمد کرنے کی ضرورت ہےیہ جانچ کے دیگر مطلوبہ انحصار کے ساتھ"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ngzone.runoutsideangular () طریقہ کار کا مقصد کیا ہے؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، ngzone.runoutsideangular () کا طریقہ کونیی زون سے باہر کسی فنکشن کو انجام دینے کے لئے استعمال کیا جاتا ہے۔کونیی زون ایک کونیی ایپلی کیشن کے اندر غیر متزلزل کارروائیوں کو تبدیل کرنے اور سنبھالنے کے لئے ذمہ دار ہے۔ این جی زون کا مقصد۔یہ ان منظرناموں میں کارآمد ثابت ہوسکتا ہے جہاں آپ کارکردگی کو بہتر بنانا چاہتے ہیں یا کچھ ایسی کارروائیوں کو سنبھالنا چاہتے ہیں جو تبدیلی کا پتہ لگانے کو متحرک نہیں کریں گے۔ یہاں آپ کونیولر یونٹ کی جانچ میں ngzone.runoutsideangular () کس طرح استعمال کرسکتے ہیں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {اجزاء ، ngzone} منجانب '@کونیی/کور '؛@اجزاء ({سلیکٹر:' میرا اجزاء '، ٹیمپلیٹ: `...` `}) ایکسپورٹ کلاس"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں آپ ٹیسٹ بیڈ۔ اوور رائیڈ پروویڈر طریقہ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، ٹیسٹ بیڈ۔ اوور رائڈ پرووائڈر () طریقہ استعمال شدہ ماڈیول کے اندر کسی خدمت یا انحصار کی فراہم کنندہ کی ترتیب کو اوور رائڈ کرنے کے لئے استعمال کیا جاتا ہے۔یہ آپ کو اصل فراہم کنندہ کو ٹیسٹنگ کے مقاصد کے لئے مذاق ، اسٹب ، یا مختلف عمل درآمد سے تبدیل کرنے کی اجازت دیتا ہے۔ یہاں کہ آپ کونیی یونٹ ٹیسٹنگ میں ٹیسٹ بیڈ کو کس طرح استعمال کرسکتے ہیں۔) ، آپ کو جانچ کے دوسرے مطلوبہ انحصار کے ساتھ ساتھ درآمد کرنے کی ضرورت ہے۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ '@کونیی/کور/ٹیسٹنگ' سے ؛"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ٹیسٹ بیڈ۔ کریٹکومیپینٹ اور ٹیسٹ بیڈ ڈاٹ کامپیلکمپونٹس کے طریقوں میں کیا فرق ہے؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، ٹیسٹ بیڈ۔ کریٹکومپینٹ () اور ٹیسٹ بیڈ ڈاٹ کامپیلکمپوننٹس () ٹیسٹنگ ماڈیول کے اندر اجزاء بنانے اور مرتب کرنے کے لئے ٹیسٹ بیڈ افادیت کے ذریعہ فراہم کردہ طریقے ہیں۔جبکہ وہ"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں HTTPClientTestingModule کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں HTTPClientTestingModule کو استعمال کرنے کے ل you ، آپ کو ان اقدامات پر عمل کرنے کی ضرورت ہے: ضروری انحصار درآمد کریں: HTTPClientStingModule کو استعمال کرنے سے پہلے ، آپ کو دیگر مطلوبہ ٹیسٹنگ انحصار کے ساتھ ساتھ درآمد کرنے کی ضرورت ہے۔/http/testing '؛ درآمد {testbed} سے'@کونیی/کور/ٹیسٹنگ '؛ امپورٹ {httpclient} سے'@کونیی/عام/http 'سے ٹیسٹنگ ماڈیول کی تشکیل کریں: `پہلے` میں"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں روٹرسٹنگ موڈول کا مقصد کیا ہے؟",
        "Answer": "روٹرسٹنگ موڈول ایک ماڈیول ہے جو یونٹ ٹیسٹنگ کے لئے کونیی کے ذریعہ فراہم کیا جاتا ہے جو اجزاء اور خدمات کی جانچ کے قابل بناتا ہے جو کونیی روٹر کے ساتھ تعامل کرتے ہیں۔یہ آپ کو اصل نیویگیشن انجام دینے یا حقیقی روٹنگ کنفیگریشن پر انحصار کیے بغیر اپنے یونٹ ٹیسٹوں میں روٹنگ سلوک کا مذاق اڑانے اور تقلید کرنے کی اجازت دیتا ہے۔ کونیی یونٹ کی جانچ میں روٹرسٹنگ موڈول کو استعمال کرنے کے بنیادی مقاصد یہ ہیں: جانچ کے لئے اجزاء کو الگ تھلگ کریں: روٹر ٹسٹنگ موڈل کا استعمال کرکے ، آپ کر سکتے ہیں ، آپ کر سکتے ہیں۔اجزاء کو الگ تھلگ کریں اور اصل روٹنگ کنفیگریشن یا حقیقی نیویگیشن انجام دینے پر انحصار کیے بغیر ان کے طرز عمل کی جانچ کریں۔اس سے آپ روٹر کی پیچیدگی کے بارے میں فکر کیے بغیر جزو کی منطق کی جانچ پر توجہ مرکوز کرنے کے قابل بناتے ہیں۔ روٹنگ سلوک: روٹرسٹنگ موڈول کونیی روٹر کا مذاق اڑایا جاتا ہے۔یہ آپ کو مطلوبہ روٹنگ کنفیگریشن کی وضاحت کرنے ، نقالی کرنے کی اجازت دیتا ہے"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں jasmine.createspyobj طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، جیسمین۔ کریٹ پی ایس او بی جے () کا طریقہ ایک اسپائی آبجیکٹ بنانے کے لئے استعمال کیا جاتا ہے جس میں متعدد طریقوں کے ساتھ جاسوس آبجیکٹ تیار کیا جاسکتا ہے جس کی جاسوسی کی جاسکتی ہے اور جانچ کے دوران اسے کنٹرول کیا جاسکتا ہے۔createspyobj () فنکشن جیسمین ٹیسٹنگ فریم ورک کے ذریعہ فراہم کیا جاتا ہے ، جو عام طور پر کونیی یونٹ ٹیسٹنگ میں استعمال ہوتا ہے۔ یہاں آپ جیسمین کو کس طرح استعمال کرسکتے ہیں۔.Service '؛ درآمد {ٹیسٹ بیڈ} سے'@کونیی/کور/ٹیسٹنگ '؛ بیان کریں (' میسروائس '، () => {آئیے میسروائس: میسروائس ؛ پہلے سے پہلے (() => {"
    },
    {
        "Question": "کونیی میں خدمت اور فراہم کنندہ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں ، ایک خدمت اور فراہم کنندہ متعلقہ تصورات ہیں لیکن ان کے مختلف کردار اور مقاصد ہیں۔ سرویس: کونیی میں ، ایک خدمت ایک ایسی کلاس ہے جو درخواست کے دوسرے حصوں کو ایک مخصوص فعالیت یا ڈیٹا فراہم کرتی ہے۔خدمات عام طور پر کاروباری منطق ، ڈیٹا کی بازیافت ، بیرونی API کے ساتھ بات چیت ، اور اجزاء کے مابین ڈیٹا کو شیئر کرنے کے لئے استعمال کی جاتی ہیں۔ سروسز کوڈ کو مرکزی بنانے اور منظم کرنے کا ایک طریقہ ہے جسے کونیی ایپلی کیشن میں متعدد اجزاء یا ماڈیول میں دوبارہ استعمال کیا جاسکتا ہے۔@انجیک ایبل () ڈیکوریٹر اور عام طور پر واحد ذمہ داری کے اصول پر عمل کرتے ہیں ، جس میں فعالیت کے ایک مخصوص شعبے پر توجہ مرکوز کی جاتی ہے۔ سروسز کنسٹرکٹر کے ذریعہ ان کی انحصار انجکشن لگاسکتی ہے ، جس کی وجہ سے وہ دوسری خدمات کے ساتھ بات چیت کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیولر میں @اوپنشنل ڈیکوریٹر کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، @آپشنل ڈیکوریٹر انحصار انجیکشن میں استعمال کیا جاتا ہے تاکہ اس بات کی نشاندہی کی جاسکے کہ انحصار اختیاری ہے۔اس کا استعمال @انجیکٹ ڈیکوریٹر کے ساتھ مل کر کسی جزو یا خدمت کو اختیاری انحصار حاصل کرنے کی اجازت دینے کے لئے استعمال کیا جاتا ہے۔ یہاں کہ آپ کونیی میں @اوپنشنل ڈیکوریٹر کو کس طرح استعمال کرسکتے ہیں: @کونیی/کور سے ضروری ڈیکوریٹرز درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈین پورٹ {اختیاری ، انجیکشن''@کونیی/کور 'سے ؛"
    },
    {
        "Question": "کونیی میں NGModulefactoryloader سروس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں NgModulefactoryloader سروس رن ٹائم کے وقت کونیی ماڈیولز کو لازمی طور پر لوڈ کرنے کے لئے استعمال کی جاتی ہے۔یہ کونیی کے سست لوڈنگ میکانزم کا ایک کلیدی جزو ہے ، جو ماڈیولز کو مطالبہ پر لوڈ کرنے کی اجازت دیتا ہے جب ان کی ضرورت ہوتی ہے ، بجائے اس کے کہ وہ مرکزی بنڈل سے بھری ہو۔ NGModulefactoryLoader سروس کا مقصد A کی فیکٹری کو متحرک طور پر لوڈ کرنا ہے۔سست بھری ہوئی ماڈیول۔جب ایک سست بھری ہوئی روٹ پر تشریف لے جاتا ہے تو ، NGModulefactoryLoader ماڈیول کی فیکٹری کو غیر متزلزل طور پر لوڈ کرنے کے لئے ذمہ دار ہے۔ NGModulefactoryloader سروس عام طور پر کونیی کے راستے کی ترتیب میں لوڈچینڈرین پراپرٹی کے ساتھ مل کر استعمال کی جاتی ہے۔لوڈچیلین پراپرٹی اس ماڈیول کی راہ کی وضاحت کرتی ہے جس کو لیزلی لادنا چاہئے۔ یہاں اس کی ایک مثال ہے کہ این جی ایم او ڈیولفیکٹری لوڈر سروس کونیی روٹنگ میں کس طرح استعمال کی جاتی ہے: ٹائپ اسکرپٹ کوپی کوڈکونسٹ راستوں: راستے = [{راستہ: 'کاہل' ، لوڈچنین: () => درآمد کریں: () => درآمد کریں)('./lazy.module').then(m => m.lazymodule)}] ؛ اس مثال میں ، جب/سست راستہ تک رسائی حاصل کی جاتی ہے تو ، لوڈچینٹس پراپرٹی ماڈیول (./lazy.module) کی راہ بتاتی ہے (./lazy.module)اس کو سست روی سے بھرا جانا چاہئے۔NGModulefactoryLoader لازیموڈول کی فیکٹری کو غیر سنجیدہ طور پر لوڈ کرنے کے لئے ذمہ دار ہوگا۔ این جی ایم او ڈیولفیکٹری لوڈر کونیی میں ایک بلٹ ان نفاذ ہے ، اور اگر ضرورت ہو تو آپ کو اپنا عمل درآمد فراہم کرکے اپنی مرضی کے مطابق بنایا جاسکتا ہے۔پہلے سے طے شدہ طور پر ، کونیی سسٹم جے ایس این جی موڈل لوڈر کلاس کو NGModulefactoryloader کے نفاذ کے طور پر استعمال کرتا ہے جب سسٹم جے ایس کو ماڈیول لوڈر کے طور پر استعمال کرتے ہیں۔یہ متحرک طور پر سست طریقے سے بھری ہوئی ماڈیولز کی فیکٹریوں کو بھریتا ہے ، جب ان سے وابستہ راستوں تک رسائی حاصل ہوتی ہے تو رن ٹائم کے وقت انہیں لوڈ اور انسٹیٹیوٹ کرنے کی اجازت دیتا ہے۔اس سے مطالبہ پر صرف ضروری ماڈیولز لوڈ کرکے اطلاق کی کارکردگی کو بہتر بنانے میں مدد ملتی ہے۔"
    },
    {
        "Question": "آپ کونیولر میں روٹر موڈل.فوروروٹ () طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، آپ کی درخواست کے لئے روٹ روٹنگ ماڈیول کو تشکیل دینے کے لئے روٹر موڈل۔ فوروروٹ () کا طریقہ استعمال کیا جاتا ہے۔یہ عام طور پر آپ کی ایپلی کیشن کے ل top اعلی سطح کے راستوں کی وضاحت کے لئے روٹ ماڈیول (مثال کے طور پر ، ایپ موڈول) میں استعمال ہوتا ہے۔ یہاں کہ آپ کس طرح راؤٹر موڈیول۔ فوروروٹ () کونیولر میں استعمال کرسکتے ہیں: روٹرموڈول اور `درآمد کریں۔"
    },
    {
        "Question": "اسکرپٹ ٹیگز میں ASYNC اور Defer صفات میں کیا فرق ہے؟",
        "Answer": "بیرونی جاوا اسکرپٹ فائلوں کے لوڈنگ اور عملدرآمد کے رویے کو کنٹرول کرنے کے لئے ASYNC اور ڈیفر اوصاف HTML <اسکرپٹ> ٹیگز میں استعمال ہوتے ہیں۔وہ اس بات پر اثر انداز ہوتے ہیں کہ کس طرح براؤزر اسکرپٹ کی بازیافت اور اس پر عمل درآمد کو سنبھالتا ہے اور ویب صفحات کی پیش کش اور طرز عمل کو متاثر کرسکتا ہے۔یہاں دو صفات کے مابین فرق ہے: ASYNC وصف: جب ASYNC انتساب کو <اسکرپٹ> ٹیگ میں شامل کیا جاتا ہے تو ، براؤزر اسکرپٹ کے بازیافت اور عملدرآمد کے انتظار کے بغیر HTML دستاویز کی تجزیہ کرتا رہے گا۔ اسکرپٹ فائل کو حاصل کیا جائے گا۔دستاویزی تجزیہ کے عمل کے متوازی طور پر سنجیدگی سے۔ ایک بار اسکرپٹ فائل ڈاؤن لوڈ ہوجاتی ہے ، یہ HTML پارسنگ کو روکتا ہے اور اسکرپٹ کو فوری طور پر انجام دے گا۔ ASYNC وصف کے ساتھ ملٹیپل اسکرپٹس کو بیک وقت ڈاؤن لوڈ کیا جاسکتا ہے ، اور ان کے پھانسی کے آرڈر کی ضمانت نہیں دی جاسکتی ہے۔ اس کی ضمانت نہیں دی جاسکتی ہے۔اسکرپٹ کے لئے موزوں جو HTML دستاویز سے آزاد ہیں یا دوسرے اسکرپٹ یا دستاویز کے ڈھانچے پر انحصار نہیں کرتے ہیں۔ مثال کے طور پر استعمال: HTMLCOPY کوڈ <اسکرپٹ src = \"اسکرپٹ.جس\" async> </cript> موخر وصفایک <اسکرپٹ> ٹیگ میں شامل کیا گیا ہے ، براؤزر ایچ ٹی ایم ایل دستاویز کو بلاک کیے بغیر بھی پارس کرنا جاری رکھے گا۔ اسکرپٹ فائل کو غیر متزلزل طور پر ، Async انتساب کی طرح ہی لایا جائے گا۔ بہر حال ، اسکرپٹ پر عمل درآمد مکمل ہوجائے گا جب تک کہ HTML دستاویز کی تجزیہ مکمل ہوجائے گی۔.یہ ڈیفریڈ اسکرپٹس کو اس ترتیب میں عمل میں لایا جائے گا جو وہ دستاویز میں ظاہر ہوتے ہیں ، اس سے پہلے کہ ڈومکونٹلوڈ ایونٹ سے قبل۔ یہ اسکرپٹ کے لئے موزوں ہے جو دستاویز کے ڈھانچے یا دیگر اسکرپٹ پر انحصار کرتے ہیں ، کیونکہ دستاویز کے مکمل استعمال کے بعد ان کو پھانسی دی جاتی ہے۔ مثال کے طور پر استعمال کیا جاتا ہے۔: HTMLCOPY کوڈ <اسکرپٹ src = \"script.js\" ڈیفر> </cript> خلاصہ یہ ہے کہ <اسکرپٹ> ٹیگز میں ASYNC اور ڈیفر اوصاف کے مابین اہم اختلافات یہ ہیں: ASYNC براؤزر کو HTML دستاویز کی تجزیہ کرتے وقت HTML دستاویز کی تجزیہ جاری رکھنے کی اجازت دیتا ہے۔عملدرآمد کے آرڈر کی ضمانت دیئے بغیر ، اسکرپٹ غیر سنجیدہ طور پر۔دستاویز کے ڈھانچے یا دیگر اسکرپٹس پر اس کا انحصار"
    },
    {
        "Question": "آپ کونیولر میں کسٹم ویلیویٹر ہدایت کس طرح بناتے ہیں؟",
        "Answer": "کونیی میں کسٹم ویلیویٹر ہدایت بنانے کے ل you ، آپ کو ان اقدامات پر عمل کرنے کی ضرورت ہے: ہدایت تیار کریں: ایک نئی ہدایت تیار کرنے کے لئے کونیی سی ایل آئی کمانڈ چلائیں۔اپنے ٹرمینل کو کھولیں اور اپنے پروجیکٹ کی روٹ ڈائرکٹری پر تشریف لے جائیں ، پھر مندرجہ ذیل کمانڈ پر عمل کریں: گراف کیو ایل کوپی کوڈینگ ڈائریکٹیو کسٹم ویلیڈیٹر پیدا کریں گے۔"
    },
    {
        "Question": "کونیی میں فارم بلڈر سروس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں فارم بلڈر سروس ایک یوٹیلیٹی کلاس ہے جو فارم گروپ اور فارمکنٹرول آبجیکٹ کی مثالوں کو تخلیق کرنے کا ایک آسان طریقہ فراہم کرتی ہے۔یہ کونیی ایپلی کیشنز میں پیچیدہ رد عمل کی شکلوں کی تعمیر اور ان کا انتظام کرنے کے عمل کو ہموار کرنے میں مدد کرتا ہے۔ فارم بلڈر کا بنیادی مقصد فارم کنٹرول اور گروپوں کو تشکیل دینے اور تشکیل دیتے وقت درکار بوائلر پلیٹ کوڈ کی مقدار کو کم کرنا ہے۔یہ فارم ڈھانچے ، توثیقوں اور ابتدائی اقدار کی وضاحت کے لئے ایک زیادہ اعلانیہ اور جامع نقطہ نظر پیش کرتا ہے۔ فارم بلڈر سروس کے استعمال کے کچھ اہم خصوصیات اور فوائد ہیں: آسان فارم کنٹرول تخلیق: فارم بلڈر کنٹرول () اور گروپ () جیسے طریقے مہیا کرتا ہے ()بالترتیب فارم کنٹرول اور گروپس بنانے کے لئے۔یہ طریقے آپ کو فارم کے ڈھانچے کو زیادہ بدیہی اور جامع انداز میں بیان کرنے کی اجازت دیتے ہیں ، دستی ترتیب اور بار بار کوڈ کو کم کرتے ہیں۔ آٹومیٹک فارم کنٹرول بائنڈنگ: فارم بلڈر خود بخود زاویہ کے رد عمل کی ہدایت کا استعمال کرتے ہوئے ٹیمپلیٹ میں عناصر کی تشکیل کے لئے فارم کنٹرول کرتا ہے۔یہ ضروری پابندیاں پیدا کرتا ہے اور فارم کے کنٹرول میں تبدیلیوں کو ٹریک کرتا ہے ، جس سے فارم اور جزو کے مابین دو طرفہ ڈیٹا بائنڈنگ کو قابل بناتا ہے۔یہ انفرادی شکل کے کنٹرول کے لئے توثیق کے قواعد کی آسانی سے وضاحت کرنے کے لئے ویلیوئٹرز۔ حوالہ کار ، درست کرنے والے۔یہ خاص طور پر مفید ہے جب بڑی شکلوں میں گھریلو اشیاء یا ذیلی شکلوں سے نمٹنے کے وقت۔ ابتدائی اقدار کی ترتیب دینا: فارم بلڈر آپ کو فارم بناتے وقت فارم کنٹرول کے لئے ابتدائی اقدار مرتب کرنے کی اجازت دیتا ہے۔اس سے کسی ماڈل یا API کے ردعمل کے اعداد و شمار کے ساتھ فارم فیلڈز کو تیار کرنا آسان ہوجاتا ہے۔ یہاں ایک سادہ فارم گروپ بنانے کے لئے فارم بلڈر کے استعمال کو ظاہر کرنے کی ایک مثال ہے: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {فارم بلڈر ، فارم گروپ ، توثیق کنندگان@'@کونیی/فارم'//فارموں سے// ... کنسٹرکٹر (نجی فارم بلڈر: فارم بلڈر) {} ngoninit () {this.myform = this.formbuilder.group ({نام: ['' '، جائزوں سے متعلق۔ویلڈیٹرز۔ ای میل]] ، عمر: [null ، [validers.required ، validers.min (18)]]})} مذکورہ بالا مثال میں ، فارم بلڈر کو جزو کے کنسٹرکٹر میں انجکشن لگایا گیا ہے۔اس کے بعد اس کا استعمال فارم گروپ کی ایک مثال بنانے کے لئے کیا جاتا ہے جسے مائیفارم کہتے ہیں۔فارم بلڈر کا گروپ () طریقہ ان کی ابتدائی اقدار اور جائزوں کے ساتھ فارم کنٹرول کی وضاحت کے لئے استعمال ہوتا ہے۔ فارم بلڈر کا استعمال کرتے ہوئے ، کوڈ زیادہ جامع اور پڑھنے کے قابل ہوجاتا ہے ، جبکہ اب بھی فارم کنٹرولز ، توثیق ، اور ابتدائی اقدار کے لئے ضروری ترتیب فراہم کرتا ہے۔. خلاصہ میں ، کونیی میں فارم بلڈر سروس رد عمل کی شکلوں کی تخلیق اور انتظام کو آسان بناتی ہے۔یہ فارم ڈھانچے ، توثیق ، اور ابتدائی اقدار کی وضاحت کرنے ، بوائلر پلیٹ کوڈ کو کم کرنے اور کونیی ایپلی کیشنز میں پیچیدہ شکلوں کی دیکھ بھال کو بڑھانے کے لئے ایک اعلانیہ نقطہ نظر پیش کرتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں این جی مشمولات پروجیکشن کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں NG-مشمول ہدایت مواد کے پروجیکشن کے لئے استعمال ہوتا ہے۔یہ آپ کو والدین کے جزو سے لے کر کسی بچے کے جزو میں مواد منتقل کرنے کی اجازت دیتا ہے ، جس سے بچے کے جزو کو اس کے ٹیمپلیٹ میں اس مواد کو ظاہر کرنے اور ہیرا پھیری کرنے میں مدد ملتی ہے۔مواد کی پروجیکشن مفید ہے جب آپ دوبارہ قابل استعمال اجزاء بنانا چاہتے ہیں جو ان کے والدین کے اجزاء سے مختلف مواد کو قبول کرسکتے ہیں۔ کونیی میں این جی-مشمول پروجیکشن استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: والدین کے جزو کے ٹیمپلیٹ کی وضاحت کریں: والدین کے جزو کے ٹیمپلیٹ میں ، NG- استعمال کریں۔اس جگہ کی وضاحت کرنے کے لئے مواد کی ہدایت جہاں مواد کی پیش گوئی کی جانی چاہئے۔یہ عام طور پر کسی کسٹم عنصر یا ٹیمپلیٹ کے کسی مخصوص حصے کے اندر کیا جاتا ہے۔مواد> </ng-content> </div> والدین کے جزو اور پروجیکٹ کے مشمولات کا استعمال کریں: والدین کے جزو کے استعمال میں ، جزو کے افتتاحی اور اختتامی ٹیگز کے مابین رکھے ہوئے کسی بھی مواد کو پیش گوئی کی جائے گی۔والدین کے اجزاء کا ٹیمپلیٹ۔ والدین کے جزو (app.compointent.html) کے مثال کے طور پر استعمال: HTMLCOPY کوڈ <ایپ پیرنٹ> <p> اس مواد کو والدین کے جزو میں پیش کیا جائے گا۔چائلڈ جزو: بچوں کے جزو میں ، آپ این جی-مشمولات کی ہدایت کا استعمال کرتے ہوئے بھی متوقع مواد تک رسائی حاصل کرسکتے ہیں اور ان میں ہیرا پھیری کرسکتے ہیں۔پیش گوئی شدہ مواد کو بچوں کے اجزاء کے ٹیمپلیٹ کا ایک حصہ سمجھا جاتا ہے۔</ng-content> </div> والدین کے جزو کے اندر بچے کے جزو کا استعمال کریں: والدین کے جزو کے اندر ، آپ بچوں کے جزو کو شامل کرسکتے ہیں اور اس کے افتتاحی اور اختتامی ٹیگز کے درمیان رکھے ہوئے کسی بھی مواد کی وضاحت کی جائے گی۔بچوں کے جزو کے ٹیمپلیٹ کے اندر۔ والدین کے جزو ٹیمپلیٹ کے اندر بچے کے جزو کا مثال کے طور پر استعمال (پیرنٹ ڈاٹ کامپینٹ ایچ ٹی ایم ایل): HTMLCOPY کوڈ <Div class = \"والدین\"> <h2> والدین کا جز </h2> <pp-child> <pp-child>p> اس مواد کو بچوں کے جزو میں پیش کیا جائے گا۔بچوں کے جزو میں بیان کردہ این جی مشمول مقام۔اسی طرح ، ایپ کے اجزاء کے اندر <ایپ پیرنٹ> ٹیگز کے مابین رکھے گئے مواد کو والدین کے جزو میں بیان کردہ NG-content مقام میں پیش کیا جائے گا۔ جب اجزاء پیش کیے جاتے ہیں تو ، متوقع مواد مناسب مقامات کے اندر ظاہر کیا جائے گا جس کی وضاحت کی گئی ہے۔این جی مشمولات کی ہدایت نامہ۔ مشترکہ پروجیکشن آپ کو لچکدار اور دوبارہ قابل استعمال اجزاء بنانے کی اجازت دیتا ہے جو اپنے والدین کے اجزاء سے متحرک مواد کو قبول کرسکتے ہیں ، جو کونیی میں جزو کی تشکیل اور تخصیص کے ل a ایک طاقتور طریقہ کار فراہم کرتے ہیں۔"
    },
    {
        "Question": "کونیی میں رد عمل کی شکلوں اور ٹیمپلیٹ سے چلنے والی شکلوں میں کیا فرق ہے؟",
        "Answer": "کونیی میں ، فارموں کے ساتھ کام کرنے کے لئے دو نقطہ نظر ہیں: رد عمل کی شکلیں اور ٹیمپلیٹ سے چلنے والی شکلیں۔دونوں کے مابین کلیدی اختلافات یہ ہیں: فارم کنٹرول مینجمنٹ: رد عمل کی شکلیں: رد عمل کی شکلیں نقطہ نظر ایک واضح فارم ماڈل استعمال کرتی ہے جو ٹائپ اسکرپٹ کلاسوں کا استعمال کرتے ہوئے پروگرام کے ساتھ تیار کی گئی ہے۔آپ اجزاء کے کوڈ میں فارم کنٹرولز ، فارم گروپس ، اور فارم کی صفوں کی وضاحت کرتے ہیں اور @کونیی/فارم ماڈیول کے ذریعہ فراہم کردہ فارمکنٹرول ، فارم گروپ ، اور فارمری کلاس کے ذریعے ان کا نظم کرتے ہیں۔فارم کنٹرولز بنانے اور ان کا نظم و نسق کے لئے DOM کو ہدایت اور استعمال کریں۔فارم کے کنٹرول کو HTML ٹیمپلیٹ سے اندازہ لگایا جاتا ہے اور خود بخود تخلیق اور کونییولر .2 کے ذریعہ ان کا انتظام کیا جاتا ہے۔"
    },
    {
        "Question": "آپ کونیی رد عمل کی شکلوں میں فارمکنٹرول نام کی ہدایت کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی رد عمل کی شکلوں میں ، فارم کنٹرول نام کی ہدایت نامے کو فارم گروپ سے لے کر ٹیمپلیٹ میں فارم کنٹرول عنصر تک انفرادی شکل کے کنٹرول کو باندھنے کے لئے استعمال کیا جاتا ہے۔یہ جزو کلاس میں بیان کردہ فارم کنٹرول اور ٹیمپلیٹ میں اس سے متعلقہ ان پٹ عنصر کے مابین ایک تعلق قائم کرتا ہے۔ فارم کنٹرول نام کی ہدایت کا استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: ایک فارم گروپ بنائیں مثال: اپنے اجزاء کی کلاس میں ، @کونیولر/ سے ضروری انحصار درآمد کریں @کونیی/فارم: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {فارم بلڈر} سے '@کونیی/فارم' سے فارم بلڈر} فارم بلڈر سروس کا استعمال کرتے ہوئے فارم گروپ کی ایک مثال بنائیں: کاپی کوڈ"
    },
    {
        "Question": "کونیی رد عمل کی شکلوں میں فارم گروپ کلاس کا مقصد کیا ہے؟",
        "Answer": "کونیی رد عمل کی شکلوں میں فارم گروپ کی کلاس کو فارم کنٹرول کے ایک گروپ کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے۔یہ ایک ہی یونٹ کے طور پر اجتماعی طور پر متعدد فارم کنٹرولز کو منظم کرنے اور ان کا نظم کرنے کا ایک طریقہ فراہم کرتا ہے۔ فارم گروپ کلاس کا بنیادی مقصد یہ ہے کہ: گروپ فارم کنٹرول: فارم گروپ کلاس آپ کو ایک ساتھ مل کر فارم کے کنٹرول کو گروپ کرنے کی اجازت دیتا ہے۔یہ فارم کے کنٹرول کو منظم کرنے کے لئے ایک منطقی کنٹینر مہیا کرتا ہے جو کسی مخصوص حصے سے تعلق رکھتا ہے یا"
    },
    {
        "Question": "آپ توثیق کاروں کو کس طرح استعمال کرتے ہیں۔ کونیی رد عمل کی شکلوں میں تقویت یافتہ طریقہ؟",
        "Answer": "کونیی رد عمل کی شکلوں میں ، توثیق کرنے والے۔ قابل عمل طریقہ @کونیی/فارمس ماڈیول کے ذریعہ فراہم کردہ ایک بلٹ ان توثیق کار ہے۔یہ توثیق کرنے کے لئے استعمال کیا جاتا ہے کہ کسی فارم کنٹرول میں غیر خالی قدر ہوتی ہے۔ جائزوں کا استعمال کرنے کے ل .۔ قابل عمل طریقہ ، ان مراحل پر عمل کریں: ضروری انحصار درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {validers} سے '@کونیی/فارم' سے ایک فارم کنٹرول کی وضاحت کریں۔اور جائزوں کا اطلاق کریں۔"
    },
    {
        "Question": "کونیی رد عمل کی شکلوں میں پیچ ویلیو اور سیٹ ویلیو طریقوں میں کیا فرق ہے؟",
        "Answer": "کونیی رد عمل کی شکلوں میں ، فارم گروپ کے اندر فارم کنٹرول کی اقدار کو اپ ڈیٹ کرنے کے لئے پیچ ویلیو () اور سیٹ ویلیو () دونوں طریقوں کا استعمال کیا جاتا ہے۔تاہم ، ان میں کچھ اختلافات ہیں کہ وہ اقدار کو کس طرح سنبھالتے ہیں اور فارم کنٹرول کے ساتھ تعامل کرتے ہیں: سیٹ ویلیو (): سیٹ ویلیو () کا طریقہ فارم گروپ کے اندر تمام فارم کنٹرولوں کی قدر کو طے کرنے کے لئے استعمال ہوتا ہے۔اس کا تقاضا ہے کہ آپ گروپ کے اندر ہر طرح کے کنٹرول کے ل values اقدار فراہم کریں۔ اگر آپ گروپ کے اندر کسی بھی فارم کنٹرول کے ل a کوئی قیمت فراہم نہیں کرتے ہیں تو ، ایک غلطی پھینک دی جائے گی۔ اگر آپ کسی فارم کنٹرول کی قیمت طے کرنے کی کوشش کرتے ہیں جو نہیں ہے۔فارم گروپ کا ایک حصہ ، ایک غلطی بھی پھینک دی جائے گی۔"
    },
    {
        "Question": "آپ کونیی رد عمل کی شکلوں میں فارم بلڈر۔ گروپ () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی کے رد عمل کی شکلوں میں ، فارم بلڈر.گروپ () کا طریقہ فارم گروپ کی مثال بنانے کے لئے استعمال کیا جاتا ہے ، جو فارم کنٹرول کے ایک مجموعہ کی نمائندگی کرتا ہے۔گروپ () کا طریقہ آپ کو گروپ کے اندر فارم کنٹرول کی ساخت اور ابتدائی اقدار کی وضاحت کرنے کی اجازت دیتا ہے۔مطلوبہ ماڈیولز اور انحصار جو رد عمل کی شکلوں سے متعلق ہیں ، بشمول فارم بلڈر اور فارم گروپ۔ مثال کے طور پر درآمد کا بیان: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {فارم بلڈر ، فارم گروپ} سے '@کونیی/فارم' سے فارم بلڈر سروس انجیکشن کریں: اجزاء کے کنسٹرکٹر یا نگونیٹ () کے طریقہ کار میں ، انجیکشن کریں۔فارم بلڈر سروس اسے پیرامیٹر کے طور پر شامل کرکے۔ مثال کے طور پر کنسٹرکٹر: ٹائپ اسکرپٹ کوپی کوڈکسٹرکٹر (نجی فارم بلڈر: فارم بلڈر) {a فارم گروپ بنانے کے لئے گروپ () کا طریقہ استعمال کریں: اپنے جزو میں ، فارم بلڈر کے گروپ () کا طریقہ استعمال کریںفارم گروپ کی مثال۔ایک ایسی شے فراہم کریں جو فارم کے کنٹرول اور ان کی ابتدائی اقدار کو کلیدی قیمت کے جوڑے کی حیثیت سے بیان کرتا ہے۔گروپ ({نام: '' ، // 'نام' کنٹرول ای میل کے لئے ابتدائی قدر: '' ، // 'ای میل' کنٹرول ایج کے لئے ابتدائی قدر: 'عمر' کنٹرول}) کے لئے NULL // ابتدائی قدر}) ؛}فارم گروپ کو ٹیمپلیٹ سے باندھ دیں: اپنے جزو کے ٹیمپلیٹ میں ، فارم گروپ کی ہدایت کا استعمال کرتے ہوئے فارم گروپ کو فارم عنصر سے باندھ دیں۔اس سے فارم گروپ اور ٹیمپلیٹ کے مابین ایک تعلق قائم ہوتا ہے ، جس سے فارم کی توثیق اور ڈیٹا بائنڈنگ کو قابل بناتا ہے۔ مثال کے طور پر ٹیمپلیٹ کا استعمال: HTMLCOPY کوڈ <فارم [فارم گروپ] = \"Myform\"> <!-فارم کنٹرول یہاں جاتے ہیں-> </ فارم>ان مراحل پر عمل کرتے ہوئے ، آپ فارم بلڈر۔ گروپ گروپ () کا طریقہ استعمال کرسکتے ہیں تاکہ ایک فارم گروپ تشکیل دیں اور اس گروپ کے اندر فارم کنٹرول کی ساخت اور ابتدائی اقدار کی وضاحت کریں۔اس کے بعد آپ فارم گروپ کو اپنے ٹیمپلیٹ سے باندھ سکتے ہیں اور اسے فارم کی توثیق اور ڈیٹا بائنڈنگ کے لئے استعمال کرسکتے ہیں۔ نوٹ: مذکورہ بالا مثال فارم بلڈر. گروپ گروپ () کا بنیادی استعمال دکھاتا ہے جس میں سادہ فارم کنٹرولز ہیں۔مزید اعلی درجے کے منظرناموں کے ل you ، آپ توثیق کاروں اور دیگر ترتیب کے اختیارات کے ساتھ فارم کنٹرول بھی شامل کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی رد عمل کی شکلوں میں خلاصہ کنٹرول کلاس کا مقصد کیا ہے؟",
        "Answer": "کونیی رد عمل والی شکلوں میں خلاصہ کنٹرول کلاس ایک تجریدی بیس کلاس ہے جو فارم کنٹرول اور فارم گروپوں کی بنیاد کے طور پر کام کرتی ہے۔یہ عام فعالیت اور خصوصیات فراہم کرتا ہے جو دونوں فارم کنٹرولز اور فارم گروپوں کے ذریعہ مشترکہ ہیں۔ خلاصہ کنٹرول کلاس کے بنیادی مقاصد یہ ہیں: توثیق: خلاصہ کنٹرول کلاس توثیق سے نمٹنے کے طریقوں اور خصوصیات کی وضاحت کرتا ہے۔یہ مارکاسٹچڈ () ، مارکاسنٹوچڈ () ، مارکاس ڈیرٹی () ، مارکاسپرسٹائن () ، اپڈیٹ وولوئیلیٹی () ، اور `جیسی خصوصیات جیسے طریقے مہیا کرتا ہے۔"
    },
    {
        "Question": "کونیولر میں کسٹم فارم کنٹرول بنانے کے لئے آپ کنٹرول ویلیو ایکسیسر انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں کسٹم فارم کنٹرول بنانے کے ل you ، آپ کنٹرول ویلیو ایکسیسر انٹرفیس کو نافذ کرسکتے ہیں۔کنٹرول ویلیو ای ای سی سی ای ایس سیور انٹرفیس آپ کے کسٹم فارم کنٹرول کو کونیی شکلوں API سے مربوط کرنے کا ایک طریقہ مہیا کرتا ہے ، جس سے اسے کونیی رد عمل کی شکلوں اور ٹیمپلیٹ سے چلنے والی شکلوں کے ساتھ استعمال کیا جاسکتا ہے۔ یہاں کنٹرول ویلیو ای ای سی سی ای ایس سیور انٹرفیس کو استعمال کرنے کے اقدامات ہیں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ کو درآمد کریں۔{اجزاء ، فارورڈ ریف ، فراہم کنندہ@'@کونیی/کور' سے ؛ امپورٹ {کنٹرول ویلیو ای سی سی ای ایس سیور ، این جی_ ویلیو_ایسیسسر 'سے'@کونیی/فارم 'سے اپنے کسٹم فارم کنٹرول جزو میں کنٹرول ویلیو ای ای سی سی ای ایس سیور انٹرفیس کو نافذ کریں:"
    },
    {
        "Question": "کونیی میں @ویوچائڈ اور @کانٹینچائڈ سجاوٹ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں @ویوچائلڈ اور @کنٹینٹائڈ سجاوٹ کار والدین کے جزو میں بچوں کے اجزاء یا عناصر تک رسائی کے لئے استعمال ہوتے ہیں۔تاہم ، ان کے مختلف مقاصد ہیں اور مختلف قسم کے عناصر پر کام کرتے ہیں۔یہاں دو ڈیکوریٹرز کے مابین فرق ہے: @ویوچائلڈ: @ویوچلڈ ڈیکوریٹر موجودہ جزو کے ٹیمپلیٹ کے اندر کسی بچے کے جزو ، ہدایت یا عنصر سے استفسار کرنے اور ان تک رسائی حاصل کرنے کے لئے استعمال ہوتا ہے۔ یہ آپ کو کسی ایک بچے کے عنصر کا حوالہ حاصل کرنے کی اجازت دیتا ہے یاجزو اس کے سلیکٹر یا قسم کی وضاحت کرکے۔ سوالات کا عنصر یا جزو جزو کلاس میں دستیاب ہے اور اسے بچے کے ساتھ بات چیت کرنے ، اس کی خصوصیات تک رسائی ، اس کے طریقوں کو کال کرنے ، یا اس کے واقعات کو سننے کے لئے استعمال کیا جاسکتا ہے۔عناصر/اجزاء جو والدین کے اجزاء کے ٹیمپلیٹ کا حصہ ہیں۔ اگر متعدد عناصر استفسار سے مماثل ہیں تو ، @ویوچائلڈ ڈیکوریٹر پہلا مماثل عنصر/جزو کو واپس کرتا ہے۔؛ @اجزاء ({سلیکٹر: 'ایپ پیرنٹ' ، ٹیمپلیٹ: '<Div #ChildElement> چائلڈ عنصر </div>'}) کلاس پیرنٹکمپینٹ { @ویوچائلڈ ('چائلڈیلیمنٹ') چائلڈیلیمنٹ ریف: ایلیمینٹریف ؛ngafterviewinit () {console.log (this.childelementRef.nativelement.textContent) ؛}} اس مثال میں ، @ویوچلڈ ڈیکوریٹر کو ٹیمپلیٹ ریفرنس متغیر #بچوں کے ساتھ بچوں کے عنصر سے استفسار کرنے کے لئے استعمال کیا جاتا ہے۔چائلڈ عنصر کا حوالہ عنصر ریف کے ذریعہ حاصل کیا جاتا ہے اور اس کے مواد کو کنسول پر لاگ ان کیا جاتا ہے۔ @مشمولات: @کنٹینٹائڈ ڈیکوریٹر کو کسی بچے کے جزو یا عنصر سے استفسار کرنے اور ان تک رسائی حاصل کرنے کے لئے استعمال کیا جاتا ہے جس کی پیش گوئی جزو کے مواد یا پیش گوئی شدہ مواد میں کی جاتی ہے (ٹرانسکلڈڈ)مشمولات) <ng-content>. یہ آپ کو کسی ایک پیش گوئی شدہ چائلڈ عنصر یا جزو کا حوالہ حاصل کرنے کی اجازت دیتا ہے۔ اس کے سلیکٹر یا قسم کی وضاحت کرکے۔پیش گوئی شدہ بچہ ، اس کی خصوصیات تک رسائی حاصل کریں ، اس کے طریقوں کو کال کریں ، یا اس کے واقعات کو سنیں۔ @کنٹینٹائڈ ڈیکوریٹر ایسے عناصر/اجزاء تک رسائی حاصل کرسکتا ہے جو <ng-content> کا استعمال کرتے ہوئے والدین کے جزو میں پیش کیے جاتے ہیں۔ اگر متعدد عناصر استفسار سے مماثل ہیں تو ، @کونٹینٹائڈڈیکوریٹر پہلا مماثل عنصر/اجزاء کو لوٹاتا ہے۔ مثال کے طور پر استعمال: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {اجزاء ، مشمولات ، '@کونیی/کور' سے@@اجزاء ({سلیکٹر: 'ایپ پیرنٹ' ، ٹیمپلیٹ: '<این جی-کانٹینٹ> </ng-کونٹنٹ> '}) کلاس پیرنٹکمپینٹ برآمدی { @کنٹینٹائڈ (چائلڈکمپینٹ) چائلڈکمپینٹ: چائلڈکمپینٹ ؛ngaftercontentinit () {console.log (this.childCompentent) ؛}} اس مثال میں ، @کنٹینٹائڈ سجاوٹ کا استعمال بچوں کے بچے کے پیش گوئی کے پیش گوئی کے اجزاء سے استفسار کرنے کے لئے کیا جاتا ہے۔متوقع بچوں کے جزو کا حوالہ چائلڈ کمپوینٹ پراپرٹی میں دستیاب ہے اور یہ پیرنٹکمپینٹ کے اندر استعمال کیا جاسکتا ہے۔ خلاصہ میں ، @ویوچائڈ ڈیکوریٹر کو موجودہ اجزاء کے ٹیمپلیٹ میں بچوں کے عناصر/اجزاء تک رسائی حاصل کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ @کونٹینٹائڈ ڈیکوریٹر استعمال ہوتا ہے۔متوقع بچوں کے عناصر/اجزاء تک رسائی حاصل کریں جو <ng-content> کا استعمال کرتے ہوئے والدین کے اجزاء کے مواد میں منتقل کردیئے جاتے ہیں۔"
    },
    {
        "Question": "کونیی سست لوڈنگ میں آپ روٹر موڈل.فروڈولڈ () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، روٹر موڈول.فورچلڈ () کا طریقہ خصوصیت ماڈیولز کی سست لوڈنگ کے لئے استعمال کیا جاتا ہے۔یہ آپ کو فیچر ماڈیول کے لئے مخصوص راستوں کی وضاحت کرنے اور ضرورت پڑنے پر انہیں سست روی سے لوڈ کرنے کی اجازت دیتا ہے۔یہ ہے کہ آپ کس طرح روٹرموڈول استعمال کرسکتے ہیں۔ کاہلی لوڈنگ کے ل forf لنڈ (): سست بوجھ والے ماڈیول کے لئے ایک علیحدہ فیچر ماڈیول بنائیں: کونیی سی ایل آئی کمانڈ کا استعمال کرتے ہوئے ایک نیا ماڈیول بنائیں: ارڈوینوکوپی کوڈینگ جنریٹ ماڈیول ماڈیول کی خصوصیت کو ماڈیول کریں جس میں لیزی لوڈڈ کے راستوں کی تشکیل کی جائے۔فیچر ماڈیول میں ماڈیول: فیچر ماڈیول فائل میں (جیسے ، فیچر-ماڈیول.موڈول ڈاٹ ٹی ایس) ، ضروری انحصار درآمد کریں:"
    },
    {
        "Question": "کونیی روٹنگ میں ایکٹیویٹ روٹ انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ایکٹیویٹ روٹ انٹرفیس روٹر کے ذریعہ چالو ہونے والے راستے کے بارے میں معلومات تک رسائی فراہم کرتا ہے۔اس میں روٹ کے پیرامیٹرز ، استفسار پیرامیٹرز ، یو آر ایل طبقات اور روٹ سے متعلق دیگر معلومات سے متعلق ڈیٹا شامل ہے۔ایکٹیویٹیٹ روٹ انٹرفیس بنیادی طور پر موجودہ راستے سے ڈیٹا کو بازیافت کرنے اور کسی جزو کے اندر روٹ کی تبدیلیوں پر رد عمل ظاہر کرنے کے لئے استعمال ہوتا ہے۔ یہاں ایکٹیویٹیٹ روٹ انٹرفیس کے کچھ اہم مقاصد اور خصوصیات ہیں: روٹ پیرامیٹرز تک رسائی حاصل کرنا: ایکٹیویٹ روٹ رام میں بیان کردہ پیرامیٹرز تک رسائی فراہم کرتا ہےراسته"
    },
    {
        "Question": "کونیی روٹنگ میں آپ روٹر لنک ہدایت کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں روٹر لنک لنک ہدایت کسی درخواست کے اندر مختلف راستوں پر تشریف لے جانے کے لئے استعمال ہوتا ہے۔یہ جاوا اسکرپٹ کے افعال کو دستی طور پر متحرک کیے بغیر یا براؤزر کے یو آر ایل کو جوڑنے کے بغیر روابط بنانے اور نیویگیشن کو سنبھالنے کا ایک اعلانیہ طریقہ فراہم کرتا ہے۔ روٹر لنک لنک ہدایت کا استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: ضروری ماڈیولز اور انحصار کو درآمد کریں: اپنے اجزاء کی فائل میں ، ضروری ہے کہ ضروری ہو کہ ضروری درآمد کریںکونیی کے روٹنگ سے متعلق ماڈیولز اور انحصار۔اس میں روٹر موڈیول اور کسی بھی مطلوبہ روٹ کنفیگریشنز کو درآمد کرنا شامل ہے۔ مثال کے طور پر درآمد کا بیان: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {روٹرموڈول ، '@کونیی/راؤٹر' سے روٹس} اپنے راستوں کو تشکیل دیں: آپ کے روٹنگ ماڈیول یا اجزاء کی فائل میں ، آپ کے استعمال کے لئے روٹس کی وضاحت کریں۔راستے سرنیہر راستے میں ایک راستہ اور ایک جزو پر مشتمل ہوتا ہے جب اس راستے تک رسائی حاصل ہوتی ہے۔ مثال کے طور پر روٹ کی تشکیل: ٹائپ اسکرپٹ کوپی کوڈکونسٹ روٹس: راستے = [{راستہ: '' ، جزو: گھریلو اجزاء} ، {راستہ: 'مصنوعات' ، اجزاء: مصنوعات کا اجزا} ، {راستہ: 'کے بارے میں' ، اجزاء: کے بارے میں کامپینٹ}] ؛ راؤٹر ماڈیول مرتب کریں: اپنے ایپلی کیشن کے مرکزی ماڈیول یا روٹنگ ماڈیول میں ، روٹر ماڈیول کو تشکیل دینے کے لئے روٹر ماڈل۔ فوروروٹ () طریقہ استعمال کریں۔اس طریقہ کار کی دلیل کے طور پر طے شدہ راستوں کو پاس کریں۔ مثال کے طور پر راؤٹر ماڈیول سیٹ اپ: ٹائپ اسکرپٹ کوپی کوڈ@این جی ایم او ڈیول ({درآمدات: [روٹرموڈول.فورروٹ) (روٹس)] ، برآمدات: [روٹرموڈول]}) روٹر لنک لنک ہدایت نامہ {}}}}}} استعمال کریںآپ کا ٹیمپلیٹ: اپنے جزو کے ٹیمپلیٹ میں ، روٹر لنک لنک ہدایت کا استعمال لنکس بنانے کے لئے کریں جو آپ کی درخواست کے اندر مختلف راستوں پر جائیں۔روٹر لنک لنک ہدایت کا اطلاق اینکر ٹیگ (<a>) یا کسی دوسرے کلک کے قابل عنصر پر کیا جاسکتا ہے۔ مثال</a> <a [routerlink]/about'illink\"مصنوعات\" کے راستے پر جائیں گے ، اور \"کے بارے میں\" لنک پر کلک کرنے سے \"کے بارے میں\" پاتھ ڈاٹ نوٹ: روٹر لنک لنک ہدایت نامہ کے حصوں کی ایک صف کو بھی قبول کرسکتا ہے ، جس سے آپ بچوں کے راستوں پر تشریف لے جاسکتے ہیں یا راستے میں جاتے ہیں۔پیرامیٹرز۔ اپنے ٹیمپلیٹ میں روٹر لنک لنک ہدایت کا استعمال کرتے ہوئے ، آپ آسانی سے اپنے کونیی ایپلی کیشن میں نیویگیشن کے ل links لنکس تشکیل دے سکتے ہیں۔کونیی یو آر ایل کو اپ ڈیٹ کرنے ، مناسب جزو پیش کرنے ، اور آپ کے لئے نیویگیشن ہسٹری کا انتظام کرنے کا خیال رکھتا ہے۔ ضروری ہے کہ ضروری روٹنگ کنفیگریشن کو شامل کریں ، روٹر ماڈیول کو صحیح طریقے سے ترتیب دیں ، اور مطلوبہ راستے یا روٹ پیرامیٹرز کے ساتھ روٹر لنک لنک ہدایت کا استعمال کریں۔اپنی درخواست میں مختلف راستوں کے مابین تشریف لے جائیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں کینیکٹیوٹیٹ اور کین لوڈ گارڈز کے مابین کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، کینیکٹیوٹیٹ اور کین لوڈ دو قسم کے روٹ گارڈز ہیں جو آپ کی درخواست میں راستوں تک رسائی کو کنٹرول کرنے کے لئے مختلف فنکشنلیاں مہیا کرتے ہیں۔یہاں کینیکٹیوٹیٹ اور کینلوڈ گارڈز کے درمیان فرق ہے: کین ایکٹیویٹ گارڈ: کین ایکٹیویٹ گارڈ اس بات کا تعین کرنے کے لئے استعمال کیا جاتا ہے کہ آیا کسی صارف کو چالو کرنے سے پہلے کسی خاص راستے تک رسائی حاصل کرنے کی اجازت ہے یا نہیں۔جب کسی راستے کو چالو کرنے والا ہے ، اور یہ عام طور پر توثیق اور اجازت کے مقاصد کے لئے استعمال ہوتا ہے۔ کین ایکٹیویٹ گارڈ کو بطور خدمت یا ایک کے طور پر نافذ کیا جاسکتا ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں نیویگیشن ایکسٹراس انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، راؤٹر سروس کا استعمال کرتے ہوئے کسی راستے پر تشریف لے جانے پر نیویگیشن ایکسٹراس انٹرفیس اضافی اختیارات اور پیرامیٹرز کی وضاحت کرنے کے لئے استعمال ہوتا ہے۔یہ آپ کو نیویگیشن کے طرز عمل کے دوران نیویگیشن سلوک کو اپنی مرضی کے مطابق بنانے اور اضافی معلومات پاس کرنے کی اجازت دیتا ہے۔ یہاں کہ آپ کونیی روٹنگ میں نیویگیشن ایکسٹراس انٹرفیس کا استعمال کیسے کرسکتے ہیں: ضروری انحصار درآمد کریں: جزو فائل میں جہاں آپ نیویگیشن ایکسٹراس انٹرفیس استعمال کرنا چاہتے ہیں ، راؤٹر درآمد کریں۔@کونیی/روٹر سے ماڈیول: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {روٹر ، نیویگیشن ایکسٹراس} سے ' @کونیی/راؤٹر' ؛ نیویگیشن ایکسٹراس انٹرفیس کی ایک مثال بنائیں: ٹائپ نیویگیشن ایکسٹراس کے کسی شے کو انسٹیٹ کریں اور مطلوبہ اختیارات کے ساتھ تشکیل دیں۔کچھ عام اختیارات میں استفسار پیرمز ، `شامل ہیں"
    },
    {
        "Question": "کونیی روٹنگ میں کینڈیکٹیوٹ انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں کینڈیکٹیو انٹرفیس ایک روٹ گارڈ انٹرفیس ہے جو آپ کو کنٹرول کرنے کی اجازت دیتا ہے کہ آیا صارف"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایکٹیویٹیڈ روٹسناپ شاٹ کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ایکٹیویٹڈ راؤسٹنپ شاٹ کلاس کا استعمال وقت کے ایک خاص لمحے میں کسی راستے کی حالت کی نمائندگی کرنے کے لئے کیا جاتا ہے۔یہ راستے کی تشکیل ، پیرامیٹرز ، ڈیٹا اور دیگر متعلقہ تفصیلات کے بارے میں معلومات فراہم کرتا ہے۔ایکٹیویٹیڈ روٹسناپ شاٹ کلاس عام طور پر روٹ گارڈز اور حل کرنے والی خدمات کے اندر روٹ کی معلومات تک رسائی حاصل کرنے اور اس معلومات کی بنیاد پر فیصلے کرنے کے لئے استعمال کی جاتی ہے۔ یہاں کہ آپ کونیی روٹنگ میں ایکٹیویٹیڈ روٹسناپ شاٹ کلاس کو کس طرح استعمال کرسکتے ہیں: ضروری انحصار درآمد کریں: جہاں آپ استعمال کرنا چاہتے ہیں۔ایکٹیویٹیڈ روٹسناپ شاٹ کلاس ، اسے @کونیی/روٹر سے درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیم پورٹ {ایکٹیویٹڈ راؤسٹنپ شاٹ} سے ' @کونیی/راؤٹر' ؛ کسی روٹ گارڈ یا ریزولور میں ایکٹیویٹیڈ راؤسٹ شاٹ ، وغیرہ: جیسے کسی روٹ گارڈ میں (جیسے کینیکٹیٹیٹ ، کینڈیٹیکلڈ ، کینڈیچیلڈ ، کینڈیٹیکیلڈ ، کینڈیٹیکلڈ ، کینڈیکیٹ ،"
    },
    {
        "Question": "کونیی روٹنگ میں پاتھ لوکیشن اسٹریٹی اور ہیشلوکیشن اسٹریٹی میں کیا فرق ہے؟",
        "Answer": "میں اپنے پچھلے جواب میں الجھن کے لئے معذرت خواہ ہوں۔کونیی میں ، پاتھ لوکیشن اسٹریٹی اور ہیشلوکیشن اسٹریٹی روٹنگ کے لئے استعمال ہونے والی دو مختلف حکمت عملی ہیں ، لیکن وہ یو آر ایل مینجمنٹ کو مختلف طریقے سے سنبھالتے ہیں۔یہاں صحیح وضاحت ہے: پاتھ لوکیشن اسٹریٹی: پاتھ لوکیشن اسٹریٹی کونیی روٹنگ میں محل وقوع کی پہلے سے طے شدہ حکمت عملی ہے۔یہ HTML5 ہسٹری API کا استعمال برائوزر کے یو آر ایل کو ہیش کے ٹکڑوں کے استعمال کے بغیر جوڑنے کے لئے کرتا ہے۔ راستے کی جگہ کے ساتھ ، روٹنگ یو آر ایل صاف ستھرا اور زیادہ صارف دوست دکھائی دیتا ہے کیونکہ ان میں ہیش کے ٹکڑے نہیں ہوتے ہیں۔مثال کے طور پر ، یو آر ایل ہوسکتا ہے جیسے https://example.com/products https://example.com/#/products کی بجائے اس حکمت عملی کو سرور سائیڈ کنفیگریشن کی ضرورت ہے تاکہ یہ یقینی بنایا جاسکے کہ سرور صحیح طریقے سے ہینڈل کرتا ہے اور درخواست کردہ راستوں کو پورا کرتا ہے۔جب صارف براہ راست کسی مخصوص روٹ یو آر ایل پر تشریف لے جاتا ہے یا صفحہ کو تازہ دم کرتا ہے تو ، کونیی ایپلی کیشن کی انڈیکس ایچ ٹی ایم ایل فائل کو واپس کرنے کے لئے سرور کو تشکیل دینے کی ضرورت ہوتی ہے ، جو اس کے بعد کلائنٹ کی طرف والے راستے کو سنبھالتا ہے۔ جدید براؤزرز کے لئے پاتھ لوکیشن اسٹریٹی مناسب ہے کہ وہ جدید براؤزرز کے لئے موزوں ہے۔HTML5 ہسٹری API کی حمایت کریں۔تاہم ، جب یہ پرانے براؤزرز میں یا ایسے منظرناموں میں استعمال ہوتا ہے جہاں سرور سائیڈ کنفیگریشن مناسب طریقے سے ترتیب نہیں دی جاتی ہے۔یہ روٹنگ کا انتظام کرنے کے لئے یو آر ایل کے ٹکڑے کی شناخت کنندہ (ہیش) کا استعمال کرتا ہے۔ ہیشلوکیشن اسٹریٹی کے ساتھ ، روٹنگ یو آر ایل میں ہیش کا ٹکڑا ہوتا ہے۔مثال کے طور پر ، یو آر ایل https://example.com/#/products کی طرح نظر آسکتا ہے۔ اس حکمت عملی میں کسی بھی سرور سائیڈ کنفیگریشن کی ضرورت نہیں ہے۔تمام روٹنگ کو کلائنٹ سائیڈ پر سنبھالا جاتا ہے ، اور سرور تمام راستوں کے لئے ایک ہی انڈیکس ایچ ٹی ایم ایل فائل کی خدمت کرتا ہے۔ یو آر ایل میں ہیش کا ٹکڑا سرور کو درخواست کو متحرک نہیں کرتا ہے ، لہذا یہ تمام براؤزرز میں اچھی طرح سے کام کرتا ہے ، بشمول بشمول بشمول بشمول بشمول تمام براؤزرز میں اچھی طرح سے کام کرتا ہے۔والےیہ کونیولر کو سرور کی تشکیل پر انحصار کیے بغیر کلائنٹ سائیڈ پر روٹنگ کو سنبھالنے کی اجازت دیتا ہے۔ جب سرور سائیڈ کنفیگریشن محدود ہے یا ممکن نہیں تو ہیشلوکیشن اسٹریٹی مفید ہے۔تاہم ، یو آر ایل میں ہیش کے ٹکڑوں کی موجودگی کی وجہ سے اس کو کم صارف دوست سمجھا جاسکتا ہے۔ کونیی میں مقام کی حکمت عملی کی وضاحت کرنے کے ل you ، آپ کو ایپ ماڈیول کے فراہم کنندگان میں تشکیل دینے کی ضرورت ہے: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ngModule}/کور '؛ درآمد {براؤزرموڈول} سے'@کونیی/پلیٹ فارم-براؤزر '؛ درآمد {مقامات کی تعمیر ، ہیشلوکیشن اسٹریٹی} سے'@کونیی/عام '؛@ngmodule ({درآمدات: [براؤزرموڈول] ، فراہم کنندگان: [{مقامات کی تعمیر: {مقامات:USCLASS: PATHLOCATIONSTRATYATY} // یا ہیشلوکیشن اسٹراٹیج] ، بوٹسٹریپ: [ایپکمپینٹ]}) کلاس ایپ موڈول برآمد کریں {default ڈیفالٹ کے مطابق ، جب تک کہ ہیشلوکیشن اسٹراٹیج اور ہیشلوکیشن اسٹریٹیٹی کے مابین انتخاب کا انتخاب نہیں کیا جاتا ہے۔ترتیب ترتیب ، اور مطلوبہ URL جمالیات۔اگر سرور سائیڈ کنفیگریشن ممکن ہے اور جدید براؤزر کی حمایت کافی ہے تو ، عام طور پر پاتھ لوکیشن اسٹریٹی کو ترجیح دی جاتی ہے۔تاہم ، اگر سرور سائیڈ کنفیگریشن محدود ہے یا اس سے زیادہ عمر کے براؤزر کی حمایت ایک تشویش ہے تو ، ہیشلوکیشن اسٹریٹی ایک قابل اعتماد اور فعال متبادل فراہم کرتی ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں آپ روٹر ڈاٹ نیویگیٹ () طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، روٹر۔ نیویگیٹ () طریقہ آپ کی درخواست میں کسی مختلف راستے پر پروگرام کے ساتھ تشریف لے جانے کے لئے استعمال ہوتا ہے۔یہ آپ کو فراہم کردہ راستے کے راستے ، روٹ پیرامیٹرز ، استفسار پیرامیٹرز ، یا ان کے ایک مجموعہ کی بنیاد پر تشریف لے جانے کی اجازت دیتا ہے۔ یہاں کہ آپ روٹر کو کس طرح استعمال کرسکتے ہیں۔چاہتے ہیں"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر لنکیکٹیو ہدایت کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں روٹر لنکیکٹیو ہدایت کا استعمال کسی عنصر پر سی ایس ایس کلاس کو استعمال کرنے کے لئے کیا جاتا ہے جب اس سے وابستہ راستہ فعال ہوتا ہے۔یہ آپ کو موجودہ روٹ پر مبنی اپنے نیویگیشن مینو میں یا کسی دوسرے عنصر میں فعال لنک کو ضعف سے اجاگر کرنے یا اسٹائل کرنے کی اجازت دیتا ہے۔ روٹر لنکیکٹیو ڈائریکٹیو کے مندرجہ ذیل مقاصد ہیں: سی ایس ایس کلاس کا اطلاق کریں: جب روٹر لنکیکٹیو ڈائریکٹیو سے وابستہ راستہ فعال ہوتا ہے تو ، یہ فعال ہوتا ہے۔سی ایس ایس کلاس کو اس عنصر پر لاگو کرتا ہے جس پر ہدایت کا اطلاق ہوتا ہے۔ پہلے سے طے شدہ ، سی ایس ایس کلاس کا اطلاق فعال ہے ، لیکن آپ روٹر لنکیکٹیو ان پٹ پراپرٹی کا استعمال کرتے ہوئے اسے اپنی مرضی کے مطابق بنا سکتے ہیں۔یو آر ایل اور روٹ کنفیگریشن۔ یہ تشکیل شدہ راستوں کے خلاف یو آر ایل سے مماثل ہے"
    },
    {
        "Question": "آپ کونیی روٹنگ میں روٹر۔ ایونٹ پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، روٹر۔ ایونٹ پراپرٹی آپ کو روٹر کے ذریعہ خارج ہونے والے مختلف نیویگیشن سے متعلقہ واقعات کی سبسکرائب کرنے کی اجازت دیتی ہے۔یہ آپ کی ایپلی کیشن میں نیویگیشن کے مختلف واقعات کو سننے اور اس پر رد عمل ظاہر کرنے کا ایک طریقہ فراہم کرتا ہے۔ یہاں کہ آپ روٹر کو کس طرح استعمال کرسکتے ہیں۔ کونیی روٹنگ میں پراپرٹی کا مظاہرہ کرتے ہیں: ضروری انحصار درآمد کریں: اپنے جزو میں ، روٹر اور نیویگیشن اسٹارٹ کلاسز کو @کونیولر/ سے درآمد کریں۔راؤٹر: ٹائپ اسکرپٹ کوپی کوڈیم پورٹ {روٹر ، نیویگیشن اسٹارٹ 'سے'@کونیی/روٹر 'سے راؤٹر کو اپنے جزو میں انجیکشن کریں: اپنے جزو کے تعمیر کار میں ، روٹر انحصار انجیکشن کریں: ٹائپ اسکرپٹ کوپی کوڈکونٹرکٹر (نجی روٹر: راؤٹر) {sive نیویگیشن واقعات کو سبسکرائب کریں۔: `استعمال کریں"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر لنک اور [روٹر لنک] کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، `روٹر کے استعمال میں فرق ہے"
    },
    {
        "Question": "کونیی روٹنگ میں آپ روٹر ڈاٹ نیویگیٹ بائورل () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، روٹر.نویگیٹ بائورل () کا طریقہ روٹر کا استعمال کرتے ہوئے کسی مخصوص یو آر ایل میں تشریف لے جانے کے لئے استعمال ہوتا ہے۔یہ آپ کو مکمل URL یا کسی رشتہ دار URL فراہم کرکے کسی راستے پر تشریف لے جانے کی اجازت دیتا ہے۔ یہاں آپ روٹر کو کس طرح استعمال کرسکتے ہیں۔ نیویگیٹ بائورل () طریقہ: ضروری انحصار درآمد کریں: اپنے جزو میں ، @کونیی/روٹر سے روٹر کلاس درآمد کریں:ٹائپ اسکرپٹ کوپی کوڈیم پورٹ {روٹر@'@کونیی/روٹر' سے راؤٹر کو اپنے جزو میں انجیکشن کریں: اپنے جزو کے کنسٹرکٹر میں ، `انجیکشن کریں`"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر لنک وِتھ ہریف ہدایت کا مقصد کیا ہے؟",
        "Answer": "روٹر لنک وِتھ ہریف ڈائریکٹیو کو کونیی روٹنگ میں استعمال کیا جاتا ہے تاکہ ایک کلک عنصر ، جیسے اینکر ٹیگ (<a>) کو کسی خاص راستے پر باندھ دیا جاسکے۔یہ آپ کو عنصر پر کلک کرکے کسی راستے پر تشریف لے جانے کی اجازت دیتا ہے ، جیسا کہ روٹر لنک لنک ہدایت کے ذریعہ فراہم کردہ سلوک کی طرح ہے۔ روٹر لنک وِتھ ہریفف ڈائریکٹیو کے مندرجہ ذیل مقاصد ہیں: روٹ نیویگیشن: روٹر لنک وِتھ ہریف ہدایت کسی عنصر کے HREF کو کسی خاص راستے پر باندھتا ہے۔جب عنصر پر کلک کیا جاتا ہے تو ، یہ نیویگیشن کو وابستہ روٹ پر متحرک کرتا ہے۔ یو آر ایل جنریشن: روٹر لنک وِتھ ہریف ڈائریکٹیو فراہم کردہ راستے اور کسی بھی وابستہ پیرامیٹرز کی بنیاد پر مناسب یو آر ایل تیار کرتا ہے۔ یہ یقینی بناتا ہے کہ پیدا شدہ یو آر ایل کو روٹنگ کنفیگریشن کے مطابق صحیح طور پر فارمیٹ کیا گیا ہے۔آپ کی درخواست"
    },
    {
        "Question": "آپ کونیی روٹنگ میں کینیکٹیو ٹیچیلڈ انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، کینیکٹیویٹیچیلڈ انٹرفیس ایک گارڈ بنانے کے لئے استعمال کیا جاتا ہے جس سے یہ طے ہوتا ہے کہ بچے کے راستے کو چالو کیا جاسکتا ہے یا نہیں۔یہ آپ کو اپنی مرضی کے مطابق منطق پر عمل کرکے بچوں کے راستوں کی حفاظت کرنے کی اجازت دیتا ہے تاکہ یہ چیک کیا جاسکے کہ روٹ کو چالو کیا جانا چاہئے یا نہیں۔ کینیکٹیویٹیٹیچیلڈ انٹرفیس کا استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: ایک گارڈ کلاس بنائیں جو کینیکٹیویٹیکلڈ انٹرفیس کو نافذ کرے: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {انجیکشن able 'سے'@ سے 'کونیی/کور '؛ درآمد {"
    },
    {
        "Question": "کونیی روٹنگ میں ایکٹیویٹیڈ راؤسٹنپ شاٹ اور روٹسٹیٹیسناپ شاٹ میں کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، ایکٹیویٹیڈ راؤسٹنپ شاٹ اور روٹسٹیٹس ناپ شاٹ دو اہم کلاسز ہیں جو موجودہ راستے اور روٹر اسٹیٹ کے بارے میں معلومات فراہم کرتے ہیں۔ان کے مختلف مقاصد ہیں اور وہ معلومات کے الگ الگ سیٹ فراہم کرتے ہیں: ایکٹیویٹیڈ راؤسٹنپ شاٹ: ایکٹیویٹیٹ روٹسناپ شاٹ کلاس فی الحال چالو روٹ کی حالت کی نمائندگی کرتی ہے۔ اس میں راستے کے پیرامیٹرز ، ڈیٹا ، یو آر ایل طبقات ، اور کسی بھی بچوں کے راستے کے بارے میں معلومات موجود ہیں۔جڑ سے روٹ کے درجہ بندی کی نمائندگی کرنا"
    },
    {
        "Question": "آپ کونیی روٹنگ میں استفسار پیرامس پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، استفسار پیرامس پراپرٹی یو آر ایل میں استفسار پیرامیٹرز تک رسائی اور ان میں ہیرا پھیری کے لئے استعمال کی جاتی ہے۔استفسار پیرامیٹرز کو سوالیہ نشان (؟) کے بعد یو آر ایل میں اضافی معلومات شامل کی جاتی ہیں ، جس سے آپ کو ڈیٹا یا کنفیگریشن کے اختیارات پاس کرنے کی اجازت ملتی ہے۔ استفسار پیرایمس پراپرٹی کو استعمال کرنے کے لئے ، ان اقدامات پر عمل کریں: ضروری ماڈیولز اور انحصار درآمد کریں: اپنے جزو فائل میں ، یقینی بنائیں کہ ، یقینی بنائیںکونیی کے روٹنگ سے متعلق ضروری ماڈیولز اور انحصار درآمد کرنا۔اس میں @کونیولر/روٹر سے ایکٹیویٹ روٹ کی درآمد شامل ہے۔ مثال کے طور پر درآمد کا بیان: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {ایکٹیویٹیڈ راؤٹ} سے ' @کونیی/راؤٹر' ؛ استفسار پیرامیٹرز تک رسائی حاصل کریں: اپنے جزو کی کلاس میں ، کنسٹرکٹر میں ایکٹیویٹیڈ روٹ سروس انجیکشن لگائیں۔یہ خدمت فی الحال چالو پیرامیٹرز کے بارے میں معلومات فراہم کرتی ہے ، جس میں استفسار پیرامیٹرز شامل ہیں۔.// یہاں استفسار کے پیرامیٹرز تک رسائی اور استعمال کریں ID = پیرامس ['ID'] ؛ Const فلٹر = پیرامس ['فلٹر'] ؛ کنسول.لاگ (ID) ؛ کنسول.لاگ (فلٹر) ؛}) ؛}} اس مثال میں ، کوئری پیرامس پراپرٹی کو ایکٹیویٹ روٹ سروس کے ذریعے حاصل کیا جاتا ہے۔ngoninit کے طریقہ کار کے اندر ، استفسار پیرامس پراپرٹی کو سبسکرائب کرنے کے طریقہ کار کو استعمال کرنے کی سبسکرائب کیا جاتا ہے۔اس سے آپ کو استفسار کے پیرامیٹرز میں تبدیلیوں پر ردعمل ظاہر کرنے اور اس کے مطابق عمل انجام دینے کی سہولت ملتی ہے۔ اپنے جزو میں استفسار کے پیرامیٹرز کا استعمال کریں: ایک بار جب آپ کو استفسار پیرامیٹرز تک رسائی حاصل ہوجائے تو ، آپ انہیں اپنے جزو کی منطق یا ٹیمپلیٹس میں استعمال کرسکتے ہیں۔آپ انہیں متغیرات پر تفویض کرسکتے ہیں ، انہیں سروس کالز پر منتقل کرسکتے ہیں ، یا ٹیمپلیٹ میں UI.example استعمال میں ڈسپلے کرسکتے ہیں: HTMLCOPY کوڈ <h1> مصنوعات کی تفصیلات </h1> <p> ID: {{ID}} </p> <p> فلٹر: {{فلٹر}} </p> اس مثال میں ، استفسار پیرامیٹرز ID اور فلٹر انٹرپولیشن ({{}}) کا استعمال کرتے ہوئے جزو کے ٹیمپلیٹ میں ظاہر ہوتے ہیں۔ جب آپ استفسار پیرامیٹرز کے ساتھ کسی راستے پر جاتے ہیں ،جیسے https://example.com/products؟id=123&filter=active ، استفسار پیرامس پراپرٹی آپ کو اپنے کونیی جزو میں ان پیرامیٹرز تک رسائی اور استعمال کرنے کی اجازت دیتی ہے۔ استفسار پیرامس پراپرٹی کو سبسکرائب کرکے اور سبسکرپشن کال بیک میں استفسار پیرامیٹرز تک رسائی حاصل کرنا ،آپ استفسار پیرامیٹرز میں تبدیلیوں پر رد عمل ظاہر کرسکتے ہیں اور اس کے مطابق اپنے جزو کو اپ ڈیٹ کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں انٹرفیس کو حل کرنے کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، حل انٹرفیس کو حل کرنے والے کو نافذ کرنے کے لئے استعمال کیا جاتا ہے ، جو آپ کو ڈیٹا لانے یا راستے کو چالو کرنے سے پہلے دوسرے متضاد کاروائیاں انجام دینے کی سہولت دیتا ہے۔ریزولو انٹرفیس کا مقصد کسی راستے کے لئے ڈیٹا پر انحصار کو حل کرنے کا ایک طریقہ فراہم کرنا ہے اور اس بات کو یقینی بنانا ہے کہ راستہ صرف اس وقت چالو ہوجائے جب تمام ضروری اعداد و شمار دستیاب ہوں۔ انٹرفیس کو حل کرنے کے لئے ، ان اقدامات پر عمل کریں: ایک حل کرنے والا کلاس بنائیں جو اس کو نافذ کرے۔عزم انٹرفیس: ٹائپ اسکرپٹ کوپی کوڈیم پورٹ {انجیکشن} سے '@کونیی/کور' ؛ درآمد {حل ، ایکٹیویٹیٹ راؤسٹنپ شاٹ"
    },
    {
        "Question": "آپ کونیی روٹنگ میں نیویگیشن اسٹارٹ ایونٹ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، نیویگیشن اسٹارٹ واقعہ اس وقت متحرک ہوجاتا ہے جب نیویگیشن ہونے لگے۔یہ آپ کو روٹ نیویگیشن ہونے سے پہلے اعمال انجام دینے یا منطق کا اطلاق کرنے کی اجازت دیتا ہے۔آپ نیویگیشن اسٹارٹ ایونٹ کو نیویگیشن کے عمل کو روکنے اور اس پر قابو پانے کے لئے استعمال کرسکتے ہیں۔ نیویگیشن اسٹارٹ ایونٹ کو استعمال کرنے کے لئے ، ان اقدامات پر عمل کریں: ضروری انحصار درآمد کریں: اپنی جزو فائل میں ، روٹر کلاس اور نیویگیشن اسٹارٹ ایونٹ کو @کونیی/روٹر سے درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ{راؤٹر ، نیویگیشن اسٹارٹ} سے '@کونیی/روٹر' ؛ روٹر انجیکشن کریں: اپنے جزو کے کنسٹرکٹر میں یا ایک علیحدہ طریقہ کے طور پر ، روٹر انجیکشن کریں: ٹائپ اسکرپٹ کوپی کوڈ"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر اور ایکٹیویٹ راؤٹ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، روٹر اور ایکٹیویٹ روٹ دو اہم کلاسز ہیں جو مختلف مقاصد کی خدمت کرتے ہیں اور مختلف فعالیت فراہم کرتے ہیں: روٹر: روٹر کلاس آپ کے کونیی ایپلی کیشن میں مجموعی طور پر نیویگیشن اور روٹنگ کا انتظام کرنے کا ذمہ دار ہے۔ یہ مختلف راستوں پر تشریف لے جانے ، رسائی کے طریقے فراہم کرتا ہے۔موجودہ روٹ کی معلومات ، اور نیویگیشن فلو کو کنٹرول کرنا۔ روٹر کلاس عام طور پر ایسے اجزاء یا خدمات میں انجکشن کی جاتی ہے جن کو نیویگیشن کی کارروائیوں یا رسائی کو انجام دینے کی ضرورت ہوتی ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں حل کی پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ، حل کی پراپرٹی کو کسی حل کنندہ کو راستے سے جوڑنے کے لئے استعمال کیا جاتا ہے۔حل کرنے والے آپ کو ڈیٹا لانے یا روٹ کو چالو کرنے سے پہلے دوسرے غیر متزلزل کاروائیاں انجام دینے کی اجازت دیتے ہیں۔حل کی پراپرٹی اس بات کو یقینی بناتی ہے کہ راستہ صرف اس وقت چالو ہوجائے جب تمام ضروری اعداد و شمار دستیاب ہوں۔ پراپرٹی کو حل کرنے کے ل these ، ان مراحل پر عمل کریں: ایک حل کرنے والا کلاس بنائیں جو حل کے انٹرفیس کو نافذ کرے: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {انجیکشن ایبل} سے '@کونیی/کور' سے 'import درآمد {حل کریں ، ایکٹیویٹڈ راؤسٹنپ شاٹ ، روٹسٹیٹس ناپ شاٹ ''@کونیی/راؤٹر 'سے' rxjs 'سے درآمد {مشاہدہ} سے درآمد {آپ کی ڈیٹااسروائس} سے'.}) برآمدی کلاس YourSolver کے عمل کو حل کرنے <کوئی بھی> {"
    },
    {
        "Question": "کونیی روٹنگ میں نیوی گیشن ایونٹ کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ، جب نیویگیشن کامیابی کے ساتھ مکمل ہوجاتا ہے تو نیوی گیشن ایونٹ کو متحرک کیا جاتا ہے۔اس سے یہ ظاہر ہوتا ہے کہ نیویگیشن کا عمل ختم ہوچکا ہے اور مطلوبہ راستہ چالو ہوگیا ہے۔ نیویگیشن ایونٹ کا مقصد یہ ہے کہ جب نیویگیشن کامیابی کے ساتھ مکمل ہو گیا ہو تو آپ کو مطلع کرنا ہے تاکہ آپ کوئی ضروری اقدامات انجام دے سکیں یا مکمل نیویگیشن کے لئے مخصوص منطق کا اطلاق کرسکیں۔نیوی گیشن ایونٹ کے لئے کچھ استعمال کے معاملات ہیں: صفحہ کے عنوان یا میٹا ڈیٹا کو اپ ڈیٹ کرنا: آپ نیویگیشننڈ ایونٹ کو سبسکرائب کرسکتے ہیں اور چالو روٹ کی بنیاد پر صفحہ عنوان یا میٹا ڈیٹا کو اپ ڈیٹ کرسکتے ہیں۔فی الحال فعال راستہ یا اپ ڈیٹ میٹا ڈیٹا برائے سرچ انجن آپٹیمائزیشن (SEO) کے مقاصد۔ تجزیہ اور ٹریکنگ: نیویگیشن ایونٹ کو تجزیات کے مقاصد کے لئے نیویگیشن ایونٹس کو ٹریک کرنے اور لاگ ان کرنے کے لئے استعمال کیا جاسکتا ہے۔ آپ نیویگیشن ایونٹ اور ٹرگر تجزیات کے واقعات کو سن سکتے ہیں یا بھیج سکتے ہیں یا بھیج سکتے ہیںتجزیات کا ڈیٹا"
    },
    {
        "Question": "کونیی روٹنگ میں آپ کینلوڈ انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں کینلوڈ انٹرفیس کسی ایسے گارڈ کو نافذ کرنے کے لئے استعمال کیا جاتا ہے جو کنٹرول کرتا ہے کہ آیا سست بھری ہوئی ماڈیول کو بھری جاسکتی ہے یا نہیں۔یہ آپ کو سست بھری ہوئی راستوں کو لوڈ ہونے سے بچانے کی اجازت دیتا ہے اگر کچھ شرائط پوری نہ ہوں ، جیسے توثیق یا اجازت کی جانچ پڑتال کریں۔ کونیی روٹنگ میں کینلوڈ انٹرفیس استعمال کرنے کے لئے ، ان اقدامات پر عمل کریں: ایک نیا گارڈ بنائیں جس میں کینلوڈ انٹرفیس کو نافذ کریں: ایک نیا بنائیں: ایک نیا بنائیں: ایک نیا بنائیںٹائپ اسکرپٹ کلاس اور اس کو کین لوڈ انٹرفیس کو نافذ کریں۔کینلوڈ انٹرفیس کے لئے آپ کو کینلوڈ () نامی ایک واحد طریقہ کار پر عمل درآمد کرنے کی ضرورت ہوتی ہے ، جو بولین ویلیو یا مشاہدہ کرنے والا/وعدہ واپس کرتا ہے جو بولین۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {انجیکشن} سے '@کونیی/کور' سے حل ہوتا ہے۔'@کونیی/راؤٹر' سے urlsegment} import درآمد {مشاہدہ} سے 'rxjs' سے@@انجیکشن ایبل ({فراہم کردہ: 'روٹ'}) ایکسپورٹ کلاس کینلوڈ گارڈ کے ذریعہ کینلوڈ {کین لوڈ (روٹ: روٹ ، طبقات: urlsegment:): بولین|مشاہدہ کرنے والا <بولین> |وعدہ <بولین> {// اپنی منطق کو یہاں پر عمل درآمد کریں تاکہ یہ معلوم کیا جاسکے کہ ماڈیول کو کنسنٹ کینٹیٹیٹ = ... ؛// یہاں اپنے چیک انجام دیں کین ایکٹیویٹیٹ کریں ؛}} کینلوڈ () کے طریقہ کار میں ، آپ اپنی کسٹم منطق کو نافذ کرسکتے ہیں تاکہ اس بات کا تعین کیا جاسکے کہ ماڈیول کو بھری ہوئی ہے یا نہیں۔آپ کسی بھی ضروری جانچ پڑتال کرسکتے ہیں ، جیسے توثیق ، اجازت ، یا آپ کی ضرورت ہوتی ہے۔ روٹنگ کنفیگریشن میں گارڈ کو رجسٹر کریں: اپنے روٹنگ ماڈیول یا کنفیگریشن فائل میں ، آپ کی حفاظت کرنا چاہتے ہیں جس کی حفاظت کرنا چاہتے ہیں اس کے لئے کین لوڈ پراپرٹی کی وضاحت کریں۔پچھلے مرحلے میں آپ نے جو گارڈ تشکیل دیا ہے اس کی قدر تفویض کریں۔ ٹائپ اسکرپٹ کوپی کوڈکونسٹ راستوں: راستے = [{راستہ: 'سست' ، لوڈچنین: () => درآمد ('./ سست/سست.موڈول')۔ پھر (((ایم) => ایم لازیموڈول) ، کینلوڈ: [کینلوڈ گارڈ] // روٹ کے لئے کینلوڈ گارڈ کو رجسٹر کریں}] اس مثال میں ، کینلوڈ گارڈ /کاہل والے راستے پر لاگو ہوتا ہے ، جو ایک کاہل سے بھرے ہوئے راستے ہے۔کین لوڈ پراپرٹی گارڈز کی ایک صف کی توقع کرتی ہے ، لہذا آپ ضرورت پڑنے پر متعدد گارڈز کو پاس کرسکتے ہیں۔ نوٹ کریں کہ گارڈ کو لیزی لوڈڈ ماڈیول کی بازیافت اور لوڈ ہونے سے پہلے ہی اس کی درخواست کی جائے گی۔اگر کین لوڈ () کا طریقہ غلط یا کسی قدر کو واپس کرتا ہے جو غلط سے حل ہوتا ہے تو ، ماڈیول کو لوڈ نہیں کیا جائے گا ، اور اس راستے پر نیویگیشن کو مسدود کردیا جائے گا۔ کینلوڈ انٹرفیس یقینی طور پر پر مبنی سست بھری ہوئی ماڈیولز کی لوڈنگ کو روکنے کا ایک طریقہ فراہم کرتا ہے۔شرائطیہ خاص طور پر ایسے منظرناموں کے لئے مفید ہے جہاں آپ کچھ راستوں کی حفاظت کرنا چاہتے ہیں اور اس بات کو یقینی بنانا چاہتے ہیں کہ متعلقہ ماڈیول کو لوڈ کرنے سے پہلے ضروری حالات کو پورا کیا جائے۔"
    },
    {
        "Question": "آپ کونیی میں NG-Container ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں این جی-کنٹینر ہدایت ایک ساختی ہدایت ہے جو آپ کو ڈوم میں ایک اضافی عنصر متعارف کرائے بغیر متعدد عناصر کو ایک ساتھ گروپ کرنے کی اجازت دیتا ہے۔یہ مفید ہے جب آپ ساختی ہدایات ، جیسے NGIF ، NGFOR ، یا NGSWICH ، کو متعدد عناصر پر <div> یا کسی دوسرے کنٹینر میں لپیٹے بغیر لاگو کرنا چاہتے ہیں۔ یہاں کہ آپ کونیی میں NG-Container ہدایت نامہ استعمال کرسکتے ہیں: مشروطNGIF کے ساتھ پیش کرنا: htmlcopy کوڈ <ng-container *ngif = \"حالت\"> <!-جب حالت درست ہو تو عناصر مہیا کیے جائیں-> <p> مواد پیش کیا جائے </p> <اسپین> ایک اور عنصر <//span> </ng-container> `ng-container کے اندر عناصر"
    },
    {
        "Question": "کونیی میں ان پٹ اور آؤٹ پٹ سجاوٹ کا مقصد کیا ہے؟",
        "Answer": "کونیی میں ، @ان پٹ اور @آؤٹ پٹ ڈیکوریٹرز کو بالترتیب کسی جزو کے ان پٹ اور آؤٹ پٹ خصوصیات کی وضاحت کرنے کے لئے استعمال کیا جاتا ہے۔وہ جزو مواصلات میں ایک اہم کردار ادا کرتے ہیں اور اعداد و شمار کو کسی جزو میں اور باہر جانے کی اجازت دیتے ہیں۔اسے جزو کی ایک ان پٹ پراپرٹی بنائیں ، مطلب یہ اپنے والدین کے اجزاء سے اقدار کو قبول کرسکتا ہے۔ اس سے ڈیٹا سے منسلک پراپرٹی تیار ہوتی ہے ، جس سے والدین کے جزو کو اس کے استعمال سے ڈیٹا باندھنے کے قابل بناتا ہے۔"
    },
    {
        "Question": "آپ کونیولر میں ڈوم میں ترمیم کرنے کے لئے رینڈر 2 کلاس کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، رینڈرر 2 کلاس ڈوم (دستاویز آبجیکٹ ماڈل) کو محفوظ اور موثر طریقے سے ترمیم کرنے کے لئے استعمال کیا جاتا ہے۔یہ عناصر ، صفات اور اسلوب کو جوڑ توڑ کرنے کا ایک پلیٹ فارم-اگنوسٹک طریقہ فراہم کرتا ہے ، جبکہ بنیادی عمل درآمد کی تفصیلات کو خلاصہ کرتے ہوئے۔ کونیی میں ڈوم میں ترمیم کرنے کے لئے رینڈر 2 کلاس کا استعمال کریں ، ان اقدامات پر عمل کریں۔"
    },
    {
        "Question": "کونیی میں @انجیکشن ڈیکوریٹر کا مقصد کیا ہے؟",
        "Answer": "کونیی میں @انجیک ایبل ڈیکوریٹر انحصار انجیکشن (ڈی آئی) کے امیدوار کی حیثیت سے کلاس کو نشان زد کرنے کے لئے استعمال ہوتا ہے۔یہ کونیی انحصار انجیکشن سسٹم میں ایک اہم کردار ادا کرتا ہے اور میٹا ڈیٹا مہیا کرتا ہے کہ کونیی کو کسی خاص کی مثال بنانے اور انجیکشن کرنے کی ضرورت ہے۔"
    },
    {
        "Question": "آپ کونیولر میں اونائٹ اور اونڈسٹروی انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، اونائٹ اور آن ڈسٹروی انٹرفیس کو بالترتیب جزو کی ابتدا اور تباہی کے ل he لائف سائیکل ہکس کو نافذ کرنے کے لئے استعمال کیا جاتا ہے۔شروع کیا گیا ہے اور اس کے آدانوں کو پابند کیا گیا ہے۔ انینٹ انٹرفیس کا استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: @کونیی/کور سے او این این آئی ٹی انٹرفیس درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ { @ @کونیی/کور 'سے' @کونیی/کور 'سے اپنے جزو کی کلاس میں اونینٹ انٹرفیس کو نافذ کریں۔: ٹائپ اسکرپٹ کوپی کوڈ ای ایکسپورٹ کلاس مائی کمپوینٹ نے oninit {ngoninit () {// ابتدائی کام انجام دینے کے لئے یہاں پر عمل درآمد کیا} n ngoninit () طریقہ کے اندر ضروری منطق کو نافذ کریں: ٹائپ اسکرپٹ کوپی کوڈینگونیٹ () {// ابتدائی کام انجام دیں ، جیسے اعداد و شمار کو بازیافت کرنا یا ترتیب دینا یا ترتیب دینا یا ترتیب دیناسبسکرپشنز} ngoninit () کا طریقہ ایک بار کہا جاتا ہے ، جزو کے آغاز کے فورا. بعد اور اس کے آدانوں کا پابند ہوجاتا ہے۔یہ عام طور پر ابتدائی کاموں کو انجام دینے کے لئے استعمال کیا جاتا ہے جیسے سرور سے ڈیٹا بازیافت کرنا ، سبسکرپشنز ترتیب دینا ، یا جزو کی خصوصیات کو شروع کرنا۔جزو کو ڈوم سے تباہ اور ہٹا دیا جاتا ہے۔ آن ڈسٹروی انٹرفیس کا استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: @کونیی/کور سے آن ڈیسٹروی انٹرفیس درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ { @کونیی/کور 'سے' @کونیی/کور 'سے اپنے جزو کلاس میں آن ڈسٹروی انٹرفیس کو نافذ کریں۔: ٹائپ اسکرپٹ کوپی کوڈ ای ایکسپورٹ کلاس مائی کمپوینٹ نے او این ڈی اسٹروی {نگونڈسٹروی () {// یہاں صفائی کے کام انجام دیں} یہاں Ngondestroy () طریقہ کے اندر کلین اپ لاجک کو نافذ کریں ()وسائل کو جاری کرنا} Ngondestroy () طریقہ کو جزو کو تباہ کرنے اور DOM سے ہٹانے سے ٹھیک پہلے کہا جاتا ہے۔یہ عام طور پر صفائی کے کاموں کو انجام دینے کے لئے استعمال کیا جاتا ہے جیسے سبسکرپشنز سے ان سبسکرائب کرنا ، وسائل جاری کرنا ، یا جاری کاموں کو منسوخ کرنا۔ اونائٹ اور اونٹسٹروی انٹرفیس کو نافذ کرنے اور اس سے متعلقہ لائف سائیکل ہک طریقوں (نگونینٹ () اور نگسٹروی ()) کی وضاحت کرنے کے لئے ، آپ اس طرز عمل کو اپنی مرضی کے مطابق بنا سکتے ہیں۔ابتداء اور تباہی کے مراحل کے دوران آپ کے اجزاء میں سے۔اس سے آپ کو مناسب جزو کی فعالیت اور وسائل کے انتظام کو یقینی بنانے کے ل any کسی بھی ضروری سیٹ اپ کاموں یا صفائی کے کام انجام دینے کی سہولت ملتی ہے۔"
    },
    {
        "Question": "کونیی میں واقعہ پیش کرنے والے اور مضمون کی کلاسوں میں کیا فرق ہے؟",
        "Answer": "اینگولر میں ایونٹیمیٹر اور سبجیکٹ کلاس دونوں ہی واقعہ سے چلنے والے مواصلات اور قابل مشاہدہ نمونوں کو نافذ کرنے کے لئے استعمال ہوتے ہیں۔تاہم ، ان کی اپنی فعالیت اور استعمال کے معاملات میں کچھ اختلافات ہیں۔ ایونٹیمیٹر: ایونٹیمیٹر ایک کلاس ہے جو کونیی کے ذریعہ فراہم کیا جاتا ہے اور بنیادی طور پر جزو مواصلات کے لئے استعمال ہوتا ہے ، خاص طور پر بچوں اور والدین کے اجزاء کے مابین کسٹم ایونٹ کے پابند ہونے کے لئے۔خاص طور پر واقعات کو خارج کرنے کے لئے ایک اضافی emit () طریقہ"
    },
    {
        "Question": "آپ کونیی میں NGIF ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، NGIF ہدایت کو مشروط طور پر پیش کیا جاتا ہے یا کسی دیئے گئے اظہار کی بنیاد پر کسی عنصر کو DOM سے ہٹانے کے لئے استعمال کیا جاتا ہے۔یہ آپ کو مخصوص حالتوں کی بنیاد پر متحرک عناصر کی مرئیت پر قابو پانے کی اجازت دیتا ہے۔ یہاں کہ آپ این جی آئی ایف کی ہدایت کو کونیی میں کس طرح استعمال کرسکتے ہیں: کامن ماڈل کو درآمد کریں: اس بات کو یقینی بنائیں کہ آپ نے ماڈیول میں کامن ماڈل کو درآمد کیا ہے جہاں آپ NGIF ہدایت کو استعمال کرنا چاہتے ہیں۔"
    },
    {
        "Question": "کونیی میں ngzone سروس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں این جی زون سروس کسی مخصوص زون کے اندر کوڈ پر عمل درآمد کا ایک طریقہ فراہم کرتی ہے ، جسے \"کونیی زون\" بھی کہا جاتا ہے۔کونیی زون ایک ایسا طریقہ کار ہے جو غیر متزلزل کاموں کو پھانسی دینے اور اس کا انتظام کرتا ہے اور اس بات کو یقینی بناتا ہے کہ اس سے وابستہ تبدیلی کا پتہ لگانے اور UI کی تازہ کاریوں کو صحیح طریقے سے پیش کیا جائے۔ این جی زون سروس کا بنیادی مقصد کونیی اور بیرونی لائبریریوں یا API کے مابین بہتر انضمام کو قابل بنانا ہے جو متحرک ہوسکتا ہے۔کونیی کی معمول کی تبدیلی کا پتہ لگانے کے بہاؤ سے باہر متضاد آپریشنز یا واقعات"
    },
    {
        "Question": "آپ کونییولر میں کیولیوپائپ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، کیولویلیپائپ ایک بلٹ ان پائپ ہے جو کسی شے کی خصوصیات پر تکرار کرنے اور کلیدی قیمت کے جوڑے کی ایک صف کو واپس کرنے کے لئے استعمال ہوتا ہے۔یہ عام طور پر کسی شے کے مندرجات کو کلیدی قدر کی شکل میں ظاہر کرنے کے لئے استعمال ہوتا ہے۔ کونیی میں کیوالیوپائپ کا استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: @کونیی/عام سے کیوالیوپائپ درآمد کریں: اپنی جزو فائل میں درج ذیل درآمد کا بیان شامل کریں (جیسے ،app.compointe.ts): کاپی کوڈ"
    },
    {
        "Question": "کونیی میں اجزاء فیکٹری ریرسولور اور ویو کانٹینریف کلاسوں میں کیا فرق ہے؟",
        "Answer": "اجزاء فیکٹری ریرسولور اور ویو کانٹینیرف دونوں کونیی میں دونوں اہم کلاس ہیں جو استعمال ہوتے ہیں"
    },
    {
        "Question": "کونیی میں عنصر بنانے کے لئے آپ رینڈر 2 کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، غلطی کا ہینڈلر انٹرفیس درخواست میں ہونے والی غلطیوں کو سنبھالنے کے لئے استعمال ہوتا ہے۔یہ غلطی سے نمٹنے کو اپنی مرضی کے مطابق بنانے اور اس کی وضاحت کرنے کا ایک طریقہ فراہم کرتا ہے کہ کس طرح غلطیوں کو لاگ ان ، ڈسپلے ، یا اس پر کارروائی کی جانی چاہئے۔ کونیی میں غلطیوں کو سنبھالنے کے لئے ایرر ہینڈلر انٹرفیس کا استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: ایک کسٹم غلطی ہینڈلر کلاس بنائیں: ایک نئی ٹائپ اسکرپٹ کلاس بنائیں جو اس کو نافذ کرے جو اس کو نافذ کرے جو ایک نئی ٹائپ اسکرپٹ کلاس بنائیں جو عمل کریں۔غلطی ہینڈلر انٹرفیس۔یہ کلاس کسٹم غلطی کو سنبھالنے والی منطق کو سنبھالنے کی وضاحت کرے گی۔('ایک غلطی واقع ہوئی ہے:' ، غلطی) ؛// اضافی غلطی کو سنبھالنے والے کوڈ ...}} ہینڈل ایرر کے طریقہ کار میں ، آپ اس کی وضاحت کرسکتے ہیں کہ غلطی کو کس طرح سنبھالا جانا چاہئے۔آپ غلطی کو لاگ ان کرسکتے ہیں ، صارف کو ایک غلطی کا پیغام ڈسپلے کرسکتے ہیں ، سرور کو غلطی کی رپورٹیں بھیج سکتے ہیں ، یا کسی اور مطلوبہ کارروائیوں کو انجام دے سکتے ہیں۔ کسٹم ایرر ہینڈلر کو تیار کریں: آپ کی درخواست کے روٹ ماڈیول (عام طور پر app.module.ts) میں ، فراہم کریںکسٹم ایرر ہینڈلر کو فراہم کنندگان میں اس کی وضاحت کرکے۔{فراہم کریں: ایرر ہینڈلر ، یو ایس سی ایل اے ایس ایس: کسٹم ایرر ہینڈلر}]}) ایکسپورٹ کلاس ایپ موڈول {{کسٹم ایرر ہینڈلر کو غلطی ہینڈلر ٹوکن کا استعمال کرتے ہوئے فراہم کرکے ، اینگولر آپ کے کسٹم نفاذ کو پوری ایپلی کیشن میں غلطیوں کو سنبھالنے کے لئے استعمال کرے گا۔ نوٹ: اگر آپ ڈیفالٹ کو تبدیل کرنا چاہتے ہیں۔مکمل طور پر سلوک کو سنبھالنے میں غلطی ، آپ اپنے ماڈیول میں فراہم کنندگان کی سرنی سے غلطی کو ختم کرنے والے ٹوکن کو چھوڑ سکتے ہیں۔یہ پہلے سے طے شدہ کونیی غلطی ہینڈلر کو مکمل طور پر اوور رائڈ کرے گا۔ اپنی مرضی کے مطابق غلطی کے ہینڈلر کے ساتھ ، آپ کی درخواست کے اندر موجود کسی بھی طرح کی غلطیوں کو آپ کے کسٹم ایرر ہینڈلر کلاس کے ہینڈل ایرر کے طریقہ کار میں منتقل کیا جائے گا۔اس کے بعد آپ اس طریقہ کار کے اندر مطلوبہ غلطی سے نمٹنے کے رویے کی وضاحت کرسکتے ہیں۔ غلطی ہینڈلر انٹرفیس کو نافذ کرنے اور اپنی مرضی کے مطابق غلطی کو ہینڈلر فراہم کرنے کے بعد ، آپ کو اس بات پر عمدہ کنٹرول ہے کہ آپ کی کونیی ایپلی کیشن میں غلطیوں کو کس طرح سنبھالا جاتا ہے۔اس سے آپ غلطی کو سنبھالنے ، غلطی کے پیغامات کو اپنی مرضی کے مطابق بنانے ، یا درپیش مخصوص غلطی کے منظرناموں کی بنیاد پر اضافی اعمال انجام دینے کی اجازت دیتے ہیں۔"
    },
    {
        "Question": "کونیی میں غلطی ہینڈلر انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں غلطی ہینڈلر انٹرفیس کا مقصد یہ ہے کہ کونیی ایپلی کیشن پر عمل درآمد کے دوران رونما ہونے والی غلطیوں کو سنبھالنا اور اس کی اطلاع دینا ہے۔یہ ڈویلپرز کو کسٹم غلطی سے نمٹنے کی وضاحت کرنے کی اجازت دیتا ہے"
    },
    {
        "Question": "آپ کونیولر میں کلیدی ویلیوڈفرز کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں کلیدی ویلیوڈفرز کلاس استعمال کی جاتی ہے"
    },
    {
        "Question": "کونیی میں مقامی اور عالمی اسکوپس میں کیا فرق ہے؟",
        "Answer": "کونیی میں ، مقامی اور عالمی اسکوپس متغیرات اور اجزاء کے لئے مختلف سطحوں کی نمائش اور رسائ کا حوالہ دیتے ہیں۔ لوکل اسکوپ: مقامی دائرہ کار سے مراد ایک مخصوص جزو یا ٹیمپلیٹ کے اندر متغیر اور اجزاء کی مرئیت اور رسائ ہے۔یا ٹیمپلیٹ صرف اس جزو یا ٹیمپلیٹ کے اندر ہی قابل رسائی ہے۔ لوکل متغیرات کو لیٹ کی ورڈ کا استعمال کرتے ہوئے اعلان کیا جاتا ہے اور مخصوص ٹیمپلیٹ یا جزو میں اسکوپ کیا جاتا ہے جہاں ان کی وضاحت کی جاتی ہے۔ لوکل اجزاء جزو کے میٹا ڈیٹا کے اندر اعلان کیے جاتے ہیں @اجزاء ڈیکوریٹر۔ لوکل اسکوپ فراہم کرتا ہے۔انکپسولیشن اور مختلف حصوں کے مابین متغیر یا جزو کے نام کے تنازعات کو روکنے میں مدد کرتا ہے"
    },
    {
        "Question": "آپ کونیی میں این جی اسٹائل ہدایت کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں این جی اسٹائل ہدایت آپ کو اپنے جزو میں پراپرٹیز کی اقدار کی بنیاد پر کسی عنصر پر متحرک طور پر ان لائن شیلیوں کا اطلاق کرنے کی اجازت دیتی ہے۔یہاں آپ این جی اسٹائل کو کس طرح استعمال کرسکتے ہیں"
    },
    {
        "Question": "کونیی میں Iterabledfers کلاس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں ، Iterabledfers کلاس تبدیلی کا پتہ لگانے کے طریقہ کار کا ایک حصہ ہے اور اس کا استعمال قابل (جمع کرنے کی طرح) اشیاء میں ہونے والی تبدیلیوں کو ٹریک کرنے کے لئے کیا جاتا ہے۔یہ اریوں ، سیٹوں ، اور کسٹم ایٹ ایبل چیزوں جیسے مجموعوں میں تبدیلیوں کا پتہ لگانے اور سنبھالنے کا ایک طریقہ فراہم کرتا ہے۔ آئٹریبلفرز کلاس کا مقصد مختلف اقسام کی مختلف اقسام میں تبدیلیوں کا سراغ لگانے کے لئے حکمت عملی کی رجسٹری فراہم کرنا ہے۔کونیی اس رجسٹری کا استعمال اس بات کا تعین کرنے کے لئے کرتا ہے کہ کس طرح مختلف اقسام کے ذخیرے میں تبدیلیوں کا موثر انداز میں پتہ لگایا جائے۔ تکرار شدہ اففر کلاس عام طور پر کونیی کے ذریعہ اندرونی طور پر استعمال ہوتا ہے اور ان کے ایپلی کیشن کوڈ میں ڈویلپرز کے ذریعہ براہ راست استعمال نہیں ہوتا ہے۔تاہم ، یہ کونیی کے تبدیلی کا پتہ لگانے کے نظام میں ایک اہم کردار ادا کرتا ہے۔ یہاں Iterabledfers کلاس کے بارے میں کچھ اہم نکات ہیں: یہ کونیی کے تبدیلی کا پتہ لگانے کے نظام کا ایک حصہ ہے ، جو جزو کے اعداد و شمار میں ہونے والی تبدیلیوں کی بنیاد پر نظریہ کو موثر انداز میں پتہ لگانے اور اپ ڈیٹ کرنے کا ذمہ دار ہے۔.یہ Iterabledfers کلاس مختلف اقسام کے قابل اشیاء ، جیسے سرے ، سیٹ ، اور کسٹم Iterables میں تبدیلیوں کا سراغ لگانے کے لئے پہلے سے طے شدہ حکمت عملیوں کا ایک مجموعہ مہیا کرتا ہے۔ Iterabledifers میں ایک حکمت عملی Iterablediffer انٹرفیس کا اطلاق کرتی ہے ، جو ایٹ ایبل آبجیکٹ میں تبدیلیوں کو ٹریک کرنے اور ان کا پتہ لگانے کے طریقوں کی وضاحت کرتی ہے۔.انگولر کی تبدیلی کا پتہ لگانے کا طریقہ کار Iterabledifers رجسٹری سے مناسب حکمت عملی کا استعمال کیا جاتا ہے جس کی بنیاد پر Iterablefers رجسٹری کا مشاہدہ کیا جارہا ہے۔کونیی میں کلاس قابل تقلید اشیاء میں تبدیلیوں کو ٹریک کرنے کے لئے حکمت عملی فراہم کرنے کے لئے ذمہ دار ہے۔یہ کونیی کے تبدیلی کا پتہ لگانے کے نظام کا ایک کلیدی جزو ہے اور مجموعوں میں تبدیلیوں کی بنیاد پر نظریہ کو موثر انداز میں پتہ لگانے اور اپ ڈیٹ کرنے میں ایک اہم کردار ادا کرتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں NGFORF ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں NGFORF ہدایت کسی مجموعہ پر تکرار کرنے اور مجموعہ میں ہر آئٹم کے لئے HTML عناصر تیار کرنے کے لئے استعمال ہوتی ہے۔یہاں آپ NGFORF ہدایت کو کس طرح استعمال کرسکتے ہیں: اپنے اجزاء کے ٹیمپلیٹ میں NGFOROF ہدایت کا استعمال کسی مجموعہ پر تکرار کرنے کے لئے۔ پی ایچ پی کوپی کوڈ <ul> <li *ngfor = \"آئٹمز کی آئٹم\"> {{آئٹم}} </li> </li>/ul> اس مثال میں ، NGFORF ہدایت کو *NGFOR SYNTAX کے ساتھ استعمال کیا جاتا ہے تاکہ آئٹمز کے ذخیرے پر تکرار کیا جاسکے۔مجموعہ میں ہر آئٹم کے لئے ، ایک <li> عنصر تیار ہوتا ہے ، اور"
    },
    {
        "Question": "کونیی میں عنصر ریف اور ٹیمپلیٹریف کے درمیان کیا فرق ہے؟",
        "Answer": "عنصر ریف اور ٹیمپلیٹیرف مختلف مقاصد کے ساتھ کونیی میں دو الگ الگ کلاس ہیں: عنصر ریف: عنصر ریف کلاس کسی جزو یا ہدایت کے بنیادی آبائی عنصر تک رسائی حاصل کرنے کے لئے استعمال ہوتا ہے۔ AlementRef کسی جزو یا ہدایت سے وابستہ DOM عنصر کے ساتھ براہ راست بات چیت کرنے کا ایک طریقہ فراہم کرتا ہے۔.یہ عام طور پر ایسے منظرناموں میں استعمال ہوتا ہے جہاں آپ کو براہ راست ہیرا پھیری یا مقامی عنصر کی خصوصیات اور طریقوں تک رسائی حاصل کرنے کی ضرورت ہوتی ہے۔ براہ راست ڈوم ہیرا پھیری کے ل Alelement عنصر کی سفارش نہیں کی جاتی ہے۔اس کے بجائے ، یہ عام طور پر کسی عنصر کے حوالہ کو دوسرے APIs یا تیسری پارٹی کی لائبریریوں کو منتقل کرنے کے لئے استعمال کیا جاتا ہے جس میں ڈوم تک رسائی کی ضرورت ہوتی ہے۔"
    },
    {
        "Question": "آپ کونیی میں پائپٹرانسفارم انٹرفیس کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں پائپٹرانسفارم انٹرفیس کا استعمال کسٹم پائپ بنانے کے لئے کیا جاتا ہے جو کونیی ٹیمپلیٹس میں ڈیٹا کو تبدیل کرتے ہیں۔یہاں آپ پائپٹرانسفارم انٹرفیس کو کس طرح استعمال کرسکتے ہیں: '@angular/core'.typescriptcopy کوڈیمپورٹ {pipetransfort سے'@کونیی/کور 'سے PIIPTransform انٹرفیس درآمد کریں ؛'@کونیی/کور 'سے ؛ ایک نئی کلاس بنائیں جو پائپٹرانسفارم انٹرفیس۔{تبدیلی (قدر: کوئی ، ... آرگس: کوئی []): کوئی {// تبدیلی کی منطق جاتی ہے"
    },
    {
        "Question": "کونیی میں Iterablechanges انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں Iterablechanges انٹرفیس تبدیلی کا پتہ لگانے کے دوران کسی بھی (جیسے سرنی ، سیٹ ، یا نقشہ) میں پائے جانے والی تبدیلیوں کو ٹریک کرنے اور رپورٹ کرنے کے لئے استعمال کیا جاتا ہے۔یہ قابل تقلید میں شامل ، ہٹائے گئے ، اور ترمیم شدہ اشیاء کے بارے میں معلومات فراہم کرتا ہے ، جس سے آپ ان تبدیلیوں کی بنیاد پر عمل انجام دینے کی اجازت دیتے ہیں۔ Iterablechanges انٹرفیس تبدیلیوں پر تکرار کرنے اور ان کے بارے میں معلومات کو بازیافت کرنے کے ل several کئی طریقوں اور خصوصیات کی وضاحت کرتا ہے۔کچھ قابل ذکر طریقوں اور خصوصیات میں شامل ہیں: foreachaddeditem (fn: (ریکارڈ: Iterablechangerecord <v>) => باطل): Itable میں شامل کردہ اشیاء پر تکرار کرتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں مشاہدہ کرنے والے کے ساتھ ASYNC/AWAT SYNTAX کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں مشاہدہ کے ساتھ ASYNC/AWAT SYNTAX کو استعمال کرنے کے ل you ، آپ کو ان اقدامات پر عمل کرنے کی ضرورت ہے: 'RXJS' لائبریری سے ضروری کلاس اور افعال درآمد کریں۔آپریٹرز '؛ `"
    },
    {
        "Question": "کونیولر میں ایپ_اینیٹیلائزر ٹوکن کا مقصد کیا ہے؟",
        "Answer": "کونییول میں ایپ_اینائٹلائزر ٹوکن کا استعمال کسی درخواست کو شروع کرنے سے پہلے شروع کرنے کا ایک طریقہ فراہم کرنے کے لئے کیا جاتا ہے۔اس سے آپ کو کچھ افعال پر عمل درآمد کرنے یا کچھ ابتدائی کام انجام دینے کی اجازت ملتی ہے اس سے پہلے کہ ایپلی کیشن مکمل طور پر بوٹسٹریپ ہوجائے۔درخواست کی ابتدا کے دوران پھانسی دی گئی۔یہ افعال بوٹسٹریپ کے عمل کے دوران کونیی کے ذریعہ عمل میں لائے جاتے ہیں ، اس سے پہلے کہ ایپلی کیشن رینڈرنگ شروع ہوجائے۔ استعمال کرنے کا مقصد"
    },
    {
        "Question": "کونیی ایپلی کیشن کو بوٹسٹریپ کرنے کے لئے آپ پلیٹ فارم بروزرڈیامک طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "پلیٹ فارم براؤزرڈینیٹک طریقہ کا استعمال کرتے ہوئے کونیی ایپلی کیشن کو بوٹسٹریپ کرنے کے لئے ، ان اقدامات پر عمل کریں: @کونیی/پلیٹ فارم-براؤزر-ڈائنامک پیکیج سے ضروری ماڈیول اور افعال درآمد کریں۔{ایپموڈول} سے 'ایپموڈول آپ کے کونیی ایپلی کیشن کے روٹ ماڈیول کی نمائندگی کرتا ہے۔"
    },
    {
        "Question": "کونیولر میں ویوچولین اور کوئیر لسٹ میں کیا فرق ہے؟",
        "Answer": "کونیی میں ، ویوچولین اور کوئیر لسٹ مختلف مقاصد کے لئے استعمال ہوتے ہیں اور ان میں کچھ اہم اختلافات ہوتے ہیں: ویوچلڈین: ویوچلڈین: ایک ایسا سجاوٹ ہے جو آپ کو ایک یا زیادہ بچوں کے عناصر یا کسی جزو کے سانچے میں ہدایت کے لئے استفسار کرنے کی اجازت دیتا ہے۔ یہ عناصر تک رسائی کے لئے استعمال ہوتا ہے یاہدایتیں جو کسی جزو کے نظارے میں دی جاتی ہیں۔ ویوچیلینین ایک استفسار لسٹ آبجیکٹ کو لوٹاتا ہے جو مماثل عناصر یا ہدایت ناموں کے ذخیرے کی نمائندگی کرتا ہے۔ عام طور پر اس وقت استعمال کیا جاتا ہے جب آپ کسی جزو کے سانچے کے اندر مخصوص عناصر یا ہدایت کے ساتھ بات چیت کرنا چاہتے ہیں۔"
    },
    {
        "Question": "آپ کونیی میں حرکت پذیری بلڈر سروس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، حرکت پذیری بلڈر سروس کو پروگرام کے مطابق متحرک تصاویر بنانے کے لئے استعمال کیا جاتا ہے۔یہ وقت ، ترتیب ، اور اسٹائل پر ٹھیک دانے والے کنٹرول کے ساتھ پیچیدہ متحرک تصاویر بنانے کے لئے ایک روانی والا API فراہم کرتا ہے۔یہاں آپ حرکت پذیری بلڈر سروس کو کس طرح استعمال کرسکتے ہیں: @کونیی/متحرک تصاویر پیکیج سے ضروری کلاسوں کو درآمد کریں۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ { @ @کونیی/متحرک تصاویر سے متحرک ، متحرک the انیمیشن بلڈر سروس کو اپنے اجزاء یا خدمت میں انجیکشن کریں۔"
    },
    {
        "Question": "کونیی میں inmemorywebapimodule کا مقصد کیا ہے؟",
        "Answer": "کونیی میں inmemorywebapimodule ایک ماڈیول ہے جو کونیی ان میموری-ویب-API لائبریری کے ذریعہ فراہم کیا جاتا ہے۔اس کا استعمال کونیی ایپلی کیشن کے ذریعہ کی گئی HTTP درخواستوں کو روکنے اور میموری میں ردعمل فراہم کرکے بیک اینڈ API کی نقالی کے لئے استعمال کیا جاتا ہے۔ انیموری ویوپیموڈول کا مقصد فرنٹ اینڈ ڈویلپمنٹ اور ٹیسٹنگ کی سہولت فراہم کرنا ہے جس میں ڈویلپرز کو میموری میں ڈیٹا اسٹور اور مذاق کے ساتھ کام کرنے کی اجازت دی جاسکتی ہے۔API کے جوابات ، کسی حقیقی بیکینڈ سرور کی ضرورت کے بغیر۔یہ پروٹو ٹائپ اور کونیی ایپلی کیشنز تیار کرنے کا ایک آسان طریقہ فراہم کرتا ہے جو اصل پسدید کے نفاذ سے پہلے کسی API کے ساتھ تعامل کرتے ہیں۔ یہاں یہ ہے کہ کس طرح inmemorywebapimodule عام طور پر استعمال ہوتا ہے: کونیی ان میموری-ویب-API لائبریری کو انسٹال کریں: واسم کوپی کوڈن پی ایم انسٹال کریں کونیولر-میموری-ویب-اپیکریئٹ ایک فرضی ڈیٹا سروس: ایک ٹائپ اسکرپٹ کلاس بنائیں جو مطلوبہ API اختتامی نکات اور ڈیٹا کو نافذ کرے۔یہ کلاس آپ کے کونیی ایپلی کیشن کے لئے مذاق کے پسدید کے طور پر کام کرے گی۔ ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {inmemorydbservice} سے 'کونیی ان میموری-ویب-اپی' ؛ ایکسپورٹ کلاس موکڈیٹاسروائس انیمیموریڈبسروئس {تخلیق بی () {کونٹی ڈیٹا = {// ڈیفائن آپ کے مراکزیہاں ڈیٹا} ؛ڈیٹا ڈیٹا ؛}} تخلیق بی () کا طریقہ inmemorydbservice انٹرفیس کے ذریعہ ضروری ہے۔یہ ایک ایسی شے کو لوٹاتا ہے جو میموری کے ڈیٹا بیس کی نمائندگی کرتا ہے ، عام طور پر ان مجموعوں یا وسائل پر مشتمل ہوتا ہے جس کے ساتھ آپ کی ایپلی کیشن بات چیت کرے گی۔ انیموری ویوپیموڈول کی تشکیل اور تشکیل کریں: آپ کے ایپلیکیشن کے ماڈیول میں ، انیموری ویوپیموڈول کو درآمد کریں اور موکڈیٹاسروئس کو پسول کے نفاذ کے طور پر فراہم کریں۔'@کونیی/کور' سے ngmodule} امپورٹ {httpclientModule} سے '@کونیی/عام/http' ؛ درآمد {inmemorywebapimodule 'سے' کونیی ان میموری-ویب-اے پی آئی '؛ امپورٹ {MockDataserce} سے' ./pathpl/to/mock-data.service '؛@ngmodule ({درآمدات: [httpclientModule ، inmemorywebapimodule.forroot (MockDataservice)] ، // دیگر ماڈیول کنفیگریشن ...}) برآمدی کلاس ایپموڈول {in امیوموریوپول {in inmemeorywebule {in inmemeorywebuly} inmemeoryvele}MockDataservice ، آپ اپنی کونیی ایپلی کیشن کے لئے میموری میں API تخروپن کو قابل بناتے ہیں۔ HTTP کی درخواستوں کو معمول کے مطابق استعمال کریں: اپنے درخواست کے اجزاء یا خدمات میں ، @کونیی/عام/HTTP سے HTTPClient کا استعمال کرتے ہوئے HTTP درخواستیں بنائیں کیونکہ عام طور پر A کے ساتھ بات چیت کرتے وقت آپ کریں گے۔اصلی api.typescriptcopy کوڈیمپورٹ {httpclient} سے '@کونیی/کامن/ایچ ٹی ٹی پی' ؛ ایکسپورٹ کلاس میسروائس {کنسٹرکٹر (نجی HTTP: httpclient) {} getData () {واپس کریں this http.get ('/api/ڈیٹا') ؛''/API/ڈیٹا 'URL کو inmemorywebapimodule کے ذریعہ روکا جائے گا اور آپ کے Mockdataservice میں بیان کردہ اسی اعداد و شمار کو واپس کردیا جائے گا۔ ترقی اور جانچ کے دوران ، inmemorywapimodule HTTP درخواستوں کو اینجولر ایپلی کیشن کے ذریعہ کی گئی HTTP کی درخواستوں کو روکتا ہے اور-بنیادی ردعمل فراہم کرتا ہے اور بنیادی طور پر ردعمل فراہم کرتا ہے۔موک ڈیٹا سروس پر۔اس سے ڈویلپرز کو بغیر کسی حقیقی بیک اینڈ سرور کے API جیسے ماحول کے ساتھ کام کرنے کی سہولت ملتی ہے ، فرنٹ اینڈ ڈویلپمنٹ اور ٹیسٹنگ کی سہولت فراہم کرتی ہے۔ یہ نوٹ کریں کہ عام طور پر انیموری ویبپیموڈول ترقی اور جانچ کے ماحول میں استعمال ہوتا ہے۔پیداواری ماحول میں ، آپ inmemorywebapimodule کو ہٹا دیں گے اور اسے حقیقی API سرور کے ساتھ تعامل کرنے کے لئے اصل پسدید نفاذ سے تبدیل کریں گے۔"
    },
    {
        "Question": "آپ کونیولر میں بچوں کے جزو سے والدین کے جزو تک ڈیٹا خارج کرنے کے لئے ایونٹیمیٹر کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیولر میں کسی بچے کے جزو سے والدین کے جزو تک ڈیٹا خارج کرنے کے ل you ، آپ ایونٹیمیٹر کلاس استعمال کرسکتے ہیں۔یہ ہے کہ آپ اسے کس طرح استعمال کرسکتے ہیں: بچوں کے جزو میں: `ایونٹیمیٹر کو درآمد کریں"
    },
    {
        "Question": "کونیی فراہم کرنے والوں میں فارورڈریف اور یو ایس سی ایل اے ایس کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں ، فارورڈریف اور یو ایس سی ایلاس دونوں تکنیک ہیں جو فراہم کنندگان کو تشکیل دیتے وقت استعمال کی جاتی ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: فارورڈریف: فارورڈریف فنکشن فراہم کنندگان کے مابین سرکلر انحصار حل کرنے کے لئے استعمال ہوتا ہے۔ یہ آپ کو ایک فراہم کنندہ کا حوالہ دینے کی اجازت دیتا ہے جو بعد میں کوڈ میں مدد کرتا ہے ، جس کی مدد کی جاتی ہے۔سرکلر حوالوں کو توڑنے کے لئے جو دوسری صورت میں رن ٹائم غلطی کا سبب بنے گا۔ سرکلر انحصار اس وقت ہوتا ہے جب دو یا زیادہ فراہم کنندگان ایک دوسرے پر براہ راست یا بالواسطہ انحصار کرتے ہیں ، جس سے انحصار لوپ پیدا ہوتا ہے۔فارورڈریف کسی فراہم کنندہ کی قرارداد کو موخر کرکے اس کو حل کرنے میں مدد کرتا ہے جب تک کہ اس کی اصل ضرورت نہ ہو۔ مثال کے طور پر استعمال: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ {فارورڈ ریف ، انجیکشن} سے '@کونیی/کور' ؛@انجیکشن ایبل () کلاس اے {کنسٹرکٹر (نجی بی: بی){}}@"
    },
    {
        "Question": "آپ کونیولر میں ڈوم سے کسی عنصر کو ہٹانے کے لئے رینڈر 2 کلاس کا استعمال کیسے کرتے ہیں؟",
        "Answer": "کونیی میں ڈوم سے کسی عنصر کو ہٹانے کے لئے رینڈرر 2 کلاس کا استعمال کرنے کے ل you ، آپ ان مراحل پر عمل کرسکتے ہیں: @کونیی/کور سے رینڈرر 2 کلاس درآمد کریں: ٹائپ اسکرپٹ کوپی کوڈیمپورٹ { @کونیی/کور 'سے رینڈر 2} اپنے اجزاء میں رینڈرر 2 انجیکشن کریںکنسٹرکٹر: ٹائپ اسکرپٹ کوپی کوڈکونٹرکٹر (نجی رینڈر: رینڈرر 2) {the جس عنصر کو آپ ہٹانا چاہتے ہیں اس کا پتہ لگائیں ، یا تو ویوچائڈ کا استعمال کرکے یا اس کو براہ راست ٹیمپلیٹ میں تک رسائی حاصل کریں۔ عنصر کو اپنے والدین سے نکالنے کے لئے رینڈر 2 کلاس کا طریقہ استعمال کریں۔ٹائپ اسکرپٹ کوپی کوڈ"
    },
    {
        "Question": "کونیی میں app_bootstrap_listener ٹوکن کا مقصد کیا ہے؟",
        "Answer": "کونیی میں ، app_bootstrap_listener ٹوکن کو کسی فنکشن کو رجسٹر کرنے کے لئے استعمال کیا جاتا ہے جو درخواست کو بوٹسٹریپنگ ختم کرنے پر عمل میں لایا جائے گا۔یہ آپ کو درخواست کے آغاز کے بعد اضافی کارروائیوں یا سیٹ اپ کے کاموں کو انجام دینے کی اجازت دیتا ہے اور چلانے کے لئے تیار ہے۔ ایپ_بوٹسٹریپ_ لسٹنر ٹوکن کونییولر کے انحصار انجیکشن سسٹم کا ایک حصہ ہے اور بوٹسٹریپ سننے والے کی حیثیت سے کسی فنکشن کو رجسٹر کرنے کے لئے انجیکٹر کے ساتھ مل کر استعمال کیا جاسکتا ہے۔اس سننے والے فنکشن کو کونیی کے ذریعہ طلب کیا جائے گا ایک بار جب ایپلی کیشن بوٹسٹریپنگ ختم ہوجائے گی۔ یہاں ایپ_بوٹسٹریپ_ لسٹنر ٹوکن کو کس طرح استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے ضروری کلاسوں کو درآمد کریں:"
    },
    {
        "Question": "کونیی میں غلطیوں کو سنبھالنے کے لئے آپ غلطی ہینڈلر انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، غلطی ہینڈلر انٹرفیس استعمال شدہ غلطیوں کو سنبھالنے کے لئے استعمال کیا جاتا ہے جو درخواست کے اندر پائے جاتے ہیں۔یہ غلطی سے نمٹنے کو اپنی مرضی کے مطابق بنانے اور اس کی وضاحت کرنے کا ایک طریقہ فراہم کرتا ہے کہ کس طرح غلطیوں کو لاگ ان ، ڈسپلے ، یا اس پر کارروائی کی جانی چاہئے۔ کونیی میں غلطیوں کو سنبھالنے کے لئے ایرر ہینڈلر انٹرفیس کا استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: ایک کسٹم غلطی ہینڈلر کلاس بنائیں: ایک نئی ٹائپ اسکرپٹ کلاس بنائیں جو اس کو نافذ کرے جو اس کو نافذ کرے جو ایک نئی ٹائپ اسکرپٹ کلاس بنائیں جو عمل کریں۔غلطی ہینڈلر انٹرفیس۔یہ کلاس کسٹم غلطی کو سنبھالنے والی منطق کو سنبھالنے کی وضاحت کرے گی۔('ایک غلطی واقع ہوئی ہے:' ، غلطی) ؛// اضافی غلطی کو سنبھالنے والے کوڈ ...}} ہینڈل ایرر کے طریقہ کار میں ، آپ اس کی وضاحت کرسکتے ہیں کہ غلطی کو کس طرح سنبھالا جانا چاہئے۔آپ غلطی کو لاگ ان کرسکتے ہیں ، صارف کو ایک غلطی کا پیغام ڈسپلے کرسکتے ہیں ، سرور کو غلطی کی رپورٹیں بھیج سکتے ہیں ، یا کسی اور مطلوبہ کارروائیوں کو انجام دے سکتے ہیں۔ کسٹم ایرر ہینڈلر کو تیار کریں: آپ کی درخواست کے روٹ ماڈیول (عام طور پر app.module.ts) میں ، فراہم کریںکسٹم ایرر ہینڈلر کو فراہم کنندگان میں اس کی وضاحت کرکے۔{فراہم کریں: ایرر ہینڈلر ، یو ایس سی ایل اے ایس ایس: کسٹم ایرر ہینڈلر}]}) ایکسپورٹ کلاس ایپ موڈول {{کسٹم ایرر ہینڈلر کو غلطی ہینڈلر ٹوکن کا استعمال کرتے ہوئے فراہم کرکے ، کونیی آپ کے کسٹم پر عمل درآمد کو پوری درخواست میں غیر منقولہ غلطیوں کو سنبھالنے کے لئے استعمال کرے گا۔ڈیفالٹ غلطی کو مکمل طور پر سنبھالنے کے رویے کو مکمل طور پر ، آپ اپنے ماڈیول میں فراہم کنندگان کی سرنی سے غلطی ہینڈلر ٹوکن کو چھوڑ سکتے ہیں۔یہ پہلے سے طے شدہ کونیی غلطی ہینڈلر کو مکمل طور پر اوور رائڈ کرے گا۔ اپنی مرضی کے مطابق غلطی کے ہینڈلر کے ساتھ ، آپ کی درخواست کے اندر موجود کسی بھی طرح کی غلطیوں کو آپ کے کسٹم ایرر ہینڈلر کلاس کے ہینڈل ایرر کے طریقہ کار میں منتقل کیا جائے گا۔اس کے بعد آپ اس طریقہ کار کے اندر مطلوبہ غلطی کو سنبھالنے کے رویے کی وضاحت کرسکتے ہیں۔ غلطی ہینڈلر انٹرفیس کو نافذ کرنے اور اپنی مرضی کے مطابق غلطی کو ہینڈلر فراہم کرنے کے بعد ، آپ کو اس بات پر ٹھیک سے کنٹرول ہے کہ آپ کی کونیی ایپلی کیشن میں کس طرح غیر غلط غلطیوں کو سنبھالا جاتا ہے۔اس سے آپ غلطی کو سنبھالنے ، غلطی کے پیغامات کو اپنی مرضی کے مطابق بنانے ، یا درپیش مخصوص غلطی کے منظرناموں کی بنیاد پر اضافی اعمال انجام دینے کی اجازت دیتے ہیں۔"
    },
    {
        "Question": "کونیی میں سوئچ میپ اور مرج میپ آپریٹرز میں کیا فرق ہے؟",
        "Answer": "کونیی میں ، سوئچ میپ اور مرج میپ آپریٹرز RXJs کے ساتھ رد عمل پروگرامنگ میں غیر متزلزل کاموں کو سنبھالنے اور ڈیٹا کے سلسلے کو سنبھالنے کے لئے استعمال ہوتے ہیں۔اگرچہ ان کی مماثلتیں ہیں ، ان دونوں کے مابین کلیدی اختلافات ہیں: سوئچ میپ: سوئچ میپ آپریٹر بنیادی طور پر کسی مشاہدہ کے ذریعہ خارج ہونے والی ہر قیمت کو نقشہ بنانے کے لئے استعمال ہوتا ہے۔ جب کوئی نئی قدر خارج ہوجاتی ہے تو ، یہ خود بخود پچھلے اندرونی مشاہدہ سے ان سبسکرائب کرتا ہے اور سبسکرائب کرتا ہے۔نئے میں۔ صرف حالیہ اندرونی مشاہدہ کے ذریعہ خارج ہونے والی اقدار کو آگے بھیج دیا جاتا ہے"
    },
    {
        "Question": "آپ کونیولر میں *ngtemplateoutlet کے ساتھ NG-Container ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "این جی-کنٹینر ہدایت کونیی میں ایک ساختی ہدایت ہے جو ڈوم میں کسی بھی عنصر کو نہیں دیتی ہے۔یہ عام طور پر گروپ میں پلیس ہولڈر کے طور پر استعمال ہوتا ہے اور کسی بھی اضافی HTML مارک اپ کو شامل کیے بغیر مشروط طور پر مواد پیش کرتا ہے۔جب *ngtemplateOutlet ہدایت کے ساتھ مل کر ، یہ متحرک طور پر ٹیمپلیٹس کو پیش کرنے کا ایک طاقتور طریقہ فراہم کرتا ہے۔یہاں *ngtemplateOutlet کے ساتھ NG-container استعمال کرنے کی ایک مثال ہے: <ng-template> عنصر کے اندر اپنے ٹیمپلیٹ کی وضاحت کریں: htmlcopy کوڈ <ng-template #myTemplate> <!-اپنے ٹیمپلیٹ مواد کی وضاحت یہاں-> <div>{{پیغام}} </div> </ng-template> NG-Container ہدایت نامہ کے ساتھ ساتھ *ngtemplateOutlet ہدایت کے ساتھ ٹیمپلیٹ کو متحرک طور پر پیش کرنے کے لئے: htmlcopy کوڈ <ng-container *ngTemplatetlet = \"myTemplate"
    }
]