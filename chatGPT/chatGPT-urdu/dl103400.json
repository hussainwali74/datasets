[
    {
        "Question": "ایک میسیم اور انوڈ بی اسٹوریج انجن میں کیا فرق ہے؟",
        "Answer": "ایک فل ٹیکسٹ انڈیکس اور ایک جن (عام الٹی انڈیکس) انڈیکس دونوں قسم کے اشاریہ سازی کے طریقے ہیں جو ڈیٹا بیس سسٹم میں استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں اور ان کی مختلف خصوصیات ہیں۔دونوں کے مابین اختلافات کا ایک جائزہ یہاں ہے: فل ٹیکسٹ انڈیکس: ایک فل ٹیکسٹ انڈیکس خاص طور پر ڈیٹا بیس سسٹم میں ٹیکسٹ سرچ صلاحیتوں کے لئے ڈیزائن کیا گیا ہے۔اس کا استعمال مکمل متن کی تلاش کو بہتر بنانے اور تیز کرنے کے لئے کیا جاتا ہے ، جس میں متن کے بڑے جسموں میں مخصوص الفاظ یا فقرے تلاش کرنا شامل ہوتا ہے۔فل ٹیکسٹ انڈیکس عام طور پر ڈیٹا بیس سسٹم میں استعمال ہوتے ہیں جو قدرتی زبان کے سوالات کی تائید کرتے ہیں ، جیسے مضامین ، بلاگ پوسٹس ، یا دیگر متنی مواد کی تلاش کرنا۔ فل ٹیکسٹ انڈیکس کی کلید خصوصیات میں شامل ہیں: زبان سے آگاہی: فل ٹیکسٹ انڈیکس زبان سے واقف ہوسکتی ہے ،اس کا مطلب ہے کہ وہ زبان سے متعلق خصوصیات کو مدنظر رکھ سکتے ہیں جیسے ورڈ اسٹیممنگ ، اسٹاپ ورڈ کو ہٹانا ، اور مطابقت کی درجہ بندی۔ ٹوکنائزیشن: فل ٹیکسٹ انڈیکس عام طور پر متن کو اشاریہ بناتے ہیں ، اور اسے انفرادی الفاظ یا شرائط میں توڑ دیتے ہیں۔اس سے مخصوص الفاظ یا فقرے کی موثر تلاش اور ملاپ کی اجازت ملتی ہے۔وہ نتائج کو اپنی موجودگی اور دیگر عوامل کی بنیاد پر الفاظ کو تفویض کرسکتے ہیں تاکہ نتائج کی درجہ بندی میں مدد کی جاسکے۔ ٹیکسٹ فیلڈز میں محدود: فل ٹیکسٹ انڈیکس عام طور پر ڈیٹا بیس ٹیبل کے اندر مخصوص ٹیکسٹ فیلڈز پر بنائے جاتے ہیں اور غیر ٹیکسٹل ڈیٹا اقسام پر لاگو نہیں ہوتے ہیں۔: دوسری طرف ، ایک جن انڈیکس ، ایک عام مقصد کے اشاریہ سازی کا ڈھانچہ ہے جو صرف متن سے باہر مختلف قسم کے ڈیٹا کے لئے استعمال کیا جاسکتا ہے۔یہ الٹی انڈیکس کی ایک قسم ہے جو پیچیدہ اعداد و شمار کی اقسام جیسے اریوں ، JSON دستاویزات ، یا دیگر جامع ڈیٹا ڈھانچے کے لئے موثر تلاش اور استفسار کی اجازت دیتی ہے۔ جن انڈیکس کی کلید خصوصیات میں شامل ہیں: جنرل مقصد کی اشاریہ: جن اشاریہ ورسٹائل ہیں اور ہوسکتے ہیں اور ہوسکتے ہیں۔متن سے باہر مختلف قسم کے ڈیٹا ڈھانچے کی اشاریہ کے لئے استعمال کیا جاتا ہے ، جیسے اری ، JSON ، یا صارف کی وضاحت شدہ اقسام۔وہ ان پیچیدہ اعداد و شمار کی اقسام کے لئے موثر تلاش اور استفسار کی صلاحیتیں مہیا کرتے ہیں۔ قابل استعمال تلاشی کے کام: جن اشاریہ تلاشی کے کاموں کی ایک وسیع رینج کی حمایت کرتے ہیں ، بشمول کنٹینمنٹ کی تلاشیں ، رینج کے سوالات ، اور دیگر پیچیدہ پیش گوئوں کو اشاریہ شدہ ڈیٹا کی قسم سے مخصوص ہے۔فل ٹیکسٹ انڈیکس کے برعکس ، جن انڈیکس زبان سے متعلق مخصوص خصوصیات فراہم نہیں کرتے ہیں جیسے اسٹیمنگ یا مطابقت کی درجہ بندی۔وہ بنیادی طور پر ساختی یا پیچیدہ اعداد و شمار کو موثر انداز میں ترتیب دینے اور بازیافت کرنے سے متعلق ہیں۔متن کی تلاش اور زبان سے متعلق خصوصیات اور مطابقت کی درجہ بندی فراہم کرتی ہے ، ایک جن انڈیکس ایک عام مقصد کے اشاریہ سازی کا ڈھانچہ ہے جو متن سے باہر مختلف پیچیدہ اعداد و شمار کی اقسام کو سنبھال سکتا ہے۔ان اشاریہ کے درمیان انتخاب آپ کی درخواست کی مخصوص ضروریات اور جس قسم کے ڈیٹا کی آپ کو اشاریہ اور تلاش کرنے کی ضرورت ہے اس پر منحصر ہے۔"
    },
    {
        "Question": "ایک Btree اور ہیش انڈیکس میں کیا فرق ہے؟",
        "Answer": "عارضی جدول اور مستقل جدول کے درمیان بنیادی فرق ان کی زندگی اور ڈیٹا بیس سسٹم میں استقامت میں ہے۔اختلافات کا ایک جائزہ یہاں ہے: عارضی جدول: ایک عارضی جدول ایک ٹیبل ہے جو صرف ڈیٹا بیس سیشن یا ٹرانزیکشن کی مدت کے لئے موجود ہے۔یہ انٹرمیڈیٹ یا عارضی ڈیٹا کو ذخیرہ کرنے کے لئے بنایا اور استعمال کیا جاتا ہے جو کسی خاص سیشن یا لین دین سے مخصوص ہے۔عارضی جدولیں ایک مخصوص سیاق و سباق کے اندر پیچیدہ سوالات ، انٹرمیڈیٹ کے نتائج کے سیٹ ، یا عارضی ڈیٹا ہیرا پھیری کے ل useful مفید ہیں۔ عارضی جدولوں کی کلید خصوصیات میں شامل ہیں: زندگی: جب سیشن یا ٹرانزیکشن شروع ہوتا ہے اور خود بخود گرا دیا جاتا ہے اور تباہ ہوجاتا ہے جب سیشن میں خود بخود اور تباہ ہوجاتا ہے۔یا لین دین ختم ہوتا ہے۔وہ فطرت میں عارضی ہیں اور موجودہ ڈیٹا بیس کنکشن سے آگے برقرار نہیں رہتے ہیں۔وہ دوسرے ڈیٹا بیس سیشنوں یا لین دین کے لئے مرئی یا قابل رسائی نہیں ہیں جب تک کہ واضح طور پر مشترکہ یا پاس نہ ہوجائے۔ ڈیٹا تنہائی: عارضی جدولیں ڈیٹا کو الگ تھلگ فراہم کرتی ہیں ، مطلب ہر سیشن یا لین دین میں عارضی جدول کی اپنی الگ الگ مثال ہوسکتی ہے۔ایک سیشن یا ٹرانزیکشن کے اندر عارضی جدول پر کی جانے والی تبدیلیاں یا آپریشن دوسرے سیشنوں یا لین دین میں عارضی جدولوں کو متاثر نہیں کرتے ہیں۔ ایک مستقل جدول: ایک مستقل یا مستقل جدول کے طور پر بھی کہا جاتا ہے ، ایک ٹیبل ہے جو ڈیٹا بیس میں برقرار رہتا ہے۔ایک ہی سیشن یا لین دین سے پرے۔یہ طویل مدتی استعمال کے ل data ڈیٹا کو مستقل طور پر ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، اور یہ موجودہ سیشن یا ٹرانزیکشن کے اختتام کے بعد بھی استفسار کرنے ، اپ ڈیٹ کرنے یا حذف کرنے کے لئے دستیاب ہے۔ مستقل جدولوں کی کلید خصوصیات میں شامل ہیں: زندگی: مستقل جدولوں کو ڈیٹا بیس ایڈمنسٹریٹرز کے ذریعہ واضح طور پر تخلیق کیا جاتا ہے۔یا صارفین اور اس وقت تک موجود رہیں جب تک کہ وہ واضح طور پر گرا یا حذف نہ ہوجائیں۔وہ مختلف ڈیٹا بیس کنکشن پر برقرار رہتے ہیں اور متعدد سیشنوں یا لین دین کے ذریعہ استعمال کے ل available دستیاب ہیں۔ ڈیٹا استقامت: مستقل جدول میں ذخیرہ شدہ ڈیٹا ڈیٹا بیس سسٹم کے دوبارہ شروع ہونے یا سیشن یا ٹرانزیکشن ختم ہونے کے بعد بھی برقرار رہتا ہے۔اعداد و شمار پائیدار ہیں اور کسی بھی وقت ان تک رسائی یا اس میں ترمیم کی جاسکتی ہے۔ ڈیٹا شیئرنگ: مستقل جدولیں عام طور پر متعدد صارفین ، سیشنوں ، یا ڈیٹا بیس سسٹم میں لین دین تک قابل رسائی ہوتی ہیں۔ان کا استعمال مشترکہ اعداد و شمار کو ذخیرہ کرنے کے لئے کیا جاسکتا ہے جس تک کسی درخواست کے مختلف حصوں یا ایک سے زیادہ صارفین کے ذریعہ بیک وقت تک رسائی حاصل کرنے یا جوڑ توڑ کرنے کی ضرورت ہے۔ اسکیما تعریف: مستقل جدولوں میں اکثر ایک متعین ڈھانچہ یا اسکیما ہوتا ہے ، جس میں کالم کے نام ، ڈیٹا کی اقسام ، رکاوٹیں شامل ہیں ، اوراشاریہ.اسکیما ذخیرہ شدہ اعداد و شمار کے لئے ایک مستقل ڈھانچہ مہیا کرتا ہے۔ خلاصہ یہ کہ عارضی جدولیں قلیل المدتی ہیں ، سیشن یا لین دین کے اندر عارضی ڈیٹا اسٹوریج اور ہیرا پھیری کے لئے استعمال ہونے والی سیشن سے متعلق مخصوص جدولیں ، جبکہ مستقل جدولیں سیشن اور لین دین سے باہر برقرار رہتی ہیں ، اور مستقل طور پر ڈیٹا کو ذخیرہ کرتی ہیں۔طویل مدتی استعمال اور متعدد صارفین یا کسی ایپلی کیشن کے کچھ حصوں میں اشتراک کے ل .۔"
    },
    {
        "Question": "فل ٹیکسٹ اور جن انڈیکس میں کیا فرق ہے؟",
        "Answer": "عالمی اور مقامی عارضی ٹیبل کے درمیان فرق ڈیٹا بیس سسٹم میں ان کے دائرہ کار اور مرئیت میں ہے۔اختلافات کا ایک جائزہ یہاں ہے: عالمی عارضی جدول: ایک عالمی عارضی جدول ایک عارضی جدول ہے جو ڈیٹا بیس سسٹم کے اندر موجود تمام سیشنوں یا صارفین کے لئے دستیاب اور مرئی ہے۔یہ ایک بار ڈیٹا بیس ایڈمنسٹریٹر یا مناسب مراعات کے حامل صارف کے ذریعہ تخلیق کیا گیا ہے اور جب تک اسے واضح طور پر گرایا نہیں جاتا ہے۔تاہم ، عالمی عارضی جدول کے اندر موجود اعداد و شمار سیشن سے متعلق ہیں۔ عالمی عارضی جدول کی کلیدی خصوصیات میں شامل ہیں: دائرہ کار: عالمی عارضی جدولیں ڈیٹا بیس سسٹم کے اندر موجود تمام سیشنوں یا صارفین کے لئے مرئی ہیں۔متعدد سیشن بیک وقت عالمی عارضی ٹیبل میں ڈیٹا تک رسائی حاصل کرسکتے ہیں اور ان میں ہیرا پھیری کرسکتے ہیں۔ ڈیٹا تنہائی: اگرچہ ٹیبل ڈھانچہ مختلف سیشنوں میں مشترکہ ہے ، لیکن ہر سیشن میں ٹیبل کے اندر اپنا اپنا نجی ڈیٹا ہوتا ہے۔ایک سیشن کے ذریعہ داخل کردہ ، اپ ڈیٹ ، یا حذف کردہ اعداد و شمار کو دوسرے سیشنوں سے الگ تھلگ کیا جاتا ہے ، اور ایک سیشن میں کی جانے والی تبدیلیاں دوسرے سیشنوں میں موجود ڈیٹا کو متاثر نہیں کرتی ہیں۔تاہم ، عالمی عارضی جدول میں ذخیرہ شدہ ڈیٹا عارضی ہے اور جب خود بخود اعداد و شمار داخل کرنے والے سیشن کو ختم کردیا جاتا ہے۔ لوکل عارضی جدول: ایک مقامی عارضی جدول ایک عارضی جدول ہے جو نجی اور صرف سیشن کے لئے دکھائی دیتا ہے جو اسے تخلیق کرتا ہے۔یہ ایک مخصوص سیشن کے ذریعہ تخلیق کیا گیا ہے اور اس سیشن کی مدت کے لئے موجود ہے۔ایک بار سیشن ختم ہونے کے بعد ، مقامی عارضی ٹیبل کو خود بخود گرا دیا جاتا ہے اور اسے ڈیٹا بیس سسٹم سے ہٹا دیا جاتا ہے۔ مقامی عارضی ٹیبل کی کلیدی خصوصیات میں شامل ہیں: دائرہ کار: مقامی عارضی جدولیں مقامی اور صرف سیشن کے اندر دکھائی دیتی ہیں جو انہیں تخلیق کرتی ہے۔دوسرے سیشنز یا صارفین مقامی عارضی ٹیبل تک رسائی یا تعامل نہیں کرسکتے ہیں۔ ڈیٹا تنہائی: عالمی عارضی جدولوں کی طرح ، ہر سیشن میں مقامی عارضی ٹیبل میں اپنا اپنا نجی ڈیٹا ہوتا ہے۔ایک سیشن میں ٹیبل کے ڈیٹا میں کی جانے والی تبدیلیاں دوسرے سیشنوں پر اثر انداز نہیں ہوتی ہیں ، اور جب سیشن ختم ہوتا ہے تو اعداد و شمار خود بخود صاف ہوجاتے ہیں۔جب سیشن ختم ہوتا ہے تو گرا دیا جاتا ہے۔وہ فطرت میں عارضی ہیں اور سیشن کی زندگی سے آگے نہیں بڑھتے ہیں۔ خلاصہ میں ، عالمی عارضی جدولوں کو ڈیٹا بیس سسٹم کے اندر متعدد سیشنوں یا صارفین کے درمیان مشترکہ کیا جاتا ہے ، جس سے بیک وقت رسائی کی اجازت ہوتی ہے ، جبکہ مقامی عارضی جدولیں ایک ہی سیشن کے لئے مخصوص ہیں ، اور یہ فراہم کرتے ہیں۔ڈیٹا تنہائی اور سیشن کی سطح کی نمائش۔"
    },
    {
        "Question": "عارضی اور مستقل ٹیبل میں کیا فرق ہے؟",
        "Answer": "تراشے ہوئے ٹیبل اور ڈراپ ٹیبل کے بیانات دونوں کو ایس کیو ایل میں ڈیٹا بیس سے ڈیٹا یا پوری جدولوں کو ہٹانے کے لئے استعمال کیا جاتا ہے ، لیکن وہ ان کے طرز عمل اور آپریشن کی حد تک مختلف ہیں۔اختلافات کا ایک جائزہ یہاں ہے: ٹرنکیٹ ٹیبل: ٹیبل ڈھانچے کو برقرار رکھتے ہوئے ٹیبل سے تمام قطاروں کو ہٹانے کے لئے ٹرنکیٹ ٹیبل کا بیان استعمال کیا جاتا ہے۔یہ ٹیبل کے اندر موجود تمام ڈیٹا کو مؤثر طریقے سے حذف کرتا ہے لیکن ٹیبل کو ہی برقرار رکھتا ہے۔تراشے ہوئے جدول کے بیان کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کو ہٹانا: ٹیبل ٹیبل ٹیبل سے تمام قطاریں حذف کردیتا ہے ، جس کے نتیجے میں خالی ٹیبل ہوتا ہے۔ٹیبل کا ڈھانچہ ، بشمول کالم ، رکاوٹیں ، اشاریہ جات ، اور محرکات ، بدلا ہوا ہے۔ اسپیڈ: ٹرنکیٹ ٹیبل عام طور پر تمام قطاروں کو ہٹانے کے لئے حذف کرنے سے کہیں زیادہ تیز ہوتا ہے ، کیونکہ یہ ہر صف کے لئے انفرادی طور پر حذف کرنے والی کارروائیوں کو پیدا نہیں کرتا ہے۔اس کے بجائے ، یہ جدول سے وابستہ ڈیٹا صفحات کو ختم کرتا ہے ، جس سے ڈیٹا کو دور کرنے کا ایک زیادہ موثر طریقہ فراہم ہوتا ہے۔ ٹرانسکشنل اثر: ٹرنکیٹ ٹیبل عام طور پر انفرادی صف کو حذف کرنے کے طور پر لاگ ان نہیں ہوتا ہے ، جس کا مطلب ہے کہ اسے لین دین میں واپس نہیں لایا جاسکتا ہے۔آپریشن کو ڈی ڈی ایل (ڈیٹا ڈیفینیشن لینگویج) بیان سمجھا جاتا ہے ، نہ کہ ڈی ایم ایل (ڈیٹا ہیرا پھیری زبان) کا بیان۔ پیش کش: ٹیبل ٹیبل کو ٹیبل پر مناسب مراعات کی ضرورت ہوتی ہے۔عام طور پر ، صارفین کو ٹیبل پر حذف کرنے والے استقامت کی ضرورت ہوتی ہے ، نیز ٹیبل پر مشتمل اسکیما پر بدلاؤ استحقاق کی ضرورت ہوتی ہے۔ ڈراپ ٹیبل: ڈراپ ٹیبل کا بیان ایک ٹیبل کو مکمل طور پر ہٹانے کے لئے استعمال کیا جاتا ہے ، جس میں اس کی ساخت ، ڈیٹا ، رکاوٹیں ، اشاریہ جات ، اور شامل ہیں۔محرکاتیہ ڈیٹا بیس سے مستقل طور پر پوری ٹیبل کو ختم کرتا ہے۔ڈراپ ٹیبل بیان کی کلیدی خصوصیات میں شامل ہیں: ٹیبل ہٹانا: ڈراپ ٹیبل پورے ٹیبل کو حذف کرتا ہے ، بشمول اس کی ساخت اور اس سے وابستہ تمام ڈیٹا۔یہ ٹیبل کی تعریف اور کسی بھی اشاریہ ، رکاوٹوں ، یا ٹیبل سے وابستہ محرکات کو دور کرتا ہے۔تمام ڈیٹا اور ٹیبل سے متعلقہ اشیاء مستقل طور پر کھو جاتی ہیں۔لہذا ، ڈراپ ٹیبل کا استعمال کرتے وقت احتیاط کا استعمال کرنا بہت ضروری ہے ، کیونکہ آپریشن کو کالعدم کرنے کے لئے کوئی بلٹ ان میکانزم موجود نہیں ہے۔ ٹرانزیکشنل اثر: ٹرنکیٹ ٹیبل کی طرح ، ڈراپ ٹیبل کو بھی ڈی ڈی ایل کا بیان سمجھا جاتا ہے۔یہ عام طور پر پھانسی دینے سے پہلے لین دین کا ارتکاب کرتا ہے ، یعنی اسے لین دین میں واپس نہیں لایا جاسکتا ہے۔عام طور پر ، صارفین کو ٹیبل پر ڈراپ استحقاق اور ٹیبل پر مشتمل اسکیما پر تبدیل شدہ استحقاق کی ضرورت ہوتی ہے۔ خلاصہ میں ، ٹیبل ٹیبل ٹیبل کی ساخت کو برقرار رکھتے ہوئے تمام قطار کو ایک ٹیبل سے ہٹاتا ہے ، جبکہ ڈراپ ٹیبل مستقل طور پر پوری ٹیبل اور اس سے وابستہ اشیاء کو ہٹا دیتا ہے۔ڈیٹا بیس سےتراشنے والی ٹیبل تیز ہے اور انفرادی حذفوں کو لاگ ان نہیں کرتی ہے ، لیکن اسے لین دین میں واپس نہیں لایا جاسکتا ہے۔ڈراپ ٹیبل ناقابل واپسی ہے اور پوری ٹیبل کو ہٹاتا ہے۔"
    },
    {
        "Question": "عالمی اور مقامی عارضی ٹیبل میں کیا فرق ہے؟",
        "Answer": "بولین اور ٹنیئنٹ ڈیٹا کی اقسام دونوں مختلف ڈیٹا بیس سسٹم میں بولین یا منطقی اقدار کی نمائندگی کرنے کے لئے استعمال ہوتے ہیں۔دونوں کے مابین اختلافات کا ایک جائزہ یہاں ہے: بولین: بولین ڈیٹا کی قسم ایک منطقی ڈیٹا کی قسم ہے جو صحیح یا غلط اقدار کی نمائندگی کرتی ہے۔یہ ایک معیاری ایس کیو ایل ڈیٹا ٹائپ ہے جس کی تائید بہت سے ڈیٹا بیس سسٹم کے ذریعہ کی جاتی ہے۔بولین ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: اقدار: بولین ڈیٹا کی قسم کی دو ممکنہ اقدار ہوسکتی ہیں: صحیح یا غلط۔کچھ ڈیٹا بیس سسٹم متبادل نمائندگیوں کا استعمال کرسکتے ہیں جیسے 1 اور غلط کے لئے 0 کے لئے 1 ، لیکن تصور ایک ہی رہتا ہے۔ سائز: بولین قدر کا سائز عام طور پر سسٹم پر منحصر ہوتا ہے ، لیکن اس میں عام طور پر تھوڑی مقدار میں اسٹوریج ہوتا ہے۔یہ غیر ضروری اوور ہیڈ کے بغیر بولین اقدار کی موثر انداز میں نمائندگی کرنے اور اسٹور کرنے کے لئے ڈیزائن کیا گیا ہے۔اس کا استعمال منطقی تاثرات ، حالات اور بولین آپریشنز جیسے اور ، اور ، اور نہیں۔ ٹینیئنٹ: ٹائننٹ ڈیٹا ٹائپ ایک انٹیجر ڈیٹا ٹائپ ہے جو عام طور پر تھوڑی مقدار میں اسٹوریج پر قبضہ کرتا ہے۔یہ اکثر کسی خاص حد میں عددی اقدار کی نمائندگی کرنے کے لئے استعمال ہوتا ہے۔ٹینی انٹ ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: اقدار: ٹینیینٹ ڈیٹا کی قسم عام طور پر چھوٹے انٹیجر اقدار کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے ، عام طور پر -128 سے 127 یا 0 سے 255 کی حد میں۔ ڈیٹا بیس سسٹم اور اس کے لحاظ سے عین مطابق حد مختلف ہوسکتی ہے۔ٹائننٹ ڈیٹا کی قسم کی دستخط شدہ یا دستخط شدہ نوعیت۔ سائز: ٹینی انٹ ویلیو کا اسٹوریج سائز عام طور پر 1 بائٹ یا 8 بٹس ہوتا ہے۔اس سے چھوٹے انٹیجر اقدار کے موثر اسٹوریج کی اجازت ملتی ہے۔ یوزج: اگرچہ ٹنیینٹ ڈیٹا کی قسم کو بولین اقدار کی نمائندگی کرنے کے لئے استعمال کیا جاسکتا ہے ، لیکن یہ بولین ڈیٹا کی ایک سرشار نہیں ہے۔اس کے بجائے ، یہ ایک عمومی مقصد کے عددی اعداد و شمار کی قسم ہے جو صرف سچ یا غلط سے باہر عددی اقدار کی ایک وسیع رینج کو محفوظ کرسکتی ہے۔ خلاصہ میں ، بولین ایک منطقی اعداد و شمار کی قسم ہے جو خاص طور پر صحیح یا غلط اقدار کی نمائندگی کرنے کے لئے ڈیزائن کیا گیا ہے ، جبکہ ٹائننٹ ایک عدد اعداد و شمار ہے۔عام طور پر چھوٹی عددی اقدار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے لیکن اس کا استعمال بولین اقدار کی نمائندگی کے لئے بھی کیا جاسکتا ہے۔بولین منطقی اقدار کے ل a ایک زیادہ تاثراتی اور لیمانکی طور پر مناسب نمائندگی فراہم کرتا ہے ، جبکہ ٹائننٹ ایک عام مقصد کے اعداد و شمار کی قسم ہے جو عددی اقدار کی ایک وسیع رینج کو محفوظ کرسکتی ہے۔"
    },
    {
        "Question": "ایک چھوٹا سا ٹیبل اور ڈراپ ٹیبل کے بیان میں کیا فرق ہے؟",
        "Answer": "INT اور BIGINT ڈیٹا کی اقسام دونوں کو مختلف ڈیٹا بیس سسٹم میں عددی اقدار کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق ان اقدار کی حد میں ہے جو وہ ذخیرہ کرسکتے ہیں۔اختلافات کا ایک جائزہ یہاں ہے: INT: INT (یا انٹیجر) ڈیٹا کی قسم ایک معیاری انٹیجر ڈیٹا ٹائپ ہے جو عام طور پر 4 بائٹس یا 32 بٹس اسٹوریج پر قبضہ کرتی ہے۔INT ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ویلیو رینج: INT ڈیٹا کی قسم ایک دستخط شدہ INT (32 بٹ نمائندگی فرض کرتے ہوئے) کے لئے تقریبا -2.1 بلین سے 2.1 بلین کی حد میں عددی اقدار کو ذخیرہ کرسکتی ہے۔ڈیٹا بیس سسٹم اور INT ڈیٹا کی قسم کی دستخط شدہ یا دستخط شدہ نوعیت کے لحاظ سے قطعی حد قدرے مختلف ہوسکتی ہے۔ اسٹوریج سائز: ایک INT قدر عام طور پر اسٹوریج کے 4 بائٹس (32 بٹس) پر قبضہ کرتی ہے۔یہ طے شدہ اسٹوریج سائز بڑے عدد اعداد و شمار کی اقسام کے مقابلے میں زیادہ کمپیکٹ بناتا ہے۔ میموری کا استعمال: چونکہ INT میں ذخیرہ کرنے کا سائز چھوٹا ہے ، لہذا یہ بڑے انٹیجر ڈیٹا کی اقسام کے مقابلے میں کم میموری استعمال کرتا ہے۔یہ عام طور پر اس وقت استعمال کیا جاتا ہے جب مطلوبہ قدر کی حد INT ڈیٹا کی قسم کی حدود میں آتی ہے۔ بیگنٹ: بگینٹ ڈیٹا کی قسم ایک توسیع شدہ انٹیجر ڈیٹا کی قسم ہے جو INT کے مقابلے میں ایک بڑی قدر کی حد فراہم کرتی ہے۔یہ عام طور پر 8 بائٹس یا 64 بٹس اسٹوریج پر قبضہ کرتا ہے۔بگینٹ ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ویلیو رینج: بگینٹ ڈیٹا کی قسم انٹ کے مقابلے میں انٹیجر اقدار کو نمایاں طور پر بڑی حد میں اسٹور کرسکتی ہے۔یہ دستخط شدہ بگنٹ کے ل approximately تقریبا -9.2 کوئنٹیلین سے 9.2 کوئنٹیلین (18 ہندسے) کی حد میں اقدار کا انعقاد کرسکتا ہے۔ایک بار پھر ، ڈیٹا بیس سسٹم اور بگینٹ ڈیٹا کی قسم کی دستخط شدہ یا دستخط شدہ نوعیت کے لحاظ سے عین مطابق حد مختلف ہوسکتی ہے۔ اسٹوریج سائز: ایک بڑی قیمت میں عام طور پر اسٹوریج کے 8 بائٹس (64 بٹس) پر قبضہ ہوتا ہے۔اسٹوریج کا بڑا سائز انٹیجر اقدار کی وسیع رینج کو ذخیرہ کرنے کی اجازت دیتا ہے۔ میموری کا استعمال: بڑے اسٹوریج کے سائز کی وجہ سے INT کے مقابلے میں بگنٹ کو زیادہ میموری کی ضرورت ہوتی ہے۔یہ عام طور پر استعمال کیا جاتا ہے جب مطلوبہ قیمت کی حد INT ڈیٹا کی قسم کی حد سے تجاوز کرتی ہے۔ خلاصہ ، INT ایک معیاری انٹیجر ڈیٹا ٹائپ ہے جس کی قیمت تقریبا -2.1 بلین سے 2.1 بلین (32 بٹ) ہے ، جس میں 4 بائٹس پر قبضہ کیا جاتا ہے۔اسٹوریجبگینٹ ایک توسیعی انٹیجر ڈیٹا ٹائپ ہے جس کی بڑی قیمت تقریبا -9.2 کوئنٹیلین سے 9.2 کوئنٹیلین (64 بٹ) ہے ، جس میں 8 بائٹس اسٹوریج پر قبضہ کیا گیا ہے۔INT اور BIGINT کے درمیان انتخاب کسی مخصوص صورتحال کے لئے درکار مخصوص قدر کی حد پر منحصر ہے۔"
    },
    {
        "Question": "ایک منتخب * اور منتخب کالم_ نام کے بیان میں کیا فرق ہے؟",
        "Answer": "تاریخ اور ڈیٹا ٹائم ڈیٹا کی اقسام مختلف ڈیٹا بیس سسٹم میں تاریخوں اور اوقات کی نمائندگی کرنے کے لئے استعمال کی جاتی ہیں۔ان کے درمیان بنیادی فرق صحت سے متعلق کی سطح میں ہے جو وہ فراہم کرتے ہیں۔اختلافات کا ایک جائزہ یہاں ہے: تاریخ: تاریخ کے اعداد و شمار کی قسم کسی بھی وقت کے جزو کے بغیر تاریخوں کی نمائندگی کرنے کے لئے استعمال ہوتی ہے۔تاریخ کے اعداد و شمار کی قسم کی کلیدی خصوصیات میں شامل ہیں: صحت سے متعلق: تاریخ کے اعداد و شمار کی قسم سال ، مہینہ اور دن کی معلومات کو اسٹور کرتی ہے ، جو دن کی سطح پر صحت سے متعلق فراہم کرتی ہے۔اس میں کسی بھی وقت کی معلومات جیسے گھنٹے ، منٹ ، یا سیکنڈ۔ فارمیٹ شامل نہیں ہے: تاریخ کے اعداد و شمار کی قسم کو عام طور پر معیاری شکل میں پیش کیا جاتا ہے ، جیسے 'YYYY-MM-DD' (جیسے ، '2023-06-23'). صارف: تاریخ کے اعداد و شمار کی قسم عام طور پر استعمال ہوتی ہے جب آپ کو کسی بھی وابستہ وقت کی قدر کے بغیر تاریخوں کو ذخیرہ کرنے اور جوڑنے کی ضرورت ہوتی ہے۔یہ ان ایپلی کیشنز کے ل suitable موزوں ہے جو بنیادی طور پر تاریخوں سے نمٹتے ہیں ، جیسے سالگرہ ، واقعات ، یا شیڈولنگ۔ ڈیٹ ٹائم: ڈیٹ ٹائم ڈیٹا کی قسم تاریخ اور اوقات کی نمائندگی کرنے کے لئے استعمال ہوتی ہے ، جس میں تاریخ اور وقت کے اجزاء دونوں شامل ہیں۔ڈیٹ ٹائم ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: صحت سے متعلق: ڈیٹ ٹائم ڈیٹا ٹائپ سال ، مہینہ ، دن ، گھنٹے ، منٹ اور سیکنڈ میں اسٹور کرتا ہے ، جو اعلی سطح کی صحت سے متعلق فراہم کرتا ہے۔اس میں تاریخ اور وقت دونوں کی معلومات شامل ہیں۔ فارمیٹ: ڈیٹ ٹائم ڈیٹا کی قسم عام طور پر ایک مخصوص شکل میں نمائندگی کی جاتی ہے ، جیسے 'YYYY-MM-DD HH: MI: SS' (جیسے ، '2023-06-23 15:30:45 '). استعمال: ڈیٹ ٹائم ڈیٹا کی قسم عام طور پر اس وقت استعمال کی جاتی ہے جب آپ کو تاریخ اور وقت دونوں کی اقدار کو ذخیرہ کرنے اور ان میں ہیرا پھیری کرنے کی ضرورت ہوتی ہے۔یہ ان ایپلی کیشنز کے ل suitable موزوں ہے جس کے لئے ٹریکنگ واقعات یا سرگرمیوں کی ضرورت ہوتی ہے جو وقت کے مخصوص مقامات پر پائے جاتے ہیں۔ یہ بات قابل قدر ہے کہ تاریخ اور ڈیٹ ٹائم ڈیٹا کی مخصوص حد اور طرز عمل آپ ڈیٹا بیس سسٹم کے لحاظ سے مختلف ہوسکتا ہے جس کا آپ استعمال کررہے ہیں۔کچھ ڈیٹا بیس سسٹم میں تاریخ اور وقت کی نمائندگی کے ل alternative متبادل یا زیادہ عین مطابق ڈیٹا کی اقسام ہوسکتی ہیں ، جیسے ٹائم اسٹیمپ یا ڈیٹ ٹائم 2۔مری میں ، تاریخ کے اعداد و شمار کی قسم صرف تاریخ کے جزو کو اسٹور کرتی ہے ، جو دن کی سطح پر صحت سے متعلق فراہم کرتی ہے۔ڈیٹ ٹائم ڈیٹا ٹائپ تاریخ اور وقت دونوں اجزاء کو ذخیرہ کرتا ہے ، جس سے سیکنڈ تک اعلی سطح کی صحت سے متعلق فراہم کی جاتی ہے۔تاریخ اور ڈیٹ ٹائم کے درمیان انتخاب کا انحصار اس بات پر ہے کہ آیا آپ کو صرف تاریخوں کی نمائندگی کرنے کی ضرورت ہے یا اپنی درخواست یا ڈیٹا بیس میں دونوں تاریخوں اور اوقات۔"
    },
    {
        "Question": "جہاں شق اور ایک شق کی شق کے درمیان فرق ہے؟",
        "Answer": "وقت اور ٹائم اسٹیمپ ڈیٹا کی اقسام کو مختلف ڈیٹا بیس سسٹم میں وقت سے متعلق معلومات کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق تفصیل اور لچک کی سطح میں ہے جو وہ فراہم کرتے ہیں۔اختلافات کا ایک جائزہ یہاں ہے: وقت: وقت کے اعداد و شمار کی قسم کسی تاریخ کے جزو کے بغیر وقت کی اقدار کی نمائندگی کرنے کے لئے استعمال ہوتی ہے۔وقت کے اعداد و شمار کی قسم کی کلیدی خصوصیات میں شامل ہیں: صحت سے متعلق: ٹائم ڈیٹا ٹائپ اسٹورز گھنٹے ، منٹ ، سیکنڈ اور اختیاری طور پر ایک سیکنڈ کے مختلف حص .وں کو اسٹور کرتا ہے۔یہ دن کے ایک مخصوص وقت کی نمائندگی کرتا ہے ، لیکن کسی بھی وابستہ تاریخ کی معلومات کے بغیر۔ فارمیٹ: وقت کے اعداد و شمار کی قسم کو عام طور پر ایک مخصوص شکل میں پیش کیا جاتا ہے ، جیسے 'HH: MI: SS' (جیسے ، '15: 30: 45 ')۔استعمال: وقت کے اعداد و شمار کی قسم عام طور پر استعمال ہوتی ہے جب آپ کو کسی خاص تاریخ سے آزاد وقت کی اقدار کو ذخیرہ کرنے اور جوڑنے کی ضرورت ہوتی ہے۔یہ ان ایپلی کیشنز کے لئے موزوں ہے جو شیڈولنگ ، مدت کے حساب کتاب ، یا واقعات کے وقت سے نمٹتے ہیں۔ ٹائم اسٹیمپ: ٹائم اسٹیمپ ڈیٹا کی قسم ایک ساتھ تاریخ اور وقت کی اقدار کی نمائندگی کرنے کے لئے استعمال کی جاتی ہے۔اس میں تاریخ اور وقت دونوں اجزاء شامل ہیں ، جو اعلی سطح کی تفصیل اور لچک فراہم کرتے ہیں۔ٹائم اسٹیمپ ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: صحت سے متعلق: ٹائم اسٹیمپ ڈیٹا ٹائپ اسٹورز نہ صرف تاریخ اور وقت ، بلکہ اختیاری طور پر جزوی سیکنڈ بھی شامل ہیں۔یہ وقت کے اعداد و شمار کی قسم سے زیادہ درست وقت کی معلومات پیش کرتا ہے۔ فارمیٹ: ٹائم اسٹیمپ ڈیٹا کی قسم کو عام طور پر ایک مخصوص شکل میں پیش کیا جاتا ہے ، جیسے 'YYYY-MM-DD HH: MI: SS' (جیسے ، '2023-06-23 15: 30: 45 '). استعمال: ٹائم اسٹیمپ ڈیٹا کی قسم عام طور پر اس وقت استعمال کی جاتی ہے جب آپ کو زیادہ سے زیادہ صحت سے متعلق تاریخ اور وقت کی دونوں اقدار کو ذخیرہ کرنے اور جوڑنے کی ضرورت ہوتی ہے۔یہ ان ایپلی کیشنز کے ل suitable موزوں ہے جن کے لئے ٹریکنگ واقعات کی ضرورت ہوتی ہے ، ٹرانزیکشن ٹائم اسٹیمپ کو اسٹور کرنا ، یا تاریخی ترتیب کو برقرار رکھنا۔ٹائم زونز اور ٹائم زون کے تبادلوں سے نمٹنے کے لئے۔ خلاصہ میں ، وقت کے اعداد و شمار کی قسم کسی تاریخ کی معلومات کے بغیر وقت کی اقدار کی نمائندگی کرتی ہے ، جبکہ ٹائم اسٹیمپ ڈیٹا کی قسم زیادہ سے زیادہ صحت سے متعلق اور لچک فراہم کرتی ہے۔وقت اور ٹائم اسٹیمپ کے درمیان انتخاب آپ کی درخواست یا ڈیٹا بیس کی مخصوص ضروریات پر منحصر ہے ، چاہے آپ کو صرف وقت کی اقدار کی نمائندگی کرنے کی ضرورت ہو یا تاریخ اور وقت دونوں کی اقدار۔"
    },
    {
        "Question": "کسی گروپ کے ذریعہ اور ایک الگ بیان میں کیا فرق ہے؟",
        "Answer": "مختلف ڈیٹا بیس سسٹم میں وقت سے متعلق معلومات کی نمائندگی کرنے کے لئے سال اور تاریخ کے اعداد و شمار کی اقسام کا استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق تفصیل کی سطح اور ان کی ذات کی مخصوص معلومات میں ہے۔اختلافات کا ایک جائزہ یہاں ہے: سال: سال کے اعداد و شمار کی قسم برسوں کو اسٹینڈ اسٹون اقدار کی حیثیت سے نمائندگی کرنے کے لئے استعمال کی جاتی ہے۔سال کے اعداد و شمار کی قسم کی کلیدی خصوصیات میں شامل ہیں: صحت سے متعلق: سال کے اعداد و شمار کی قسم صرف سال کے جزو کو چار ہندسوں کی قیمت کے طور پر اسٹور کرتی ہے (جیسے ، '2023')۔اس میں کسی بھی مہینے یا دن کی معلومات شامل نہیں ہے۔ یوزج: سال کے اعداد و شمار کی قسم عام طور پر اس وقت استعمال ہوتی ہے جب آپ کو کسی خاص تاریخ یا وقت سے آزاد سالوں کو ذخیرہ کرنے اور جوڑ توڑ کرنے کی ضرورت ہوتی ہے۔یہ ان ایپلی کیشنز کے لئے موزوں ہے جو بنیادی طور پر سال سے متعلق اعداد و شمار سے نمٹتے ہیں ، جیسے تاریخی واقعات ، کاپی رائٹ کی تاریخیں ، یا ممبرشپ کی میعاد ختم ہونے والے سال۔ تاریخ: تاریخ کے اعداد و شمار کی قسم کو کیلنڈر کی مخصوص تاریخوں کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے۔تاریخ کے اعداد و شمار کی قسم کی کلیدی خصوصیات میں شامل ہیں: صحت سے متعلق: تاریخ کے اعداد و شمار کی قسم سال ، مہینہ اور دن کے اجزاء کو اسٹور کرتی ہے ، جو تاریخ کی مکمل قیمت فراہم کرتی ہے۔یہ کیلنڈر پر وقت کے ایک خاص نقطہ کی نمائندگی کرتا ہے۔ فارمیٹ: تاریخ کے اعداد و شمار کی قسم کو عام طور پر ایک مخصوص شکل میں پیش کیا جاتا ہے ، جیسے 'yyyy-mm-dd' (جیسے ، '2023-06-23')۔ استعمال: تاریخ: دی تاریخ:جب آپ کو سال ، مہینہ اور دن کی معلومات کے ساتھ مخصوص تاریخوں کو ذخیرہ کرنے اور جوڑ توڑ کرنے کی ضرورت ہوتی ہے تو عام طور پر ڈیٹا کی قسم استعمال کی جاتی ہے۔یہ ان ایپلی کیشنز کے ل suitable موزوں ہے جس کے لئے ٹریکنگ واقعات ، نظام الاوقات ، یا عارضی اعداد و شمار کو سنبھالنے کی ضرورت ہوتی ہے جس میں ایک مکمل تاریخ کی نمائندگی کی ضرورت ہوتی ہے۔ خلاصہ میں ، سال کے اعداد و شمار کی قسم صرف سال کے جزو کو چار ہندسوں کی قیمت کے طور پر اسٹور کرتی ہے ، جبکہ تاریخ کا ڈیٹا ٹائپ سال میں اسٹور کرتا ہے۔، مہینہ اور دن کے اجزاء ، تاریخ کی ایک مکمل قیمت فراہم کرتے ہیں۔سال اور تاریخ کے درمیان انتخاب آپ کی درخواست یا ڈیٹا بیس کی مخصوص ضروریات پر منحصر ہے ، چاہے آپ کو اسٹینڈ سالوں کی نمائندگی کرنے کی ضرورت ہو یا کیلنڈر کی مکمل تاریخیں۔"
    },
    {
        "Question": "اندرونی شمولیت اور بائیں بازو میں شامل ہونے میں کیا فرق ہے؟",
        "Answer": "ENUM اور سیٹ ڈیٹا کی اقسام کو مختلف ڈیٹا بیس سسٹم میں اقدار کا ایک مقررہ سیٹ اسٹور کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق اس طرح ہے جس طرح سے وہ متعدد انتخابوں کو سنبھالتے ہیں اور ان کی ممکنہ اقدار کی تعداد جو وہ ذخیرہ کرسکتے ہیں۔اختلافات کا ایک جائزہ یہاں ہے: ENUM: ENUM ڈیٹا کی قسم اقدار کی پہلے سے طے شدہ فہرست سے ایک قیمت کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے۔اینوم ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: قدر کا انتخاب: ENUM کے ساتھ ، آپ اقدار کے پہلے سے طے شدہ سیٹ سے صرف ایک قدر منتخب کرسکتے ہیں۔ٹیبل تخلیق کے دوران اقدار کی وضاحت کی گئی ہے ، اور آپ ان اقدار میں سے ایک کو ہر صف کے لئے منتخب کرسکتے ہیں۔ قدروں کی تعداد: ENUM ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر کچھ درجن یا اس سے کم تک محدود قدروں کی تعداد کو ذخیرہ کرسکتا ہے۔یہ ان حالات کے ل suitable موزوں ہے جہاں ممکنہ اقدار کی اچھی طرح سے وضاحت اور محدود ہو۔ اسٹوریج: اینوم کالم کے لئے درکار اسٹوریج کا انحصار ممکنہ اقدار کی تعداد پر ہوتا ہے۔یہ ایک کمپیکٹ نمائندگی کا استعمال کرتا ہے ، عام طور پر 1 یا 2 بائٹس پر قبضہ کرتا ہے ، الگ الگ اقدار کی تعداد پر منحصر ہے۔ سیٹ: سیٹ ڈیٹا کی قسم اقدار کی پہلے سے طے شدہ فہرست سے متعدد اقدار کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے۔سیٹ ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: قدر کا انتخاب: سیٹ کے ساتھ ، آپ اقدار کے پہلے سے طے شدہ سیٹ سے صفر ، ایک ، یا ایک سے زیادہ اقدار منتخب کرسکتے ہیں۔ہر قیمت کا آزادانہ طور پر سلوک کیا جاتا ہے ، اور آپ ہر صف کے لئے اقدار کا کوئی مجموعہ منتخب کرسکتے ہیں۔ قدروں کی تعداد: سیٹ اینوم کے مقابلے میں بڑی تعداد میں قدروں کو ذخیرہ کرسکتا ہے۔یہ عام طور پر استعمال کیا جاتا ہے جب آپ کو اقدار کے ایک متعین کردہ سیٹ سے متعدد انتخاب کی اجازت دینے کی ضرورت ہوتی ہے۔ اسٹوریج: سیٹ کالم کے لئے درکار اسٹوریج ممکنہ اقدار کی تعداد پر منحصر ہوتا ہے۔یہ ایک کمپیکٹ نمائندگی کا استعمال کرتا ہے ، عام طور پر 1 ، 2 ، 3 ، 4 ، یا 8 بائٹس پر قبضہ کرتا ہے ، جس میں الگ الگ اقدار کی تعداد پر منحصر ہے۔ خلاصہ میں ، اینوم کا استعمال اقدار کے ایک متعین کردہ سیٹ سے ایک ہی قیمت کو ذخیرہ کرنے کے لئے کیا جاتا ہے ، جبکہ سیٹ استعمال ہوتا ہے۔اقدار کے پہلے سے طے شدہ سیٹ سے متعدد انتخاب کو ذخیرہ کرنا۔اینوم نسبتا small کم تعداد میں اقدار کو ذخیرہ کرسکتا ہے ، جبکہ سیٹ بڑی تعداد میں انتخاب کو سنبھال سکتا ہے۔اینوم اور سیٹ کے مابین انتخاب کا انحصار اس بات پر ہے کہ آیا آپ کو ایک ہی قیمت کو ذخیرہ کرنے کی ضرورت ہے یا اقدار کے پہلے سے طے شدہ سیٹ سے متعدد انتخاب کی اجازت ہے۔"
    },
    {
        "Question": "بیرونی شمولیت اور صحیح شمولیت میں کیا فرق ہے؟",
        "Answer": "JSON (جاوا اسکرپٹ آبجیکٹ اشارے) اور XML (ایکسٹینسیبل مارک اپ زبان) ڈیٹا کی اقسام کو مختلف شکلوں میں ساختی ڈیٹا کو اسٹور اور نمائندگی کرنے کے لئے استعمال کیا جاتا ہے۔ان کے مابین اختلافات کا ایک جائزہ یہاں ہے: JSON: JSON ایک ہلکا پھلکا ڈیٹا انٹرچینج فارمیٹ ہے جو ڈیٹا سیریلائزیشن اور اسٹوریج کے لئے وسیع پیمانے پر استعمال ہوتا ہے۔JSON ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈھانچہ: JSON کلیدی قدر کے جوڑے ، صفوں اور گھریلو اشیاء کا استعمال کرتے ہوئے درجہ بندی کے ڈھانچے میں ڈیٹا کی نمائندگی کرتا ہے۔یہ جاوا اسکرپٹ نحو پر مبنی ہے اور عام طور پر ویب ایپلی کیشنز اور APIs میں استعمال ہوتا ہے۔ پڑھنے کی اہلیت: JSON کو انسانی پڑھنے کے قابل اور سمجھنے میں آسان بنانے کے لئے ڈیزائن کیا گیا ہے۔اس میں سیدھے سیدھے نحو کا استعمال کیا گیا ہے جس میں اشیا اور مربع بریکٹ کے لئے گھوبگھرالی منحنی خطوط وحدانی کے ساتھ استعمال کیا جاتا ہے۔ ڈیٹا کی اقسام: JSON اعداد و شمار کی کئی بنیادی اقسام کی حمایت کرتا ہے ، جس میں ڈور ، نمبر ، بولینز ، اری ، اشیاء اور کالعدم شامل ہیں۔اس میں زیادہ پیچیدہ اعداد و شمار کی اقسام جیسے تاریخوں یا بائنری ڈیٹا کے لئے بلٹ ان سپورٹ نہیں ہے۔ صارف: JSON عام طور پر سسٹم کے مابین ڈیٹا ایکسچینج ، ترتیب کی ترتیبات کو اسٹور کرنے ، API کے ردعمل کی نمائندگی کرنے ، اور نیم ساختہ اعداد و شمار کے ساتھ کام کرنے کے لئے استعمال ہوتا ہے۔یہ خاص طور پر ویب ڈویلپمنٹ اور جاوا اسکرپٹ پر مبنی ایپلی کیشنز میں مشہور ہے۔XML ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ساخت: XML درختوں کی طرح کے ڈھانچے میں ترتیب دیئے گئے ٹیگ اور عناصر کا استعمال کرتے ہوئے ڈیٹا کی نمائندگی کرتا ہے۔یہ اعداد و شمار کی گھوںسلا اور درجہ بندی کی تنظیم کی اجازت دیتا ہے۔ ریڈی ایبلٹی: XML کو انسانی پڑھنے کے قابل اور مشین پڑھنے کے قابل دونوں کے لئے ڈیزائن کیا گیا ہے۔اعداد و شمار کے بارے میں اضافی معلومات فراہم کرنے کے لئے عناصر اور صفات کی وضاحت کے لئے یہ ٹیگ کھولنے اور بند کرنے کا استعمال کرتا ہے۔ ڈیٹا کی اقسام: XML میں پہلے سے طے شدہ ڈیٹا کی قسم نہیں ہے۔یہ اعداد و شمار کو متن کے طور پر علاج کرتا ہے اور صارف کی وضاحت شدہ عناصر اور صفات کی مختلف اقسام کے اعداد و شمار کی نمائندگی کرنے کی اجازت دیتا ہے۔ صارف: XML عام طور پر دستاویز اسٹوریج ، ڈیٹا انٹرچینج ، کنفیگریشن فائلوں ، اور ساختی اعداد و شمار کی نمائندگی کرنے کے لئے استعمال ہوتا ہے۔یہ ایک وسیع پیمانے پر اپنایا ہوا معیار ہے اور مختلف پروگرامنگ زبانوں اور پلیٹ فارمز میں استعمال کیا جاسکتا ہے۔ خلاصہ یہ ہے کہ ، JSON ایک ہلکا پھلکا ڈیٹا انٹرچینج فارمیٹ ہے جو کلیدی قدر کے جوڑے اور صفوں کا استعمال کرتا ہے ، جو بنیادی طور پر ویب ایپلی کیشنز میں ڈیٹا ایکسچینج اور اسٹوریج کے لئے استعمال ہوتا ہے۔XML ایک مارک اپ زبان ہے جو درختوں کی طرح کے ڈھانچے میں ترتیب دیئے گئے ٹیگز اور عناصر کا استعمال کرتی ہے ، جو دستاویزی ذخیرہ کرنے اور ساختی اعداد و شمار کی نمائندگی کرنے کے لئے وسیع پیمانے پر استعمال ہوتی ہے۔JSON اور XML کے مابین انتخاب آپ کی درخواست کی مخصوص ضروریات ، موجودہ نظاموں کے ساتھ مطابقت ، اور جس ماحولیاتی نظام کے ساتھ آپ کام کر رہے ہیں اس پر منحصر ہے۔"
    },
    {
        "Question": "یونین اور یونین کے تمام بیان میں کیا فرق ہے؟",
        "Answer": "بائنری اور وربری ڈیٹا کی اقسام کو بائنری ڈیٹا کو مختلف ڈیٹا بیس سسٹم میں اسٹور کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق ذخیرہ شدہ ڈیٹا کی لمبائی کو سنبھالنے کے طریقے میں ہے۔اختلافات کا ایک جائزہ یہاں ہے: بائنری: بائنری ڈیٹا ٹائپ فکسڈ لمبائی بائنری ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے۔بائنری ڈیٹا ٹائپ کی کلیدی خصوصیات میں شامل ہیں: لمبائی: بائنری ڈیٹا کی قسم کو ٹیبل تخلیق کے دوران ایک مقررہ لمبائی کی ضرورت ہوتی ہے۔اس کا مطلب یہ ہے کہ بائنری کالم میں محفوظ کردہ ہر قیمت کی لمبائی ایک ہی ہوگی۔ اسٹوریج: بائنری ڈیٹا کو اعداد و شمار کی لمبائی سے قطع نظر ، جگہ کی ایک مقررہ مقدار کا استعمال کرتے ہوئے محفوظ کیا جاتا ہے۔اگر مخصوص لمبائی n ہے تو ، ہر قیمت اسٹوریج کے ن بائٹس پر قبضہ کرے گی۔اس کے برعکس ، اگر فراہم کردہ قیمت مخصوص لمبائی سے زیادہ لمبی ہے تو ، اس کو مخصوص لمبائی کو فٹ کرنے کے لئے چھوٹا کیا جائے گا۔ وربنری: وربری ڈیٹا کی قسم متغیر لمبائی بائنری ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے۔وربری ڈیٹا ٹائپ کی کلیدی خصوصیات میں شامل ہیں: لمبائی: وربری ڈیٹا کی قسم متغیر لمبائی کے بائنری ڈیٹا کو ذخیرہ کرنے کی اجازت دیتی ہے۔اس کا مطلب یہ ہے کہ وربری کالم میں ذخیرہ شدہ ہر قیمت کی لمبائی مختلف ہوسکتی ہے۔ اسٹوریج: وربنری ڈیٹا جگہ کی ایک مقررہ مقدار کی بجائے اعداد و شمار کی اصل لمبائی کا استعمال کرتے ہوئے محفوظ کیا جاتا ہے۔مطلوبہ اسٹوریج کا انحصار اعداد و شمار کی لمبائی پر ہوتا ہے۔ تزئین و آرائش: بائنری کے برعکس ، وربنری ڈیٹا کو چھوٹا نہیں کرتا ہے جو مخصوص لمبائی سے زیادہ ہے۔یہ مختلف لمبائی کی اقدار کو ذخیرہ کرسکتا ہے ، کالم کے لئے مخصوص زیادہ سے زیادہ لمبائی تک۔ خلاصہ ، بائنری فکسڈ لمبائی بائنری ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے ، جہاں ہر قیمت کی لمبائی ایک ہی ہوتی ہے۔اس کے لئے اسٹوریج کی ایک مقررہ مقدار کی ضرورت ہوتی ہے اور مخصوص لمبائی سے ملنے کے لئے پیڈ یا تراشے ہوئے اقدار کی ضرورت ہوتی ہے۔متغیر لمبائی کے بائنری ڈیٹا کو ذخیرہ کرنے کے لئے وربری کا استعمال کیا جاتا ہے ، جس سے مختلف لمبائی کی قدر ہوتی ہے۔یہ اعداد و شمار کی اصل لمبائی کا استعمال کرتا ہے اور ان اقدار کو چھوٹا نہیں کرتا ہے جو مخصوص لمبائی سے تجاوز کرتے ہیں۔بائنری اور وربری کے درمیان انتخاب کا انحصار اس بات پر ہے کہ آیا آپ کو اپنے مخصوص استعمال کے معاملے کے لئے فکسڈ لمبائی یا متغیر لمبائی بائنری اسٹوریج کی ضرورت ہے۔"
    },
    {
        "Question": "ایک گنتی اور رقم کے بیان میں کیا فرق ہے؟",
        "Answer": "لانگ بلب اور لانگ ٹیکسٹ ڈیٹا کی اقسام کو مختلف ڈیٹا بیس سسٹم میں بالترتیب بڑے بائنری اور ٹیکسٹ ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق اس قسم کے اعداد و شمار میں ہے جس کو وہ محفوظ کرسکتے ہیں۔یہاں اختلافات کا ایک جائزہ ہے: لانگ بلوب: لانگ بلوب ڈیٹا کی قسم بڑی بائنری اشیاء (بلبس) کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔لانگ بلوب ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: لانگ بلوب خاص طور پر بائنری ڈیٹا کو اسٹور کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے تصاویر ، آڈیو فائلیں ، ویڈیو فائلیں ، یا بائنری ڈیٹا کی کوئی دوسری قسم۔ڈیٹا بیس سسٹم پر منحصر ہے۔ اسٹوریج پر منحصر ہے۔بڑے ٹیکسٹ ڈیٹا کو ذخیرہ کریں۔لانگ ٹیکسٹ ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: لانگ ٹیکسٹ خاص طور پر بڑے متن کے اعداد و شمار کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے طویل دستاویزات ، مضامین ، یا کسی بھی طرح کی لمبی ٹیکسٹ مواد۔ڈیٹا بیس سسٹم پر انحصار کرتے ہوئے زیادہ سے زیادہ 4 گیگا بائٹس (جی بی) کا سائز۔ انکوڈنگ: لانگ ٹیکسٹ ڈیٹا عام طور پر ایک مخصوص کریکٹر انکوڈنگ ، جیسے UTF-8 یا UTF-16 میں محفوظ کیا جاتا ہے ، تاکہ کثیر لسانی متن کی حمایت کی جاسکے اور کردار کی نمائندگی کو محفوظ کیا جاسکے۔ اسٹوریج: لانگ ٹیکسٹ ٹیکسٹ ڈیٹا کو حرفوں کی ترتیب کے طور پر اسٹور کرتا ہے ، جس میں متن کی اصل ڈھانچے اور مواد کو محفوظ رکھتے ہوئے۔ خلاصہ یہ ہے کہ لانگ بلوب بڑی بائنری اشیاء کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے ، جبکہ لانگ ٹیکسٹ بڑے ٹیکسٹیکل ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے۔لانگ بلوب بائنری فائلوں ، جیسے تصاویر یا ویڈیوز کو ذخیرہ کرنے کے لئے موزوں ہے ، جبکہ لانگ ٹیکسٹ لمبے لمبے متن کو ذخیرہ کرنے کے لئے موزوں ہے۔لانگ بلوب اور لانگ ٹیکسٹ کے مابین انتخاب کا انحصار اس بات پر ہوتا ہے کہ آپ کو اپنے مخصوص استعمال کے معاملے میں ذخیرہ کرنے کی ضرورت ہے ، چاہے وہ بائنری ڈیٹا ہو یا متنی مواد۔"
    },
    {
        "Question": "زیادہ سے زیادہ اور ایک منٹ کے بیان میں کیا فرق ہے؟",
        "Answer": "بلاب اور ٹیکسٹ ڈیٹا کی اقسام کو مختلف ڈیٹا بیس سسٹم میں بالترتیب بائنری اور ٹیکسٹ ڈیٹا کی بڑی مقدار میں ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق اس قسم کے اعداد و شمار میں ہے جس میں وہ ذخیرہ کرسکتے ہیں اور وہ کس طرح کردار کو انکوڈنگ کرتے ہیں۔اختلافات کا ایک جائزہ یہاں ہے: بلاب: بلاب (بائنری بڑی شے) ڈیٹا کی قسم بڑے بائنری ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے۔بلاب ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: بلاب خاص طور پر بائنری ڈیٹا کو اسٹور کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے تصاویر ، آڈیو فائلیں ، ویڈیو فائلیں ، یا بائنری مواد کی کوئی دوسری قسم۔ سائز: بلب بہت بڑی بائنری اشیاء کو ذخیرہ کرسکتا ہے ، عام طور پر ،ڈیٹا بیس سسٹم پر منحصر ہے ، زیادہ سے زیادہ 4 گیگا بائٹس (جی بی) یا اس سے زیادہ سائز کے ساتھ۔اعداد و شمار پر کسی بھی کردار کو انکوڈنگ کا اطلاق کریں ، کیونکہ یہ کچے بائنری اسٹوریج کے لئے ہے۔یہ اعداد و شمار کو بائٹس کے تسلسل کے طور پر علاج کرتا ہے جس کی ترجمانی ان کو حرفوں کی طرح کرتی ہے۔ ٹیکسٹ: ٹیکسٹ ڈیٹا کی قسم بڑے ٹیکسٹیکل ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔متن کے اعداد و شمار کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: متن کو خاص طور پر ٹیکسٹ ڈیٹا کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے طویل دستاویزات ، مضامین ، یا کسی بھی طرح کی لمبی ٹیکسٹ مواد۔ڈیٹا بیس سسٹم پر انحصار کرتے ہوئے زیادہ سے زیادہ 4 گیگا بائٹس (جی بی) یا اس سے زیادہ سائز کا سائز: ٹیکسٹ ڈیٹا عام طور پر ایک مخصوص کردار انکوڈنگ میں محفوظ کیا جاتا ہے ، جیسے UTF-8 یا UTF-16 ، کثیر لسانی متن کی حمایت کرنے اور کردار کی نمائندگی کو محفوظ رکھنے کے لئے۔اسٹوریج: ٹیکسٹ ٹیکسٹ ڈیٹا کو حرفوں کی ترتیب کے طور پر اسٹور کرتا ہے ، جس میں متن کی اصل ڈھانچے اور مواد کو محفوظ رکھتے ہوئے۔ خلاصہ یہ ہے کہ بلاب بڑی بائنری اشیاء کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے ، جبکہ متن کو بڑے متن کے اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔بلاب بائنری فائلوں ، جیسے تصاویر یا ویڈیوز کو ذخیرہ کرنے کے لئے موزوں ہے ، جبکہ متن طویل متن کے مواد کو ذخیرہ کرنے کے لئے موزوں ہے۔بلاب کسی بھی کردار کو انکوڈنگ کا اطلاق نہیں کرتا ہے ، اعداد و شمار کو خام بائنری کے طور پر سمجھتا ہے ، جبکہ متن کو عام طور پر کردار کی نمائندگی کو محفوظ رکھنے کے لئے ایک مخصوص کردار انکوڈنگ کے ساتھ محفوظ کیا جاتا ہے۔بلاب اور متن کے مابین انتخاب اس بات پر منحصر ہے کہ آپ کو اپنے مخصوص استعمال کے معاملے میں ذخیرہ کرنے کی ضرورت ہے ، چاہے وہ بائنری ڈیٹا ہو یا متنی مواد۔"
    },
    {
        "Question": "کسی آرڈر کے ذریعہ اور حد کے بیان میں کیا فرق ہے؟",
        "Answer": "میڈیم بلب اور میڈیم ٹیکسٹ ڈیٹا کی اقسام کو مختلف ڈیٹا بیس سسٹم میں بالترتیب درمیانے درجے کے بائنری اور ٹیکسٹ ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق اس قسم کے اعداد و شمار میں ہے جس میں وہ ذخیرہ کرسکتے ہیں اور زیادہ سے زیادہ سائز جس کی وہ حمایت کرتے ہیں۔اختلافات کا ایک جائزہ یہاں ہے: میڈیم بلوب: میڈیم بلوب ڈیٹا کی قسم درمیانے درجے کے بائنری اشیاء کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔میڈیم بلوب ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: میڈیم بلوب خاص طور پر بائنری ڈیٹا کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے تصاویر ، آڈیو فائلیں ، ویڈیو فائلیں ، یا بائنری مواد کی کوئی دوسری قسم۔ سائز: میڈیم بلب درمیانے درجے کے بائنری آبجیکٹ کو اسٹور کرسکتا ہے ،عام طور پر زیادہ سے زیادہ سائز کے ساتھ 16 میگا بائٹس (ایم بی) کے ساتھ ، ڈیٹا بیس سسٹم پر منحصر ہے۔ اسٹوریج: میڈیم بلب بائنری ڈیٹا کو بائٹس کے تسلسل کے طور پر اسٹور کرتا ہے ، اصل بائنری آبجیکٹ کے عین مطابق ڈھانچے اور مواد کو محفوظ رکھتا ہے۔ میڈیم ٹیکسٹ: میڈیم ٹیکسٹ ڈیٹا کی قسم ہے ہے۔درمیانے درجے کے متنی اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔میڈیم ٹیکسٹ ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: میڈیم ٹیکسٹ خاص طور پر ٹیکسٹ ڈیٹا کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے درمیانے درجے کے دستاویزات ، مضامین ، یا درمیانے درجے کے متنی متن کی کوئی دوسری قسم۔ سائز: میڈیم ٹیکسٹ میڈیم سائز کے متن کو اسٹور کرسکتا ہے۔عام طور پر ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر 16 میگا بائٹس (ایم بی) کے زیادہ سے زیادہ سائز کے ساتھ۔کردار کی نمائندگی۔ اسٹوریج: میڈیم ٹیکسٹ ٹیکسٹ ڈیٹا کو حرفوں کی ترتیب کے طور پر اسٹور کرتا ہے ، جس میں متن کے اصل ڈھانچے اور مواد کو محفوظ رکھتے ہوئے۔ خلاصہ یہ ہے کہ درمیانے درجے کے بائنری آبجیکٹ کو ذخیرہ کرنے کے لئے میڈیم بلب کا استعمال کیا جاتا ہے ، جبکہ میڈیم ٹیکسٹ کو درمیانے درجے کے ٹیکسٹیکل کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ڈیٹامیڈیم بلوب درمیانے سائز کی بائنری فائلوں کو ذخیرہ کرنے کے لئے موزوں ہے ، جبکہ میڈیم ٹیکسٹ درمیانے درجے کے متنی مواد کو ذخیرہ کرنے کے لئے موزوں ہے۔میڈیم بلب اور میڈیم ٹیکسٹ کے مابین انتخاب کا انحصار آپ کے مخصوص استعمال کے معاملے میں آپ کو کس قسم کے اعداد و شمار پر ذخیرہ کرنے کی ضرورت ہے ، چاہے یہ درمیانے درجے کا بائنری ڈیٹا ہو یا درمیانے درجے کے متنی مواد۔"
    },
    {
        "Question": "بولین اور ورچر ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "چھوٹے بلب اور چھوٹے ٹیکسٹ ڈیٹا کی اقسام کو مختلف ڈیٹا بیس سسٹم میں بالترتیب چھوٹے سائز کے بائنری اور ٹیکسٹ ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق اس قسم کے اعداد و شمار میں ہے جس میں وہ ذخیرہ کرسکتے ہیں اور زیادہ سے زیادہ سائز جس کی وہ حمایت کرتے ہیں۔اختلافات کا ایک جائزہ یہاں ہے: سمال بلب: چھوٹے بلب ڈیٹا کی قسم چھوٹے سائز کے بائنری اشیاء کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔سمال بلوب ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: سمال بلوب خاص طور پر بائنری ڈیٹا کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے چھوٹی تصاویر ، آڈیو اسنیپٹس ، یا کسی بھی دوسری قسم کے چھوٹے بائنری مواد۔ڈیٹا بیس سسٹم پر منحصر ہے ، زیادہ سے زیادہ 64 کلو بائٹس (کے بی) کے ساتھ۔ اسٹوریج: سمال بلب بائنری ڈیٹا کو بائنٹس کے تسلسل کے طور پر اسٹور کرتا ہے ، اصل بائنری آبجیکٹ کے عین مطابق ڈھانچے اور مواد کو محفوظ رکھتے ہیں۔ سمل ٹیکسٹ: سمال ٹیکسٹ ڈیٹا کی قسم استعمال کی جاتی ہے۔چھوٹے سائز کے متنی اعداد و شمار کو ذخیرہ کرنا۔سمال ٹیکسٹ ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: سمال ٹیکسٹ خاص طور پر ٹیکسٹ ڈیٹا کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے مختصر تفصیل ، نوٹ ، یا کسی بھی طرح کے چھوٹے سائز کے متنی مواد کی۔عام طور پر ڈیٹا بیس سسٹم پر منحصر ہوتا ہے ، زیادہ سے زیادہ 64 کلو بائٹس (کے بی) کے ساتھ۔نمائندگی۔ اسٹوریج: سمال ٹیکسٹ ٹیکسٹ ڈیٹا کو حرفوں کی ترتیب کے طور پر اسٹور کرتا ہے ، جس میں متن کے اصل ڈھانچے اور مواد کو محفوظ رکھتے ہوئے۔ خلاصہ یہ ہے کہ چھوٹے سائز کے بائنری اشیاء کو ذخیرہ کرنے کے لئے سمال بلب کا استعمال کیا جاتا ہے ، جبکہ سمال ٹیکسٹ کو چھوٹے سائز کے متنی اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔سمال بلب چھوٹی بائنری فائلوں یا بائنری ٹکڑوں کو ذخیرہ کرنے کے لئے موزوں ہے ، جبکہ چھوٹا سا ٹیکسٹ مختصر متن کے مواد کو ذخیرہ کرنے کے لئے موزوں ہے۔سمال بلوب اور سمال ٹیکسٹ کے درمیان انتخاب اس بات پر منحصر ہوتا ہے کہ آپ کو اپنے مخصوص استعمال کے معاملے میں ذخیرہ کرنے کی ضرورت ہے ، چاہے یہ چھوٹے سائز کا بائنری ڈیٹا ہو یا چھوٹے سائز کے متنی مواد۔"
    },
    {
        "Question": "INT اور ڈیٹ ٹائم ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "ٹینی بلوب اور ٹائن ٹیکسٹ ڈیٹا کی اقسام کو مختلف ڈیٹا بیس سسٹم میں بالترتیب بہت چھوٹے بائنری اور ٹیکسٹ ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان بنیادی فرق اس قسم کے اعداد و شمار میں ہے جس میں وہ ذخیرہ کرسکتے ہیں اور زیادہ سے زیادہ سائز جس کی وہ حمایت کرتے ہیں۔اختلافات کا ایک جائزہ یہاں ہے: ٹنی بلوب: ٹنی بلوب ڈیٹا کی قسم بہت چھوٹی بائنری اشیاء کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔ٹینی بلوب ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: ٹینی بلوب خاص طور پر بائنری ڈیٹا کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے چھوٹے شبیہیں ، تھمب نیلز ، یا کسی بھی طرح کی چھوٹی بائنری مواد۔ڈیٹا بیس سسٹم پر منحصر ہے۔ اسٹوریج پر منحصر ہے: ٹینی بلوب بائنری ڈیٹا کو بائٹس کے تسلسل کے طور پر اسٹوریج پر منحصر ہے۔ٹیکسٹ ڈیٹا۔ٹائن ٹیکسٹ ڈیٹا کی قسم کی کلیدی خصوصیات میں شامل ہیں: ڈیٹا کی قسم: ٹینی ٹیکسٹ خاص طور پر ٹیکسٹ ڈیٹا کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، جیسے مختصر نام ، لیبل ، یا کسی بھی دوسری قسم کی بہت چھوٹی ٹیکسٹیکل مواد۔ڈیٹا بیس سسٹم پر انحصار کرتے ہوئے زیادہ سے زیادہ 255 بائٹس کا سائز۔متن کے اعداد و شمار کو حرفوں کی ترتیب کے طور پر اسٹور کرتا ہے ، جس میں متن کی اصل ڈھانچے اور مواد کو محفوظ رکھتے ہوئے۔ خلاصہ یہ ہے کہ ، ٹنی بلب بہت چھوٹی بائنری اشیاء کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے ، جبکہ ٹائن ٹیکسٹ بہت چھوٹے ٹیکسٹیکل ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے۔ٹنی بلوب بہت چھوٹی بائنری فائلوں یا بائنری ٹکڑوں کو ذخیرہ کرنے کے لئے موزوں ہے ، جبکہ ٹائن ٹیکسٹ بہت ہی مختصر متنی مواد کو ذخیرہ کرنے کے لئے موزوں ہے۔ٹینی بلوب اور ٹائن ٹیکسٹ کے مابین انتخاب کا انحصار اس بات پر ہوتا ہے کہ آپ کو اپنے مخصوص استعمال کے معاملے میں ذخیرہ کرنے کی ضرورت ہے ، چاہے یہ بہت چھوٹا بائنری ڈیٹا ہو یا بہت چھوٹا ٹیکسٹیکل مواد۔"
    },
    {
        "Question": "متن اور بلاب ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "میموری اور انوڈ بی اسٹوریج انجن دو مختلف اسٹوریج انجن ہیں جو ایس کیو ایل (اور دوسرے ڈیٹا بیس سسٹم) میں دستیاب ہیں۔ان کی الگ الگ خصوصیات ہیں اور وہ مختلف استعمال کے معاملات کے ل suitable موزوں ہیں۔دونوں کے مابین اختلافات کا ایک جائزہ یہاں ہے: میموری انجن: میموری اسٹوریج انجن ، جسے ہیپ بھی کہا جاتا ہے ، بنیادی طور پر میموری میں ڈیٹا کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے۔میموری انجن کی کلیدی خصوصیات میں شامل ہیں: اسٹوریج: میموری انجن اپنے تمام ڈیٹا کو ڈسک کے بجائے میموری میں اسٹور کرتا ہے۔اس سے انتہائی تیز ڈیٹا تک رسائی اور بازیافت کی اجازت ملتی ہے۔ وولٹیلیٹی: میموری انجن میں ذخیرہ شدہ ڈیٹا غیر مستحکم اور عارضی ہے۔یہ مستقل نہیں ہے اور سرور دوبارہ شروع کرنے یا بجلی کی ناکامی پر کھو جائے گا۔یہ عام طور پر عارضی اعداد و شمار یا کیچنگ کے مقاصد کے لئے استعمال ہوتا ہے۔ایک ہی ٹیبل پر کام کرنے سے تنازعہ اور کارکردگی کے مسائل پیدا ہوسکتے ہیں۔ INNODB انجن: INNODB اسٹوریج انجن MYSQL میں زیادہ خصوصیت سے مالا مال اور وسیع پیمانے پر استعمال ہونے والا اسٹوریج انجن ہے۔انوڈ بی انجن کی کلیدی خصوصیات میں شامل ہیں: اسٹوریج: انوڈ بی انجن اپنے ڈیٹا کو ڈسک پر فائل فی ٹیبل ڈھانچے میں محفوظ کرتا ہے۔یہ تیز اور قابل اعتماد ڈیٹا تک رسائی فراہم کرنے کے لئے میموری اور ڈسک اسٹوریج کے ایک مجموعہ کا استعمال کرتا ہے۔ بدعنوانی: INNODB انجن میں ذخیرہ شدہ ڈیٹا پائیدار اور مستقل ہے۔یہ اعداد و شمار کی سالمیت کو یقینی بناتے ہوئے سرور کو دوبارہ شروع کرنے یا بجلی کی ناکامیوں سے بچ جاتا ہے۔ منتقلی اور تیزابیت کی تعمیل: INNODB انجن لین دین کی حمایت کرتا ہے ، جس سے متعدد بیانات کو ایک ہی جوہری آپریشن میں گروپ کیا جاسکتا ہے۔یہ تیزابیت (جوہری ، مستقل مزاجی ، تنہائی ، استحکام) کی تعمیل بھی فراہم کرتا ہے ، اعداد و شمار میں مستقل مزاجی اور وشوسنییتا کو یقینی بناتا ہے۔ کوکورنسی کنٹرول: INONODB انجن قطار کی سطح پر لاکنگ کا استعمال کرتا ہے ، جس سے اسی جدول پر ہم آہنگی پڑھنے اور لکھنے کی کارروائیوں کی اجازت ہوتی ہے۔اس سے تنازعہ کو کم کیا جاتا ہے اور کثیر صارف ماحول میں کارکردگی کو بہتر بناتا ہے۔ کلیدی رکاوٹوں کو غیر ملکی: غیر ملکی کلیدی رکاوٹوں کی حمایت کرتا ہے ، جو متعلقہ جدولوں کے مابین حوالہ دیتے ہیں۔ خلاصہ میں ، میموری انجن عارضی ڈیٹا اسٹوریج یا کیچنگ کے مقاصد کے لئے موزوں ہے ، جو تیزی سے فراہم کرتا ہے ، جو تیزی سے فراہم کرتا ہے۔میموری میں رسائی لیکن اعداد و شمار کے استحکام کے بغیر۔دوسری طرف ، انوڈ بی انجن استحکام ، ٹرانزیکشن سپورٹ ، ہم آہنگی پر قابو پانے اور غیر ملکی کلیدی رکاوٹوں کی پیش کش کرتا ہے ، جس سے یہ زیادہ تر عام مقاصد کی ایپلی کیشنز کے ل suitable موزوں ہوتا ہے جہاں ڈیٹا کی سالمیت اور وشوسنییتا بہت ضروری ہے۔دونوں کے مابین انتخاب آپ کی درخواست کی مخصوص ضروریات ، استحکام ، لین دین کی حمایت ، اور کارکردگی اور ڈیٹا کی استقامت کے مابین تجارتی تعلقات پر منحصر ہے۔"
    },
    {
        "Question": "فلوٹ اور ڈبل ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "MYISAM اور INNODB اسٹوریج انجن ایس کیو ایل میں دو مختلف اسٹوریج انجن دستیاب ہیں۔ان کی الگ الگ خصوصیات ہیں اور وہ مختلف استعمال کے معاملات کے ل suitable موزوں ہیں۔دونوں کے مابین اختلافات کا ایک جائزہ یہاں ہے: مائی آئسم انجن: مائیسم اسٹوریج انجن ایس کیو ایل میں پرانا اور آسان اسٹوریج انجن ہے۔میسم انجن کی کلیدی خصوصیات میں شامل ہیں: اسٹوریج: مائی آئی ایس اے ایم اپنے ڈیٹا کو ہر ٹیبل کے لئے علیحدہ فائلوں میں اسٹور کرتا ہے ، جس میں ڈیٹا کے لئے .MYD فائل اور انڈیکس کے لئے .MYI فائل شامل ہوتی ہے۔کسی ٹیبل پر تحریری آپریشن انجام دے رہا ہے ، دوسرے لین دین کو ایک ہی ٹیبل پر لکھنے کی اجازت نہیں ہے۔اس سے کثیر صارف کے ماحول میں تنازعہ اور ممکنہ طور پر اثر انداز ہونے کا سبب بن سکتا ہے۔ ٹرانزیکشنز: MYISAM لین دین کی حمایت نہیں کرتا ہے۔یہ صرف انفرادی بیانات پر جوہری کارروائیوں کی حمایت کرتا ہے۔ ایسڈ کی تعمیل: MYISAM مکمل تیزاب (ایٹمیٹی ، مستقل مزاجی ، تنہائی ، استحکام) کی تعمیل فراہم نہیں کرتا ہے۔یہ رول بیک یا کریش کی بازیابی جیسی خصوصیات کی حمایت نہیں کرتا ہے ، جس سے ناکامیوں کی صورت میں اعداد و شمار کی تضادات کا زیادہ خطرہ ہوتا ہے۔ کارکردگی: MYISAM اپنے تیز پڑھنے کی کارروائیوں کے لئے جانا جاتا ہے ، خاص طور پر پڑھنے سے بھاری کام کے بوجھ یا ایپلی کیشنز کے لئے جن میں تیز ڈیٹا کی بازیافت کی ضرورت ہوتی ہے۔تاہم ، یہ ٹیبل لیول لاکنگ کی وجہ سے تحریری طور پر کام کے بوجھ کے ساتھ بھی کارکردگی کا مظاہرہ نہیں کرسکتا ہے۔ انو ڈی بی انجن: انوڈ بی اسٹوریج انجن ایس کیو ایل میں زیادہ جدید اور وسیع پیمانے پر استعمال ہونے والا اسٹوریج انجن ہے۔انوڈ بی انجن کی کلیدی خصوصیات میں شامل ہیں: اسٹوریج: انوڈ بی اپنے ڈیٹا کو مشترکہ ٹیبل اسپیس میں اسٹور کرتا ہے ، جس میں ایک یا زیادہ ڈیٹا فائلوں پر مشتمل ہوتا ہے ، جس کا انتظام انوڈ بی اسٹوریج انجن کے ذریعہ کیا جاتا ہے۔بیک وقت ایک ہی ٹیبل کے اندر مختلف قطاروں میں۔اس سے ہم آہنگی کو بہتر بناتا ہے اور کثیر صارف ماحول میں تنازعہ کو کم کرتا ہے۔ ٹرانسیکشنز اور ایسڈ کی تعمیل: INNODB لین دین کی حمایت کرتا ہے ، جس سے متعدد بیانات کو ایک ہی جوہری آپریشن میں گروپ کیا جاسکتا ہے۔یہ تیزاب کی مکمل تعمیل فراہم کرتا ہے ، اعداد و شمار کی سالمیت ، مستقل مزاجی اور استحکام کو یقینی بناتا ہے۔ کریش کی بازیابی: INODB کریش کی بازیابی کے طریقہ کار فراہم کرتا ہے ، اس بات کو یقینی بناتا ہے کہ سسٹم کریش یا بجلی کی ناکامی کی صورت میں بھی اعداد و شمار مستقل رہیں۔، متعلقہ جدولوں کے مابین ریفرنل سالمیت کے نفاذ کو چالو کرنا۔ کارکردگی: انوڈ بی دونوں پڑھنے اور لکھنے کی کارروائیوں کے ساتھ اچھی کارکردگی کا مظاہرہ کرتا ہے ، جس سے یہ عمومی مقصدی ایپلی کیشنز کے لئے موزوں ہوتا ہے جس میں ڈیٹا کی سالمیت ، ٹرانزیکشن سپورٹ ، اور ہم آہنگی کنٹرول کی ضرورت ہوتی ہے۔ خلاصہ یہ کہ ، مائی آئی ایس اے ایم آسان ہے اور یہ آسان ہے۔پڑھنے سے بھاری کام کے بوجھ کے ل suitable موزوں ہے جہاں ٹرانزیکشن سپورٹ اور ڈیٹا کی سالمیت اہم نہیں ہے۔دوسری طرف ، انوڈ بی زیادہ ترقی یافتہ ہے ، جو ٹرانزیکشن سپورٹ ، ہم آہنگی پر قابو پانے ، حادثے کی بازیابی ، اور غیر ملکی کلیدی رکاوٹوں کو مہیا کرتا ہے ، جس سے یہ زیادہ تر عمومی مقصد کے ایپلی کیشنز کے ل suitable موزوں ہوتا ہے جہاں ڈیٹا کی سالمیت اور وشوسنییتا بہت ضروری ہے۔دونوں کے مابین انتخاب آپ کی درخواست کی مخصوص ضروریات ، ٹرانزیکشن سپورٹ کی ضرورت ، ہم آہنگی پر قابو پانے ، اور کارکردگی اور خصوصیات کے مابین تجارتی تعلقات پر منحصر ہے۔"
    },
    {
        "Question": "اعشاریہ اور عددی اعداد و شمار کی قسم میں کیا فرق ہے؟",
        "Answer": "MYISAM اور INNODB اسٹوریج انجن ایس کیو ایل میں دو مختلف اسٹوریج انجن دستیاب ہیں۔ان کی الگ الگ خصوصیات ہیں اور وہ مختلف استعمال کے معاملات کے ل suitable موزوں ہیں۔دونوں کے مابین اختلافات کا ایک جائزہ یہاں ہے: میسم انجن: اسٹوریج: مائی آئی ایس اے ایم اپنے ڈیٹا کو ہر ٹیبل کے لئے الگ فائلوں میں اسٹور کرتا ہے ، جس میں ڈیٹا کے لئے .MYD فائل اور انڈیکس کے لئے .MYI فائل شامل ہے۔اس کا مطلب یہ ہے کہ جب ایک ٹرانزیکشن کسی ٹیبل پر تحریری آپریشن انجام دے رہا ہے تو ، دوسرے لین دین کو ایک ہی ٹیبل پر لکھنے کی اجازت نہیں ہے۔اس سے کثیر صارف کے ماحول میں تنازعہ اور ممکنہ طور پر اثر انداز ہونے کا سبب بن سکتا ہے۔ ٹرانزیکشنز: MYISAM لین دین کی حمایت نہیں کرتا ہے۔یہ صرف انفرادی بیانات پر جوہری کارروائیوں کی حمایت کرتا ہے۔اگر کوئی بیان ناکام ہوجاتا ہے تو ، اس بیان کے ذریعہ کی گئی تبدیلیوں کو ختم کرنے کے لئے کوئی رول بیک میکانزم موجود نہیں ہے۔ ایسڈ کی تعمیل: MYISAM مکمل تیزاب (ایٹمیٹی ، مستقل مزاجی ، تنہائی ، استحکام) کی تعمیل فراہم نہیں کرتا ہے۔یہ رول بیک یا کریش کی بازیابی جیسی خصوصیات کی حمایت نہیں کرتا ہے ، جس سے ناکامیوں کی صورت میں اعداد و شمار کی تضادات کا زیادہ خطرہ ہوتا ہے۔ کلیدی رکاوٹوں کو غیر ملکی: MYISAM غیر ملکی کلیدی رکاوٹوں کی حمایت نہیں کرتا ہے ، جس کا مطلب ہے کہ وہ متعلقہ جدولوں کے مابین حوالہ دیتے ہیں۔متن کی تلاش: MYISAM مکمل ٹیکسٹ سرچ انڈیکس کے لئے بلٹ ان سپورٹ فراہم کرتا ہے ، جو ٹیکسٹیکل ڈیٹا کے اندر موثر تلاش کی اجازت دیتا ہے۔ INNODB انجن: اسٹوریج: انوڈ بی اپنے ڈیٹا کو مشترکہ ٹیبل اسپیس میں اسٹور کرتا ہے ، جس میں ایک یا زیادہ ڈیٹا فائلوں پر مشتمل ہوتا ہے ، جس میں ایک یا زیادہ ڈیٹا فائلوں پر مشتمل ہوتا ہے ، جس کا انتظام INNODB کے ذریعہ ہوتا ہے۔اسٹوریج انجن۔ لاکنگ: انوڈ بی میں قطار کی سطح کا تالا لگا ہوا ہے ، جس کا مطلب ہے کہ متعدد لین دین بیک وقت ایک ہی ٹیبل کے اندر مختلف قطاروں کو پڑھ سکتے ہیں اور لکھ سکتے ہیں۔اس سے ہم آہنگی کو بہتر بناتا ہے اور کثیر صارف ماحول میں تنازعہ کو کم کرتا ہے۔ ٹرانسیکشنز اور ایسڈ کی تعمیل: INNODB لین دین کی حمایت کرتا ہے ، جس سے متعدد بیانات کو ایک ہی جوہری آپریشن میں گروپ کیا جاسکتا ہے۔یہ اعداد و شمار کی سالمیت ، مستقل مزاجی اور استحکام کو یقینی بناتے ہوئے ، تیزاب کی مکمل تعمیل فراہم کرتا ہے۔INNODB لین دین کی حدود کو کنٹرول کرنے کے لئے کمٹ اور رول بیک بیانات کے استعمال کی حمایت کرتا ہے۔ کریش بازیافت: INNODB کریش کی بازیابی کے طریقہ کار کو فراہم کرتا ہے ، اس بات کو یقینی بناتا ہے کہ سسٹم کریش یا بجلی کی ناکامی کی صورت میں بھی اعداد و شمار مستقل رہیں۔آپ کو میزوں کے مابین تعلقات کی وضاحت کرنے اور ریفرنشنل سالمیت کو نافذ کرنے کی اجازت دینا۔ کارکردگی: INNODB دونوں پڑھنے اور لکھنے کی کارروائیوں کے ساتھ اچھی کارکردگی کا مظاہرہ کرتا ہے ، جس سے یہ عمومی مقصد کی ایپلی کیشنز کے ل suitable موزوں ہوتا ہے جس میں ڈیٹا کی سالمیت ، ٹرانزیکشن سپورٹ ، اور ہم آہنگی کے کنٹرول کی ضرورت ہوتی ہے۔ خلاصہ یہ آسان ہے۔اور پڑھنے سے بھاری کام کے بوجھ کے ل suitable موزوں ہے جہاں ٹرانزیکشن سپورٹ اور ڈیٹا کی سالمیت اہم نہیں ہے۔INNODB زیادہ ترقی یافتہ ہے ، جو ٹرانزیکشن سپورٹ ، ہم آہنگی کنٹرول ، کریش کی بازیابی ، غیر ملکی کلیدی رکاوٹوں اور بہتر ڈیٹا کی سالمیت کی فراہمی ہے۔یہ زیادہ تر عمومی مقصد کے ایپلی کیشنز کے ل suitable موزوں ہے جہاں ڈیٹا کی سالمیت اور وشوسنییتا انتہائی ضروری ہے۔دونوں کے مابین انتخاب آپ کی درخواست کی مخصوص ضروریات ، ٹرانزیکشن سپورٹ کی ضرورت ، ہم آہنگی پر قابو پانے ، اور کارکردگی اور خصوصیات کے مابین تجارتی تعلقات پر منحصر ہے۔"
    },
    {
        "Question": "چار اور ورچر ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "ایک BTREE انڈیکس اور ایک ہیش انڈیکس دو مختلف قسم کے انڈیکس ہیں جو ڈیٹا بیس سسٹم میں استعمال ہوتے ہیں ، ہر ایک اپنی خصوصیات اور استعمال کے معاملات کے ساتھ۔دونوں کے مابین اختلافات کا ایک جائزہ یہاں ہے: BTREE انڈیکس: ڈھانچہ: ایک BTREE (متوازن درخت) انڈیکس خود توازن والے درخت کے اعداد و شمار کے ڈھانچے پر مبنی ہے ، عام طور پر بائنری درخت یا B+ درخت کی طرح ایک قسم۔یہ ایک ترتیب شدہ ترتیب میں انڈیکس اندراجات کا اہتمام کرتا ہے ، جس سے یہ رینج پر مبنی سوالات اور چھانٹنے کے کاموں کے ل effice موثر ہوتا ہے۔ آرڈرنگ: بی ٹی آر ای انڈیکس میں اقدار کو ایک مخصوص ترتیب میں محفوظ کیا جاتا ہے ، جس سے موازنہ آپریٹرز کی بنیاد پر موثر تلاش کی جاسکتی ہے (جیسے ، اس سے زیادہ ،اس سے کم ، مساوات)۔یہ مساوات اور عدم مساوات کی تلاش دونوں کی حمایت کرتا ہے۔ بہرحال۔وہ ایسے منظرناموں کے لئے مناسب ہیں جہاں اعداد و شمار کی تقسیم غیر متوقع ہے یا جب لچکدار تلاش کی صلاحیتوں کی ضرورت ہو۔ ڈسک پر مبنی: BTREE انڈیکس عام طور پر ڈسک پر مبنی ہوتے ہیں ، یعنی وہ اس کی بجائے ثانوی اسٹوریج (ہارڈ ڈسک) پر محفوظ ہوتے ہیں۔یاداشت.اس سے ڈسک کی جگہ کے موثر استعمال کی اجازت ملتی ہے اور بڑے ڈیٹاسیٹس کو سنبھال سکتا ہے۔ ملٹی کالم انڈیکسنگ: بی ٹی ای ای انڈیکس ایک سے زیادہ کالموں پر بنائی جاسکتی ہے ، جس سے متعدد معیارات کی بنیاد پر موثر استفسار کی اجازت دی جاسکتی ہے (جیسے ، دونوں \"فرسٹ نام\" اور \"آخری_ نام\" پر ایک انڈیکس۔) .ہش انڈیکس: ساخت: ایک ہیش انڈیکس انڈیکس میں مخصوص مقامات پر انڈیکس اقدار کو نقشہ بنانے کے لئے ہیش انڈیکس کا استعمال کرتا ہے۔اس سے اشاریہ شدہ قیمت اور اس کے مقام کے مابین براہ راست نقشہ سازی پیدا ہوتی ہے ، جس سے تیز رفتار تلاش ہوتی ہے۔تاہم ، وہ رینج پر مبنی سوالات یا چھانٹنے والی کارروائیوں کی موثر طریقے سے حمایت نہیں کرتے ہیں۔ ایکویٹی کی تلاشیں: ہیش انڈیکس مساوات کی تلاش (عین مطابق میچ) کے لئے بہتر بنایا جاتا ہے لیکن عدم مساوات کی تلاش یا رینج کے سوالات کے ل suitable موزوں نہیں ہیں۔ میموری پر مبنی: ہیش انڈیکس عام طور پر میموری ہیں-مبنی ، مطلب وہ ڈسک کے بجائے میموری میں محفوظ ہیں۔اس سے انتہائی تیز نظر ڈالنے کی اجازت ملتی ہے لیکن انڈیکس کے سائز کو دستیاب میموری تک محدود کردیا جاتا ہے۔ سنگل کالم انڈیکسنگ: ہیش انڈیکس عام طور پر ایک ہی کالم پر بنائے جاتے ہیں۔جب وہ اس مخصوص کالم پر عین مطابق میچ کے سوالات کے ساتھ استعمال ہوتے ہیں تو وہ سب سے زیادہ موثر ہوتے ہیں۔ خلاصہ میں ، ایک BTREE انڈیکس وسیع پیمانے پر استفسار کے نمونوں کے لئے موزوں ہے ، مساوات اور رینج دونوں سوالات کی حمایت کرتا ہے ، اور بڑے ڈیٹاسیٹس کو سنبھال سکتا ہے۔دوسری طرف ، ایک ہیش انڈیکس کو عین مطابق میچ (مساوات) کی تلاش کے ل optim بہتر بنایا گیا ہے ، میموری پر مبنی ہے ، اور سنگل کالم انڈیکسنگ کے لئے سب سے زیادہ موثر ہے۔دونوں کے درمیان انتخاب آپ کی درخواست کی مخصوص استفسار کے نمونوں ، ڈیٹا کی تقسیم ، اور کارکردگی کی ضروریات پر منحصر ہے۔"
    },
    {
        "Question": "بنیادی کلید اور ایک انوکھی کلید میں کیا فرق ہے؟",
        "Answer": "ایک فل ٹیکسٹ انڈیکس اور ایک جن (عام الٹی انڈیکس) انڈیکس دو مختلف قسم کے اشاریہ جات ہیں جو ڈیٹا بیس سسٹم میں استعمال ہوتے ہیں ، ہر ایک اپنی خصوصیات اور استعمال کے معاملات کے ساتھ۔دونوں کے مابین اختلافات کا ایک جائزہ یہاں ہے: فل ٹیکسٹ انڈیکس: ٹیکسٹ سرچ: ایک فل ٹیکسٹ انڈیکس خاص طور پر ٹیکسٹ ڈیٹا پر مکمل ٹیکسٹ سرچ آپریشنز کے لئے ڈیزائن کیا گیا ہے۔یہ متن کے بڑے جسموں میں الفاظ یا فقرے کی موثر تلاش کی اجازت دیتا ہے۔ زبان سے متعلق مخصوص: فل ٹیکسٹ انڈیکس عام طور پر زبان سے متعلق مخصوص ہوتے ہیں ، یعنی وہ ایک مخصوص زبان یا زبانوں کے سیٹ کے ل optim بہتر ہوتے ہیں۔وہ زبان سے متعلق لفظ اسٹیمنگ ، اسٹاپ الفاظ ، اور دیگر لسانی تحفظات کو مدنظر رکھتے ہیں۔ میچنگ: فل ٹیکسٹ انڈیکسس مطابقت کی درجہ بندی کے الگورتھم پر مبنی مماثل کارکردگی کا مظاہرہ کرتے ہیں ، جیسے الفاظ کی تعدد ، قربت ، اور متن کے اندر تلاش کی شرائط کی موجودگی کو مدنظر رکھتے ہیں۔.کیری نحو: فل ٹیکسٹ انڈیکس اعلی درجے کی استفسار کے نحو کی حمایت کرتے ہیں ، جس میں پیچیدہ تلاش کے نمونوں کی اجازت ہوتی ہے ، بشمول بولین آپریٹرز (اور ، یا ، نہیں) ، وائلڈ کارڈ کی تلاشیں ، اور فقرے کی تلاشیں۔ایک جدول میں ، اس کالم کے اندر موثر تلاش کو چالو کرنا۔یہ ایک فل ٹیکسٹ انڈیکس جیسے ٹیکسٹ ڈیٹا تک ہی محدود نہیں ہے۔متعدد کالموں پر تخلیق کیا جاسکتا ہے ، جس میں متعدد کالموں پر پھیلا ہوا جامع ڈیٹا کی اقسام کی اشاریہ سازی اور موثر استفسار کی اجازت دی جاسکتی ہے۔جامع اقسام پر پیچیدہ کاروائیاں۔ ڈیٹا اقسام: جن اشاریہ کو مختلف قسم کے ڈیٹا کی اقسام کے ساتھ استعمال کیا جاسکتا ہے ، متن تک ہی محدود نہیں۔وہ ورسٹائل ہیں اور مختلف قسم کے ڈیٹا ڈھانچے کے مطابق ڈھال سکتے ہیں۔ خلاصہ میں ، ایک فل ٹیکسٹ انڈیکس خاص طور پر ٹیکسٹ ڈیٹا پر مکمل ٹیکسٹ سرچ آپریشنز کے لئے ڈیزائن کیا گیا ہے ، جو زبان سے متعلق مخصوص تحفظات اور مطابقت کی درجہ بندی کے لئے بہتر ہے۔یہ جدید استفسار نحو کی حمایت کرتا ہے اور یہ ٹیکسٹ کالموں میں تلاش کے ل suitable موزوں ہے۔دوسری طرف ، ایک جن انڈیکس ایک زیادہ عام انڈیکس ڈھانچہ ہے جو پیچیدہ اعداد و شمار کی اقسام کے لئے استعمال ہوتا ہے ، بشمول اری اور جامع اقسام۔یہ متن سے باہر مختلف قسم کے ڈیٹا کے لئے موثر استفسار کرنے کی صلاحیتوں کو فراہم کرتا ہے۔دونوں کے مابین انتخاب کا انحصار مخصوص ڈیٹا ڈھانچے ، استفسار کی ضروریات ، اور آپ کی درخواست کی اشاریہ سازی کی ضروریات پر ہے۔"
    },
    {
        "Question": "غیر ملکی کلید اور چیک رکاوٹ میں کیا فرق ہے؟",
        "Answer": "عارضی جدول اور مستقل ٹیبل کے درمیان بنیادی فرق ان کی زندگی اور استقامت میں ہے۔یہاں کلیدی امتیازات ہیں: عارضی جدول: زندگی: ایک مخصوص سیشن یا کنکشن کے لئے ایک عارضی جدول تیار کیا گیا ہے اور صرف اس سیشن کی مدت کے لئے موجود ہے۔جب سیشن ختم ہوجاتا ہے یا جب صارف کے ذریعہ واضح طور پر گرایا جاتا ہے تو اسے خود بخود گرا دیا جاتا ہے (حذف)ایک بار سیشن ختم ہونے کے بعد ، عارضی ٹیبل میں محفوظ کردہ ڈیٹا کھو جاتا ہے۔ استعمال: عارضی جدولیں عام طور پر پیچیدہ سوالات یا طریقہ کار کے دوران انٹرمیڈیٹ یا عارضی ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہیں۔وہ دوسرے سمورتی سیشنوں میں مداخلت کیے بغیر کسی مخصوص سیشن کے اندر ڈیٹا کو ذخیرہ کرنے اور جوڑ توڑ کرنے کا ایک طریقہ فراہم کرتے ہیں۔ اسکوپ: عارضی جدولوں میں ایک محدود دائرہ کار ہے اور صرف سیشن یا کنکشن کے اندر ہی قابل رسائی ہیں جس نے انہیں تخلیق کیا ہے۔وہ دوسرے سیشنوں یا رابطوں کے لئے مرئی یا قابل رسائی نہیں ہیں۔ پیر مینینٹ ٹیبل: زندگی: ایک مستقل ٹیبل ، جسے باقاعدہ یا مستقل جدول کے نام سے بھی جانا جاتا ہے ، کسی خاص سیشن سے آزادانہ طور پر موجود ہے۔یہ ڈیٹا بیس میں رہتا ہے جب تک کہ صارف کے ذریعہ یا کسی مخصوص ڈیٹا بیس ایڈمنسٹریشن کمانڈ کے ذریعہ واضح طور پر گرایا جاتا ہے۔ ڈیٹا استقامت: مستقل جدولیں سیشنوں میں ڈیٹا برقرار رکھتی ہیں۔مستقل جدول میں ذخیرہ شدہ اعداد و شمار برقرار نہیں رہتے ہیں جب تک کہ اس میں ترمیم ، حذف یا واضح طور پر گرایا جاتا ہے۔ یوزج: مستقل میزیں ڈیٹا بیس میں طویل مدتی ڈیٹا کو ذخیرہ کرنے اور ان کے انتظام کے لئے استعمال کی جاتی ہیں۔وہ عام طور پر اعداد و شمار کے انعقاد کے لئے بنائے جاتے ہیں جس تک رسائی اور برقرار رکھنے کی ضرورت ہوتی ہے۔ اسکوپ: مستقل جدولوں میں وسیع تر دائرہ کار ہوتا ہے اور صارفین کو دی جانے والی اجازتوں اور رسائی کے مراعات کے لحاظ سے ، متعدد سیشن یا رابطوں کے ذریعہ اس تک رسائی حاصل کی جاسکتی ہے۔ سمری۔، عارضی جدولوں کو ایک مخصوص سیشن کے اندر تخلیق اور استعمال کیا جاتا ہے ، اس کی زندگی مختصر ہوتی ہے ، اور عارضی یا انٹرمیڈیٹ ڈیٹا رکھتے ہیں۔وہ سیشن کے اختتام پر خود بخود چھوڑ دیئے جاتے ہیں یا جب واضح طور پر گرا دیا جاتا ہے۔دوسری طرف ، مستقل جدولیں ، کسی خاص سیشن کے آزادانہ طور پر موجود ہیں ، سیشنوں میں ڈیٹا برقرار رکھتے ہیں ، اور طویل مدتی ڈیٹا اسٹوریج اور انتظام کے لئے ڈیزائن کیے گئے ہیں۔جب تک واضح طور پر گرایا جاتا ہے وہ ڈیٹا بیس میں رہتے ہیں۔"
    },
    {
        "Question": "NULL اور پہلے سے طے شدہ رکاوٹ کے درمیان کیا فرق ہے؟",
        "Answer": "عالمی عارضی ٹیبل اور مقامی عارضی ٹیبل کے درمیان فرق ان کے دائرہ کار اور رسائ میں ہے۔یہاں ہر ایک کی وضاحت ہے: عالمی عارضی جدول: دائرہ کار: ایک عالمی عارضی جدول ڈیٹا بیس مثال کے اندر تمام سیشنوں یا رابطوں کے لئے نظر آتا ہے۔اس تک رسائی اور ایک سے زیادہ سیشنوں کے ذریعہ ایک ساتھ رسائی حاصل کی جاسکتی ہے۔یہ مختلف سیشنوں میں استعمال کے ل available دستیاب ہے جب تک کہ اسے ہٹا نہ دیا جائے۔ ڈیٹا شیئرنگ ڈیٹا: عالمی عارضی جدولیں ایسے منظرناموں کے لئے موزوں ہیں جہاں متعدد سیشنوں کو عارضی ڈیٹا شیئر کرنے کی ضرورت ہے۔ہر سیشن ٹیبل میں ریکارڈ داخل ، اپ ڈیٹ اور حذف کرسکتا ہے ، اور تبدیلیاں دوسرے سیشنوں میں نظر آتی ہیں۔ ٹیبل نام تنازعات: عالمی عارضی جدولوں میں عالمی نام کا دائرہ ہے۔اگر ایک سے زیادہ سیشن ایک ہی نام کے ساتھ عارضی جدولیں تخلیق کرتے ہیں تو ، وہ ایک ہی ٹیبل کا حوالہ دیں گے۔تاہم ، ہر سیشن میں ٹیبل کے اندر ڈیٹا کا اپنا ایک سیٹ ہوتا ہے۔ کلین اپ: عالمی عارضی ٹیبل کو گرانے کی ذمہ داری صارف یا درخواست کے ساتھ ہے۔جب سیشن ختم ہوتا ہے تو اسے خود بخود نہیں گرایا جاتا ہے۔ لوکل عارضی ٹیبل: دائرہ کار: مقامی عارضی ٹیبل صرف سیشن یا کنکشن کے اندر ہی نظر آتا ہے جو اسے تخلیق کرتا ہے۔یہ دوسرے سیشنوں یا رابطوں کے لئے قابل رسائی یا مرئی نہیں ہے۔ایک بار سیشن ختم ہونے یا بند ہونے کے بعد ، مقامی عارضی ٹیبل کو خود بخود گرا دیا جاتا ہے اور اس کا ڈیٹا حذف ہوجاتا ہے۔ ترتیب: ہر سیشن یا کنکشن میں مقامی عارضی ٹیبل کی اپنی الگ الگ مثال ہوتی ہے۔ایک سیشن کے ذریعہ ٹیبل میں کی جانے والی تبدیلیاں دوسرے سیشنوں تک مرئی یا قابل رسائی نہیں ہیں۔ ٹیبل نام تنازعات: مقامی عارضی جدولوں میں مقامی نام کا دائرہ کار ہے۔ہر سیشن ایک ہی نام کے ساتھ ایک ٹیبل تشکیل دے سکتا ہے ، اور وہ علیحدہ ، آزاد جدولوں کا حوالہ دیں گے۔ آٹومیٹک صفائی: مقامی عارضی جدولوں کو خود بخود گرا دیا جاتا ہے اور صاف ہوجاتا ہے جب سیشن نے ان کو ختم کیا۔اس سے وہ صاف ستھرا صفائی عملوں کی ضرورت کے بغیر عارضی ڈیٹا اسٹوریج کے ل capading آسان بناتے ہیں۔ خلاصہ یہ کہ ایک عالمی عارضی جدول تمام سیشنوں کے لئے دکھائی دیتا ہے اور جب تک واضح طور پر گرایا جاتا ہے اس وقت تک برقرار رہتا ہے ، جس سے متعدد سیشن عارضی ڈیٹا کو شیئر کرسکتے ہیں۔دوسری طرف ، ایک مقامی عارضی جدول سیشن کے لئے مخصوص ہے جو اسے تخلیق کرتا ہے ، سیشن کے اختتام پر خود بخود گرا دیا جاتا ہے ، اور دوسرے سیشنوں سے الگ تھلگ ہوجاتا ہے۔عالمی اور مقامی عارضی جدولوں کے مابین انتخاب آپ کی درخواست کی مخصوص ضروریات پر منحصر ہے ، جیسے سیشنوں میں ڈیٹا شیئرنگ کی ضرورت یا خودکار صفائی کی خواہش۔"
    },
    {
        "Question": "ایک انوکھا اور بنیادی کلیدی رکاوٹ میں کیا فرق ہے؟",
        "Answer": "تراشے ہوئے ٹیبل اور ڈراپ ٹیبل کے بیانات دونوں ایس کیو ایل میں ڈیٹا بیس سے ڈیٹا یا پوری میزیں ہٹانے کے لئے استعمال کیے جاتے ہیں ، لیکن ان کے مختلف اثرات اور مقاصد ہیں۔یہاں ہر ایک کی وضاحت ہے: ٹرنکیٹ ٹیبل: آپریشن: ٹیبل کی ساخت کو برقرار رکھتے ہوئے ٹیبل سے تمام قطاروں (ڈیٹا) کو ہٹانے کے لئے ٹرنکیٹ ٹیبل کا بیان استعمال کیا جاتا ہے۔ ڈیٹا کو ہٹانا: ٹیبل ٹیبل ٹیبل میں موجود تمام قطار کو حذف کرتا ہے ، جس کے نتیجے میں ایک ہوتا ہے۔خالی ٹیبل۔ کارکردگی: ٹرانک ٹیبل عام طور پر حذف شدہ بیان کا استعمال کرتے ہوئے انفرادی قطاروں کو حذف کرنے سے تیز تر ہوتا ہے کیونکہ یہ ایک سے قطعات کو ہٹانے کے بجائے ٹیبل کے ذریعہ استعمال ہونے والے ڈیٹا کے صفحات کو ضائع کرتا ہے۔ آٹو-انکرمنٹ: جب آپ ٹرنکیٹ ٹیبل کا استعمال کرتے ہیں تو ، کوئی بھی آٹو-جدول میں انکریمنٹ یا شناخت کے کالم ان کی ابتدائی اقدار پر دوبارہ ترتیب دیئے جاتے ہیں۔ ٹرانسکشنل سالمیت: ٹرنکیٹ ٹیبل ایک ڈی ڈی ایل (ڈیٹا ڈیفینیشن لینگویج) آپریشن ہے اور اسے واپس نہیں کیا جاسکتا ہے۔یہ ٹیبل سے وابستہ کسی بھی محرک کو بھی برطرف نہیں کرتا ہے۔تاہم ، آپریشن ایک بڑے لین دین کا حصہ ہوسکتا ہے جس میں دوسرے ڈی ایم ایل (ڈیٹا ہیرا پھیری کی زبان) کے بیانات شامل ہیں۔ ڈراپ ٹیبل: آپریشن: ڈراپ ٹیبل بیان ایک ڈیٹا بیس سے اس کے ڈھانچے اور ڈیٹا سمیت پوری ٹیبل کو مکمل طور پر ہٹانے کے لئے استعمال کیا جاتا ہے۔ٹیبل کو ہٹانا: ڈراپ ٹیبل ٹیبل کو خود ہی حذف کردیتا ہے ، اس کے ساتھ ساتھ تمام اعداد و شمار ، اشاریہ جات ، رکاوٹوں اور ٹیبل سے وابستہ محرکات کے ساتھ۔یہ ٹیبل اور اس سے وابستہ تمام اشیاء کو ڈیٹا بیس سے مستقل طور پر ہٹاتا ہے۔ٹیبل ، ڈراپ ٹیبل ایک ڈی ڈی ایل آپریشن ہے اور اسے واپس نہیں کیا جاسکتا۔یہ عام طور پر ٹرانزیکشن کے اندر استعمال نہیں ہوتا ہے۔ خلاصہ میں ، ٹیبل ٹیبل ٹیبل کے ڈھانچے کو برقرار رکھتے ہوئے تمام قطاروں کو ایک میز سے ہٹاتا ہے ، جبکہ ڈراپ ٹیبل اس کی ساخت اور اس سے وابستہ اشیاء کے ساتھ ساتھ پوری ٹیبل کو بھی ہٹاتا ہے۔ڈیٹا بیس سے ٹیبل کو مستقل طور پر ختم کرنے کے لئے ڈراپ ٹیبل کا استعمال ڈیٹا کو ہٹانے کے لئے تیز اور زیادہ موثر ہے۔دونوں کے مابین انتخاب آپ کی مخصوص ضروریات پر منحصر ہے ، چاہے آپ ٹیبل ڈھانچے کو برقرار رکھنا چاہتے ہو یا اسے مکمل طور پر ہٹانا چاہتے ہو۔"
    },
    {
        "Question": "لوڈ ڈیٹا انفائل اور لوڈ ڈیٹا لوکل انفائل بیان میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس کے تناظر میں ، ایک چیک رکاوٹ اور غیر ملکی کلیدی رکاوٹ مختلف مقاصد کی خدمت کرتی ہے: چیک رکاوٹ: ایک کالم میں ذخیرہ شدہ اقدار پر ڈومین سے متعلق مخصوص قواعد یا شرائط کو نافذ کرنے کے لئے ایک چیک رکاوٹ کا استعمال کیا جاتا ہے۔یہ آپ کو ایسی حالت کی وضاحت کرنے کی اجازت دیتا ہے جو ایک میز کی ہر صف کے لئے سچ ہونا چاہئے۔اگر کوئی قطار حالت کی خلاف ورزی کرتی ہے تو ، رکاوٹ قطار کے اندراج یا ترمیم کو روکتی ہے۔مثال کے طور پر ، آپ یہ نافذ کرنے کے لئے چیک رکاوٹ کا استعمال کرسکتے ہیں کہ ایک عددی کالم صرف مثبت اقدار کو قبول کرتا ہے یا یہ کہ سٹرنگ کالم صرف کچھ نمونوں کو قبول کرتا ہے۔ مثال کے طور پر: SQLCOPY کوڈ کریٹ ٹیبل ملازمین (ملازم INT پرائمری کلید ، عمر کی جانچ (عمر> = 18).سالمیت کا قاعدہ۔یہ اس بات کو یقینی بناتا ہے کہ ایک ٹیبل میں کالم (یا کالموں کے گروپ) میں اقدار کسی اور ٹیبل میں بنیادی کلید یا منفرد کلیدی کالم میں اقدار کے مساوی ہیں۔یہ رکاوٹ متعلقہ جدولوں میں ڈیٹا مستقل مزاجی اور سالمیت کو برقرار رکھتی ہے۔عام طور پر ، حوالہ دینے والا کالم حوالہ دینے والے ٹیبل کی بنیادی کلید ہے۔ مثال کے طور پر: SQLCOPY کوڈ کریٹ ٹیبل آرڈر (آرڈرڈ INT پرائمری کلید ، کسٹمر آئی ڈی ، ... غیر ملکی کلید (کسٹمر آئی ڈی) کے صارفین (کسٹمر آئی ڈی)) ؛ مذکورہ مثال میں ،غیر ملکی کلیدی رکاوٹ آرڈر ٹیبل اور صارفین کے ٹیبل کے مابین ایک رشتہ قائم کرتی ہے ، جہاں آرڈر ٹیبل میں کسٹمر آئی ڈی کالم صارفین کے ٹیبل میں بنیادی کلیدی کالم کسٹمر کا حوالہ دیتا ہے۔اس سے یہ یقینی بنتا ہے کہ آرڈر ٹیبل میں صرف درست کسٹمر آئی ڈی داخل کی جاسکتی ہیں۔ خلاصہ کرنے کے لئے ، ایک ہی ٹیبل کے اندر ڈیٹا کی توثیق کو نافذ کرنے کے لئے ایک چیک رکاوٹ کا استعمال کیا جاتا ہے ، جبکہ متعلقہ جدولوں کے مابین ریفرنٹل سالمیت کو نافذ کرنے کے لئے غیر ملکی کلیدی رکاوٹ کا استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "بیان میں تبدیل کرنے اور داخل کرنے میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس کے تناظر میں ، کالموں میں NULL اقدار کو سنبھالنے کے لئے قواعد کی وضاحت کے لئے کالعدم رکاوٹ اور پہلے سے طے شدہ رکاوٹ کا استعمال کیا جاتا ہے ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: کالعدم رکاوٹ کا استعمال نہیں کیا جاتا ہے کہ ایک کالم میں ہمیشہ ہونا ضروری ہے۔ایک غیر نول قدر۔یہ اس بات کو یقینی بناتا ہے کہ ایک ٹیبل کی ہر صف میں کالم کی قدر ہوتی ہے اور کالم میں کالعدم اقدار کے داخل کرنے سے روکتا ہے۔اس رکاوٹ کو لاگو کرنے سے ، آپ کسی قدر کی موجودگی کی ضرورت کے ذریعہ ڈیٹا کی سالمیت کو نافذ کرتے ہیں۔ مثال کے طور پر: SQLCOPY کوڈ کریٹ ٹیبل ملازمین (ملازم INT INT پرائمری کلید ، نام ورچر (50) NULL نہیں ، ...) ؛ مذکورہ مثال میں نہیں ، کالعدم نہیں ہےنام کے کالم پر رکاوٹ کا اطلاق ہوتا ہے ، اس بات کو یقینی بناتا ہے کہ اس میں ملازمین میں ہر صف کے لئے ہمیشہ غیر نول قیمت ہوتی ہے۔ ٹیبل۔ ڈیفالٹ رکاوٹ: کالم کے لئے ڈیفالٹ ویلیو کی وضاحت کرنے کے لئے پہلے سے طے شدہ رکاوٹ کا استعمال کیا جاتا ہے جب ایک کے دوران کوئی واضح قیمت فراہم نہیں کی جاتی ہے۔داخل کریں آپریشن۔اگر کسی کالم میں پہلے سے طے شدہ رکاوٹ کی وضاحت کی جاتی ہے ، اور جب نئی قطار داخل کی جاتی ہے تو اس کالم کے لئے کوئی قدر کی وضاحت نہیں کی جاتی ہے تو ، پہلے سے طے شدہ قیمت خود بخود استعمال ہوجاتی ہے۔پہلے سے طے شدہ رکاوٹ اختیاری ہے ، اور اس سے ان معاملات میں مدد ملتی ہے جہاں آپ پہلے سے طے شدہ قیمت فراہم کرنا چاہتے ہیں جب کوئی بھی واضح طور پر فراہم نہیں کیا جاتا ہے۔ مثال کے طور پر: SQLCOPY کوڈ کریٹ ٹیبل صارفین (کسٹمر ID INT پرائمری کلید ، پہلا نام ورچر (50) NULL نہیں ، آخری نام ورچار (50)NULL نہیں ، ای میل ورچر (100) پہلے سے طے شدہ 'N/A' ، ...) ؛ مذکورہ مثال میں ، پہلے سے طے شدہ رکاوٹ کو ای میل کالم پر لاگو کیا جاتا ہے ، جس میں 'N/A' کو پہلے سے طے شدہ قیمت کے طور پر بیان کیا جاتا ہے۔اگر داخل کرنے کا عمل واضح طور پر ای میل کالم کے لئے کوئی قدر فراہم نہیں کرتا ہے تو ، پہلے سے طے شدہ قیمت 'N/A' استعمال کی جائے گی۔ خلاصہ کرنے کے لئے ، ایک کالعدم کو یقینی نہیں بناتا ہے کہ کالم میں ہمیشہ غیر نول قیمت ہونی چاہئے ، جبکہ پہلے سے طے شدہرکاوٹ ایک پہلے سے طے شدہ قیمت کی وضاحت کرتی ہے جو استعمال کی جاتی ہے جب داخل کرنے کے آپریشن کے دوران کوئی واضح قیمت فراہم نہیں کی جاتی ہے۔"
    },
    {
        "Question": "کسی تازہ کاری اور حذف شدہ بیان میں کیا فرق ہے؟",
        "Answer": "دونوں ٹیبل ٹیبل اور بیانات سے حذف کرنے والے ڈیٹا بیس میں کسی ٹیبل سے ڈیٹا کو ہٹانے کے لئے استعمال ہوتے ہیں ، لیکن وہ اپنی فعالیت اور طرز عمل میں مختلف ہیں: ٹرنکیٹ ٹیبل: ٹرنکیٹ ٹیبل ایک ڈی ڈی ایل (ڈیٹا ڈیفینیشن لینگویج) بیان ہے جو تمام قطار کو جلدی سے ہٹانے کے لئے استعمال کیا جاتا ہے۔ایک ٹیبل۔ ٹیبل ٹیبل آپریشن ہر صف کو حذف کرنے کے لئے انفرادی طور پر لاگ ان نہیں ہوتا ہے۔اس کے بجائے ، یہ ڈیٹا کے صفحات کو ختم کرتا ہے اور اسٹوریج کی جگہ کو جاری کرتا ہے ، جس سے اسے حذف کرنے سے تیز اور زیادہ موثر ہوتا ہے۔ ٹرانکیٹ ٹیبل غیر ٹرانزیکشنل آپریشن ہے اور اسے واپس نہیں کیا جاسکتا ہے۔ایک بار پھانسی کے بعد ، اعداد و شمار کو مستقل طور پر حذف کردیا جاتا ہے۔ ٹیبل ٹیبل سے وابستہ کسی بھی آٹو انکریمنٹنگ شناختی کالموں یا ترتیب کو بھی دوبارہ ترتیب دیتا ہے۔ ٹرنکیٹ ٹیبل ٹرگرز کو فائر نہیں کرتا ہے۔ ٹرنکیٹ ٹیبل انفرادی قطار کو حذف کرنے کے ل any کسی بھی لاگ ان اندراجات کو تیار نہیں کرتا ہے ، جس سے یہ کم وسائل بنتا ہے۔-intistence.example: SQLCOPY CODETRUNCATE ٹیبل صارفین ؛ سے حذف کریں: حذف کریں: کسی DML (ڈیٹا میں ہیرا پھیری زبان) بیان ہے جو کسی حالت کی بنیاد پر یا کسی حالت کے بغیر کسی ٹیبل سے مخصوص قطاروں کو ہٹانے کے لئے استعمال کیا جاتا ہے (جو تمام قطاریں حذف کرتا ہے)۔ہر صف کو حذف کرنے کے لئے لاگ ان ہوتا ہے ، جس سے یہ ٹرانکیٹ ٹیبل سے آہستہ اور زیادہ وسائل سے زیادہ ہوتا ہے۔ ڈیلیٹ سے ڈیلیٹ ایک ٹرانزیکشنل آپریشن ہے اور اگر ٹرانزیکشن کے اندر عملدرآمد کیا جاتا ہے تو اسے واپس لایا جاسکتا ہے۔ٹیبل سے وابستہ فائر ٹرگرس سے۔ایک ٹیبل سے قطاریں ، اسٹوریج کی جگہ جاری کرتی ہے ، اور غیر ٹرانزیکشنل ہے ، جبکہ حذف سے زیادہ انتخابی قطار کو ہٹانے کی اجازت دیتا ہے ، انفرادی قطار کو حذف کرنے کو لاگ کرتا ہے ، اور یہ لین دین ہوتا ہے۔ان کے مابین انتخاب کا انحصار صورتحال کی مخصوص ضروریات اور رکاوٹوں پر ہے۔"
    },
    {
        "Question": "ایک چھوٹا سا ٹیبل اور ڈراپ ٹیبل کے بیان میں کیا فرق ہے؟",
        "Answer": "ایک تخلیق ٹیبل اسٹیٹمنٹ اور ایک ڈراپ ٹیبل بیان دونوں ایس کیو ایل بیانات ہیں جو ڈیٹا بیس ٹیبلز کو سنبھالنے کے لئے استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: ٹیبل بنائیں: ٹیبل بنائیں بیان کو ڈیٹا بیس میں ایک نیا ٹیبل بنانے کے لئے استعمال کیا جاتا ہے۔ یہ ٹیبل کے نام ، کالم کی وضاحت کرتا ہے۔نام ، اعداد و شمار کی اقسام ، رکاوٹیں ، اور کسی بھی دوسرے ٹیبل سے متعلق خاص صفات۔ تخلیق ٹیبل کا بیان ٹیبل کی ساخت اور اسکیما کی وضاحت کرتا ہے ، جس میں اس کے کالم ، ڈیٹا کی اقسام اور رکاوٹیں شامل ہیں۔بیان کردہ ڈھانچہ۔ مثال کے طور پر: SQLCOPY کوڈ کریٹ ٹیبل صارفین (کسٹمر آئی ڈی آئی ٹی پرائمری کلید ، پہلا نام ورچار (50) ، لاسٹ نام ورچر (50) ، ای میل ورچر (100) ، ...) ؛ مذکورہ مثال میں ، تخلیق ٹیبل کا بیان ایک تخلیق کرتا ہے۔ٹیبل کا نام \"گاہک\" جس میں کسٹمر آئی ڈی ، فرسٹ نام ، آخری نام ، ای میل ، اور اسی طرح کے کالم ہیں۔ ڈراپ ٹیبل: ڈراپ ٹیبل کا بیان ڈیٹا بیس سے موجودہ ٹیبل کو ہٹانے کے لئے استعمال کیا جاتا ہے۔تمام قطاریں اور کالم۔ ڈراپ ٹیبل بیان ایک ڈیٹا ڈیفینیشن لینگویج (ڈی ڈی ایل) بیان ہے۔ڈراپ ٹیبل کا بیان ڈیٹا بیس سے \"صارفین\" ٹیبل کو ہٹا دیتا ہے ، بشمول اس کے تمام ڈیٹا اور اس سے وابستہ ڈھانچے۔ خلاصہ کرنے کے لئے ، ٹیبل بیان کو ایک مخصوص ڈھانچے کے ساتھ ایک نیا ٹیبل بنانے کے لئے استعمال کیا جاتا ہے ، جبکہ ڈراپ ٹیبل بیان کو ایک ہٹانے کے لئے استعمال کیا جاتا ہے۔موجودہ ٹیبل اور ڈیٹا بیس سے اس کا سارا ڈیٹا۔"
    },
    {
        "Question": "تخلیق ٹیبل اور الٹر ٹیبل کے بیان میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس کا بیان اور ایک ڈراپ ڈیٹا بیس بیان ایس کیو ایل کے بیانات ہیں جو ڈیٹا بیس کو سنبھالنے کے لئے استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: ڈیٹا بیس بنائیں: ڈیٹا بیس مینجمنٹ سسٹم (ڈی بی ایم ایس) میں ایک نیا ڈیٹا بیس بنانے کے لئے ڈیٹا بیس کا بیان استعمال کیا جاتا ہے۔ یہ نام کی وضاحت کرتا ہے۔نئے ڈیٹا بیس اور کسی بھی دوسرے ڈیٹا بیس سے متعلق مخصوص صفات میں سے۔ ڈیٹا بیس بیان تخلیق ایک نئے ڈیٹا بیس کے وجود اور ابتدائی ترتیبات کی وضاحت کرتا ہے۔ جب عمل میں لایا جاتا ہے تو ، ڈیٹا بیس کا بیان مخصوص نام اور ابتدائی ترتیبات کے ساتھ ایک خالی ڈیٹا بیس تشکیل دیتا ہے۔ڈیٹا بیس myDatabase ؛ مذکورہ بالا مثال میں ، ڈیٹا بیس کا بیان \"myDatabase.\" کے نام سے ایک نیا ڈیٹا بیس تشکیل دیتا ہے۔ ڈراپ ڈیٹا بیس: ڈراپ ڈیٹا بیس کا بیان DBMS.IT سے موجودہ ڈیٹا بیس کو ہٹانے کے لئے استعمال کیا جاتا ہے ، جس میں پورے ڈیٹا بیس کو مستقل طور پر حذف کردیا جاتا ہے۔، ڈیٹا ، اور اس سے وابستہ آبجیکٹ (جیسے ، آراء ، اشاریہ جات ، ذخیرہ شدہ طریقہ کار). ڈراپ ڈیٹا بیس کا بیان ایک ڈیٹا ڈیفینیشن لینگویج (ڈی ڈی ایل) بیان ہے۔.example: SQLCOPY کوڈڈروپ ڈیٹا بیس MyDatabase ؛ مذکورہ بالا مثال میں ، ڈراپ ڈیٹا بیس کا بیان ڈی بی ایم سے \"مائی ڈیٹا بیس\" ڈیٹا بیس کو ہٹا دیتا ہے ، بشمول اس کے تمام جدولوں ، ڈیٹا ، اور اس سے وابستہ آبجیکٹ۔ خلاصہ کرنے کے لئے ، ڈیٹا بیس کا بیان A کو تخلیق کرنے کے لئے استعمال کیا جاتا ہے۔نیا ڈیٹا بیس ، جبکہ ڈراپ ڈیٹا بیس کا بیان ڈی بی ایم سے موجودہ ڈیٹا بیس اور اس کے تمام مندرجات کو ہٹانے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "تخلیق ڈیٹا بیس اور ڈراپ ڈیٹا بیس کے بیان میں کیا فرق ہے؟",
        "Answer": "بیک اپ ڈیٹا بیس کا بیان اور بحالی ڈیٹا بیس کا بیان ایس کیو ایل کے بیانات ہیں جو بالترتیب ڈیٹا بیس بیک اپ اور بحالی کے انتظام کے لئے استعمال ہوتے ہیں۔وہ مختلف مقاصد کی خدمت کرتے ہیں: بیک اپ ڈیٹا بیس: بیک اپ ڈیٹا بیس کا بیان موجودہ ڈیٹا بیس کا بیک اپ بنانے کے لئے استعمال کیا جاتا ہے۔ یہ آپ کو بیک اپ کے وقت ڈیٹا بیس کی ریاست کو محفوظ رکھتے ہوئے ، ڈیٹا بیس کے ڈیٹا اور ٹرانزیکشن لاگ فائلوں کی ایک کاپی بنانے کی اجازت دیتا ہے۔بیک اپ ڈیٹا بیس کا بیان ایک بیک اپ فائل تشکیل دیتا ہے جسے ڈیٹا بیس کو بحال کرنے میں بعد میں استعمال کے ل a ایک علیحدہ جگہ ، جیسے ڈسک یا ٹیپ میں محفوظ کیا جاسکتا ہے۔ اس میں بیک اپ کی قسم (مکمل ، تفریق ، یا ٹرانزیکشن لاگ بیک اپ) کی وضاحت کرنے کے اختیارات شامل ہیں۔، بیک اپ منزل ، اور دیگر بیک اپ سے متعلق مخصوص ترتیبات۔ مثال کے طور پر: SQLCOPY کوڈ بیک اپ ڈیٹا بیس MyDatabase to Disk = 'C: \\ بیک اپ \\ myDatabase.bak' ؛ مذکورہ بالا مثال میں ، بیک اپ ڈیٹا بیس کا بیان \"myDatabase.bak\" کے نام سے بیک اپ فائل تشکیل دیتا ہے۔\"MyDatabase\" ڈیٹا بیس کے لئے اور اسے مخصوص ڈسک کے مقام پر اسٹورز کرتا ہے۔ ریسسٹور ڈیٹا بیس: بحالی ڈیٹا بیس کا بیان اس سے پہلے کے بیک اپ ڈیٹا بیس کو اس کے اصل یا مختلف مقام پر بحال کرنے کے لئے استعمال کیا جاتا ہے۔ یہ آپ کو بیک اپ فائل سے ڈیٹا بیس کی بازیافت کرنے کی اجازت دیتا ہے ،بیک اپ کے دوران پکڑے گئے ریاست میں اسے واپس لانا۔ بحالی ڈیٹا بیس کا بیان بیک اپ فائل کو پڑھتا ہے اور ڈیٹا بیس کو دوبارہ بنانے کے لئے بیک اپ ڈیٹا اور ٹرانزیکشن لاگ ریکارڈ کو لاگو کرتا ہے۔ اس میں عام طور پر ماخذ بیک اپ فائل ، منزل کے ڈیٹا بیس کا نام کی وضاحت کرنے کے اختیارات شامل ہیں۔اور مقام ، اور دیگر بحالی سے متعلق مخصوص ترتیبات۔ مثال کے طور پر SQLCOPY کوڈرسٹور ڈیٹا بیس MyDatabase سے ڈسک = 'C: \\ بیک اپ \\ myDatabase.bak' ؛ مذکورہ مثال میں ، بحالی ڈیٹا بیس کے بیان میں \"MyDatabase\" ڈیٹا بیس کو مخصوص بیک اپ فائل سے بحال کیا گیا ہے۔، ڈیٹا بیس کو اس کے اصل نام اور مقام کے ساتھ دوبارہ بنانا۔ خلاصہ کرنے کے لئے ، بیک اپ ڈیٹا بیس کا بیان ڈیٹا بیس کا بیک اپ بنانے کے لئے استعمال کیا جاتا ہے ، جبکہ بحالی ڈیٹا بیس کے بیان کو پہلے کے بیک اپ ڈیٹا بیس کو اس کے اصل یا مختلف مقام پر بحال کرنے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "بیک اپ ڈیٹا بیس اور بحالی ڈیٹا بیس کے بیان میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس سیکیورٹی اور اجازت کے تناظر میں ، ایک گرانٹ کا بیان اور ایک منسوخ بیان ایس کیو ایل کے بیانات ہیں جو صارف کے مراعات کو سنبھالنے کے لئے استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: گرانٹ بیان: گرانٹ کا بیان صارف یا صارف گروپ کو مخصوص مراعات دینے کے لئے استعمال کیا جاتا ہے۔کسی ڈیٹا بیس میں۔ یہ ڈیٹا بیس ایڈمنسٹریٹر یا صارف کو کافی استحقاق کے ساتھ دوسرے صارفین یا کرداروں کو کچھ اجازتیں تفویض کرنے کی اجازت دیتا ہے۔ گرانٹ کا بیان مختلف سطحوں پر منتخب ، داخل ، اپ ڈیٹ ، حذف ، یا دیگر ڈیٹا بیس سے متعلق اجازت جیسے مراعات کی فراہمی کرسکتا ہے۔۔صارف 1 کو مذکورہ بالا مثال میں ، گرانٹ کا بیان \"ملازمین\" ٹیبل پر \"صارف 1\" پر منتخب اور مراعات دیتا ہے۔کسی ڈیٹا بیس میں۔ یہ ڈیٹا بیس ایڈمنسٹریٹر یا صارف کو کافی مراعات کے حامل مخصوص اجازتوں کو کالعدم کرنے کی اجازت دیتا ہے جو پہلے دیئے گئے تھے۔ ایووکی بیان مختلف سطحوں پر انفرادی مراعات یا مراعات کے گروپ کو منسوخ کرسکتا ہے (جیسے ، ڈیٹا بیس کی سطح ، ٹیبل کی سطح ، کالم کی سطح) .کوائک بیان پر عمل درآمد کیا جاتا ہے ، مخصوص صارف یا صارف گروپ منسوخ شدہ مراعات سے محروم ہوجاتا ہے اور اب مخصوص اشیاء پر منسوخ ہونے والی کارروائیوں کو انجام نہیں دے سکتا ہے۔ مثال کے طور پر: SQLCOPY CODEREVOKE صارف 1 سے ملازمین پر منتخب کریں ؛ مذکورہ بالا مثال میں ، ریکووک بیان\"یوزر 1\" سے \"ملازمین\" ٹیبل پر منتخب استحقاق کو منسوخ کرتا ہے۔ خلاصہ بیان کرنے کے لئے ، گرانٹ کے بیان کو صارف یا صارف گروپ کو مراعات دینے کے لئے استعمال کیا جاتا ہے ، جس سے وہ مخصوص اشیاء پر مخصوص اقدامات کرنے کی اجازت دیتے ہیں ، جبکہ ریکوکیٹ بیان کا استعمال کیا جاتا ہے۔اس سے پہلے دیئے گئے مراعات کو دور کریں ، جس سے صارف تک رسائی اور اشیاء پر کارروائیوں کو محدود کیا جائے۔"
    },
    {
        "Question": "گرانٹ اور منسوخ کرنے والے بیان میں کیا فرق ہے؟",
        "Answer": "فلش مراعات کا بیان اور فلش ٹیبلز کا بیان دونوں ایس کیو ایل بیانات ہیں جو ایس کیو ایل ڈیٹا بیس کی انتظامیہ میں استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: فلش مراعات: فلش مراعات کا بیان استحقاق کی میزوں کو دوبارہ لوڈ کرنے اور میموری کیچ میں تازہ کاری کے لئے استعمال کیا جاتا ہے۔صارف کے استحقاق۔ یہ عام طور پر گرانٹ یا کالعدم بیانات کا استعمال کرتے ہوئے صارف کے مراعات میں ترمیم کرنے کے بعد استعمال ہوتا ہے۔ جب فلش فراءیلجز کے بیان کو عملی جامہ پہنایا جاتا ہے تو ، ایس کیو ایل سرور تازہ ترین استحقاق کی میزیں پڑھتا ہے اور تبدیلیوں کا اطلاق کرتا ہے ، جس سے نئی مراعات کو فوری طور پر موثر بنایا جاتا ہے۔ یہ بیان ضروری ہے۔اس بات کو یقینی بنانے کے لئے کہ صارف کے مراعات میں کی جانے والی کوئی تبدیلی سرور کو دوبارہ شروع کرنے کی ضرورت کے بغیر نافذ العمل ہوتی ہے۔ مثال کے طور پر: SQLCOPY کوڈفلش مراعات ؛ مذکورہ بالا مثال میں ، فلش مراعات کا بیان صارف کی مراعات میں کسی بھی حالیہ تبدیلیوں کو لاگو کرنے کے لئے استحقاق کی میزوں کو دوبارہ لوڈ کرتا ہے۔ فلش میزیں: فلش ٹیبلز: فلش میزیںٹیبلز کا بیان کسی ڈیٹا بیس میں تمام جدولوں کو بند کرنے اور دوبارہ کھولنے کے لئے استعمال کیا جاتا ہے ، کسی بھی کیشڈ ڈیٹا کو مؤثر طریقے سے مسترد کرتے ہیں۔ یہ یقینی بناتا ہے کہ میزوں پر زیر التواء تمام تبدیلیاں ڈسک پر لکھی جاتی ہیں اور موجودہ سیشن کے پاس موجود کسی بھی ٹیبل تالے کو جاری کرتی ہیں۔ فلش ٹیبلز کا بیان عام طور پر ہوتا ہے۔جب ڈیٹا بیس بیک اپ کو انجام دیتے وقت استعمال کیا جاتا ہے ، کیونکہ یہ بیک اپ کے عمل کو شروع کرنے سے پہلے تمام زیر التواء تبدیلیاں لکھ کر ڈیٹا مستقل مزاجی کو یقینی بنانے میں مدد کرتا ہے۔ یہ بیان صارف کے استحقاق یا رسائی کی اجازتوں کو متاثر نہیں کرتا ہے۔ مثال کے طور پر: SQLCOPY کوڈفلوش ٹیبلز ؛ مذکورہ مثال میں ، فلش ٹیبلز کا بیانتمام جدولوں کو بند اور دوبارہ کھولتا ہے ، کسی بھی کیشڈ ڈیٹا کو خارج کرنا اور ٹیبل کے تالے جاری کرتا ہے۔ خلاصہ کرنے کے لئے ، فلش مراعات کے بیان کو استحقاق کی میزوں کو دوبارہ لوڈ کرنے اور صارف کی مراعات میں تبدیلیوں کا اطلاق کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ فلش ٹیبلز کے بیان کو میزیں بند کرنے اور دوبارہ کھولنے کے لئے استعمال کیا جاتا ہے ، اس بات کو یقینی بناتا ہے۔ڈیٹا مستقل مزاجی اور ٹیبل کے تالے جاری کرنا۔"
    },
    {
        "Question": "فلش مراعات اور فلش ٹیبلز کے بیان میں کیا فرق ہے؟",
        "Answer": "ایک شو ٹیبلز کا بیان اور ٹیبل بیان بیان کردہ ایس کیو ایل کے بیانات ہیں جو ڈیٹا بیس ٹیبلز کے بارے میں معلومات حاصل کرنے کے لئے استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: ٹیبلز دکھائیں: شو ٹیبلز کا بیان ڈیٹا بیس کے اندر ٹیبلز کی فہرست بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔ یہ اس کے بارے میں معلومات فراہم کرتا ہے۔موجودہ ڈیٹا بیس یا کسی مخصوص ڈیٹا بیس میں موجود میزیں۔ جب عمل میں لایا جاتا ہے تو ، شو ٹیبلز کا بیان ٹیبلز کے ناموں کی فہرست میں ایک نتیجہ سیٹ کرتا ہے۔ یہ بیان ٹیبلز کے ڈھانچے یا کالموں کے بارے میں تفصیلی معلومات فراہم نہیں کرتا ہے۔؛ مذکورہ بالا مثال میں ، شو ٹیبلز کا بیان موجودہ ڈیٹا بیس میں جدولوں کی فہرست لوٹاتا ہے۔ ٹیبل کی وضاحت کریں: ٹیبل کی ساخت کے بارے میں تفصیلی معلومات کو بازیافت کرنے کے لئے ٹیبل بیان (یا اس کا مترادف ، شو کالم بیان) کی وضاحت کریں۔یہ کالموں ، اعداد و شمار کی اقسام ، رکاوٹوں اور کسی خاص جدول کی دیگر خصوصیات کے بارے میں معلومات فراہم کرتا ہے۔ جب عمل میں لایا جاتا ہے تو ، ٹیبل کا بیان بیان کالم کے ناموں ، اعداد و شمار کی اقسام ، نالی اہلیت ، کلیدی رکاوٹوں اور مخصوص کی دیگر خصوصیات کو ظاہر کرتا ہے۔جدول۔ یہ بیان خاص طور پر ٹیبل کے اسکیما اور ساخت کو سمجھنے کے لئے مفید ہے۔ مثال کے طور پر: SQLCOPY کوڈ ایڈسکرائب صارفین ؛ مذکورہ مثال میں ، ٹیبل کا بیان بیان \"صارفین\" ٹیبل کے ڈھانچے کے بارے میں تفصیلی معلومات فراہم کرتا ہے ، بشمول کالم کے نام ، ڈیٹا بھی شامل ہے۔اقسام ، اور کسی بھی قسم کی رکاوٹیں۔ خلاصہ کرنے کے لئے ، شو ٹیبلز کا بیان ڈیٹا بیس میں جدولوں کی فہرست کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ بیان کردہ ٹیبل بیان کو کسی مخصوص جدول کے ڈھانچے اور کالموں کے بارے میں تفصیلی معلومات حاصل کرنے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "ایک شو ٹیبلز اور ٹیبل بیان کی وضاحت کے درمیان کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس کی انتظامیہ میں ایک شو ڈیٹا بیس کا بیان اور استعمال ڈیٹا بیس بیان ایس کیو ایل کے بیانات ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: ڈیٹا بیس دکھائیں: ڈیٹا بیس کے سرور پر دستیاب ڈیٹا بیس کی فہرست کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔ یہ معلومات فراہم کرتا ہے۔موجودہ ڈیٹا بیس سرور مثال کے طور پر موجود ڈیٹا بیس۔ جب عمل میں لایا جاتا ہے تو ، شو ڈیٹا بیس کا بیان ڈیٹا بیس کے ناموں کی فہرست میں لوٹاتا ہے۔ یہ بیان فی الحال فعال ڈیٹا بیس کو تبدیل یا تبدیل نہیں کرتا ہے۔، شو ڈیٹا بیس کا بیان ڈیٹا بیس سرور پر دستیاب ڈیٹا بیس کی فہرست لوٹاتا ہے۔ استعمال کریں ڈیٹا بیس: استعمال شدہ ڈیٹا بیس کا بیان کسی مخصوص ڈیٹا بیس کو منتخب کرنے یا تبدیل کرنے کے لئے موجودہ کام کرنے والے ڈیٹا بیس کی حیثیت سے استعمال کیا جاتا ہے۔ یہ آپ کو یہ بتانے کی اجازت دیتا ہے کہ آپ کس ڈیٹا بیس کو کام کرنا چاہتے ہیں۔اس کے ساتھ ، اور اس کے بعد کے ایس کیو ایل کے بیانات کو اس ڈیٹا بیس کے سیاق و سباق کے اندر ہی عمل میں لایا جائے گا۔ استعمال کے ڈیٹا بیس کے بیان کو عملی جامہ پہنایا جاتا ہے ، اس کے بعد کے تمام ایس کیو ایل بیانات منتخب کردہ ڈیٹا بیس کے اندر کام کرتے ہیں جب تک کہ ایک مختلف ڈیٹا بیس کا انتخاب نہ کیا جائے۔ یہ بیان سیشن کے لئے فی الحال فعال ڈیٹا بیس کو تبدیل کرتا ہے ، جس کی اجازت دیتے ہیں۔آپ اس ڈیٹا بیس کے اندر موجود اشیاء تک رسائی اور ان میں ہیرا پھیری کریں گے۔ مثال کے طور پر: SQLCOPY Coduse MyDatabase ؛ مذکورہ بالا مثال میں ، استعمال ڈیٹا بیس کا بیان \"MyDatabase\" کو موجودہ ڈیٹا بیس کے طور پر طے کرتا ہے ، اور اس کے بعد کے تمام SQL بیانات کو اس ڈیٹا بیس کے تناظر میں عمل میں لایا جائے گا۔خلاصہ کرنے کے لئے ، شو ڈیٹا بیس کا بیان دستیاب ڈیٹا بیس کی فہرست کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ استعمال کے ڈیٹا بیس کا بیان بعد میں ایس کیو ایل کے بیانات کے لئے موجودہ ورکنگ ڈیٹا بیس کے طور پر کسی مخصوص ڈیٹا بیس کو منتخب کرنے اور تبدیل کرنے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "شو کے ڈیٹا بیس اور استعمال کے ڈیٹا بیس کے بیان میں کیا فرق ہے؟",
        "Answer": "ایک شو گرانٹ کا بیان اور ایک شو متغیر بیان ایس کیو ایل کے بیانات ہیں جو ڈیٹا بیس سے مخصوص معلومات کو بازیافت کرنے کے لئے استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: گرانٹ دکھائیں: گرانٹ کا بیان صارف یا صارف گروپ کو دی جانے والی مراعات اور اجازتوں کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔ڈیٹا بیس میں۔ یہ کسی صارف یا کردار کو تفویض کردہ مخصوص مراعات اور رسائی کے حقوق کے بارے میں معلومات فراہم کرتا ہے۔ جب عمل درآمد ہوتا ہے تو ، شو گرانٹ کا بیان ایک مخصوص صارف یا کردار کو دیئے گئے مراعات کی فہرست میں لسٹ کرتا ہے۔ یہ بیان تفہیم کے لئے خاص طور پر مفید ہے۔ڈیٹا بیس میں صارف یا کردار کو پہنچانے والی رسائی اور اجازت کی سطح۔ مثال کے طور پر: صارف 1 کے لئے SQLCOPY کوڈ شو گرانٹ ؛ مذکورہ مثال میں ، شو گرانٹ کا بیان ڈیٹا بیس میں \"صارف 1\" کو دیئے گئے مراعات کو بازیافت کرتا ہے۔متغیرات کا بیان ڈیٹا بیس سرور میں کنفیگریشن متغیر کی موجودہ اقدار کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔ یہ ڈیٹا بیس سرور میں مختلف ترتیبات اور ترتیب کے اختیارات کے بارے میں معلومات فراہم کرتا ہے۔ جب عمل میں لایا جاتا ہے تو ، متغیر کا بیان متغیر ناموں اور ان کے متعلقہ کی فہرست میں لوٹاتا ہے۔اقدار۔ یہ بیان خاص طور پر ڈیٹا بیس سرور کی موجودہ ترتیب کی ترتیبات کا معائنہ اور سمجھنے کے لئے مفید ہے۔ مثال کے طور پر 'میکس_کونشنز' جیسے SQLCOPY کوڈ شو متغیر ؛ مذکورہ مثال میں ، شو متغیر بیان \"میکس_کونشنز\" ترتیب متغیر کی قدر کو بازیافت کرتا ہے۔ڈیٹا بیس سرور۔ خلاصہ کرنے کے ل the ، شو گرانٹس کا بیان ڈیٹا بیس میں صارف یا کردار کو دیئے گئے مراعات کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ ڈیٹا بیس سرور میں کنفیگریشن متغیر کی موجودہ اقدار کو بازیافت کرنے کے لئے شو متغیر بیان کا استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "شو گرانٹ اور شو متغیر کے بیان میں کیا فرق ہے؟",
        "Answer": "ایک وضاحت بیان اور تجزیہ ٹیبل بیان دونوں ایس کیو ایل کے بیانات ہیں جو کارکردگی کے تجزیہ اور اصلاح کے لئے استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: بیان بیان: وضاحت بیان کو منتخب کردہ بیان کے عملدرآمد کے منصوبے کے بارے میں معلومات حاصل کرنے کے لئے استعمال کیا جاتا ہے۔ یہ اس بارے میں بصیرت فراہم کرتا ہے کہ کس طرحڈیٹا بیس انجن ایک مخصوص استفسار پر عملدرآمد کرے گا۔ جب عمل میں لایا گیا تو ، وضاحت بیان سوال کے منصوبے کے بارے میں معلومات لوٹاتا ہے ، بشمول ٹیبل تک رسائی ، الگورتھم میں شامل ہونے ، انڈیکس استعمال ، اور تخمینہ شدہ قطار گنتی سمیت۔ یہ بیان تجزیہ اور کارکردگی کو بہتر بنانے میں مدد کرتا ہے۔ممکنہ رکاوٹوں یا غیر موثر استفسار پر عمل درآمد کے راستوں کی نشاندہی کرکے ایک منتخب بیانمخصوص حالت کے ساتھ \"صارفین\" ٹیبل۔ تجزیہ ٹیبل: تجزیہ ٹیبل کا بیان کسی ٹیبل کے اعدادوشمار کو اپ ڈیٹ کرنے اور انہیں ڈیٹا بیس کے میٹا ڈیٹا میں اسٹور کرنے کے لئے استعمال کیا جاتا ہے۔ اس سے ڈیٹا بیس آپٹیمائزر کو استفسار پر عمل درآمد کے منصوبوں کے بارے میں باخبر فیصلے کرنے میں مدد ملتی ہے جس کے بارے میں درست معلومات فراہم کرتے ہیں۔ٹیبل کے اعداد و شمار کی تقسیم۔ جب عمل درآمد کیا گیا تو ، تجزیہ ٹیبل کا بیان ٹیبل کو اسکین کرتا ہے ، اعداد و شمار کی تقسیم کے بارے میں شماریاتی معلومات اکٹھا کرتا ہے ، اور میٹا ڈیٹا کو اپ ڈیٹ کرتا ہے۔ یہ بیان خاص طور پر مفید ہے جب ٹیبل کے اعداد و شمار کی تقسیم میں نمایاں طور پر تبدیلی آئی ہے ، یا بڑی تعداد میں داخل ہونے کے بعد.خلاصہ کرنے کے لئے ، وضاحت بیان کو کسی منتخب بیان کے عملدرآمد کے منصوبے کے بارے میں معلومات حاصل کرنے کے لئے استعمال کیا جاتا ہے ، جس سے استفسار کی کارکردگی کا تجزیہ اور اصلاح میں مدد ملتی ہے۔دوسری طرف ، تجزیہ ٹیبل کے بیان کو کسی ٹیبل کے اعدادوشمار کو اپ ڈیٹ کرنے کے لئے استعمال کیا جاتا ہے ، ڈیٹا بیس آپٹیمائزر کو اعداد و شمار کی تقسیم کی درست معلومات پر مبنی موثر استفسار پر عمل درآمد کرنے کے منصوبوں میں مدد فراہم کرتا ہے۔"
    },
    {
        "Question": "ایک وضاحت اور تجزیہ ٹیبل کے بیان میں کیا فرق ہے؟",
        "Answer": "بوجھ ڈیٹا انفل اسٹیٹمنٹ اور لوڈ ڈیٹا لوکل انفائل بیان ایس کیو ایل میں کسی بیرونی فائل سے ڈیٹا کو کسی ٹیبل میں لوڈ کرنے کے لئے ایس کیو ایل کے بیانات ہیں ، لیکن وہ فائل کے مقام اور اجازت کی ضروریات کے لحاظ سے مختلف ہیں: لوڈ ڈیٹا انفائل: لوڈ ڈیٹاانفائل بیان کا استعمال ڈیٹا بیس سرور پر واقع کسی بیرونی فائل سے ڈیٹا لوڈ کرنے کے لئے کیا جاتا ہے۔ بیان میں بیان کردہ فائل کا راستہ ڈیٹا بیس سرور کے فائل سسٹم سے قابل رسائی ہونا چاہئے۔. فائل کو براہ راست ایس کیو ایل سرور کے ذریعہ پڑھا جاتا ہے اور اس پر کارروائی کی جاتی ہے۔ مثال کے طور پر: SQLCOPY کوڈ لوڈ ڈیٹا infile '/path/to/file.csv' کو ٹیبل مائی ٹیبل میں ؛ مذکورہ بالا مثال میں ، لوڈ ڈیٹا انفیل اسٹیٹمنٹ فائل سے ڈیٹا کو لوڈ کرتا ہے '//ڈیٹا بیس سرور پر 'mytable' ٹیبل پر راستہ/to/file.csv 'بیان میں بیان کردہ فائل کا راستہ کلائنٹ مشین کے فائل سسٹم سے قابل رسائی ہونا چاہئے۔ اس بیان کے لئے فائل استحقاق کو استفسار پر عمل درآمد کرنے والے ایس کیو ایل صارف کو دیا جائے ، نیز کلائنٹ کی طرف سے مقامی صلاحیت بھی قابل عمل ہے۔ فائل کو پڑھا جاتا ہے۔کلائنٹ اور پروسیسنگ کے لئے ایس کیو ایل سرور کو بھیجا گیا۔ مثال کے طور پر: SQLCOPY کوڈ لوڈ ڈیٹا مقامی infile '/path/to/file.csv' کو ٹیبل مائی ٹیبل میں ؛ مذکورہ بالا مثال میں ، لوڈ ڈیٹا لوکل انفیل اسٹیٹمنٹ فائل سے ڈیٹا کو لوڈ کرتا ہے '/ڈیٹا بیس سرور پر 'mytable' ٹیبل میں کلائنٹ مشین پر راستہ/to/file.csv 'مقامی انفائل بیان کا استعمال مائی ایس کیو ایل کلائنٹ کو چلانے والی کلائنٹ مشین پر واقع بیرونی فائل سے ڈیٹا لوڈ کرنے کے لئے کیا جاتا ہے۔مؤخر الذکر کو مقامی صلاحیت کو کلائنٹ کی طرف سے فعال کرنے کی ضرورت ہوتی ہے اور کلائنٹ کو سرور کو فائل کا ڈیٹا پڑھنے اور بھیجنے کی اجازت دیتا ہے۔"
    },
    {
        "Question": "ایک چھوٹا سا ٹیبل اور ڈراپ ٹیبل کے بیان میں کیا فرق ہے؟",
        "Answer": "پہلے فراہم کردہ غلط ردعمل کے لئے معذرت۔ایس کیو ایل میں ، بوجھ ڈیٹا انفائل اور لوڈ ڈیٹا لوکل انفائل بیانات میں کوئی فرق نہیں ہے۔دونوں بیانات کو بیرونی فائل سے ڈیٹا بیس میں ٹیبل میں ڈیٹا لوڈ کرنے کے لئے استعمال کیا جاتا ہے۔ ڈیٹا کو لوڈ انفل اور لوڈ ڈیٹا لوکل انفائل ایک دوسرے کے قابل تبادلہ بیانات ہیں اور ایس کیو ایل سرور کی مخصوص سیٹ اپ اور تشکیل کے لحاظ سے اس کا استعمال کیا جاسکتا ہے۔کس بیان کا انتخاب استعمال کرنے کے لئے صارف اور سرور کنفیگریشن کی ترتیبات کو دی جانے والی مراعات پر منحصر ہے۔ لوڈ ڈیٹا انفائل استعمال کیا جاتا ہے جب ایس کیو ایل سرور میں محفوظ_فائل_پریو سسٹم متغیر سیٹ ہوتا ہے ، جو سرور پر ایک ڈائرکٹری کی وضاحت کرتا ہے جہاں فائلوں سے بھری جاسکتی ہے۔اس معاملے میں ، بیان میں بیان کی گئی فائل سرور کے فائل سسٹم سے قابل رسائی ہونی چاہئے۔ مثال کے طور پر: SQLCOPY کوڈ لوڈ ڈیٹا infile '/path/to/file.csv' میں ٹیبل مائی ٹیبل میں Load لوڈ ڈیٹا لوکل انفائل استعمال کیا جاتا ہے جب محفوظ_فائل_پریو سسٹم متغیرسیٹ نہیں ہے ، یا جب صارف کو مقامی آپشن کو استعمال کرنے کے لئے مطلوبہ مراعات حاصل ہوں۔یہ MYSQL کلائنٹ چلانے والے کلائنٹ مشین سے فائل لوڈ کرنے کی اجازت دیتا ہے۔ مثالسرور کنفیگریشن اور صارف کے مراعات میں۔تاہم ، کسی بیرونی فائل سے ڈیٹا لوڈ کرنے کے ل their ان کی فعالیت کے لحاظ سے ، دونوں بیانات بنیادی طور پر ایک جیسے ہیں۔"
    },
    {
        "Question": "ایک منتخب * اور منتخب کالم_ نام کے بیان میں کیا فرق ہے؟",
        "Answer": "بیان میں تبدیل کریں اور بیان میں داخل کریں دونوں ایس کیو ایل بیانات ہیں جو کسی جدول میں ڈیٹا داخل کرنے کے لئے استعمال ہوتے ہیں ، لیکن وہ اپنے طرز عمل اور استعمال کے معاملات میں مختلف ہیں: داخل کریں: بیان میں داخل کریں نئی قطاریں ایک جدول میں داخل کرنے کے لئے استعمال کی جاتی ہیں۔، بیان میں داخل کرنے سے مخصوص جدول میں نئے ریکارڈ شامل ہوتے ہیں۔ اگر ایک ہی بنیادی کلید یا انوکھی رکاوٹ کے ساتھ ایک قطار پہلے ہی ٹیبل میں موجود ہے تو ، بیان ایک غلطی پھینک دے گا اور اندراج ناکام ہوجائے گا۔ یہ بیان عام طور پر جب آپ چاہتے ہیں تو استعمال کیا جاتا ہے۔موجودہ ریکارڈوں میں ترمیم کیے بغیر کسی ٹیبل میں نئے ڈیٹا کو شامل کرنے کے لئے۔ مثال کے طور پر: SQLCOPY کوڈ انرٹ صارفین میں (کسٹمر آئی ڈی ، نام ، ای میل) اقدار (1 ، 'جان ڈو' ، 'john@example.com') ؛ مذکورہ مثال میں ، داخل کریں۔بیان میں مخصوص اقدار کے ساتھ \"صارفین\" ٹیبل میں کسٹمر کا ایک نیا ریکارڈ شامل کرتا ہے۔ دوبارہ جگہ: تبدیل کریں بیان میں نئی قطاریں کسی ٹیبل میں داخل کرنے یا موجودہ قطاروں کو تبدیل کرنے کے لئے استعمال کیا جاتا ہے اگر ان کی بنیادی کلید یا انوکھی رکاوٹ ہے۔ جبپھانسی دی گئی ، بیان میں تبدیلی ٹیبل میں ایک نئی قطار داخل کرنے کی کوشش کرتی ہے۔اگر ایک ہی صف کے ساتھ ایک ہی پرائمری کلید یا منفرد رکاوٹ پہلے سے موجود ہے تو ، اسے پہلے حذف کردیا گیا ہے ، اور پھر نئی قطار داخل کردی گئی ہے۔ اگر موجودہ قطار کو تبدیل کردیا گیا ہے تو ، بیان میں بیان کردہ کوئی بھی دوسرے کالم ان کی پہلے سے طے شدہ اقدار پر سیٹ کیے جائیں گے یاNULL اگر کوئی ڈیفالٹ ویلیو کی وضاحت نہیں کی جاتی ہے۔ یہ بیان عام طور پر استعمال ہوتا ہے جب آپ نیا ڈیٹا داخل کرنا چاہتے ہیں لیکن موجودہ ریکارڈوں کو بھی اپ ڈیٹ کرتے ہیں اگر وہ پہلے سے موجود ہیں۔ مثال کے طور پر: SQLCOPY کوڈر پلیس صارفین میں (کسٹمر آئی ڈی ، نام ، ای میل) اقدار (1 ، 'جان ڈو'،' john@example.com ') ؛ مذکورہ بالا مثال میں ، بیان میں تبدیل کریں \"صارفین\" ٹیبل میں کسٹمر کا نیا ریکارڈ داخل کرنے کی کوشش کرتا ہے۔اگر ایک ہی کسٹمر آئی ڈی والا صارف پہلے سے موجود ہے تو ، اس کی جگہ نئی اقدار کے ساتھ تبدیل کردی جائے گی۔ خلاصہ کرنے کے لئے ، بیان میں داخل کرنے کے لئے نئی قطاریں ایک ٹیبل میں داخل کرنے کے لئے استعمال کی جاتی ہیں ، جبکہ تبدیل شدہ بیان میں نئی قطاریں داخل کرنے یا موجودہ کو تبدیل کرنے کے لئے استعمال کیا جاتا ہے۔قطاریں بنیادی کلید یا انوکھی رکاوٹوں پر مبنی ہیں۔دونوں بیانات کے درمیان انتخاب کا انحصار اس بات پر ہے کہ آیا آپ مکمل طور پر نیا ڈیٹا داخل کرنا چاہتے ہیں یا اگر تنازعات پائے جاتے ہیں تو موجودہ ڈیٹا کو تبدیل کرنا چاہتے ہیں۔"
    },
    {
        "Question": "جہاں شق اور ایک شق کی شق کے درمیان فرق ہے؟",
        "Answer": ""
    },
    {
        "Question": "کسی گروپ کے ذریعہ اور ایک الگ بیان میں کیا فرق ہے؟",
        "Answer": "بیان میں تبدیل کریں اور بیان میں داخل کریں دونوں ایس کیو ایل بیانات ہیں جو کسی جدول میں ڈیٹا داخل کرنے کے لئے استعمال ہوتے ہیں ، لیکن وہ اپنے طرز عمل اور متضاد ریکارڈوں کو سنبھالنے کے طریقے سے مختلف ہیں: داخل کریں: بیان میں داخل کریں A میں نئی قطاریں داخل کرنے کے لئے استعمال کیا جاتا ہے۔ٹیبل۔ جب پھانسی دی گئی تو ، بیان میں داخل کرنے سے مخصوص جدول میں نئے ریکارڈ شامل ہوجاتے ہیں۔ اگر ایک قطار میں ایک ہی بنیادی کلید یا منفرد رکاوٹ کے ساتھ پہلے سے موجود ہے تو ، بیان ایک غلطی پھینک دے گا اور اندراج ناکام ہوجائے گا۔ یہ بیان عام طور پر ہوتا ہے۔استعمال کیا جاتا ہے جب آپ موجودہ ریکارڈوں میں ترمیم کیے بغیر کسی ٹیبل میں نیا ڈیٹا شامل کرنا چاہتے ہیں۔ مثال کے طور پر: SQLCOPY کوڈ انسرٹ صارفین میںمثال کے طور پر ، بیان میں داخل کرنے سے \"صارفین\" ٹیبل میں مخصوص اقدار کے ساتھ ایک نیا کسٹمر ریکارڈ شامل ہوتا ہے۔ دوبارہ جگہ: تبدیل کریں بیان میں نئی قطاریں کسی ٹیبل میں داخل کرنے یا موجودہ قطاروں کو تبدیل کرنے کے لئے استعمال کیا جاتا ہے اگر ان کے پاس ایک ہی بنیادی کلید ہے یامنفرد رکاوٹ۔ جب پھانسی دی جاتی ہے تو ، بیان میں تبدیل کرنے سے میز میں ایک نئی قطار داخل کرنے کی کوشش کی جاتی ہے۔اگر ایک ہی پرائمری کلید یا منفرد رکاوٹ کے ساتھ ایک قطار پہلے سے موجود ہے تو ، اسے پہلے حذف کردیا گیا ہے ، اور پھر نئی قطار داخل کردی گئی ہے۔ اگر موجودہ قطار کو تبدیل کردیا گیا ہے تو ، تمام کالموں کو بیان میں بیان کردہ نئی اقدار کے ساتھ اپ ڈیٹ کیا جائے گا۔ یہ بیان۔عام طور پر استعمال کیا جاتا ہے جب آپ نیا ڈیٹا داخل کرنا چاہتے ہیں لیکن موجودہ ریکارڈوں کو بھی اپ ڈیٹ کرتے ہیں اگر وہ پہلے سے موجود ہیں۔ مثال کے طور پر: SQLCOPY کوڈر پلیس صارفین میں (کسٹمر آئی ڈی ، نام ، ای میل) اقدار (1 ، 'جان ڈو' ، 'جان@example.com'))above مذکورہ بالا مثال میں ، بیان میں تبدیل کریں \"صارفین\" ٹیبل میں کسٹمر کا نیا ریکارڈ داخل کرنے کی کوشش کرتا ہے۔اگر ایک ہی کسٹمر آئی ڈی والا صارف پہلے سے موجود ہے تو ، اس کی جگہ نئی اقدار کے ساتھ تبدیل کردی جائے گی۔ خلاصہ کرنے کے لئے ، بیان میں داخل کرنے کے لئے نئی قطاریں ایک ٹیبل میں داخل کرنے کے لئے استعمال کی جاتی ہیں ، جبکہ تبدیل شدہ بیان میں نئی قطاریں داخل کرنے یا موجودہ کو تبدیل کرنے کے لئے استعمال کیا جاتا ہے۔قطاریں بنیادی کلید یا انوکھی رکاوٹوں پر مبنی ہیں۔دونوں بیانات کے درمیان انتخاب کا انحصار اس بات پر ہے کہ آیا آپ مکمل طور پر نیا ڈیٹا داخل کرنا چاہتے ہیں یا اگر تنازعات پائے جاتے ہیں تو موجودہ ڈیٹا کو تبدیل کرنا چاہتے ہیں۔"
    },
    {
        "Question": "اندرونی شمولیت اور بائیں بازو میں شامل ہونے میں کیا فرق ہے؟",
        "Answer": "اپ ڈیٹ بیان اور حذف کرنے والا بیان دونوں ایس کیو ایل بیانات ہیں جو کسی جدول میں ڈیٹا میں ترمیم کرنے کے لئے استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: اپ ڈیٹ بیان: تازہ کاری کا بیان کسی ٹیبل کی ایک یا زیادہ قطار میں موجودہ ڈیٹا میں ترمیم کرنے کے لئے استعمال ہوتا ہے۔اپ ڈیٹ بیان فراہم کردہ حالتوں کی بنیاد پر منتخب قطار میں مخصوص کالموں کی اقدار کو تبدیل کرتا ہے۔ اپ ڈیٹ کا بیان آپ کو نئی اقدار کے ساتھ مخصوص کالموں کو اپ ڈیٹ کرنے ، اظہار کی بنیاد پر اقدار کا حساب لگانے ، یا موجودہ اعداد و شمار پر افعال کا اطلاق کرنے کی اجازت دیتا ہے۔ یہ عام طور پر تبدیلی کے لئے استعمال ہوتا ہے۔موجودہ ریکارڈوں میں کچھ کالموں کی قدریں۔ مثال کے طور پر: SQLCOPY کوڈ اپ ڈیٹ صارفین ای میل کریں = 'newemail@example.com' جہاں کسٹمر آئی ڈی = 1 ؛ مذکورہ بالا مثال میں ، اپ ڈیٹ بیان کسٹمر آئی ڈی کے ساتھ کسٹمر ریکارڈ کی \"ای میل\" کالم ویلیو میں ترمیم کرتا ہے۔1 \"صارفین\" ٹیبل میں۔ ڈیلیٹ بیان: حذف شدہ بیان کو ایک ٹیبل سے ایک یا زیادہ قطاریں ہٹانے کے لئے استعمال کیا جاتا ہے۔ جب عمل میں لایا جاتا ہے تو ، حذف شدہ بیان مستقل طور پر فراہم کردہ حالتوں کی بنیاد پر جدول سے مخصوص قطاروں کو ہٹا دیتا ہے۔ حذف بیان کرتا ہے۔کسی بھی کالموں کی اقدار کو تبدیل نہ کریں بلکہ اس کے بجائے پوری قطار کو ہٹا دیتا ہے جو حالات سے مماثل ہے۔ یہ عام طور پر کسی ٹیبل سے ناپسندیدہ یا متروک ریکارڈوں کو حذف کرنے کے لئے استعمال ہوتا ہے۔ مثال کے طور پر: گاہکوں سے SQLCOPY کوڈیلیٹ جہاں کسٹمر آئی ڈی = 1 ؛ مذکورہ مثال میں ؛، حذف کرنے والا بیان \"صارفین\" ٹیبل سے کسٹمر آئی ڈی 1 کے ساتھ کسٹمر ریکارڈ کو ہٹا دیتا ہے۔ خلاصہ یہ ہے کہ ، اپ ڈیٹ بیان کو مخصوص کالموں کی اقدار کو تبدیل کرکے ایک ٹیبل میں موجودہ ڈیٹا میں ترمیم کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ حذف شدہ بیان کو کسی کو دور کرنے کے لئے استعمال کیا جاتا ہے۔یا کسی میز سے زیادہ قطاریں۔تازہ کاری کا بیان ٹیبل کے اندر موجود ڈیٹا کو تبدیل کرتا ہے ، جبکہ حذف شدہ بیان مستقل طور پر ٹیبل سے ڈیٹا کو ہٹا دیتا ہے۔"
    },
    {
        "Question": "بیرونی شمولیت اور صحیح شمولیت میں کیا فرق ہے؟",
        "Answer": "ٹیبل ٹیبل کا بیان اور ڈراپ ٹیبل بیان دونوں ایس کیو ایل بیانات ہیں جو کسی ڈیٹا بیس سے ٹیبل کو ہٹانے کے لئے استعمال ہوتے ہیں ، لیکن وہ ان کے طرز عمل اور ان کے پھانسی کے نتائج میں مختلف ہیں: ٹرنکیٹ ٹیبل: ٹرنکیٹ ٹیبل بیان A سے تمام قطاریں ہٹانے کے لئے استعمال کیا جاتا ہے۔جدول کے ڈھانچے کو برقرار رکھتے ہوئے ٹیبل۔ جب عمل میں لایا جاتا ہے تو ، ٹیبل ٹیبل کا بیان ٹیبل کے اندر موجود تمام اعداد و شمار کو حذف کرتا ہے ، مؤثر طریقے سے ٹیبل کو اپنی ابتدائی حالت میں دوبارہ ترتیب دیتا ہے۔تمام قطاروں کو ہٹانے کے ل. کیونکہ یہ ہر صف کے لئے انفرادی حذف کرنے والی کارروائیوں کو پیدا نہیں کرتا ہے۔اس کے بجائے ، یہ ٹیبل سے وابستہ ڈیٹا صفحات کو ختم کرتا ہے ، جس کے نتیجے میں تیز رفتار عملدرآمد ہوتا ہے۔ ٹیبل کو ٹیبل کے آٹو انکرمنٹ کاؤنٹرز کو دوبارہ ترتیب دیتا ہے ، جس کا مطلب ہے کہ اگلا داخل کرنے کا عمل ابتدائی قدر سے شروع ہوگا۔مثال کے طور پر ، ٹیبل ٹیبل کا بیان \"صارفین\" ٹیبل سے تمام قطاریں ہٹاتا ہے ، لیکن ٹیبل کا ڈھانچہ برقرار رہتا ہے۔ ڈراپ ٹیبل: ڈراپ ٹیبل کا بیان ڈیٹا بیس سے ٹیبل اور اس سے وابستہ تمام ڈیٹا کو مکمل طور پر ہٹانے کے لئے استعمال کیا جاتا ہے۔ڈراپ ٹیبل اسٹیٹمنٹ مستقل طور پر اس کی ساخت ، اشاریہ جات ، رکاوٹیں ، اور اس سے وابستہ ڈیٹا سمیت پوری جدول کو حذف کردیتا ہے۔ ڈراپ ٹیبل ایک ڈی ڈی ایل بیان ہے جس کو واپس نہیں لایا جاسکتا ہے ، لہذا اسے احتیاط کے ساتھ استعمال کیا جانا چاہئے کیونکہ اس سے ناقابل واپسی ڈیٹا نقصان ہوتا ہے۔گرا دیا جاتا ہے ، اس کے اندر موجود تمام اعداد و شمار ضائع ہوچکے ہیں اور بیک اپ کے بغیر بازیافت نہیں ہوسکتے ہیں۔ مثال کے طور پر: SQLCOPY کوڈڈروپ ٹیبل صارفین ؛ مذکورہ بالا مثال میں ، ڈراپ ٹیبل کا بیان پورے \"صارفین\" ٹیبل کو ڈیٹا بیس سے ہٹا دیتا ہے ، جس میں اس کی ساخت اور سب شامل ہیں۔اس کے اندر محفوظ کردہ ڈیٹا۔ خلاصہ کرنے کے لئے ، تراشے ہوئے ٹیبل کا بیان اس کے ڈھانچے کو برقرار رکھتے ہوئے تمام قطاروں کو ایک ٹیبل سے ہٹاتا ہے ، جبکہ ڈراپ ٹیبل کا بیان ٹیبل کو مکمل طور پر ہٹاتا ہے ، جس میں اس کی ساخت اور اس سے وابستہ تمام اعداد و شمار شامل ہیں۔تراشے ہوئے ٹیبل تیز تر ہے لیکن آٹو انکرمنٹ کاؤنٹرز کو دوبارہ ترتیب نہیں دیتا ہے ، جبکہ ڈراپ ٹیبل ناقابل واپسی ہے اور مستقل طور پر ٹیبل اور اس کے مندرجات کو حذف کردیتا ہے۔"
    },
    {
        "Question": "یونین اور یونین کے تمام بیان میں کیا فرق ہے؟",
        "Answer": "تخلیق ٹیبل کا بیان اور الٹر ٹیبل بیان دونوں ایس کیو ایل بیانات ہیں جو کسی جدول کی ساخت میں ترمیم کرنے کے لئے استعمال ہوتے ہیں ، لیکن وہ اپنے مقصد میں مختلف ہیں اور جب وہ عام طور پر استعمال ہوتے ہیں: ٹیبل بنائیں: ٹیبل اسٹیٹمنٹ کو ایک نیا ٹیبل بنانے کے لئے استعمال کیا جاتا ہے۔ایک ڈیٹا بیس۔ جب عمل میں لایا گیا تو ، ٹیبل ٹیبل بیان ٹیبل کے ڈھانچے کی وضاحت کرتا ہے ، جس میں کالم کے نام ، ڈیٹا کی اقسام ، رکاوٹیں اور اشاریہ شامل ہیں۔ یہ کسی ٹیبل کی ابتدائی ساخت کی وضاحت کے لئے استعمال ہوتا ہے جب یہ ڈیٹا بیس میں موجود نہیں ہے۔ٹیبل عام طور پر اس وقت استعمال کیا جاتا ہے جب آپ نیا ٹیبل بنانا چاہتے ہیں اور اس کے کالموں اور خصوصیات کی وضاحت کرنا چاہتے ہیں۔ مثال کے طور پر: SQLCOPY CodeCreate ٹیبل صارفین (کسٹمر ID INT پرائمری کلید ، نام ورچار (50) ، ای میل ورچر (100)) ؛ مذکورہ مثال میں ،ٹیبل اسٹیٹمنٹ بنائیں تین کالموں کے ساتھ ایک نیا \"صارفین\" ٹیبل تیار کرتا ہے: \"کسٹمر آئی ڈی\" ، \"نام\" ، اور \"ای میل\"آپ کو کسی موجودہ ٹیبل کی کالموں ، ترمیم یا ہٹانے کی اجازت دیتا ہے۔ایک موجودہ جدول ، جیسے کالموں کو شامل کرنا یا گرا دینا ، کالم ڈیٹا کی اقسام کو تبدیل کرنا ، یا رکاوٹیں شامل کرنا۔ مثال کے طور پر: SQLCOPY کوڈیلٹر ٹیبل کے صارفین کالم ایڈریس ورچر (200) شامل کریں ؛ مذکورہ بالا مثال میں ، الٹر ٹیبل بیان میں ایک نیا کالم \"ایڈریس\" شامل کیا گیا ہے \"ایڈریس\"موجودہ \"صارفین\" ٹیبل کے مطابق۔ خلاصہ کریں ، تخلیق ٹیبل بیان کو اس کے ابتدائی ڈھانچے کے ساتھ ایک نیا ٹیبل بنانے کے لئے استعمال کیا جاتا ہے ، جبکہ الٹر ٹیبل بیان کسی موجودہ ٹیبل کی ساخت میں ترمیم کرنے کے لئے استعمال ہوتا ہے۔تخلیق ٹیبل کو پہلی بار کسی ٹیبل کی وضاحت کرتے وقت استعمال کیا جاتا ہے ، جبکہ الٹر ٹیبل کو کسی موجودہ ٹیبل میں دوبارہ بنانے کے بغیر تبدیلیاں کرنے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "ایک گنتی اور رقم کے بیان میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس کا بیان اور ڈراپ ڈیٹا بیس بیان ایس کیو ایل کے بیانات ہیں جو بالترتیب ڈیٹا بیس مینجمنٹ سسٹم میں ڈیٹا بیس بنانے اور چھوڑنے کے لئے استعمال ہوتے ہیں۔وہ اپنے مقصد اور ان کے کاموں میں مختلف ہیں جو وہ انجام دیتے ہیں: ڈیٹا بیس بنائیں: ڈیٹا بیس مینجمنٹ سسٹم میں ایک نیا ڈیٹا بیس بنانے کے لئے ڈیٹا بیس کا بیان استعمال کیا جاتا ہے۔ جب عمل درآمد کیا جاتا ہے تو ، ڈیٹا بیس کا بیان مخصوص نام کے ساتھ ایک نیا خالی ڈیٹا بیس تشکیل دیتا ہے۔ڈیٹا بیس کا وجود ، اور اس میں عام طور پر ابتدائی ڈیٹا بیس ڈھانچہ ترتیب دینا شامل ہے ، جیسے سسٹم ٹیبلز بنانا اور اسٹوریج کی جگہ مختص کرنا۔ ڈیٹا بیس بنانے کے لئے مخصوص نحو اور اختیارات ڈیٹا بیس مینجمنٹ سسٹم کے مطابق مختلف ہوسکتے ہیں۔myDatabase ؛ مذکورہ بالا مثال میں ، ڈیٹا بیس کا بیان \"myDatabase\" کے نام سے ایک نیا ڈیٹا بیس تشکیل دیتا ہے۔ ڈراپ ڈیٹا بیس: ڈراپ ڈیٹا بیس کا بیان ڈیٹا بیس مینجمنٹ سسٹم سے ڈیٹا بیس کو ہٹانے کے لئے استعمال کیا جاتا ہے۔ڈیٹا بیس اور اس سے وابستہ تمام جدولیں ، آراء ، ذخیرہ شدہ طریقہ کار اور دیگر اشیاء۔ یہ ڈیٹا بیس کے اندر موجود تمام ڈیٹا اور ڈھانچے کو ناقابل تلافی طور پر ہٹاتا ہے۔ ڈیٹا بیس کو گرانے کے لئے مخصوص نحو اور اختیارات ڈیٹا بیس مینجمنٹ سسٹم کے استعمال پر منحصر ہوسکتے ہیں۔ایس کیو ایل کوپی کوڈڈروپ ڈیٹا بیس مائی ڈیٹا بیس ؛ مذکورہ بالا مثال میں ، ڈراپ ڈیٹا بیس کا بیان \"مائی ڈیٹا بیس\" ڈیٹا بیس اور اس سے وابستہ تمام اشیاء کو حذف کرتا ہے۔ خلاصہ کریں ، ڈیٹا بیس کا بیان ایک نیا ڈیٹا بیس تشکیل دیتا ہے ، جبکہ ڈراپ ڈیٹا بیس کو ایک موجودہ ڈیٹا بیس کو ہٹا دیتا ہے اور اس میں سبھی سب کچھ ہٹا دیتا ہے۔وابستہ اشیاءڈیٹا بیس بنائیں ڈیٹا بیس کے ابتدائی ڈھانچے اور وجود کو قائم کرتا ہے ، جبکہ ڈراپ ڈیٹا بیس مستقل طور پر پورے ڈیٹا بیس اور اس کے تمام مندرجات کو حذف کرتا ہے۔"
    },
    {
        "Question": "زیادہ سے زیادہ اور ایک منٹ کے بیان میں کیا فرق ہے؟",
        "Answer": "بیک اپ ڈیٹا بیس کا بیان اور بحالی ڈیٹا بیس بیان ایس کیو ایل کے بیانات ہیں جو ڈیٹا بیس کے لئے بیک اپ انجام دینے اور آپریشنز کو بحال کرنے کے لئے استعمال ہوتے ہیں۔وہ اپنے مقصد اور ان کے انجام دینے والے اقدامات میں مختلف ہیں: بیک اپ ڈیٹا بیس: بیک اپ ڈیٹا بیس کا بیان کسی ڈیٹا بیس کا بیک اپ بنانے کے لئے استعمال کیا جاتا ہے۔ جب عمل میں لایا جاتا ہے تو ، بیک اپ ڈیٹا بیس کا بیان ڈیٹا بیس کے ڈیٹا اور اسکیما کی ایک کاپی تیار کرتا ہے ، جس سے بیک اپ فائل تیار ہوتی ہے۔بیک اپ سیٹ۔ بیک اپ فائل کو ڈیٹا کے تحفظ اور نظام کی ناکامی کی صورت میں ڈیٹا کے تحفظ اور بازیابی کو یقینی بنانے کے لئے مختلف مقام ، آلہ ، یا میڈیا میں محفوظ کیا جاسکتا ہے۔ ڈیٹا بیس کا بیک اپ لینے کے لئے مخصوص نحو اور اختیارات ڈیٹا بیس کے انتظام کے لحاظ سے مختلف ہوسکتے ہیں۔سسٹم کو استعمال کیا جارہا ہے۔ مثال کے طور پر (مائیکروسافٹ ایس کیو ایل سرور): SQLCOPY کوڈ بیک اپ ڈیٹا بیس MyDatabase to Disk = 'C: \\ بیک اپ \\ myDatabase.bak' ؛ مذکورہ بالا مثال میں ، بیک اپ ڈیٹا بیس بیان \"myDatabase\" ڈیٹا بیس کا بیک اپ تشکیل دیتا ہے اور اسے اسٹور کرتا ہے۔مخصوص بیک اپ فائل میں۔ ریسسٹور ڈیٹا بیس میں: بحالی ڈیٹا بیس کے بیان کو بیک اپ فائل یا بیک اپ سیٹ سے ڈیٹا بیس کو بحال کرنے کے لئے استعمال کیا جاتا ہے۔ جب عمل میں لایا جاتا ہے تو ، ریسٹور ڈیٹا بیس کا بیان موجودہ ڈیٹا بیس کی جگہ لے لیتا ہے یا رن سے ڈیٹا اور اسکیما کا استعمال کرتے ہوئے ایک نیا ڈیٹا بیس بناتا ہے۔بیک اپ فائل ڈاٹ آئی ٹی ڈیٹا بیس کو پچھلی ریاست میں لوٹاتا ہے ، جس میں بیک اپ کے وقت موجود ڈیٹا اور ڈھانچے کی بازیابی ہوتی ہے۔ ڈیٹا بیس کو بحال کرنے کے لئے مخصوص نحو اور اختیارات ڈیٹا بیس مینجمنٹ سسٹم کے استعمال کے لحاظ سے مختلف ہوسکتے ہیں۔سرور): SQLCOPY کوڈرسٹور ڈیٹا بیس MyDatabase from Disk = 'C: \\ بیک اپ \\ myDatabase.bak' ؛ مذکورہ بالا مثال میں ، بحالی ڈیٹا بیس کا بیان مخصوص بیک اپ فائل سے ڈیٹا اور اسکیما کا استعمال کرتے ہوئے \"MyDatabase\" ڈیٹا بیس کو بحال کرتا ہے۔بیک اپ ڈیٹا بیس کا بیان ڈیٹا بیس کا بیک اپ بنانے کے لئے استعمال کیا جاتا ہے ، جبکہ بحالی ڈیٹا بیس کے بیان کو بیک اپ فائل سے ڈیٹا بیس کو بحال کرنے کے لئے استعمال کیا جاتا ہے۔بیک اپ ڈیٹا بیس ڈیٹا پروٹیکشن کے لئے ڈیٹا بیس کی ایک کاپی تیار کرتا ہے ، جبکہ ڈیٹا بیس کو بحال کریں ایک ڈیٹا بیس کو بیک اپ سے ڈیٹا اور اسکیما کا استعمال کرتے ہوئے پچھلی ریاست میں تبدیل کرتا ہے۔"
    },
    {
        "Question": "کسی آرڈر کے ذریعہ اور حد کے بیان میں کیا فرق ہے؟",
        "Answer": "گرانٹ کا بیان اور منسوخ بیان ایس کیو ایل کے بیانات ہیں جو ڈیٹا بیس مینجمنٹ سسٹم میں اجازت اور مراعات کے انتظام کے لئے استعمال ہوتے ہیں۔ان کے برعکس افعال ہیں اور وہ ڈیٹا بیس آبجیکٹ تک رسائی کے حقوق کی منظوری اور منسوخ کرنے کے لئے استعمال ہوتے ہیں: گرانٹ بیان: گرانٹ کا بیان کسی ڈیٹا بیس میں صارفین یا صارف کے کردار کو مخصوص اجازت یا مراعات دینے کے لئے استعمال کیا جاتا ہے۔ جب عمل درآمد ہوتا ہے تو ، گرانٹ کا بیان صارفین یا کردار کی اجازت دیتا ہے۔مخصوص ڈیٹا بیس آبجیکٹ ، جیسے ٹیبلز ، آراء ، طریقہ کار ، یا کالموں پر کچھ اعمال انجام دینے کے ل users صارفین کو مخصوص اشیاء کے ڈیٹا اور ڈھانچے تک رسائی ، ترمیم کرنے یا ان میں ہیرا پھیری کرنے کے قابل بناتا ہے۔ مخصوص نحو اور اجازت دینے کے لئے اختیارات مختلف ہوسکتے ہیں۔ڈیٹا بیس مینجمنٹ سسٹم پر استعمال کیا جارہا ہے۔ مثال کے طور پر: SQLCOPY Codgrant منتخب کریں ، صارفین کو صارف 1 میں داخل کریں ؛ مندرجہ بالا مثال میں ، گرانٹ کا بیان \"صارف\" ٹیبل پر \"صارف\" کو منتخب کریں اور داخل کریں ، جس سے انہیں پڑھنے کی اجازت دی جاسکے اور انہیں پڑھنے کی اجازت دی جائے۔جدول میں ڈیٹا داخل کریں۔ ریوکیٹ بیان: منسوخ کرنے والا بیان کسی ڈیٹا بیس میں صارفین یا صارف کے کرداروں سے پہلے دیئے گئے اجازت یا مراعات کو منسوخ کرنے یا اسے ہٹانے کے لئے استعمال کیا جاتا ہے۔ جب عمل میں لایا جاتا ہے تو ، ان کی رسائی کو محدود کرتے ہوئے ، ان تک رسائی کو محدود کرتے ہوئے ، ان کی رسائی کو محدود کرتے ہیں۔وابستہ ڈیٹا بیس آبجیکٹ کے لئے۔ یہ گرانٹ کے بیان کے ذریعہ دیئے گئے مراعات کو مؤثر طریقے سے ختم کردیتا ہے اور صارفین کو منسوخ شدہ اشیاء پر مخصوص اقدامات کرنے سے روکتا ہے۔ مخصوص نحو اور اجازت کو منسوخ کرنے کے لئے اختیارات ڈیٹا بیس کے انتظام کے نظام کے لحاظ سے مختلف ہوسکتے ہیں۔ مثال: SQLCOPY: SQLCOPYکوڈیرووک منتخب کریں ، صارف 1 سے صارفین پر داخل کریں۔ مذکورہ بالا مثال میں ، ریکوئک بیان \"صارف\" سے پہلے دیئے گئے سلیکٹ اور داخل کردہ اجازتوں کو منسوخ کرتا ہے ، جس سے ٹیبل میں ڈیٹا پڑھنے اور داخل کرنے کی ان کی صلاحیت کو ہٹا دیا جاتا ہے۔ خلاصہ کریں۔، گرانٹ کے بیان کا استعمال صارفین یا کرداروں کو اجازت یا مراعات دینے کے لئے کیا جاتا ہے ، جس سے وہ مخصوص ڈیٹا بیس اشیاء پر کارروائی اور کارروائی کرنے کی اجازت دیتے ہیں۔اس کے برعکس ، منسوخ کرنے والے بیان کا استعمال پہلے سے دیئے گئے اجازتوں کو منسوخ کرنے یا دور کرنے کے لئے کیا جاتا ہے ، جس سے متعلقہ اشیاء تک صارف کی رسائی کو محدود کیا جاتا ہے۔گرانٹ کا بیان رسائی کو قابل بناتا ہے ، جبکہ منسوخ کرنے والا بیان رسائی کو محدود کرتا ہے۔"
    },
    {
        "Question": "بولین اور ورچر ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "فلش مراعات کا بیان اور فلش ٹیبلز کا بیان دونوں ایس کیو ایل بیانات ہیں جو ڈیٹا بیس مینجمنٹ سسٹم میں استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: فلش مراعات: فلش مراعات کا بیان ڈیٹا بیس مینجمنٹ سسٹم میں استحقاق کی میزوں کو دوبارہ لوڈ کرنے کے لئے استعمال کیا جاتا ہے۔ یہ عام طور پر اس کے بعد استعمال ہوتا ہے۔صارفین یا کرداروں کی طرف سے مراعات دینا یا ان کی منسوخی کو یقینی بنانے کے لئے کہ تبدیلیاں فوری طور پر نافذ ہوجائیں۔ جب عمل میں لایا جاتا ہے تو ، فلش مراعات کا بیان ڈیٹا بیس مینجمنٹ سسٹم کو ڈسک سے تازہ ترین استحقاق کی میزوں کو دوبارہ پڑھنے اور تبدیلیوں کا اطلاق کرنے پر مجبور کرتا ہے۔ یہ عام طور پر مل کر استعمال ہوتا ہے۔گرانٹ اور کالعدم بیانات کے ساتھ یہ یقینی بنانے کے لئے کہ استحقاق کی تبدیلیوں کو فوری طور پر ڈیٹا بیس سسٹم کے ذریعہ تسلیم کیا جاتا ہے۔ مثال کے طور پر: SQLCOPY کوڈفلوش مراعات ؛ مذکورہ بالا مثال میں ، فلش مراعات کا بیان استحقاق کی میزوں کو دوبارہ لوڈ کرتا ہے ، جس سے حالیہ استحقاق کی تبدیلیوں کا اثر پڑتا ہے۔ فلش ٹیبلز:فلش ٹیبلز کے بیان کو ڈیٹا بیس میں تمام جدولوں کو بند کرنے اور دوبارہ کھولنے کے لئے استعمال کیا جاتا ہے۔ یہ یقینی بناتا ہے کہ ٹیبلز سے وابستہ کسی بھی زیر التواء تبدیلیوں یا کیچڈ ڈیٹا کو فلش کیا جاتا ہے اور ڈسک پر لکھا جاتا ہے۔تمام کھلی میزیں بند کردیتی ہیں ، جو ڈیٹا بیس پر بیک اپ بنانا یا بحالی کے کام انجام دینے جیسے حالات میں کارآمد ثابت ہوسکتی ہیں۔ یہ نوٹ کرنا ضروری ہے کہ فلش ٹیبلز کا بیان مکمل ڈیٹا بیس شٹ ڈاؤن انجام نہیں دیتا ہے یا پورے ڈیٹا بیس کیشے کو صاف نہیں کرتا ہے۔ مثال کے طور پر۔ایس کیو ایل کوپی کوڈفلش ٹیبلز ؛ مذکورہ بالا مثال میں ، فلش ٹیبلز کا بیان تمام جدولوں کو بند اور دوبارہ کھولتا ہے ، تالے جاری کرتا ہے اور اس بات کو یقینی بناتا ہے کہ کسی بھی زیر التواء تبدیلیاں ڈسک پر پھیل جائیں۔صارف کے مراعات میں تبدیلیاں ، جبکہ فلش ٹیبلز کا بیان ٹیبلز کو بند کرنے اور دوبارہ کھولنے کے لئے استعمال کیا جاتا ہے ، اس بات کو یقینی بناتے ہوئے کہ زیر التواء تبدیلیاں ختم ہوجائیں اور ٹیبل تالے جاری ہوں۔فلش مراعات استحقاق میں تبدیلیوں سے متعلق ہیں ، جبکہ فلش ٹیبلز ٹیبل لیول آپریشنز اور ڈیٹا فلشنگ سے متعلق ہیں۔"
    },
    {
        "Question": "INT اور ڈیٹ ٹائم ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "شو ٹیبلز کا بیان اور بیان کردہ ٹیبل بیان دونوں ایس کیو ایل بیانات ہیں جو ڈیٹا بیس ٹیبلز کے بارے میں معلومات کو بازیافت کرنے کے لئے استعمال کیے جاتے ہیں ، لیکن وہ ان کی فراہم کردہ معلومات میں مختلف ہیں: ٹیبلز دکھائیں: شو ٹیبلز کا بیان ڈیٹا بیس میں جدولوں کی فہرست ظاہر کرنے کے لئے استعمال کیا جاتا ہے۔. جب پھانسی دی جاتی ہے تو ، شو ٹیبلز کا بیان موجودہ ڈیٹا بیس میں تمام جدولوں کے ناموں پر مشتمل نتیجہ سیٹ لوٹاتا ہے۔ یہ ڈیٹا بیس میں دستیاب جدولوں کا ایک اعلی سطحی نظارہ فراہم کرتا ہے ، جس کے بارے میں آپ کو ٹیبل کے ناموں کو فوری طور پر دیکھنے کی اجازت دیتا ہے۔ان کا ڈھانچہ یا کالم۔ مثال کے طور پر: SQLCOPY کوڈ شو ٹیبلز ؛ مذکورہ بالا مثال میں ، شو ٹیبلز کا بیان موجودہ ڈیٹا بیس میں جدولوں کی ایک فہرست بازیافت کرتا ہے۔کسی خاص جدول کی ساخت کے بارے میں تفصیلی معلومات ظاہر کرنے کے لئے۔ جب عمل میں لایا جاتا ہے تو ، ٹیبل کا بیان بیان کالم ، ڈیٹا کی اقسام ، رکاوٹوں اور مخصوص جدول کی دیگر خصوصیات کے بارے میں معلومات فراہم کرتا ہے۔ یہ ٹیبل کے ڈھانچے کا ایک جامع نظارہ دیتا ہے ، جس سے آپ کو اجازت ملتی ہےکالم کے ناموں ، ان کے ڈیٹا کی اقسام ، اور ان پر لاگو ہونے والی کسی بھی رکاوٹوں کو سمجھنے کے لئے۔ مثال کے طور پر: SQLCOPY CODEDSCRIBE صارفین ؛ مذکورہ مثال میں ، ٹیبل بیان بیان \"صارفین\" ٹیبل کے بارے میں تفصیلی معلومات حاصل کرتا ہے ، بشمول اس کے کالم ، ڈیٹا کی قسمیں ، اوررکاوٹیں۔ خلاصہ کرنے کے لئے ، شو ٹیبلز کا بیان ڈیٹا بیس میں جدولوں کی ایک فہرست فراہم کرتا ہے ، جبکہ بیان کردہ ٹیبل بیان ایک مخصوص جدول کی ساخت کے بارے میں تفصیلی معلومات فراہم کرتا ہے۔شو ٹیبلز ٹیبل کے ناموں کا ایک اعلی سطحی نظارہ پیش کرتے ہیں ، جبکہ ٹیبل کی وضاحت کالموں ، ڈیٹا کی اقسام اور رکاوٹوں کے بارے میں جامع معلومات فراہم کرتی ہے۔"
    },
    {
        "Question": "متن اور بلاب ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "شو ڈیٹا بیس کا بیان اور استعمال ڈیٹا بیس کا بیان دونوں ایس کیو ایل بیانات ہیں جو ڈیٹا بیس مینجمنٹ سسٹم میں استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: ڈیٹا بیس دکھائیں: ڈیٹا بیس مینجمنٹ سسٹم میں دستیاب ڈیٹا بیس کی فہرست کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔شو ڈیٹا بیس کا بیان سسٹم میں موجود تمام ڈیٹا بیس کے ناموں پر مشتمل نتیجہ سیٹ لوٹاتا ہے۔ یہ ڈیٹا بیس کا ایک اعلی سطحی نظارہ فراہم کرتا ہے ، جس سے آپ ان کے ساتھ براہ راست بات چیت کیے بغیر ڈیٹا بیس کے ناموں کو دیکھنے کی اجازت دیتے ہیں۔مذکورہ بالا مثال کے طور پر ، شو ڈیٹا بیس بیان ڈیٹا بیس مینجمنٹ سسٹم میں دستیاب ڈیٹا بیس کی ایک فہرست بازیافت کرتا ہے۔ڈیٹا بیس بطور ڈیفالٹ ڈیٹا بیس کے بعد ایس کیو ایل کے بیانات کے لئے۔ یہ آپ کو ہر بیان میں ڈیٹا بیس کے نام کا واضح طور پر حوالہ کیے بغیر منتخب کردہ ڈیٹا بیس کے اندر ٹیبلز ، آراء اور دیگر اشیاء کے ساتھ کام کرنے کی اجازت دیتا ہے۔ ڈیٹا بیس کو تبدیل کرنے کے لئے مخصوص نحو ڈیٹا بیس مینجمنٹ کے لحاظ سے مختلف ہوسکتا ہے۔سسٹم کو استعمال کیا جارہا ہے۔ مثال کے طور پر: SQLCOPY Codeuse MyDatabase ؛ مذکورہ بالا مثال میں ، استعمال ڈیٹا بیس کا بیان موجودہ ڈیٹا بیس سیاق و سباق کو \"MyDatabase\" میں تبدیل کرتا ہے ، جس سے بعد میں ایس کیو ایل کے بیانات کو اس ڈیٹا بیس کے اندر کام کرنے کے قابل بناتا ہے۔ خلاصہ کریں ، ڈیٹا بیس کا بیان ایک فہرست فراہم کرتا ہے۔سسٹم میں دستیاب ڈیٹا بیس ، جبکہ استعمال کے ڈیٹا بیس کا بیان موجودہ ڈیٹا بیس کے سیاق و سباق کو ایک مخصوص ڈیٹا بیس میں تبدیل کرتا ہے ، جس کے نتیجے میں ایس کیو ایل کے بعد کے بیانات کو اس ڈیٹا بیس میں کام کرنے کی اجازت ملتی ہے۔دکھائیں ڈیٹا بیس ڈیٹا بیس کے ناموں کا ایک اعلی سطحی نظارہ پیش کرتا ہے ، جبکہ استعمال ڈیٹا بیس کے بعد کے ایس کیو ایل کے بیانات کے لئے پہلے سے طے شدہ ڈیٹا بیس کا تعین کرتا ہے۔"
    },
    {
        "Question": "فلوٹ اور ڈبل ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "شو گرانٹ کا بیان اور شو متغیر بیان دونوں ایس کیو ایل بیانات ہیں جو ڈیٹا بیس مینجمنٹ سسٹم میں استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: گرانٹ دکھائیں: شو گرانٹ بیان کو کسی مخصوص صارف یا کردار کو دیئے گئے مراعات اور اجازت کے بارے میں معلومات حاصل کرنے کے لئے استعمال کیا جاتا ہے۔ڈیٹا بیس۔ جب عمل میں لایا جاتا ہے تو ، شو گرانٹ کا بیان ایک مخصوص صارف یا کردار کو تفویض کردہ مراعات کی نمائش کرنے والا نتیجہ سیٹ لوٹاتا ہے۔ یہ اس بارے میں تفصیلی معلومات فراہم کرتا ہے کہ صارف یا کردار کو مختلف ڈیٹا بیس آبجیکٹ پر انجام دینے کی اجازت ہے۔ڈیٹا بیس مینجمنٹ سسٹم کے استعمال پر منحصر ہے۔متغیرات دکھائیں: ڈیٹا بیس مینجمنٹ سسٹم میں موجودہ ترتیب متغیرات کے بارے میں معلومات کو بازیافت کرنے کے لئے شو متغیر بیان کا استعمال کیا جاتا ہے۔ جب عمل میں لایا جاتا ہے تو ، شو متغیر کا بیان سسٹم کی ترتیبات کے بارے میں تفصیلات فراہم کرتا ہے۔ یہ سسٹم کی ترتیبات کے بارے میں تفصیلات فراہم کرتا ہے۔، جیسے سرور سے متعلق کنفیگریشن کے اختیارات ، ماحولیاتی متغیرات ، یا عالمی متغیرات۔ متغیر کو ظاہر کرنے کے لئے مخصوص نحو ڈیٹا بیس مینجمنٹ سسٹم کے استعمال پر منحصر ہوسکتا ہے۔ مثال کے طور پر 'میکس_کونیکیکشنز' جیسے 'میکس_کونیکیکشنز' ؛ مذکورہ بالا مثال کے طور پر ، شو ایل کوپی کوڈ شو متغیرات۔متغیرات کا بیان \"میکس_کونشنز\" سسٹم متغیر کی موجودہ قیمت کو بازیافت کرتا ہے ، جو ڈیٹا بیس سرور کے ذریعہ اجازت دی جانے والی بیک وقت رابطوں کی زیادہ سے زیادہ تعداد کا تعین کرتا ہے۔ خلاصہ کرنے کے لئے ، شو گرانٹ کا بیان صارف یا کردار کو دیئے گئے مراعات کے بارے میں معلومات حاصل کرتا ہے ، جبکہ اس شو کو ظاہر کرتا ہے۔متغیرات کا بیان ڈیٹا بیس سسٹم میں موجودہ کنفیگریشن متغیر کے بارے میں معلومات حاصل کرتا ہے۔شو گرانٹ صارف کی اجازتوں اور مراعات پر مرکوز ہے ، جبکہ شو متغیر سسٹم کی ترتیب کی ترتیبات کے بارے میں تفصیلات فراہم کرتا ہے۔"
    },
    {
        "Question": "بولین اور ٹینی انٹ ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "وضاحت بیان اور تجزیہ ٹیبل بیان دونوں ایس کیو ایل بیانات ہیں جو ڈیٹا بیس مینجمنٹ سسٹم میں سوالات اور جدولوں کے بارے میں معلومات اکٹھا کرنے کے لئے استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: وضاحت: وضاحت بیان کسی استفسار کے عمل کے منصوبے کا تجزیہ کرنے اور ظاہر کرنے کے لئے استعمال کیا جاتا ہے۔عمل درآمد ، وضاحت بیان اس بارے میں بصیرت فراہم کرتا ہے کہ ڈیٹا بیس آپٹیمائزر استفسار کو انجام دینے اور بنیادی اعداد و شمار تک رسائی حاصل کرنے کا ارادہ رکھتا ہے۔ یہ ٹیبل میں شامل ہونے ، اشاریہ کے استعمال ، رسائی کے طریقوں اور دیگر تفصیلات کے بارے میں معلومات واپس کرتا ہے جو یہ سمجھنے میں مدد کرتا ہے کہ استفسار کیسے ہوگاپھانسی دی گئی۔ وضاحت بیان کے ذریعہ فراہم کردہ مخصوص نحو اور تفصیل کی سطح ڈیٹا بیس مینجمنٹ سسٹم کے استعمال کے لحاظ سے مختلف ہوسکتی ہے۔ مثال کے طور پر: SQLCOPY Codexplain * صارفین سے منتخب کریں جہاں عمر> 30 ؛ مذکورہ بالا مثال میں ، عملدرآمد کے منصوبے کا تجزیہ کیا گیا ہے۔دیئے گئے منتخب استفسار کے لئے ، اس بارے میں تفصیلات فراہم کرنا کہ ڈیٹا بیس مخصوص حالتوں کی بنیاد پر ڈیٹا کو کس طرح بازیافت کرے گا۔ تجزیہ ٹیبل: تجزیہ ٹیبل کا بیان کسی ٹیبل کے ڈیٹا اور انڈیکس تقسیم کے بارے میں اعداد و شمار کو اپ ڈیٹ کرنے اور جمع کرنے کے لئے استعمال کیا جاتا ہے۔ جب عمل درآمد کیا گیا تو تجزیہ ٹیبلبیان ٹیبل کے ڈیٹا کی تقسیم ، کارڈنلٹی اور دیگر اعدادوشمار کی تفصیلات کے بارے میں معلومات اکٹھا کرتا ہے۔ یہ ڈیٹا بیس آپٹیمائزر کو استفسار پر عمل درآمد کے منصوبوں ، اشاریہ کے استعمال ، اور دیگر اصلاح کی حکمت عملیوں کے بارے میں باخبر فیصلے کرنے میں مدد کرتا ہے۔ تجزیہ ٹیبل کے بیان کے ذریعہ فراہم کردہ مخصوص ترکیب اور تفصیلات مختلف ہوسکتی ہیں۔ڈیٹا بیس مینجمنٹ سسٹم کے استعمال پر منحصر ہے۔ مثال کے طور پر: SQLCOPY کوڈینلیز ٹیبل صارفین ؛ مذکورہ بالا مثال میں ، تجزیہ ٹیبل بیان \"صارفین\" ٹیبل کے بارے میں اعداد و شمار اور معلومات کو اپ ڈیٹ کرتا ہے ، جس سے ڈیٹا بیس آپٹیمائزر کو اس کے خلاف بہتر فیصلے کرنے کے قابل بناتا ہے جب اس کے خلاف سوالات پر عمل درآمد کرتے ہیں۔جدول۔ خلاصہ کریں کہ ، وضاحت بیان کسی سوال کے عملدرآمد کے منصوبے کا تجزیہ اور ڈسپلے کے لئے استعمال کیا جاتا ہے ، جس سے یہ بصیرت فراہم کی جاتی ہے کہ ڈیٹا بیس استفسار کو کس طرح انجام دے گا۔دوسری طرف ، تجزیہ ٹیبل کا بیان کسی ٹیبل کے ڈیٹا اور انڈیکس تقسیم کے بارے میں اعدادوشمار کو اپ ڈیٹ کرنے اور جمع کرنے کے لئے استعمال کیا جاتا ہے ، جس سے اس ٹیبل کے خلاف سوالات پر عمل درآمد کرتے وقت ڈیٹا بیس آپٹیمائزر کو بہتر فیصلے کرنے میں مدد ملتی ہے۔وضاحت استفسار پر عمل درآمد کے منصوبوں پر مرکوز ہے ، جبکہ تجزیہ ٹیبل ٹیبل کے اعدادوشمار اور ڈیٹا کی تقسیم پر مرکوز ہے۔"
    },
    {
        "Question": "متن اور بلاب ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، ایک ٹیکسٹ ڈیٹا کی قسم اور بلاب (بائنری بڑے آبجیکٹ) ڈیٹا کی قسم مختلف مقاصد کی خدمت کرتی ہے جب بڑی مقدار میں ڈیٹا کو ذخیرہ کرنے کی بات آتی ہے: متن: ٹیکسٹ ڈیٹا کی قسم کریکٹر یا سٹرنگ ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔یہ عام طور پر بڑی مقدار میں متنی معلومات کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے جیسے متن کے پیراگراف ، دستاویزات"
    },
    {
        "Question": "فلوٹ اور ڈبل ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، فلوٹ ڈیٹا کی قسم اور ڈبل ڈیٹا کی قسم کا استعمال فلوٹنگ پوائنٹ نمبر کی نمائندگی کرنے کے لئے کیا جاتا ہے ، لیکن وہ صحت سے متعلق اور اسٹوریج کی ضروریات کے لحاظ سے مختلف ہیں: فلوٹ: فلوٹ ڈیٹا کی قسم ایک واحد صحت سے متعلق فلوٹنگ ہے۔پوائنٹ نمبراس کی نمائندگی عام طور پر میموری کے 32 بٹس کا استعمال کرتے ہوئے کی جاتی ہے ، جس کی وجہ سے اس کی اجازت ہوتی ہے کہ وہ ایک خاص سطح کی صحت سے متعلق اقدار کی ایک محدود حد کو محفوظ کرسکے۔"
    },
    {
        "Question": "بولین اور ٹینی انٹ ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، بولین یا منطقی اقدار کی نمائندگی کرنے کی بات کرنے پر ایک بولین ڈیٹا ٹائپ اور ایک ٹینی انٹ ڈیٹا ٹائپ مختلف مقاصد کی خدمت کرتا ہے: بولین: بولین ڈیٹا کی قسم منطقی اقدار کی نمائندگی کرتی ہے ، عام طور پر صحیح یا غلط۔اس کا استعمال بائنری ریاستوں یا حالات کو ذخیرہ کرنے کے لئے کیا جاتا ہے جہاں نتیجہ یا تو صحیح یا غلط ہوسکتا ہے۔بولین اقدار اکثر منطقی کارروائیوں میں استعمال ہوتے ہیں ،"
    },
    {
        "Question": "INT اور BIGINT ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، ایک INT (INTEGER) ڈیٹا کی قسم اور ایک بگینٹ ڈیٹا ٹائپ انٹیجر اقدار کی نمائندگی کرنے کے لئے استعمال کی جاتی ہے ، لیکن وہ اپنی حد اور اسٹوریج کی ضروریات کے لحاظ سے مختلف ہیں: INT (INTEGER): INT ڈیٹا ٹائپ عام طور پر نمائندگی کرتا ہے۔ایک 32 بٹ پر دستخط شدہ عددی۔یہ تقریبا -2.1 بلین سے 2.1 بلین تک (یا -2^31 سے لے کر مکمل نمبروں کو ذخیرہ کرسکتا ہے"
    },
    {
        "Question": "تاریخ اور ڈیٹ ٹائم ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، تاریخ اور اوقات کی نمائندگی کرنے کی بات کی جانے پر تاریخ کے اعداد و شمار کی قسم اور ڈیٹ ٹائم ڈیٹا کی قسم مختلف مقاصد کی خدمت کرتی ہے: تاریخ: تاریخ کے اعداد و شمار کی قسم کسی بھی وقت کی معلومات کے بغیر صرف تاریخ کے جزو کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔یہ عام طور پر YYYY-MM-DD کی شکل میں تاریخوں کی نمائندگی کرتا ہے ، جہاں YYYY سال کی نشاندہی کرتا ہے ، ایم ایم مہینے کی نمائندگی کرتا ہے ، اور ڈی ڈی اس دن کی نمائندگی کرتا ہے۔جب آپ کو مخصوص اوقات سے آزادانہ طور پر تاریخوں کے ساتھ کام کرنے کی ضرورت ہوتی ہے تو تاریخ کے اعداد و شمار کی اقسام موزوں ہوتی ہیں۔"
    },
    {
        "Question": "ایک وقت اور ٹائم اسٹیمپ ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، وقت سے متعلقہ معلومات کی نمائندگی کرنے کی بات کرنے پر ایک ٹائم ڈیٹا ٹائپ اور ٹائم اسٹیمپ ڈیٹا ٹائپ مختلف مقاصد کی خدمت کرتے ہیں: وقت: وقت کے اعداد و شمار کی قسم کسی تاریخ کے جزو کے بغیر وقت کی اقدار کی نمائندگی کرنے کے لئے استعمال کی جاتی ہے۔یہ عام طور پر دن کے ایک مخصوص وقت کی نمائندگی کرتا ہے ، جیسے گھنٹے ، منٹ اور سیکنڈ۔وقت کی اقدار"
    },
    {
        "Question": "ایک سال اور تاریخ کے ڈیٹا کی قسم کے درمیان کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، ایک سال کے اعداد و شمار کی قسم اور تاریخ کے اعداد و شمار کی قسم مختلف مقاصد کی تکمیل کرتی ہے جب عارضی معلومات کی نمائندگی کرنے کی بات آتی ہے: سال: سال کے اعداد و شمار کی قسم خاص طور پر کسی تاریخ کے صرف سال کے جزو کو ذخیرہ کرنے کے لئے تیار کی گئی ہے۔اس کا استعمال برسوں کی نمائندگی کرنے کے لئے کیا جاتا ہے جیسے چار ہندسوں کی اقدار ، جیسے '1990' ، '2023' ، یا '1776'۔سال کا ڈیٹا"
    },
    {
        "Question": "اینوم اور سیٹ ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، ایک ENUM ڈیٹا کی قسم اور ایک سیٹ ڈیٹا کی قسم پہلے سے طے شدہ اقدار کے ایک سیٹ کی نمائندگی کرنے کے لئے استعمال کی جاتی ہے ، لیکن وہ اپنے استعمال کے لحاظ سے مختلف ہیں اور"
    },
    {
        "Question": "JSON اور XML ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "دونوں JSON (جاوا اسکرپٹ آبجیکٹ نوٹیشن) اور XML (ایکسٹینسیبل مارک اپ زبان) دونوں کو ساختی اعداد و شمار کی نمائندگی کے لئے بڑے پیمانے پر ڈیٹا فارمیٹس استعمال کیا جاتا ہے ، لیکن ان میں ترکیب ، استعمال اور خصوصیات کے لحاظ سے کچھ اہم اختلافات ہیں: نحو: JSON جاوا اسکرپٹ آبجیکٹ سے متاثر ایک نحو کا استعمال کرتا ہے۔اشارے ، اعداد و شمار کی نمائندگی کرتے ہوئے کلیدی قدر کے جوڑے اور سرنیوں کو بالترتیب گھوبگھرالی منحنی خطوط وحدانی ({}) اور مربع بریکٹ ([]) میں منسلک کرتے ہیں۔JSON اس کے جامع نحو کے ساتھ سادگی اور پڑھنے کی اہلیت پر زور دیتا ہے۔مثال: کاپی کوڈ {"
    },
    {
        "Question": "لانگ بلوب اور لانگ ٹیکسٹ ڈیٹا ٹائپ میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کی بڑی مقدار میں بالترتیب ذخیرہ کرنے کے لئے ایک لانگ بلوب ڈیٹا ٹائپ اور لانگ ٹیکسٹ ڈیٹا ٹائپ استعمال کیا جاتا ہے۔وہ اپنے استعمال اور ان کے اعداد و شمار کی قسم کے لحاظ سے مختلف ہیں جو وہ ذخیرہ کرسکتے ہیں: لانگ بلوب: لانگ بلوب ڈیٹا کی قسم بڑی بائنری اشیاء کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے (بی"
    },
    {
        "Question": "بلاب اور ٹیکسٹ ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کی بڑی مقدار میں بالترتیب ذخیرہ کرنے کے لئے بلاب ڈیٹا کی قسم اور ٹیکسٹ ڈیٹا کی قسم استعمال کی جاتی ہے۔وہ اپنے استعمال اور ڈیٹا کی قسم کے لحاظ سے مختلف ہیں"
    },
    {
        "Question": "میڈیم بلوب اور میڈیم ٹیکسٹ ڈیٹا ٹائپ میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، درمیانے درجے کی مقدار میں بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کو بالترتیب ذخیرہ کرنے کے لئے میڈیم بلوب ڈیٹا ٹائپ اور میڈیم ٹیکسٹ ڈیٹا ٹائپ کا استعمال کیا جاتا ہے۔وہ اپنے استعمال اور ان کے اعداد و شمار کی قسم کے لحاظ سے مختلف ہیں جو وہ ذخیرہ کرسکتے ہیں: میڈیم بلب: میڈیم بلب ڈیٹا کی قسم درمیانے درجے کے بائنری آبجیکٹ (بلبس) کو اسٹور کرنے کے لئے استعمال کی جاتی ہے ، جیسے تصاویر ، ویڈیوز ، آڈیو فائلیں ، یا دیگر بائنری"
    },
    {
        "Question": "چھوٹے بلب اور چھوٹے ٹیکسٹ ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کی چھوٹی سائز کی مقدار کو بالترتیب ذخیرہ کرنے کے لئے ایک سمال بلب ڈیٹا ٹائپ اور ایک چھوٹا ٹیکسٹ ڈیٹا ٹائپ استعمال کیا جاتا ہے۔وہ اپنے استعمال اور ان کے اعداد و شمار کی قسم کے لحاظ سے مختلف ہیں جو وہ ذخیرہ کرسکتے ہیں: سمال بلب: چھوٹے بلب ڈیٹا کی قسم چھوٹے سائز کے بائنری اشیاء (بلب) کو اسٹور کرنے کے لئے استعمال کی جاتی ہے ، جیسے شبیہیں ، چھوٹی تصاویر ، یا"
    },
    {
        "Question": "ٹنی بلوب اور ٹائن ٹیکسٹ ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کی بالترتیب بہت چھوٹی سائز کی مقدار میں ذخیرہ کرنے کے لئے ایک ٹنی بلب ڈیٹا ٹائپ اور ایک ٹائن ٹیکسٹ ڈیٹا ٹائپ استعمال کیا جاتا ہے۔وہ اپنے استعمال اور ان کے اعداد و شمار کی قسم کے لحاظ سے مختلف ہیں جو وہ ذخیرہ کرسکتے ہیں: ٹینی بلوب: ٹینی بلوب ڈیٹا کی قسم بہت چھوٹے سائز کے بائنری آبجیکٹ (بلبس) کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے ، اس طرح کے"
    },
    {
        "Question": "ایک میسام اور انوڈ بی اسٹوریج انجن میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل کے تناظر میں ، مائیسام اسٹوریج انجن اور `"
    },
    {
        "Question": "ایک Btree اور ہیش انڈیکس میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس انڈیکسنگ کے تناظر میں ، ایک BTREE انڈیکس اور ایک ہیش انڈیکس ڈیٹا کی بازیافت کی کارکردگی کو بہتر بنانے کے لئے استعمال کیے جانے والے اشاریہ سازی کے ڈھانچے کی دو مختلف اقسام ہیں۔وہ اپنی خصوصیات اور استعمال کے معاملات کے لحاظ سے مختلف ہیں: بی ٹی آر ای انڈیکس: ایک بری (متوازن درخت) انڈیکس ایک عام طور پر استعمال شدہ انڈیکسنگ ڈھانچہ ہے جو متوازن درختوں کی طرح ڈھانچے میں ڈیٹا کو منظم کرتا ہے ، عام طور پر بائنری ٹری یا بی+ درخت جیسے مختلف قسم کا۔انڈیکس میں موجود ڈیٹا کو ترتیب دیا گیا ہے"
    },
    {
        "Question": "عارضی اور مستقل ٹیبل میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس ٹیبلز کے تناظر میں ، ایک عارضی جدول اور مستقل (یا باقاعدہ) ٹیبل مختلف خصوصیات اور استعمال کے ساتھ دو قسم کی میزیں ہیں: عارضی جدول: ایک عارضی جدول ایک ٹیبل ہے جو ڈیٹا بیس سیشن کے اندر عارضی اسٹوریج کے لئے تخلیق اور استعمال ہوتا ہے۔یا ایک مخصوص دائرہ کار ، جیسے ایک مخصوص کنکشن یا ٹرانزیکشن ۔مسٹری ٹیبل عام طور پر عملدرآمد کے دوران انٹرمیڈیٹ یا عارضی ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتے ہیں۔"
    },
    {
        "Question": "عالمی اور مقامی عارضی ٹیبل میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس میں عارضی جدولوں کے تناظر میں ، عارضی جدولوں کی دو اقسام ہیں: عالمی عارضی میزیں اور مقامی عارضی جدولیں۔یہ اقسام ان کے دائرہ کار اور رسائ کے لحاظ سے مختلف ہیں: عالمی عارضی جدول: ایک عالمی عارضی جدول ایک عارضی جدول ہے جو ڈیٹا بیس کے اندر موجود تمام سیشنوں یا رابطوں کے لئے قابل رسائی ہے۔"
    },
    {
        "Question": "ایک چھوٹا سا ٹیبل اور ڈراپ ٹیبل کے بیان میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل میں ، ٹیبلٹ ٹیبل اور ڈراپ ٹیبل کے بیانات کو ڈیٹا بیس سے ٹیبلز کو ہٹانے کے لئے استعمال کیا جاتا ہے ، لیکن وہ اپنے طرز عمل اور ان کے ڈیٹا اور ٹیبل ڈھانچے پر پڑنے والے اثرات میں مختلف ہیں: ٹرنکیٹ ٹیبل: ٹرنکیٹ ٹیبل کا بیان سب کو جلدی سے دور کرنے کے لئے استعمال کیا جاتا ہے۔ایک میز سے قطاریں ، اس کے ڈھانچے کو برقرار رکھتے ہوئے ٹیبل کو مؤثر طریقے سے خالی کرتے ہوئے۔ جب آپ اس پر عملدرآمد کرتے ہیں"
    },
    {
        "Question": "جہاں شق اور ایک شق کی شق کے درمیان فرق ہے؟",
        "Answer": "ایس کیو ایل میں ، جہاں شق اور ہونے والی شق کو کسی استفسار میں ڈیٹا کو فلٹر کرنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ استفسار کے مختلف حصوں پر کام کرتے ہیں اور مختلف مقاصد کی خدمت کرتے ہیں: جہاں شق: جہاں شق کو منتخب ، اپ ڈیٹ ، یا حذف کرنے والے بیان میں استعمال کیا جاتا ہے۔قطاروں کی بنیاد پر فلٹر کرنے کے لئے"
    },
    {
        "Question": "کسی گروپ کے ذریعہ اور ایک الگ بیان میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل میں ، گروپ بائی شق اور الگ مطلوبہ الفاظ دونوں کو نتائج کے سیٹ میں ڈپلیکیٹ اقدار کو ختم کرنے کے لئے استعمال کیا جاتا ہے ، لیکن ان کے مختلف مقاصد ہیں اور مختلف طریقوں سے کام کرتے ہیں: گروپ برائے شق: شق کے ذریعہ گروپ کو منتخب بیان میں استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "اندرونی شمولیت اور بائیں بازو میں شامل ہونے میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل میں ، ایک اندرونی شمولیت اور بائیں بازو میں شامل ہونے والی دو قسمیں شامل ہیں جو ایک سے زیادہ جدولوں سے ڈیٹا کو یکجا کرنے کے لئے استعمال ہوتی ہیں ، لیکن وہ اس میں مختلف ہیں کہ وہ جوائن ٹیبلز کے مابین بے مثال قطار کو کس طرح سنبھالتے ہیں: اندرونی شمولدونوں جدولوں میں مماثل اقدار جو مخصوص جوائن کی حالت کی بنیاد پر شامل ہو رہے ہیں۔ جب آپ اندرونی شمولیت کو انجام دیتے ہیں تو ، نتیجہ"
    },
    {
        "Question": "بیرونی شمولیت اور صحیح شمولیت میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل میں ، ایک \"بیرونی شمولیت\" ایک عام اصطلاح ہے جس میں دونوں \"بائیں بیرونی شمولیت\" اور \"دائیں بیرونی شمولیت\" شامل ہیں ، جو بیرونی شامل ہونے کی مخصوص قسم ہیں۔آئیے بیرونی شمولیت اور دائیں جوائن کے مابین اختلافات پر تبادلہ خیال کریں: بیرونی شمولیت: ایک بیرونی شمولیت ایک ٹیبل سے تمام قطاریں لوٹاتا ہے اور جوائن کی حالت کی بنیاد پر دوسرے ٹیبل (زبانیں) سے ملاپ کی قطاریں۔اس میں بے مثال قطاریں شامل ہیں"
    },
    {
        "Question": "یونین اور یونین کے تمام بیان میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل میں ، یونین اور یونین دونوں تمام بیانات کو ایک سے زیادہ منتخب سوالات کے نتائج کے سیٹ کو ایک ہی نتیجہ سیٹ میں جوڑنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ اس میں مختلف ہیں کہ وہ ڈپلیکیٹ قطار کو کس طرح سنبھالتے ہیں: یونین: یونین کا بیان نتائج کے نتائج کو یکجا کرنے کے لئے استعمال کیا جاتا ہے۔ایک ہی نتیجہ سیٹ میں دو یا دو سے زیادہ منتخب سوالاتنتیجہ میں صرف انوکھی قطاریں شامل ہیں"
    },
    {
        "Question": "ایک گنتی اور رقم کے بیان میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل میں ، اعداد و شمار پر حساب کتاب کرنے کے لئے گنتی اور رقم کے بیانات کا استعمال کیا جاتا ہے ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: گنتی: گنتی کا بیان قطاروں کی تعداد کو واپس کرنے کے لئے استعمال کیا جاتا ہے جو کسی مخصوص حالت سے ملتے ہیں یا کسی ٹیبل میں موجود ہوتے ہیں۔ جب آپ استعمال کرتے ہیں۔گنتی ، اس میں قطاروں کی تعداد کا شمار ہوتا ہے جو مخصوص حالت کو پورا کرتی ہے یا کسی ٹیبل میں قطاروں کی کل تعداد کو پورا کرتی ہے اگر کوئی شرط نہیں ہے۔"
    },
    {
        "Question": "زیادہ سے زیادہ اور ایک منٹ کے بیان میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، ایک INT (INTEGER) ڈیٹا ٹائپ اور ایک ڈیٹ ٹائم ڈیٹا کی قسم مختلف مقاصد کی خدمت کرتی ہے: INT (INTEGER): یہ کسی جزوی جز کے بغیر پوری تعداد کی نمائندگی کرتا ہے۔عام طور پر ، یہ عددی اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے جس میں عین مطابق ٹائم اسٹیمپ یا تاریخ کی معلومات کی ضرورت نہیں ہوتی ہے۔INT کو مقدار ، IDs ، یا کسی بھی دوسری عددی اقدار کی نمائندگی کرنے کے لئے استعمال کیا جاسکتا ہے جس کی کوئی خاص اہمیت نہیں ہے۔مثال کے طور پر ، یہ 1 ، 2 ، 3 ، -10 ، 100 ، وغیرہ جیسے قدروں کو ذخیرہ کرسکتا ہے۔ تاریخ اور وقت (تاریخ اور وقت): یہ خاص طور پر تاریخ اور وقت کی معلومات کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، جو وقت کے ایک خاص نقطہ کی نمائندگی کرتا ہے۔تاریخ کے اعداد و شمار کی قسم کا استعمال عارضی ڈیٹا کو حاصل کرنے اور ان میں جوڑ توڑ کے لئے کیا جاتا ہے ، بشمول تاریخوں ، اوقات ، یا دونوں کے امتزاج سمیت۔یہ سال ، مہینہ ، دن ، گھنٹہ ، منٹ ، اور دوسرا جیسے معلومات کو ذخیرہ کرنے کی اجازت دیتا ہے۔ڈیٹ ٹائم ڈیٹا کی قسم کے ساتھ ، آپ مختلف آپریشنز جیسے تاریخ ریاضی ، موازنہ ، فارمیٹنگ ، اور مخصوص اجزاء کو نکالنے کے لئے انجام دے سکتے ہیں۔مثال کے طور پر ، یہ اقدار کو ذخیرہ کرسکتا ہے جیسے '2023-06-23 12: 30: 00: 00'.in خلاصہ ، بنیادی فرق یہ ہے کہ INT عددی اقدار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ ڈیٹ ٹائم وقت میں مخصوص پوائنٹس کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے ، جس میں دونوں کو شامل کیا جاتا ہے ، جس میں دونوں کو شامل کیا جاتا ہے۔تاریخ اور وقت کی معلومات۔"
    },
    {
        "Question": "کسی آرڈر کے ذریعہ اور حد کے بیان میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، ایک ٹیکسٹ ڈیٹا کی قسم اور بلاب (بائنری بڑے آبجیکٹ) ڈیٹا کی قسم مختلف مقاصد کی خدمت کرتی ہے جب بڑی مقدار میں ڈیٹا کو ذخیرہ کرنے کی بات آتی ہے: متن: ٹیکسٹ ڈیٹا کی قسم کریکٹر یا سٹرنگ ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔یہ عام طور پر متن کی معلومات کی بڑی مقدار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے جیسے متن کے پیراگراف ، دستاویزات ، یا کسی بھی دوسرے متن پر مبنی مواد۔متن کے اعداد و شمار کی اقسام میں عام طور پر پہلے سے طے شدہ کردار کی حد ہوتی ہے یا ڈیٹا بیس سسٹم کے ذریعہ زیادہ سے زیادہ سائز کی وضاحت کی جاتی ہے۔وہ کردار پر مبنی کارروائیوں کی حمایت کرتے ہیں جیسے سٹرنگ ہیرا پھیری ، تلاش اور چھانٹ رہا ہے۔متن کے اعداد و شمار کی مثالوں میں ایک بلاگ پوسٹ ، ایک مضمون ، یا کسی مصنوع کی تفصیل شامل ہے۔ بلوب: بلب ڈیٹا کی قسم بائنری ڈیٹا کو اسٹور کرنے کے لئے ڈیزائن کی گئی ہے ، جو کسی بھی قسم کے ڈیٹا کی نمائندگی کرسکتی ہے ، جس میں تصاویر ، آڈیو فائلیں ، ویڈیو فائلیں ، یا کسی اور کو شامل کیا جاسکتا ہے۔غیر متنوع مواد۔بلب ڈیٹا کی اقسام عام طور پر استعمال کی جاتی ہیں جب آپ کو کچے بائنری ڈیٹا کو سنبھالنے کی ضرورت ہوتی ہے جس میں کردار پر مبنی کارروائیوں کی ضرورت نہیں ہوتی ہے۔وہ کسی بھی تشریح یا ترمیم کے بغیر اس کے اصل بائنری فارمیٹ میں ڈیٹا کو ذخیرہ کرنے اور بازیافت کرنے کے اہل ہیں۔بلاب ڈیٹا کی مثالوں میں ایک تصویری فائل ، پی ڈی ایف دستاویز ، یا صوتی ریکارڈنگ شامل ہے۔ متن اور بلاب ڈیٹا کی اقسام کے مابین بنیادی فرق یہ ہے کہ متن خاص طور پر کردار پر مبنی متنی اعداد و شمار کے لئے ہے ، جبکہ بلاب بائنری ڈیٹا کے لئے ہے ، جو کسی بھی نمائندگی کرسکتا ہے۔غیر متن سے متعلق معلومات کی قسم۔"
    },
    {
        "Question": "بولین اور ورچر ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، فلوٹ ڈیٹا کی قسم اور ڈبل ڈیٹا کی قسم کا استعمال فلوٹنگ پوائنٹ نمبر کی نمائندگی کرنے کے لئے کیا جاتا ہے ، لیکن وہ صحت سے متعلق اور اسٹوریج کی ضروریات کے لحاظ سے مختلف ہیں: فلوٹ: فلوٹ ڈیٹا کی قسم ایک واحد صحت سے متعلق فلوٹنگ ہے۔پوائنٹ نمبراس کی نمائندگی عام طور پر میموری کے 32 بٹس کا استعمال کرتے ہوئے کی جاتی ہے ، جس کی وجہ سے یہ ایک خاص سطح کی صحت سے متعلق اقدار کی ایک محدود حد کو ذخیرہ کرنے کی اجازت دیتا ہے۔فلوٹ ویلیو کی صحت سے متعلق تقریبا 7 7 اعشاریہ ہندسے ہیں۔فلوٹ زیادہ تر عمومی مقصد کے فلوٹنگ پوائنٹ کے حساب کے لئے موزوں ہے جہاں صحت سے متعلق اعلی ڈگری کی ضرورت نہیں ہے۔فلوٹ اقدار کی مثالوں میں 3.14 ، -0.5 ، یا 10000.0. ڈبل شامل ہیں: ڈبل ڈیٹا کی قسم ڈبل صحت سے متعلق فلوٹنگ پوائنٹ نمبر ہے۔میموری کے 64 بٹس کا استعمال کرتے ہوئے اس کی نمائندگی کی جاتی ہے ، جو فلوٹ کے مقابلے میں اعلی صحت سے متعلق فراہم کرتی ہے۔ڈبل ویلیو کی صحت سے متعلق تقریبا 15 15 اعشاریہ ہندسے ہیں۔ڈبل اکثر استعمال کیا جاتا ہے جب صحت سے متعلق اعلی سطح کی ضرورت ہوتی ہے ، جیسے سائنسی حساب ، مالی درخواستوں ، یا ایسے حالات میں جہاں درستگی ضروری ہے۔ڈبل اقدار کی مثالوں میں 3.14159 ، -0.577 ، یا 100000.0.0.in کا خلاصہ شامل ہے ، فلوٹ اور ڈبل ڈیٹا کی اقسام کے درمیان بنیادی فرق صحت سے متعلق اور اسٹوریج کی ضروریات کی سطح ہے۔فلوٹ 32 بٹس کا استعمال کرتا ہے اور اس کی کم صحت سے متعلق 7 اعشاریہ ہندسوں کی کم صحت سے متعلق ہے ، جبکہ ڈبل 64 بٹس استعمال کرتا ہے اور تقریبا 15 15 اعشاریہ ہندسوں کی اعلی صحت سے متعلق پیش کرتا ہے۔ان کے درمیان انتخاب درخواست کی مخصوص ضروریات اور صحت سے متعلق مطلوبہ سطح پر منحصر ہے۔"
    },
    {
        "Question": "INT اور ڈیٹ ٹائم ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، بولین یا منطقی اقدار کی نمائندگی کرنے کی بات کرنے پر ایک بولین ڈیٹا ٹائپ اور ایک ٹینی انٹ ڈیٹا ٹائپ مختلف مقاصد کی خدمت کرتا ہے: بولین: بولین ڈیٹا کی قسم منطقی اقدار کی نمائندگی کرتی ہے ، عام طور پر صحیح یا غلط۔اس کا استعمال بائنری ریاستوں یا حالات کو ذخیرہ کرنے کے لئے کیا جاتا ہے جہاں نتیجہ یا تو صحیح یا غلط ہوسکتا ہے۔بولین اقدار اکثر منطقی کارروائیوں ، مشروط بیانات اور موازنہ میں استعمال ہوتے ہیں۔کچھ پروگرامنگ زبانوں میں ، بولین کی نمائندگی دوسرے مطلوبہ الفاظ جیسے بول یا بٹ جیسے بھی کی جاسکتی ہے۔بولین اقدار کی مثالوں میں سچ اور غلط شامل ہیں۔ ٹینیئنٹ: دوسری طرف ، ٹائننٹ ڈیٹا کی قسم ، ایک 8 بٹ انٹیجر ڈیٹا ٹائپ ہے جو -128 سے 127 (یا اگر دستخط شدہ ہے) تک کی عددی اقدار کو -128 سے 127 تک محفوظ رکھ سکتی ہے۔اگرچہ ٹائنینٹ بنیادی طور پر چھوٹی انٹیجر اقدار کو ذخیرہ کرنے کے لئے ڈیزائن کیا گیا ہے ، لیکن یہ اکثر بولین اقدار کی نمائندگی کرنے کے لئے بھی استعمال ہوتا ہے۔روایتی طور پر ، 0 کو غلط سمجھا جاتا ہے ، اور کسی بھی غیر صفر کی قیمت کو سچ سمجھا جاتا ہے۔لہذا ، عملی طور پر ، ٹنیینٹ کو 0 اور سچے کے لئے 1 تفویض کرکے بولین اقدار کی تقلید کے لئے استعمال کیا جاسکتا ہے۔یہ عددی ہیرا پھیری کے لحاظ سے زیادہ لچک پیش کرتا ہے اور اگر ضرورت ہو تو ریاضی کی کارروائیوں میں استعمال کیا جاسکتا ہے۔ خلاصہ میں ، بولین اور ٹنیینٹ ڈیٹا کی اقسام کے درمیان بنیادی فرق یہ ہے کہ بولین خاص طور پر منطقی اقدار (صحیح یا غلط) کی نمائندگی کرنے کے لئے ڈیزائن کیا گیا ہے ، جبکہ ٹائننٹ ہے۔ایک چھوٹی سی انٹیجر ڈیٹا ٹائپ جو کنونشن کے ذریعہ بولین اقدار کی نمائندگی کرنے کے لئے استعمال کی جاسکتی ہے (عام طور پر 0 کو غلط اور غیر صفر اقدار کے لئے سچ کے لئے استعمال کرتے ہیں)۔ان کے درمیان انتخاب پروگرامنگ زبان کی مخصوص ضروریات یا استعمال ہونے والے ڈیٹا بیس سسٹم پر منحصر ہے۔"
    },
    {
        "Question": "متن اور بلاب ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، ایک INT (INTEGER) ڈیٹا کی قسم اور ایک بگینٹ ڈیٹا ٹائپ انٹیجر اقدار کی نمائندگی کرنے کے لئے استعمال کی جاتی ہے ، لیکن وہ اپنی حد اور اسٹوریج کی ضروریات کے لحاظ سے مختلف ہیں: INT (INTEGER): INT ڈیٹا ٹائپ عام طور پر نمائندگی کرتا ہے۔ایک 32 بٹ پر دستخط شدہ عددی۔یہ تقریبا -2.1 بلین سے 2.1 بلین (یا -2^31 سے 2^31 -1) تک کی پوری تعداد کو محفوظ کرسکتا ہے۔INT عام طور پر اعتدال پسند حدود میں عددی اقدار کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے۔یہ حد اور اسٹوریج کی کارکردگی کے مابین ایک توازن پیش کرتا ہے۔INT اقدار کی مثالوں میں -100 ، 0 ، 42 ، یا 1000.bigint: دوسری طرف ، بگینٹ ڈیٹا کی قسم ، بڑی عددی اقدار کو ذخیرہ کرنے کے لئے ڈیزائن کی گئی ہے۔یہ عام طور پر ایک 64 بٹ پر دستخط شدہ عددی کی نمائندگی کرتا ہے ، جس کی مدد سے اس میں تقریبا -9.2 کوئنٹیلین سے لے کر 9.2 کوئنٹیلین (یا -2^63 سے 2^63 -1) کی پوری تعداد موجود ہے۔جب آپ کو انٹیجر اقدار کو سنبھالنے کی ضرورت ہوتی ہے جو INT ڈیٹا ٹائپ کی حد سے تجاوز کرتے ہو تو بگنٹ کا استعمال کیا جاتا ہے۔یہ ایک بہت بڑی رینج مہیا کرتا ہے لیکن اس میں زیادہ اسٹوریج کی جگہ کی ضرورت ہوتی ہے۔بڑی اقدار کی مثالوں میں -100000000000000 ، 0 ، 123456789 ، یا 100000000000000.in کا خلاصہ شامل ہے ، INT اور BIGINT ڈیٹا کی اقسام کے درمیان بنیادی فرق ان کی حد اور اسٹوریج کی ضروریات ہے۔INT ایک اعتدال پسند حد کے ساتھ 32 بٹ پر دستخط شدہ عدد کی نمائندگی کرتا ہے ، جبکہ بگینٹ ایک 64 بٹ پر دستخط شدہ عددی کی نمائندگی کرتا ہے جس میں بہت بڑی رینج ہوتی ہے۔ان کے درمیان انتخاب درخواست کی مخصوص ضروریات اور عددی اقدار کی وسعت پر منحصر ہے جسے ذخیرہ کرنے کی ضرورت ہے۔"
    },
    {
        "Question": "فلوٹ اور ڈبل ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، تاریخ اور اوقات کی نمائندگی کرنے کی بات کی جانے پر تاریخ کے اعداد و شمار کی قسم اور ڈیٹ ٹائم ڈیٹا کی قسم مختلف مقاصد کی خدمت کرتی ہے: تاریخ: تاریخ کے اعداد و شمار کی قسم کسی بھی وقت کی معلومات کے بغیر صرف تاریخ کے جزو کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔یہ عام طور پر YYYY-MM-DD کی شکل میں تاریخوں کی نمائندگی کرتا ہے ، جہاں YYYY سال کی نشاندہی کرتا ہے ، ایم ایم مہینے کی نمائندگی کرتا ہے ، اور ڈی ڈی اس دن کی نمائندگی کرتا ہے۔جب آپ کو مخصوص اوقات سے آزادانہ طور پر تاریخوں کے ساتھ کام کرنے کی ضرورت ہوتی ہے تو تاریخ کے اعداد و شمار کی اقسام موزوں ہوتی ہیں۔وہ تاریخ کے موازنہ ، تاریخ ریاضی ، اور تاریخ کی شکل سازی جیسے کاموں کی اجازت دیتے ہیں۔تاریخ کی اقدار کی مثالوں میں '2023-06-23' ، '1990-01-01' ، یا '1776-07-04'.datime شامل ہیں: دوسری طرف ، ڈیٹ ٹائم ڈیٹا کی قسم تاریخ اور وقت دونوں کو ذخیرہ کرنے کے لئے ڈیزائن کی گئی ہے۔معلومات.یہ وقت میں ایک خاص نقطہ کی نمائندگی کرتا ہے جس میں سیکنڈ تک صحت سے متعلق ہوتا ہے۔ڈیٹ ٹائم اقدار کا فارمیٹ عام طور پر YYYY-MM-DD HH: MM: SS ہوتا ہے ، جہاں اضافی HH گھنٹہ کی نمائندگی کرتا ہے (24 گھنٹے کی شکل میں) ، ایم ایم منٹ کی نمائندگی کرتا ہے ، اور ایس ایس دوسرے کی نمائندگی کرتا ہے۔جب آپ کو تاریخوں اور اوقات دونوں کے ساتھ مل کر کام کرنے کی ضرورت ہوتی ہے تو ڈیٹ ٹائم ڈیٹا کی اقسام مفید ہیں۔وہ تاریخ اور وقت کے حساب کتاب ، موازنہ اور فارمیٹنگ جیسے کاموں کی اجازت دیتے ہیں۔ڈیٹ ٹائم اقدار کی مثالوں میں '2023-06-23 12:30:00' ، '1990-01-01 08:15:30' ، یا '2022-12-31 23: 59: 59'.in کا خلاصہ شامل ہے۔تاریخ اور ڈیٹ ٹائم ڈیٹا کی اقسام کے درمیان فرق یہ ہے کہ تاریخ کسی بھی وقت کی معلومات کے بغیر ، تاریخ کے جزو کی نمائندگی کرتی ہے ، جبکہ ڈیٹ ٹائم تاریخ اور وقت دونوں اجزاء کے ساتھ وقت میں ایک خاص نقطہ کی نمائندگی کرتا ہے۔ان کے درمیان انتخاب آپ کی درخواست کی مخصوص ضروریات پر منحصر ہے اور چاہے آپ کو صرف تاریخوں کے ساتھ کام کرنے کی ضرورت ہے یا دونوں تاریخوں اور اوقات۔"
    },
    {
        "Question": "اعشاریہ اور عددی اعداد و شمار کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، وقت سے متعلقہ معلومات کی نمائندگی کرنے کی بات کرنے پر ایک ٹائم ڈیٹا ٹائپ اور ٹائم اسٹیمپ ڈیٹا ٹائپ مختلف مقاصد کی خدمت کرتے ہیں: وقت: وقت کے اعداد و شمار کی قسم کسی تاریخ کے جزو کے بغیر وقت کی اقدار کی نمائندگی کرنے کے لئے استعمال کی جاتی ہے۔یہ عام طور پر دن کے ایک مخصوص وقت کی نمائندگی کرتا ہے ، جیسے گھنٹے ، منٹ اور سیکنڈ۔وقت کی اقدار کو HH: MM: SS جیسے فارمیٹ میں محفوظ کیا جاسکتا ہے ، جہاں HH گھنٹے کی نمائندگی کرتا ہے (24 گھنٹے کی شکل میں) ، ایم ایم منٹ کی نمائندگی کرتا ہے ، اور ایس ایس دوسرے کی نمائندگی کرتا ہے۔وقت کے اعداد و شمار کی اقسام مناسب ہیں جب آپ کو تاریخوں سے آزادانہ طور پر وقت کی اقدار کے ساتھ کام کرنے کی ضرورت ہوتی ہے۔وہ وقت کے حساب کتاب ، وقت کی شکل سازی ، اور وقت کی موازنہ جیسے کاموں کی اجازت دیتے ہیں۔وقت کی اقدار کی مثالوں میں '12: 30: 00 '، '08: 15: 30' ، یا '23: 59: 59'.timestamp: ٹائم اسٹیمپ ڈیٹا کی قسم وقت میں ایک خاص نقطہ کی نمائندگی کرتی ہے ، جس میں تاریخ اور وقت دونوں اجزاء شامل ہیں۔اس میں عام طور پر سال ، مہینہ ، دن ، گھنٹہ ، منٹ اور دوسرا شامل ہوتا ہے۔ٹائم اسٹیمپ اقدار کا فارمیٹ اکثر YYYY-MM-DD HH: MM: SS ہوتا ہے ، جہاں اضافی HH گھنٹہ کی نمائندگی کرتا ہے (24 گھنٹے کی شکل میں) ، ایم ایم منٹ کی نمائندگی کرتا ہے ، اور ایس ایس دوسرے کی نمائندگی کرتا ہے۔ٹائم اسٹیمپ ڈیٹا کی اقسام کا استعمال اس وقت کیا جاتا ہے جب آپ کو ایک عین مطابق لمحے پر قبضہ کرتے ہوئے ، تاریخ اور وقت کے ساتھ مل کر کام کرنے کی ضرورت ہوتی ہے۔وہ تاریخ اور وقت کے حساب کتاب ، موازنہ ، فارمیٹنگ ، اور مخصوص اجزاء کو نکالنے جیسے کاموں کی اجازت دیتے ہیں۔ٹائم اسٹیمپ اقدار کی مثالوں میں '2023-06-23 12:30:00' ، '1990-01-01 08:15:30' ، یا '2022-12-31 23: 59: 59'.in کا خلاصہ شامل ہے۔وقت اور ٹائم اسٹیمپ ڈیٹا کی اقسام کے درمیان فرق یہ ہے کہ وقت کسی تاریخ کے جزو کے بغیر وقت کی اقدار کی نمائندگی کرتا ہے ، جبکہ ٹائم اسٹیمپ وقت اور وقت کے دونوں اجزاء کے ساتھ وقت میں ایک خاص نقطہ کی نمائندگی کرتا ہے۔ان کے درمیان انتخاب آپ کی درخواست کی مخصوص ضروریات پر منحصر ہے اور چاہے آپ کو صرف وقت کے ساتھ کام کرنے کی ضرورت ہے یا دونوں تاریخ اور وقت ایک ساتھ مل کر۔"
    },
    {
        "Question": "چار اور ورچر ڈیٹا کی قسم میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، ایک سال کے اعداد و شمار کی قسم اور تاریخ کے اعداد و شمار کی قسم مختلف مقاصد کی تکمیل کرتی ہے جب عارضی معلومات کی نمائندگی کرنے کی بات آتی ہے: سال: سال کے اعداد و شمار کی قسم خاص طور پر کسی تاریخ کے صرف سال کے جزو کو ذخیرہ کرنے کے لئے تیار کی گئی ہے۔اس کا استعمال برسوں کی نمائندگی کرنے کے لئے کیا جاتا ہے جیسے چار ہندسوں کی اقدار ، جیسے '1990' ، '2023' ، یا '1776'۔سال کے اعداد و شمار کی اقسام عام طور پر کسی مہینے یا دن کے اجزاء کے بغیر صرف سال کی معلومات کو محفوظ کرتی ہیں۔وہ عام طور پر ان حالات میں استعمال ہوتے ہیں جہاں آپ کو مخصوص تاریخوں سے آزادانہ طور پر سال کی اقدار کو ذخیرہ کرنے اور جوڑ توڑ کرنے کی ضرورت ہوتی ہے۔سال کی اقدار کی مثالوں میں '2023' ، '1990' ، یا '1776'.date شامل ہیں: دوسری طرف ، تاریخ کے اعداد و شمار کی قسم ، سال ، مہینہ اور دن کے اجزاء سمیت مکمل تاریخوں کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔یہ ایک مخصوص کیلنڈر کی تاریخ کی نمائندگی کرتا ہے۔تاریخ کی اقدار عام طور پر 'Yyyy-mm-DD' جیسے فارمیٹ میں محفوظ کی جاتی ہیں ، جہاں 'Yyyy' سال کی نشاندہی کرتا ہے ، 'ایم ایم' مہینے کی نمائندگی کرتا ہے ، اور 'ڈی ڈی' دن کی نمائندگی کرتا ہے۔تاریخ کے اعداد و شمار کی اقسام کو تاریخ کے موازنہ ، ریاضی ، فارمیٹنگ ، اور مخصوص اجزاء کی کھوج جیسے کاموں کی اجازت دیتا ہے۔تاریخ کی اقدار کی مثالوں میں '2023-06-23' ، '1990-01-01' ، یا '1776-07-04'.in کا خلاصہ شامل ہے ، سال اور تاریخ کے اعداد و شمار کی اقسام کے درمیان بنیادی فرق صرف سال صرف سال ہے۔تاریخ کا جزو ، جبکہ تاریخ سال ، مہینہ اور دن کے اجزاء کے ساتھ ایک مکمل تاریخ کی نمائندگی کرتی ہے۔ان کے درمیان انتخاب آپ کی درخواست کی مخصوص ضروریات پر منحصر ہے اور چاہے آپ کو صرف سال کی اقدار کے ساتھ کام کرنے کی ضرورت ہو یا تاریخوں کو مکمل کریں۔"
    },
    {
        "Question": "بنیادی کلید اور ایک انوکھی کلید میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، پہلے سے طے شدہ اقدار کے ایک سیٹ کی نمائندگی کرنے کے لئے ایک اینم ڈیٹا ٹائپ اور ایک سیٹ ڈیٹا کی قسم کا استعمال کیا جاتا ہے ، لیکن وہ اپنے استعمال اور لچک کے لحاظ سے مختلف ہیں: ENUM: ENUM ڈیٹا کی قسم مجرد اقدار کے ایک سیٹ کی نمائندگی کرتی ہے جس کی وضاحت کی گئی ہے۔ٹیبل تخلیق کے دوران۔یہ آپ کو ممکنہ اقدار کی فہرست کی وضاحت کرنے کی اجازت دیتا ہے ، اور اینوم ڈیٹا ٹائپ کا ہر کالم ان پہلے سے طے شدہ اقدار میں سے کسی ایک کو اسٹور کرسکتا ہے۔ENUM اقدار کو عام طور پر ڈور یا عدد کے طور پر پیش کیا جاتا ہے۔جب آپ اینوم کالم کی وضاحت کرتے ہیں تو ، آپ واضح طور پر اجازت شدہ اقدار کی فہرست دیتے ہیں۔انوم اقدار کی مثالیں 'سرخ' ، 'سبز' ، 'نیلے' رنگوں یا 'ایڈمن' ، 'صارف' ، 'مہمان' کے لئے صارف کے کردار کے لئے ہوسکتی ہیں۔ اینوم کے استعمال کا فائدہ یہ ہے کہ یہ اس پر پابندی لگا کر ڈیٹا کی سالمیت کو یقینی بناتا ہےکالم صرف ایک مخصوص اقدار کو قبول کرنے کے لئے۔تاہم ، خرابی یہ ہے کہ پہلے سے طے شدہ اقدار کو شامل کرنے یا اس میں ترمیم کرنے کے لئے ٹیبل ڈھانچے میں ردوبدل کی ضرورت ہوتی ہے ، جو بوجھل ہوسکتا ہے۔ سیٹ: دوسری طرف ، سیٹ ڈیٹا کی قسم مجرد اقدار کے ایک سیٹ کی نمائندگی کرتی ہے جہاں ایک ساتھ متعدد اقدار کا انتخاب کیا جاسکتا ہے۔یہ آپ کو ممکنہ اقدار کی فہرست کی وضاحت کرنے کی اجازت دیتا ہے ، اور سیٹ ڈیٹا ٹائپ کا ہر کالم ان میں سے ایک یا زیادہ سے زیادہ اقدار کو ذخیرہ کرسکتا ہے۔سیٹ اقدار کو عام طور پر ڈور یا عدد کے طور پر پیش کیا جاتا ہے۔جب آپ کسی سیٹ کالم کی وضاحت کرتے ہیں تو ، آپ واضح طور پر کسی ENUM کی طرح کی اجازت شدہ اقدار کی فہرست دیتے ہیں۔سیٹ ویلیو کی مثالیں 'پیر' ، 'بدھ' ، 'جمعہ' ہفتہ کے دن یا 'انگریزی' ، 'ہسپانوی' ، 'فرانسیسی' زبان کی ترجیحات کے لئے ہوسکتی ہیں۔ سیٹ کو استعمال کرنے کا فائدہ یہ ہے کہ یہ متعدد اقدار کی اجازت دیتا ہے۔ایک ہی کالم میں ذخیرہ کرنے کے لئے ، جو متعدد اختیارات کے ساتھ صفات کی نمائندگی کرنے کے لئے کارآمد ثابت ہوسکتا ہے۔تاہم ، اینوم کی طرح ، پہلے سے طے شدہ اقدار میں ردوبدل کے لئے ٹیبل ڈھانچے میں ردوبدل کی ضرورت ہوتی ہے۔ خلاصہ میں ، ENUM اور سیٹ ڈیٹا کی اقسام کے درمیان بنیادی فرق یہ ہے کہ ENUM ایک سیٹ سے ایک ہی پیش وضاحتی قیمت کا انتخاب کرنے کی اجازت دیتا ہے ، جبکہ سیٹ ایک یا زیادہ سے زیادہ پہلے سے طے شدہ انتخاب کی اجازت دیتا ہے۔بیک وقت اقدار۔ان کے درمیان انتخاب آپ کی درخواست کی مخصوص ضروریات اور اس ڈیٹا کی نوعیت پر منحصر ہے جس کی آپ کو نمائندگی کرنے کی ضرورت ہے۔"
    },
    {
        "Question": "غیر ملکی کلید اور چیک رکاوٹ میں کیا فرق ہے؟",
        "Answer": "دونوں JSON (جاوا اسکرپٹ آبجیکٹ نوٹیشن) اور XML (ایکسٹینسیبل مارک اپ زبان) دونوں کو ساختی اعداد و شمار کی نمائندگی کے لئے بڑے پیمانے پر ڈیٹا فارمیٹس استعمال کیا جاتا ہے ، لیکن ان میں ترکیب ، استعمال اور خصوصیات کے لحاظ سے کچھ اہم اختلافات ہیں: نحو: JSON جاوا اسکرپٹ آبجیکٹ سے متاثر ایک نحو کا استعمال کرتا ہے۔اشارے ، اعداد و شمار کی نمائندگی کرتے ہوئے کلیدی قدر کے جوڑے اور سرنیوں کو بالترتیب گھوبگھرالی منحنی خطوط وحدانی ({}) اور مربع بریکٹ ([]) میں منسلک کرتے ہیں۔JSON اس کے جامع نحو کے ساتھ سادگی اور پڑھنے کی اہلیت پر زور دیتا ہے۔مثال کے طور پر: JSONCOPY کوڈ {\"نام\": \"جان\" ، \"عمر\": 30 ، \"شہر\": \"نیو یارک\"} XML ، دوسری طرف ، ایک مارک اپ زبان کا ترکیب استعمال کرتا ہے جس میں زاویہ بریکٹ (<>) میں منسلک عناصر ہوتے ہیں۔یہ گھریلو عناصر اور صفات کو ساخت اور میٹا ڈیٹا کی وضاحت کرنے کی اجازت دیتا ہے۔JSON کے مقابلے میں XML زیادہ فعل ہوتا ہے۔مثال: پی ایچ پی کوپی کوڈ <پرسن> <name> جان </name> <agy> 30 </age> << سٹی> نیو یارک </city> </person> ڈیٹا کی نمائندگی: JSON بنیادی طور پر ہلکے وزن میں ساختی اعداد و شمار کی نمائندگی کرنے کے لئے استعمال ہوتا ہے۔اور انسانی پڑھنے کے قابل فارمیٹ۔یہ عام طور پر سسٹم ، کنفیگریشن فائلوں ، اور APIs کے مابین ڈیٹا انٹرچینج کے لئے استعمال ہوتا ہے۔دوسری طرف ، JSON کی سادگی جاوا اسکرپٹ پر مبنی ایپلی کیشنز ڈاٹ ایکس ایم ایل میں کام کرنا آسان بناتی ہے ، دوسری طرف ، ایک ورسٹائل مارک اپ زبان ہے جو پیچیدہ درجہ بندی کے ڈھانچے کی اجازت دیتی ہے اور اضافی میٹا ڈیٹا اور مخلوط مواد کے ساتھ اعداد و شمار کی نمائندگی کرنے کے لئے زیادہ لچک پیش کرتی ہے۔XML اکثر مختلف ڈومینز میں استعمال ہوتا ہے ، بشمول ویب سروسز ، دستاویز اسٹوریج ، کنفیگریشن فائلیں ، اور مختلف پلیٹ فارمز کے مابین ڈیٹا ایکسچینج۔ پارسنگ اور پروسیسنگ: JSON کو جاوا اسکرپٹ اور بہت سی دیگر پروگرامنگ زبانوں میں آبائی مدد حاصل ہے ، جس سے تجزیہ اور عمل میں آسانی ہوتی ہے۔JSON ڈیٹا کو براہ راست پروگرامنگ زبانوں میں موجود اشیاء کے لئے نقشہ بنایا جاسکتا ہے ، ڈیٹا کی ہیرا پھیری کو آسان بناتا ہے اور ایپلی کیشن لاجک ڈاٹ ایکس ایم ایل کے ساتھ انضمام ، جبکہ پروگرامنگ زبانوں اور لائبریریوں کے ذریعہ بھی اچھی طرح سے تعاون کیا جاتا ہے ، اکثر اعداد و شمار کو مؤثر طریقے سے ڈیٹا نکالنے اور اس پر کارروائی کے ل additional اضافی تجزیہ اور تبدیلی کے اقدامات کی ضرورت ہوتی ہے۔XML ڈیٹا کو عام طور پر XML پارسر اور XPath یا XSLT ٹیکنالوجیز کا استعمال کرتے ہوئے عملدرآمد کیا جاتا ہے۔ ریڈی ایبلٹی اور وربوسیٹی: JSON کو اس کے جامع ترکیب کی وجہ سے زیادہ کمپیکٹ اور پڑھنے کے قابل سمجھا جاتا ہے۔انسانوں کے لئے براہ راست سمجھنا اور کام کرنا اکثر آسان ہوتا ہے۔JSON کی سادگی بھی اس کو نحو کی غلطیوں کا شکار بناتی ہے۔یہ XML دستاویزات کو زیادہ اور زیادہ پیچیدہ بنا سکتا ہے ، لیکن اس سے اضافی میٹا ڈیٹا اور مخلوط مواد کی بھی اجازت ملتی ہے۔ خلاصہ میں ، JSON اور XML دونوں مقبول اعداد و شمار کی شکلیں ہیں ، لیکن JSON عام طور پر جاوا اسکرپٹ پر مبنی ماحول میں اس کی سادگی ، آسانی کے استعمال کے حق میں ہے۔، اور ساختی اعداد و شمار کی موثر نمائندگی۔دوسری طرف ، XML زیادہ لچک پیش کرتا ہے ، میٹا ڈیٹا کے لئے مدد کرتا ہے ، اور عام طور پر متنوع ڈومینز میں استعمال ہوتا ہے جہاں پیچیدہ درجہ بندی کے اعداد و شمار کے ڈھانچے کی ضرورت ہوتی ہے۔JSON اور XML کے مابین انتخاب مخصوص تقاضوں ، موجودہ نظاموں ، اور ماحولیاتی نظام پر منحصر ہے جس میں ڈیٹا پر کارروائی اور تبادلہ کیا جائے گا۔"
    },
    {
        "Question": "NULL اور پہلے سے طے شدہ رکاوٹ کے درمیان کیا فرق ہے؟",
        "Answer": "زیادہ تر پروگرامنگ زبانوں اور ڈیٹا بیس سسٹم میں ، بائنری ڈیٹا کی قسم اور وربری ڈیٹا کی قسم بائنری ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے ، لیکن وہ اپنی مقررہ لمبائی اور متغیر لمبائی کی خصوصیات کے لحاظ سے مختلف ہیں: بائنری: بائنری ڈیٹا کی قسم اسٹور کے لئے استعمال کی جاتی ہے۔فکسڈ لمبائی بائنری ڈیٹا۔اصل اعداد و شمار کی لمبائی سے قطع نظر ، یہ ہر قدر کے لئے بائٹس کی ایک مخصوص تعداد مختص کرتا ہے۔مثال کے طور پر ، اگر آپ بائنری (10) کالم کی وضاحت کرتے ہیں تو ، اس میں ہمیشہ 10 بائٹس اسٹوریج پر قبضہ ہوگا ، چاہے اس میں ذخیرہ شدہ اصل ڈیٹا چھوٹا ہو یا اس سے زیادہ۔بائنری ڈیٹا کی اقسام کو عام طور پر استعمال کیا جاتا ہے جب آپ کو بائنری ڈیٹا کی ایک مقررہ لمبائی کی نمائندگی کی ضرورت ہوتی ہے ، جیسے بائنری کوڈز ، فائل دستخط ، یا خام بائنری ڈیٹا۔ وربنری: دوسری طرف وربری ڈیٹا کی قسم متغیر لمبائی کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔بائنری ڈیٹایہ ذخیرہ کرنے کی اصل لمبائی کی بنیاد پر اسٹوریج مختص کرتا ہے۔مثال کے طور پر ، اگر آپ وربری (10) کالم کی وضاحت کرتے ہیں اور 5 بائٹ ویلیو اسٹور کرتے ہیں تو ، اس میں صرف 5 بائٹس اسٹوریج پر قبضہ ہوگا۔وربری ڈیٹا کی اقسام مفید ہیں جب آپ کو مختلف لمبائی کے بائنری ڈیٹا کو ذخیرہ کرنے کی ضرورت ہوتی ہے ، جیسے تصاویر ، فائلیں ، یا سیریلائزڈ اشیاءبائٹس کی ایک مخصوص تعداد ، جبکہ وربری میں متغیر لمبائی بائنری ڈیٹا اسٹور کرتا ہے ، جو ذخیرہ کرنے کی اصل لمبائی کی بنیاد پر اسٹوریج مختص کرتا ہے۔ان کے درمیان انتخاب آپ کی درخواست کی مخصوص ضروریات اور بائنری ڈیٹا کی نوعیت پر منحصر ہے جو آپ کو ذخیرہ کرنے کی ضرورت ہے۔"
    },
    {
        "Question": "ایک انوکھا اور بنیادی کلیدی رکاوٹ میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کی بڑی مقدار میں بالترتیب ذخیرہ کرنے کے لئے ایک لانگ بلوب ڈیٹا ٹائپ اور لانگ ٹیکسٹ ڈیٹا ٹائپ استعمال کیا جاتا ہے۔وہ اپنے استعمال اور ان کے اعداد و شمار کی قسم کے لحاظ سے مختلف ہیں جو وہ ذخیرہ کرسکتے ہیں: لانگ بلوب: لانگ بلوب ڈیٹا کی قسم بڑی بائنری اشیاء (بلبس) کو اسٹور کرنے کے لئے استعمال کی جاتی ہے ، جیسے تصاویر ، ویڈیوز ، آڈیو فائلیں ، یا دیگر بائنری ڈیٹا۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر 4 گیگا بائٹس یا اس سے زیادہ تک ، بہت بڑے سائز کے بائنری ڈیٹا کو اسٹور کرسکتا ہے۔لانگ بلوب کالم عام طور پر استعمال کیے جاتے ہیں جب آپ کو بغیر کسی متن کی تشریح یا ہیرا پھیری کے اس کی اصل شکل میں بائنری ڈیٹا کو ذخیرہ کرنے اور بازیافت کرنے کی ضرورت ہوتی ہے۔متن ، مضامین ، یا دستاویزات۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر 4 گیگا بائٹ یا اس سے زیادہ تک ، بہت بڑے سائز کے ٹیکسٹ ڈیٹا کو اسٹور کرسکتا ہے۔لانگ ٹیکسٹ کالم بڑی مقدار میں کردار پر مبنی ڈیٹا کو ذخیرہ کرنے کے لئے موزوں ہیں اور متن سے متعلقہ کاروائیاں انجام دینے کی صلاحیت فراہم کرتے ہیں ، جیسے ٹیکسٹ مواد کی تلاش ، اشاریہ سازی اور ہیرا پھیری۔ خلاصہ ، لانگ بلوب اور لانگ ٹیکسٹ ڈیٹا کی اقسام کے درمیان بنیادی فرق ہے۔اس لانگ بلوب کو بڑے بائنری ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ لانگ ٹیکسٹ بڑے متن کے اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے۔ان کے درمیان انتخاب کا انحصار اس قسم کے ڈیٹا پر ہے کہ آپ کو ذخیرہ کرنے کی ضرورت ہے (بائنری یا متنی) اور آپ کی درخواست کی مخصوص ضروریات۔"
    },
    {
        "Question": "چیک اور غیر ملکی کلیدی رکاوٹ میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کی بڑی مقدار میں بالترتیب ذخیرہ کرنے کے لئے بلاب ڈیٹا کی قسم اور ٹیکسٹ ڈیٹا کی قسم استعمال کی جاتی ہے۔وہ ان کے استعمال اور ان کے اعداد و شمار کی قسم کے لحاظ سے مختلف ہیں جو وہ ذخیرہ کرسکتے ہیں: بلاب: بلاب (بائنری بڑی شے) ڈیٹا کی قسم بائنری ڈیٹا کو اسٹور کرنے کے لئے استعمال کی جاتی ہے ، جیسے تصاویر ، ویڈیوز ، آڈیو فائلیں ، یا دیگر بائنری اشیاء۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر کئی گیگا بائٹ تک ، مختلف سائز کے بائنری ڈیٹا کو اسٹور کرسکتا ہے۔بلب کالم عام طور پر استعمال کیے جاتے ہیں جب آپ کو بائنری ڈیٹا کو بغیر کسی متن کی تشریح یا ہیرا پھیری کے اس کی اصل شکل میں ذخیرہ کرنے اور بازیافت کرنے کی ضرورت ہوتی ہے۔بلاب ڈیٹا کی مثالوں میں خام بائنری فائلیں یا سیریلائزڈ آبجیکٹ شامل ہوسکتے ہیں۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر کئی گیگا بائٹ تک ، کردار پر مبنی ڈیٹا کی بڑی مقدار میں ذخیرہ کرسکتا ہے۔ٹیکسٹ کالم متنی مواد کو ذخیرہ کرنے اور ان میں ہیرا پھیری کے ل suitable موزوں ہیں۔وہ متن سے متعلقہ کاروائیاں انجام دینے کی صلاحیت فراہم کرتے ہیں ، جیسے متن کے مواد کی تلاش ، اشاریہ سازی اور ہیرا پھیری۔متن کے اعداد و شمار کی مثالوں میں سادہ ٹیکسٹ دستاویزات ، HTML مارک اپ ، یا JSON Strings.in کا خلاصہ شامل ہوسکتا ہے ، بلاب اور ٹیکسٹ ڈیٹا کی اقسام کے درمیان بنیادی فرق یہ ہے کہ بلاب کو بائنری ڈیٹا کو اسٹور کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ متن کو متن کے اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان انتخاب کا انحصار اس قسم کے ڈیٹا پر ہے کہ آپ کو ذخیرہ کرنے کی ضرورت ہے (بائنری یا متنی) اور آپ کی درخواست کی مخصوص ضروریات۔"
    },
    {
        "Question": "NULL اور پہلے سے طے شدہ رکاوٹ کے درمیان کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، درمیانے درجے کی مقدار میں بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کو بالترتیب ذخیرہ کرنے کے لئے میڈیم بلوب ڈیٹا ٹائپ اور میڈیم ٹیکسٹ ڈیٹا ٹائپ کا استعمال کیا جاتا ہے۔وہ اپنے استعمال اور ان کے اعداد و شمار کی قسم کے لحاظ سے مختلف ہیں جو وہ ذخیرہ کرسکتے ہیں: میڈیم بلب: میڈیم بلب ڈیٹا کی قسم درمیانے درجے کے بائنری آبجیکٹ (بلبس) کو اسٹور کرنے کے لئے استعمال کی جاتی ہے ، جیسے تصاویر ، ویڈیوز ، آڈیو فائلیں ، یا دیگر بائنری ڈیٹا۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر 16 میگا بائٹ یا اس سے زیادہ تک درمیانے سائز کے بائنری ڈیٹا کو اسٹور کرسکتا ہے۔میڈیم بلوب کالم عام طور پر استعمال ہوتے ہیں جب آپ کو بغیر کسی متنی تشریح یا ہیرا پھیری کے درمیانے درجے کے بائنری ڈیٹا کو اس کی اصل شکل میں ذخیرہ کرنے اور بازیافت کرنے کی ضرورت ہوتی ہے۔جیسے متن ، مضامین ، یا دستاویزات کے طویل پیراگراف۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر 16 میگا بائٹ یا اس سے زیادہ تک درمیانے سائز کے ٹیکسٹ ڈیٹا کو اسٹور کرسکتا ہے۔میڈیم ٹیکسٹ کالم درمیانے درجے کے متنی مواد کو ذخیرہ کرنے اور ان میں ہیرا پھیری کے ل suitable موزوں ہیں۔وہ متن سے متعلقہ کاروائیاں انجام دینے کی صلاحیت فراہم کرتے ہیں ، جیسے ٹیکسٹ مواد کی تلاش ، اشاریہ سازی ، اور ہیرا پھیری۔ خلاصہ میں ، میڈیم بلب اور میڈیم ٹیکسٹ ڈیٹا کی اقسام کے درمیان بنیادی فرق یہ ہے کہ میڈیم بلب کو درمیانے درجے کے بائنری ڈیٹا کو اسٹور کرنے کے لئے استعمال کیا جاتا ہے ، جبکہدرمیانے درجے کے متنی اعداد و شمار کو ذخیرہ کرنے کے لئے میڈیم ٹیکسٹ استعمال کیا جاتا ہے۔ان کے درمیان انتخاب کا انحصار اس قسم کے اعداد و شمار پر ہوتا ہے جس کی آپ کو ذخیرہ کرنے کی ضرورت ہوتی ہے (بائنری یا متنی) اور آپ کی درخواست کی مخصوص سائز کی ضروریات۔"
    },
    {
        "Question": "ایک چھوٹا سا ٹیبل اور بیان سے حذف کرنے میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کی چھوٹی سائز کی مقدار کو بالترتیب ذخیرہ کرنے کے لئے ایک سمال بلب ڈیٹا ٹائپ اور ایک چھوٹا ٹیکسٹ ڈیٹا ٹائپ استعمال کیا جاتا ہے۔وہ اپنے استعمال اور ان کے اعداد و شمار کی قسم کے لحاظ سے مختلف ہیں جو وہ ذخیرہ کرسکتے ہیں: سمال بلب: چھوٹے بلب ڈیٹا کی قسم چھوٹے سائز کے بائنری اشیاء (بلبس) کو اسٹور کرنے کے لئے استعمال کی جاتی ہے ، جیسے شبیہیں ، چھوٹی تصاویر ، یا دیگر بائنری ڈیٹا۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر کچھ کلو بائٹس تک ، چھوٹے سائز کے بائنری ڈیٹا کو اسٹور کرسکتا ہے۔چھوٹے بلب کالم عام طور پر استعمال ہوتے ہیں جب آپ کو کسی بھی متنی تشریح یا ہیرا پھیری کے بغیر اس کی اصل شکل میں چھوٹے سائز کے بائنری ڈیٹا کو ذخیرہ کرنے اور بازیافت کرنے کی ضرورت ہوتی ہے۔ سمل ٹیکسٹ: دوسری طرف ، سمال ٹیکسٹ ڈیٹا کی قسم چھوٹے سائز کے متنی اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے ،جیسے مختصر تفصیل ، لیبل ، یا دوسرے چھوٹے متن کے ٹکڑوں۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر کچھ کلو بائٹس تک ، چھوٹے سائز کے ٹیکسٹ ڈیٹا کو ذخیرہ کرسکتا ہے۔چھوٹے ٹیکسٹ کالم چھوٹے سائز کے متنی مواد کو ذخیرہ کرنے اور ان میں جوڑ توڑ کے ل suitable موزوں ہیں۔وہ متن سے متعلقہ کاروائیاں انجام دینے کی صلاحیت فراہم کرتے ہیں ، جیسے ٹیکسٹ مواد کی تلاش ، اشاریہ سازی ، اور ہیرا پھیری۔ خلاصہ میں ، چھوٹے بلب اور چھوٹے ٹیکسٹ ڈیٹا کی اقسام کے درمیان بنیادی فرق یہ ہے کہ چھوٹے سائز کے بائنری ڈیٹا کو ذخیرہ کرنے کے لئے سمال بلب استعمال کیا جاتا ہے ، جبکہچھوٹے متن کو چھوٹے سائز کے متنی اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان انتخاب کا انحصار اس قسم کے اعداد و شمار پر ہوتا ہے جس کی آپ کو ذخیرہ کرنے کی ضرورت ہوتی ہے (بائنری یا متنی) اور آپ کی درخواست کی مخصوص سائز کی ضروریات۔"
    },
    {
        "Question": "تخلیق ٹیبل اور ڈراپ ٹیبل کے بیان میں کیا فرق ہے؟",
        "Answer": "زیادہ تر ڈیٹا بیس سسٹم میں ، بائنری ڈیٹا اور ٹیکسٹ ڈیٹا کی بالترتیب بہت چھوٹی سائز کی مقدار میں ذخیرہ کرنے کے لئے ایک ٹنی بلب ڈیٹا ٹائپ اور ایک ٹائن ٹیکسٹ ڈیٹا ٹائپ استعمال کیا جاتا ہے۔وہ اپنے استعمال اور ان کے اعداد و شمار کی قسم کے لحاظ سے مختلف ہیں جو وہ ذخیرہ کرسکتے ہیں: ٹنی بلب: ٹینی بلب ڈیٹا کی قسم بہت چھوٹے سائز کے بائنری اشیاء (بلبس) ، جیسے چھوٹے شبیہیں ، تھمب نیلز ، یا دیگر چھوٹے بائنری ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر کچھ بائٹس یا کچھ کلو بائٹ تک ، بہت چھوٹے سائز کے بائنری ڈیٹا کو اسٹور کرسکتا ہے۔ٹینی بلوب کالم عام طور پر استعمال ہوتے ہیں جب آپ کو بغیر کسی متنی تشریح یا ہیرا پھیری کے اس کی اصل شکل میں بہت چھوٹے سائز کے بائنری ڈیٹا کو ذخیرہ کرنے اور بازیافت کرنے کی ضرورت ہوتی ہے۔ڈیٹا ، جیسے مختصر لیبل ، مخففات ، یا دیگر چھوٹے ٹیکسٹ ٹکڑوں۔یہ مخصوص ڈیٹا بیس سسٹم پر منحصر ہے ، عام طور پر کچھ بائٹس یا کچھ کلو بائٹ تک ٹیکسٹ ڈیٹا کو اسٹور کرسکتا ہے۔ٹائن ٹیکسٹ کالم بہت چھوٹے سائز کے متنی مواد کو ذخیرہ کرنے اور ان میں جوڑ توڑ کے لئے موزوں ہیں۔وہ متن سے متعلقہ کاروائیاں انجام دینے کی صلاحیت فراہم کرتے ہیں ، جیسے ٹیکسٹ مواد کی تلاش ، اشاریہ سازی ، اور ہیرا پھیری۔ خلاصہ میں ، ٹینی بلوب اور ٹائن ٹیکسٹ ڈیٹا کی اقسام کے درمیان بنیادی فرق یہ ہے کہ ٹینی بلوب کو بہت چھوٹے سائز کے بائنری ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے ،جبکہ ٹائن ٹیکسٹ بہت چھوٹے سائز کے متنی اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ان کے درمیان انتخاب کا انحصار اس قسم کے اعداد و شمار پر ہوتا ہے جس کی آپ کو ذخیرہ کرنے کی ضرورت ہوتی ہے (بائنری یا متنی) اور آپ کی درخواست کی مخصوص سائز کی ضروریات۔"
    },
    {
        "Question": "تخلیق ڈیٹا بیس اور ڈراپ ڈیٹا بیس کے بیان میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل جیسے ڈیٹا بیس سسٹم کے تناظر میں ، میموری اسٹوریج انجن اور انوڈ بی اسٹوریج انجن ڈیٹا اسٹوریج کو سنبھالنے کے لئے دو مختلف اختیارات ہیں ، اور وہ اپنی خصوصیات اور استعمال کے معاملات کے لحاظ سے مختلف ہیں: میموری اسٹوریج انجن: نام سے جانا جاتا ہے۔ہیپ انجن کی حیثیت سے ، ڈیٹا کو بنیادی طور پر ڈسک کے بجائے میموری میں اسٹور کرتا ہے۔اس سے میموری کی میزیں تخلیق ہوتی ہیں جو سسٹم میموری میں محفوظ ہوتی ہیں۔ میموری انجن میں ذخیرہ شدہ ڈیٹا اتار چڑھاؤ ہوتا ہے اور جب ڈیٹا بیس سرور دوبارہ شروع ہوتا ہے یا کریش ہوتا ہے تو وہ کھو جاتا ہے۔یہ بنیادی طور پر عارضی یا عارضی اعداد و شمار کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے جس کو برقرار رکھنے کی ضرورت نہیں ہے۔ میموری انجن کو تیز رفتار ڈیٹا تک رسائی کے لئے جانا جاتا ہے کیونکہ یہ میموری میں مکمل طور پر کام کرتا ہے۔یہ ان منظرناموں کے لئے موزوں ہے جہاں تیزی سے پڑھنے اور لکھنے کے کام اہم ہیں ، جیسے اکثر رسائی والے ڈیٹا کیچنگ یا عارضی سیشن کے اعداد و شمار کو اسٹور کرنا۔ میموری انجن ٹرانزیکشنز ، غیر ملکی چابیاں ، یا کریش کی بازیابی جیسی خصوصیات کی حمایت نہیں کرتا ہے کیونکہ یہ اتار چڑھاؤ پر انحصار کرتا ہےڈیٹادیگر اسٹوریج انجنوں کے مقابلے میں اشاریہ سازی کے اختیارات محدود ہیں۔ انوڈ بی اسٹوریج انجن: انوڈ بی اسٹوریج انجن ایس کیو ایل میں ایک مضبوط اور وسیع پیمانے پر استعمال شدہ اسٹوریج انجن ہے ، جو اعلی کارکردگی ، وشوسنییتا ، اور ڈیٹا کی سالمیت کے لئے ڈیزائن کیا گیا ہے۔ یہ ڈسک پر ڈیٹا اسٹور کرتا ہے جس کا مجموعہ استعمال کرتے ہوئے کیا جاتا ہے۔میموری بفرز اور ڈسک پر مبنی فائلیں۔یہ تیزاب (ایٹمیٹی ، مستقل مزاجی ، تنہائی ، استحکام) کے لین دین کے لئے معاونت فراہم کرتا ہے ، اعداد و شمار میں مستقل مزاجی اور استحکام کو یقینی بنانا۔ این او این او ڈی بی قطار کی سطح پر تالا لگانے ، کثیر الشار ہم آہنگی کنٹرول (ایم وی سی سی) ، اور غیر ملکی کلیدی رکاوٹوں جیسی خصوصیات پیش کرتا ہے ، جس سے یہ مناسب ہوتا ہے۔ایسی ایپلی کیشنز جن کے لئے ٹرانزیکشنل سپورٹ اور ڈیٹا کی سالمیت کی ضرورت ہوتی ہے۔ یہ کریش کی بازیابی کے طریقہ کار فراہم کرتا ہے ، جس سے ڈیٹا بیس کو سسٹم کی ناکامی کی صورت میں ڈیٹا مستقل مزاجی کی بحالی اور برقرار رکھنے کی اجازت ملتی ہے۔ INNODB مختلف اشاریہ سازی کے اختیارات کی حمایت کرتا ہے اور خودکار ڈیڈ لاک کا پتہ لگانے ، خودکار خلائی انتظام ، اور خصوصیات فراہم کرتا ہے۔ملٹی یوزر ماحول میں بہتر کارکردگی کے لئے ہم آہنگی کنٹرول۔ خلاصہ میں ، میموری اور انوڈ بی اسٹوریج انجنوں کے درمیان بنیادی فرق ان کے ڈیٹا اسٹوریج میکانزم ، ڈیٹا کی استقامت ، اور ان کی پیش کردہ خصوصیات میں ہے۔میموری انجن عارضی اور اتار چڑھاؤ کے اعداد و شمار کے لئے موزوں ہے جو مکمل طور پر میموری میں محفوظ ہے ، تیز رفتار تک رسائی کی پیش کش کرتا ہے لیکن استحکام یا اعلی درجے کی خصوصیات کے بغیر۔دوسری طرف ، INNODB انجن ڈسک پر پائیدار اسٹوریج مہیا کرتا ہے ، لین دین کی حمایت کرتا ہے ، ڈیٹا کی سالمیت ، کریش کی بازیابی فراہم کرتا ہے ، اور اعداد و شمار کی اعلی استقامت کی ضروریات کے ساتھ عمومی مقاصد کی ایپلی کیشنز کے لئے زیادہ موزوں ہے۔"
    },
    {
        "Question": "بیک اپ ڈیٹا بیس اور بحالی ڈیٹا بیس کے بیان میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل کے تناظر میں ، مائیسم اسٹوریج انجن اور انوڈ بی اسٹوریج انجن ڈیٹا اسٹوریج کے انتظام کے ل two دو مختلف اختیارات ہیں۔ان میں خصوصیات ، کارکردگی اور ڈیٹا کی سالمیت کے لحاظ سے متعدد اختلافات ہیں: خصوصیات: مائی آئی ایس اے ایم: مائی آئی ایس اے ایم ایس کیو ایل میں ایک پرانا اسٹوریج انجن ہے۔یہ فل ٹیکسٹ سرچ انڈیکس ، ٹیبل لیول لاکنگ ، اور ڈیٹا کے آسان ڈھانچے جیسی خصوصیات کی حمایت کرتا ہے۔یہ لین دین ، غیر ملکی کلیدی رکاوٹوں ، یا کریش کی بازیابی کی حمایت نہیں کرتا ہے۔ INNODB: INNODB MYSQL میں زیادہ جدید اور وسیع پیمانے پر استعمال ہونے والا اسٹوریج انجن ہے۔یہ تیزاب (جوہری ، مستقل مزاجی ، تنہائی ، استحکام) لین دین ، قطار کی سطح پر تالا لگانے ، کریش کی بازیابی اور غیر ملکی کلیدی رکاوٹوں جیسی خصوصیات کی حمایت کرتا ہے۔یہ زیادہ سے زیادہ ڈیٹا کی سالمیت اور وشوسنییتا مہیا کرتا ہے۔ ٹرانزیکشنز: MYISAM: MYISAM لین دین کی حمایت نہیں کرتا ہے۔اس میں ٹیبل لیول لاکنگ کا استعمال کیا گیا ہے ، جس کا مطلب ہے کہ جب ایک صارف کسی ٹیبل پر لکھ رہا ہے تو ، دوسرے صارفین کو اسی ٹیبل پر پڑھنے یا لکھنے سے روک دیا جاسکتا ہے جب تک کہ تالا جاری نہیں ہوتا ہے۔ INNODB: INNODB لین دین کی حمایت کرتا ہے ، جس سے متعدد آپریشنوں کو گروپ بنانے کی اجازت ملتی ہے۔ایک ساتھ ایک یونٹ کے طور پر۔اس میں قطار کی سطح کا تالا لگا ہوا ہے ، جو متعدد صارفین کو بیک وقت ایک ہی ٹیبل میں مختلف قطاروں کو پڑھنے اور لکھنے کی اجازت دے کر بہتر ہم آہنگی فراہم کرتا ہے۔ کریش بازیافت: MYISAM: MYISAM کریش کی بازیابی کے بلٹ ان میکانزم کو نہیں فراہم کرتا ہے۔سسٹم کی ناکامی یا کریش کی صورت میں ، ڈیٹا مستقل مزاجی سے سمجھوتہ کیا جاسکتا ہے ، اور اعداد و شمار کی بازیافت کے لئے دستی مداخلت کی ضرورت پڑسکتی ہے۔ انو ڈی بی: انوڈ بی نے کریش کی بازیابی کے طریقہ کار میں بلٹ ان کیا ہے۔یہ یقینی بناتا ہے کہ نظام کی ناکامی کے بعد بھی اعداد و شمار مستقل رہے۔یہ پرعزم ڈیٹا کی وصولی اور ڈیٹا کی سالمیت کو برقرار رکھنے کے لئے ٹرانزیکشن لاگ (دوبارہ لاگ) کا استعمال کرتا ہے۔ ڈیٹا کی سالمیت: MYISAM: MYISAM غیر ملکی کلیدی رکاوٹوں کو نافذ نہیں کرتا ہے۔یہ جدولوں کے مابین تعلقات پیدا کرنے کی اجازت دیتا ہے لیکن حوالہ دیتے ہیں۔یہ متعین تعلقات کو نافذ کرتا ہے اور اعداد و شمار کی سالمیت کو برقرار رکھتا ہے۔ کارکردگی: MYISAM: MYISAM اپنی اعلی پڑھنے کی کارکردگی کے لئے جانا جاتا ہے ، خاص طور پر ایسے منظرناموں میں جو بہت زیادہ پڑھنے والے کاموں کے ساتھ ہیں۔یہ ان ایپلی کیشنز کے ل suitable موزوں ہے جس میں پڑھنے سے متعلق آپریشنز کی ضرورت ہوتی ہے ، جیسے رپورٹنگ یا ڈیٹا گودام۔ INNODB: INNODB لکھنے سے متعلق کام کے بوجھ اور ہم آہنگی پڑھنے اور لکھنے کی کارروائیوں کے ساتھ ایپلی کیشنز کے لئے بہتر کارکردگی فراہم کرتا ہے۔اس کی قطار کی سطح پر تالا لگانے اور لین دین کی صلاحیتیں ملٹی یوزر ماحول کے ل suitable موزوں بناتی ہیں۔ خلاصہ میں ، ایس کیو ایل میں میسم اور انوڈ بی اسٹوریج انجنوں کے مابین اہم اختلافات ان کی معاون خصوصیات ، ٹرانزیکشن سپورٹ ، کریش ریکوری میکانزم ، ڈیٹا انٹیگریٹی انفورسمنٹ ، اور میں رہتے ہیں۔کارکردگی کی خصوصیات.مائیسام آسان ہے ، اس میں ٹرانزیکشنل سپورٹ اور کریش کی بازیابی کا فقدان ہے ، لیکن وہ پڑھنے کی بہتر کارکردگی کی پیش کش کرسکتے ہیں۔INNODB زیادہ خصوصیت سے مالا مال ہے ، لین دین کی حمایت کرتا ہے ، بہتر ڈیٹا کی سالمیت ، کریش کی بازیابی فراہم کرتا ہے ، اور مخلوط پڑھنے/لکھنے کے کام کے بوجھ کے لئے موزوں ہے۔یہ جدید ایس کیو ایل تنصیبات کے لئے تجویز کردہ ڈیفالٹ اسٹوریج انجن ہے۔"
    },
    {
        "Question": "گرانٹ اور منسوخ کرنے والے بیان میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس انڈیکسنگ کے تناظر میں ، ایک BTREE انڈیکس اور ایک ہیش انڈیکس ڈیٹا کی بازیافت کی کارکردگی کو بہتر بنانے کے لئے استعمال کیے جانے والے اشاریہ سازی کے ڈھانچے کی دو مختلف اقسام ہیں۔وہ اپنی خصوصیات اور استعمال کے معاملات کے لحاظ سے مختلف ہیں: بی ٹی آر ای انڈیکس: ایک بری (متوازن درخت) انڈیکس ایک عام طور پر استعمال شدہ انڈیکسنگ ڈھانچہ ہے جو متوازن درختوں کی طرح ڈھانچے میں ڈیٹا کو منظم کرتا ہے ، عام طور پر بائنری ٹری یا بی+ درخت جیسے مختلف قسم کا۔انڈیکس میں موجود اعداد و شمار کو ایک مخصوص ترتیب میں ترتیب دیا جاتا ہے ، عام طور پر چڑھتے یا نزول ہوتے ہیں۔ بری انڈیکس وسیع پیمانے پر سوالات کے ل well مناسب ہیں ، جس میں مساوات کی تلاشیں ، رینج کے سوالات اور چھانٹنا شامل ہیں۔وہ دونوں پوائنٹس سوالات (ایک مخصوص قدر کی تلاش) اور رینج کے سوالات (قدروں کی ایک حد کی تلاش) کو موثر انداز میں سنبھالتے ہیں ۔بٹری اشاریہ عام طور پر اعلی سلیکٹیویٹی والے کالموں کے لئے استعمال ہوتے ہیں ، جہاں اعداد و شمار کی تقسیم میں زیادہ اسککی نہیں ہوتی ہے۔وہ ایسے منظرناموں میں موثر ہیں جہاں اعداد و شمار کی تقسیم کی پیش گوئی نہیں کی جاسکتی ہے یا جب اشاریہ شدہ کالم پر مختلف قسم کے سوالات انجام دیئے جاتے ہیں۔یہ اشاریہ شدہ قیمت کو ہیش کوڈ میں تبدیل کرکے کام کرتا ہے ، جو اس جگہ کا تعین کرنے کے لئے استعمال ہوتا ہے جہاں قدر کو ذخیرہ کیا جاتا ہے۔ ہیش انڈیکس مساوات پر مبنی سوالات کے ل well مناسب ہیں ، جیسے عین مطابق میچ یا تلاش۔جب وہ صحیح قیمت کی تلاش کی جارہی ہے تو وہ اعداد و شمار تک تیزی سے رسائی فراہم کرتے ہیں۔ تاہم ، ہیش انڈیکس رینج کے سوالات یا چھانٹنے کی حمایت نہیں کرتے ہیں۔وہ ان سوالات کے ل less کم موثر ہیں جن کے لئے اشاریہ کالم کی ترتیب کی بنیاد پر متعدد اقدار کو اسکین کرنے یا انجام دینے کی ضرورت ہوتی ہے۔میموری میں ڈیٹا بیس۔ ان خلاصہ ، بری انڈیکس اور ہیش انڈیکس کے درمیان بنیادی فرق ان کے ڈیٹا آرگنائزیشن ، معاون استفسار کی اقسام ، اور کارکردگی کی خصوصیات میں ہے۔BTREE اشاریہ وسیع پیمانے پر سوالات کے لئے ورسٹائل اور موثر ہیں ، جن میں مساوات اور رینج کے سوالات کے ساتھ ساتھ چھانٹنا بھی شامل ہے۔ہیش انڈیکس کو تیز مساوات پر مبنی نظروں کے ل optim بہتر بنایا جاتا ہے لیکن وہ حد سے متعلق سوالات یا چھانٹنے کی حمایت نہیں کرتے ہیں۔ان کے درمیان انتخاب درخواست کی مخصوص ضروریات اور اشاریہ شدہ اعداد و شمار پر انجام دیئے گئے سوالات کی اقسام پر منحصر ہے۔"
    },
    {
        "Question": "فلش مراعات اور فلش ٹیبلز کے بیان میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس انڈیکسنگ کے تناظر میں ، ایک فل ٹیکسٹ انڈیکس اور ایک جن (عام طور پر الٹی انڈیکس) انڈیکس دو مختلف قسم کے اشاریہ ڈھانچے ہیں جو مکمل ٹیکسٹ تلاش کی صلاحیتوں کی تائید کے لئے استعمال ہوتے ہیں۔وہ اپنی خصوصیات اور استعمال کے معاملات کے لحاظ سے مختلف ہیں: فل ٹیکسٹ انڈیکس: ایک فل ٹیکسٹ انڈیکس خاص طور پر موثر فل ٹیکسٹ تلاش کے لئے ڈیزائن کیا گیا ہے ، جس سے متنی اعداد و شمار کے بڑے بلاکس میں تیز اور متعلقہ تلاشی کو قابل بنایا جاسکتا ہے۔یہ عام طور پر متن پر مبنی مواد پر مشتمل کالموں کے لئے استعمال ہوتا ہے ، جیسے مضامین ، تفصیل ، یا دستاویزات۔ فل ٹیکسٹ انڈیکس ٹیکسٹیکل ڈیٹا کا تجزیہ اور اشاریہ کے لئے ٹوکنائزیشن ، اسٹیمنگ ، اور اسٹاپ ورڈ کو ہٹانے جیسی تکنیک کا استعمال کرتے ہیں۔اس سے وہ لفظی مماثلت ، قربت کی تلاشیں ، اور مطابقت کی درجہ بندی سے متعلق پیچیدہ سوالات کی حمایت کرنے کے قابل بناتے ہیں۔ مکمل ٹیکسٹ انڈیکس قدرتی زبان کی تلاش کے ل optim بہتر ہیں اور تلاش کے مختلف حالات کو سنبھال سکتے ہیں ، جیسے مخصوص الفاظ ، فقرے ، یا الفاظ کے امتزاج کی تلاش۔وہ خاص طور پر ان ایپلی کیشنز میں مفید ہیں جن کے لئے طاقتور متن کی تلاش کی صلاحیتوں کی ضرورت ہوتی ہے ، جیسے مواد کے انتظام کے نظام یا سرچ انجن۔ جین انڈیکس: ایک جن (عام الٹی انڈیکس) انڈیکس ایک زیادہ ورسٹائل انڈیکسنگ ڈھانچہ ہے جو ڈیٹا کی اقسام کی وسیع رینج کے لئے استعمال کیا جاسکتا ہے ،متن ، صفوں اور دیگر جامع اقسام سمیت۔یہ پیچیدہ اور غیر معمولی اعداد و شمار کے ڈھانچے کو موثر طریقے سے سنبھالنے کے لئے ڈیزائن کیا گیا ہے۔ جین انڈیکس الٹی فہرستوں پر مبنی ہیں ، جو ہر ایک اشاریہ دار شے کی موجودگی کو ان مقامات کے ساتھ ساتھ اسٹور کرتے ہیں جہاں یہ اعداد و شمار میں ظاہر ہوتا ہے۔اس سے پیچیدہ اعداد و شمار کے ڈھانچے کی موثر تلاش اور مماثلت کی اجازت ملتی ہے۔ جب مکمل ٹیکسٹ تلاش کے لئے جن اشاریہ کو استعمال کیا جاسکتا ہے ، تو وہ اس کے لئے خاص طور پر بہتر نہیں ہیں جیسے فل ٹیکسٹ انڈیکس۔وہ تلاش کرنے کی زیادہ سے زیادہ ضروریات کو سنبھال سکتے ہیں ، جیسے صارف کے ذریعہ بیان کردہ صفوں ، جامع اقسام ، یا یہاں تک کہ کسٹم ڈیٹا کی قسموں کے اندر تلاش کرنا۔ خلاصہ میں ، فل ٹیکسٹ انڈیکس اور جن انڈیکس کے درمیان بنیادی فرق ان کے مقصد اور تخصص میں ہے۔فل ٹیکسٹ انڈیکس خاص طور پر موثر مکمل ٹیکسٹ تلاش کے لئے ڈیزائن کیا گیا ہے ، جو متن پر مبنی مواد کے ل advanced جدید خصوصیات اور اصلاحات فراہم کرتا ہے۔دوسری طرف ، جن اشاریہ زیادہ ورسٹائل ہیں اور صرف متن سے باہر ڈیٹا کی اقسام اور پیچیدہ ڈیٹا ڈھانچے کی وسیع رینج کے لئے استعمال ہوسکتے ہیں۔ان کے درمیان انتخاب آپ کی درخواست کی مخصوص ضروریات اور تلاش کی اقسام پر منحصر ہے جو آپ کو انجام دینے کی ضرورت ہے۔"
    },
    {
        "Question": "ایک شو ٹیبلز اور ٹیبل بیان کی وضاحت کے درمیان کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس ٹیبلز کے تناظر میں ، ایک عارضی جدول اور مستقل (یا باقاعدہ) ٹیبل مختلف خصوصیات اور استعمال کے ساتھ دو قسم کی میزیں ہیں: عارضی جدول: ایک عارضی جدول ایک ٹیبل ہے جو ڈیٹا بیس سیشن کے اندر عارضی اسٹوریج کے لئے تخلیق اور استعمال ہوتا ہے۔یا ایک مخصوص دائرہ کار ، جیسے ایک مخصوص کنکشن یا ٹرانزیکشن ۔مری ٹیبلز کو عام طور پر کسی مخصوص استفسار ، ذخیرہ شدہ طریقہ کار ، یا ایپلیکیشن سیشن کی نفی کے دوران انٹرمیڈیٹ یا عارضی ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔کنکشن جس نے انہیں پیدا کیا۔دوسرے ڈیٹا بیس سیشن یا رابطے ان جدولوں تک رسائی یا ان میں ہیرا پھیری نہیں کرسکتے ہیں۔وہ سیشن کی عمر سے آگے نہیں بڑھتے ہیں۔ permenent (یا باقاعدہ) ٹیبل: ایک مستقل ٹیبل ، جسے باقاعدہ یا مستقل ٹیبل بھی کہا جاتا ہے ، ایک ٹیبل ہے جو طویل مدتی استعمال کے لئے ڈیٹا بیس میں تخلیق اور محفوظ کی جاتی ہے۔ڈیٹا کو ہولڈ کریں جس کو متعدد سیشنوں ، رابطوں ، یا لین دین میں برقرار رکھنے کی ضرورت ہے۔ عام اعداد و شمار کو عام طور پر بنیادی اعداد و شمار ، جیسے صارف کی معلومات ، مصنوع کا ڈیٹا ، یا لین دین کے ریکارڈوں کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔یہاں تک کہ جب ڈیٹا بیس سیشن یا کنکشن جس نے ان کو تشکیل دیا ہو اسے بند یا ختم کردیا جائے۔وہ ڈیٹا بیس میں رہتے ہیں جب تک کہ واضح طور پر گرا یا حذف نہ کریں۔ خلاصہ میں ، عارضی جدول اور مستقل جدول کے درمیان بنیادی فرق ان کی عمر اور مرئیت میں ہے۔عارضی جدولیں کسی مخصوص سیشن یا کنکشن کے اندر عارضی اسٹوریج کے لئے بنائی جاتی ہیں اور استعمال ہوتی ہیں اور اس سیشن کے اختتام پر خود بخود گرا دی جاتی ہیں۔دوسری طرف ، مستقل جدولیں طویل مدتی استعمال کے ل the ڈیٹا بیس میں تخلیق اور ذخیرہ کی جاتی ہیں اور کسی خاص سیشن یا رابطے کی زندگی سے آگے برقرار رہتی ہیں۔"
    },
    {
        "Question": "شو کے ڈیٹا بیس اور استعمال کے ڈیٹا بیس کے بیان میں کیا فرق ہے؟",
        "Answer": "ڈیٹا بیس میں عارضی جدولوں کے تناظر میں ، عارضی جدولوں کی دو اقسام ہیں: عالمی عارضی میزیں اور مقامی عارضی جدولیں۔یہ اقسام ان کے دائرہ کار اور رسائ کے لحاظ سے مختلف ہیں: عالمی عارضی جدول: ایک عالمی عارضی جدول ایک عارضی جدول ہے جو ڈیٹا بیس کے اندر موجود تمام سیشنوں یا رابطوں کے لئے قابل رسائی ہے۔ جب عالمی سطح پر عارضی جدول تیار کیا جاتا ہے تو ، اس تک رسائی حاصل کی جاسکتی ہے اور اس میں ہیرا پھیری کی جاسکتی ہے۔ڈیٹا بیس کے اندر کوئی سیشن یا کنکشن ، قطع نظر اس سے قطع نظر کہ کس سیشن نے اسے تخلیق کیا ہے۔ عالمی سطح پر عارضی جدول میں موجود ڈیٹا مختلف سیشنوں یا رابطوں کے درمیان مشترکہ ہے۔ایک سے زیادہ سیشن بیک وقت ٹیبل میں ریکارڈ داخل ، اپ ڈیٹ یا حذف کرسکتے ہیں۔ گلوبل عارضی جدولوں کو عام طور پر استعمال کیا جاتا ہے جب عارضی اعداد و شمار کو متعدد سیشنوں یا رابطوں میں شیئر کرنے اور ان تک رسائی حاصل کرنے کی ضرورت ہوتی ہے ، جیسے کثیر صارف کے ماحول میں یا عارضی اعداد و شمار پر تعاون کرتے وقت۔مقامی عارضی جدول: ایک مقامی عارضی جدول ایک عارضی جدول ہے جو سیشن یا کنکشن کے لئے مخصوص ہے جو اسے تخلیق کرتا ہے۔ جب مقامی عارضی ٹیبل تیار کیا جاتا ہے تو ، اس کو صرف سیشن یا کنکشن کے ذریعہ رسائی اور ہیرا پھیری کی جاسکتی ہے جس نے اسے تخلیق کیا ہے۔دوسرے سیشنز یا رابطے اس تک رسائی یا اس میں ترمیم نہیں کرسکتے ہیں۔ مقامی عارضی ٹیبل میں موجود ڈیٹا نجی ہے اور اس کو تخلیق کرنے والے سیشن میں الگ تھلگ ہے۔ہر سیشن میں ٹیبل اور اس کے ڈیٹا کی اپنی کاپی ہوتی ہے۔ لوکل عارضی جدولیں عام طور پر اس وقت استعمال کی جاتی ہیں جب عارضی ڈیٹا کو نجی ہونے کی ضرورت ہوتی ہے اور سیشنوں میں اس کا اشتراک نہیں ہوتا ہے۔وہ عام طور پر ایک مخصوص سیشن یا پیچیدہ سوالات یا حساب کتاب کے دوران انٹرمیڈیٹ یا عارضی نتائج کو ذخیرہ کرنے کے لئے استعمال کرتے ہیں۔ خلاصہ میں ، عالمی عارضی جدول اور مقامی عارضی جدول کے درمیان بنیادی فرق ان کے دائرہ کار اور رسائ میں ہے۔عالمی عارضی جدولیں ڈیٹا بیس کے اندر موجود تمام سیشنوں یا رابطوں کے لئے قابل رسائی ہیں اور متعدد سیشنوں میں ڈیٹا شیئرنگ کی اجازت دیتی ہیں۔مقامی عارضی جدولیں سیشن یا کنکشن کے لئے مخصوص ہیں جو انہیں تخلیق کرتی ہیں اور نجی اور الگ تھلگ ڈیٹا اسٹوریج فراہم کرتی ہیں۔ان کے درمیان انتخاب آپ کی درخواست کی مخصوص ضروریات پر منحصر ہے اور چاہے آپ کو سیشنوں میں مشترکہ اعداد و شمار کو شیئر کرنے یا نجی رکھنے کی ضرورت ہے۔"
    },
    {
        "Question": "شو گرانٹ اور شو متغیر کے بیان میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل میں ، ٹیبلٹ ٹیبل اور ڈراپ ٹیبل کے بیانات کو ڈیٹا بیس سے ٹیبلز کو ہٹانے کے لئے استعمال کیا جاتا ہے ، لیکن وہ اپنے طرز عمل اور ان کے ڈیٹا اور ٹیبل ڈھانچے پر پڑنے والے اثرات میں مختلف ہیں: ٹرنکیٹ ٹیبل: ٹرنکیٹ ٹیبل کا بیان سب کو جلدی سے دور کرنے کے لئے استعمال کیا جاتا ہے۔ایک ٹیبل سے قطاریں ، اس کی ساخت کو برقرار رکھتے ہوئے ٹیبل کو مؤثر طریقے سے خالی کرتے ہوئے۔ جب آپ ٹرنکیٹ ٹیبل کے بیان پر عملدرآمد کرتے ہیں تو ، یہ ٹیبل کو اپنی ابتدائی حالت میں دوبارہ ترتیب دیتے ہوئے مخصوص جدول سے تمام قطاریں ہٹاتا ہے۔یہ جدول میں تمام اعداد و شمار کو حذف کردیتا ہے لیکن ٹیبل کی ساخت کو برقرار رکھتا ہے ، بشمول کالم ، اشاریہ جات ، رکاوٹیں ، اور ٹرگرز۔ ٹرنکیٹ ٹیبل ایک تیز رفتار آپریشن ہے جس سے حذف کا استعمال کرتے ہوئے قطاروں کو حذف کرنے کے مقابلے میں ایک تیز رفتار آپریشن ہے کیونکہ یہ ہر صف کے لئے انفرادی طور پر حذف کرنے والی کارروائیوں کو پیدا نہیں کرتا ہے۔اس کے بجائے ، یہ ٹیبل سے وابستہ ڈیٹا کے صفحات کو ختم کرتا ہے ، جس سے یہ ٹیبل سے تمام ڈیٹا کو ہٹانے کا ایک موثر طریقہ بن جاتا ہے۔ تاہم ، یہ نوٹ کرنا ضروری ہے کہ ٹرنکیٹ ٹیبل کو واپس نہیں کیا جاسکتا ہے۔ایک بار بیان پر عمل درآمد ہونے کے بعد ، اعداد و شمار کو مستقل طور پر ٹیبل سے ہٹا دیا جاتا ہے۔ ڈراپ ٹیبل: ڈراپ ٹیبل کا بیان ڈیٹا بیس سے کسی ٹیبل کو مکمل طور پر ہٹانے کے لئے استعمال کیا جاتا ہے ، جس میں اس کے تمام ڈیٹا ، ڈھانچے ، اشاریہ جات ، رکاوٹیں اور محرکات شامل ہیں۔ڈراپ ٹیبل بیان پر عمل کریں ، یہ مستقل طور پر مخصوص ٹیبل اور اس سے وابستہ تمام ڈیٹا کو حذف کردیتا ہے۔ٹیبل کا ڈھانچہ ، بشمول کالم ، اشاریہ جات ، اور رکاوٹیں ، مکمل طور پر ڈیٹا بیس سے ہٹا دیئے گئے ہیں۔اس آپریشن کو ختم نہیں کیا جاسکتا ہے ، اور جب تک آپ کے پاس ڈیٹا بیس کا بیک اپ نہیں ہوتا ہے اس وقت تک ٹیبل اور اس کے ڈیٹا کو بازیافت نہیں کیا جاسکتا ہے۔ٹیبل ٹیبل ٹیبل کے ڈھانچے کو محفوظ رکھتے ہوئے ٹیبل سے تمام قطاریں ہٹاتا ہے ، جبکہ ڈراپ ٹیبل ٹیبل کو مکمل طور پر ہٹاتا ہے ، جس میں اس کی ساخت ، اشاریہ جات اور ڈیٹا شامل ہیں۔ان کے درمیان انتخاب کا انحصار اس بات پر ہے کہ آیا آپ اس کی ساخت (ٹرنکیٹ ٹیبل) کو برقرار رکھتے ہوئے کسی ٹیبل کو خالی کرنا چاہتے ہیں یا ٹیبل اور اس کے ڈیٹا (ڈراپ ٹیبل) کو مستقل طور پر حذف کرنا چاہتے ہیں۔"
    },
    {
        "Question": "ایک وضاحت اور تجزیہ ٹیبل کے بیان میں کیا فرق ہے؟",
        "Answer": "ایس کیو ایل میں ، منتخب کریں * بیان اور منتخب کالم_ نام کے بیان کو ڈیٹا بیس ٹیبل سے ڈیٹا بازیافت کرنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ کالموں کے لحاظ سے مختلف ہیں جو وہ واپس کرتے ہیں: منتخب کریں *: منتخب کریں * بیان ایک شارٹ ہینڈ اشارے ہے جو A سے تمام کالموں کا انتخاب کرتا ہے۔ٹیبل.یہ ٹیبل کے اسکیما میں بیان کردہ تمام کالموں کو بازیافت کرتا ہے اور ان کالموں سے وابستہ تمام ڈیٹا کو واپس کرتا ہے۔ جب آپ کسی منتخب * بیان پر عملدرآمد کرتے ہیں تو ، نتیجہ سیٹ میں ٹیبل کے تمام کالموں پر مشتمل ہوگا ، ترتیب میں ان کی میز کے اسکیما میں بیان کیا گیا ہے۔اس کا مطلب یہ ہے کہ اگر بعد میں ٹیبل میں نئے کالم شامل کردیئے جائیں تو ، منتخب * بیان خود بخود ان کالموں کو استفسار میں ترمیم کرنے کی ضرورت کے بغیر نتائج کے سیٹ میں شامل کردے گا۔ جب منتخب کریں * تمام کالموں کو بازیافت کرکے سہولت فراہم کرتا ہے تو ، یہ ضرورت سے زیادہ ڈیٹا واپس کرسکتا ہے۔ایک مخصوص استفسار کے لئے۔یہ ناکارہ ہوسکتا ہے اگر صرف کالموں کے سب سیٹ کی ضرورت ہو ، کیونکہ غیر ضروری اعداد و شمار کو بازیافت اور منتقل کیا جائے گا۔ کالم_ نام کو منتخب کریں: منتخب کالم_ نام کا بیان کسی ٹیبل سے مخصوص کالم بازیافت کے لئے استعمال کیا جاتا ہے۔یہ آپ کو کالموں کی بازیافت کرنے کے بجائے نتائج کے سیٹ میں بازیافت کرنے کے خواہاں کالموں کو واضح طور پر واضح کرنے کی اجازت دیتا ہے۔ جب آپ کالم_ نام کے منتخب کردہ بیان پر عملدرآمد کرتے ہیں تو ، نتیجہ سیٹ میں صرف مخصوص کالم ہوں گے۔آپ ٹیبل سے کالموں کا سبسیٹ بازیافت کرنے کے لئے کوما کے ذریعہ الگ ہونے والے متعدد کالم ناموں کی فہرست دے سکتے ہیں۔ کالم_ نام منتخب کرنے سے بازیافت شدہ ڈیٹا پر زیادہ عین مطابق کنٹرول کی اجازت ملتی ہے ، کیونکہ آپ قطعی طور پر یہ بتاسکتے ہیں کہ کسی خاص استفسار کے لئے کون سے کالموں کی ضرورت ہے۔یہ منتخب * سے زیادہ موثر ہوسکتا ہے * جب صرف مخصوص کالموں کی ضرورت ہوتی ہے۔ خلاصہ میں ، منتخب * اور منتخب کالم_ نام کے درمیان بنیادی فرق ان کالموں میں ہے جو وہ بازیافت کرتے ہیں۔منتخب کریں * کسی ٹیبل سے تمام کالم بازیافت کریں ، جبکہ منتخب کالم_ نام آپ کو واضح طور پر ان کالموں کی وضاحت کرنے کی اجازت دیتا ہے جن کو آپ بازیافت کرنا چاہتے ہیں۔ان کے درمیان انتخاب کا انحصار اس بات پر ہے کہ آیا آپ کو تمام کالموں کی ضرورت ہے یا آپ کے استفسار کے لئے کالموں کا صرف ایک مخصوص سب سیٹ ہے۔منتخب کالم_ نام کا استعمال اعداد و شمار پر بازیافت کرنے پر بہتر کنٹرول فراہم کرسکتا ہے اور جب صرف مخصوص کالموں کی ضرورت ہوتی ہے تو زیادہ موثر ہوسکتی ہے۔"
    },
    {
        "Question": "مندرجہ ذیل کالموں کے ساتھ مصنوعات کے نام سے ایک ٹیبل بنانے کے لئے ایک SQL استفسار لکھیں:",
        "Answer": "ایس کیو ایل میں ، جہاں شق اور ہونے والی شق کو کسی استفسار میں ڈیٹا کو فلٹر کرنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ استفسار کے مختلف حصوں پر کام کرتے ہیں اور مختلف مقاصد کی خدمت کرتے ہیں: جہاں شق: جہاں شق کسی سلیکٹ ، اپ ڈیٹ یا بیان میں استعمال کی جاتی ہے۔مخصوص حالتوں پر مبنی قطاروں کو فلٹر کرنے کے لئے۔ اس کا اطلاق گروپ بندی سے پہلے ٹیبل کی انفرادی قطاروں پر ہوتا ہے (اگر کوئی ہے) اور کسی بھی مجموعی افعال (جیسے رقم ، گنتی ، وغیرہ) کا حساب لگایا جاتا ہے۔ جہاں شق فلٹرز قطاروں کو مخصوص شرائط پر مبنی ہےاستفسار میں ، جیسے مساوات ، موازنہ ، یا منطقی آپریٹرز۔اس سے آپ کو ایسے معیار کی وضاحت کرنے کی اجازت ملتی ہے جسے قطاروں کے ذریعہ نتائج کے سیٹ میں شامل کیا جانا چاہئے۔ جہاں شق عام طور پر کالم کی اقدار پر مبنی ڈیٹا کو فلٹر کرنے کے لئے استعمال کی جاتی ہے ، جیسے قطاروں کو بازیافت کرنا جہاں ایک مخصوص کالم کسی خاص قدر کے برابر ہوتا ہے یا اس کے اندر آتا ہے۔ایک مخصوص رینج۔ ہائونگ شق: ہونے والی شق گروپ کے ساتھ مل کر ایک شق کے ذریعہ ایک منتخب بیان میں مجموعی افعال میں شامل شرائط پر مبنی قطار کو فلٹر کرنے کے لئے ایک منتخب بیان میں استعمال کی جاتی ہے۔ یہ گروپ کے ذریعہ گروپ کے بعد گروپڈ قطاروں پر لاگو ہوتا ہے اور مجموعی افعال کا حساب لگایا جاتا ہے۔.یہ شق آپ کو ان شرائط کی بنیاد پر نتائج کے سیٹ کو فلٹر کرنے کی اجازت دیتا ہے جس میں مجموعی افعال شامل ہوتے ہیں ، جیسے رقم ، گنتی ، اوسط وغیرہ۔ یہ ان شرائط کی وضاحت کرتا ہے جن کو گروپوں کے ذریعہ پورا کرنا ضروری ہے۔شق ، جو انفرادی قطاروں پر چلتی ہے ، گروپ کی قطار میں شق کام کرتی ہے ، جس سے آپ مجموعی فنکشن کے نتائج پر مبنی گروپوں کو فلٹر کرسکتے ہیں۔ خلاصہ میں ، جہاں شق اور ہونے کی شق کے درمیان بنیادی فرق ہے جس میں وہ ڈیٹا کو فلٹر کرتے ہیں۔جہاں بھی شق کسی بھی گروہ بندی یا اجتماع سے پہلے انفرادی قطاروں کو فلٹر کرتی ہے ، جبکہ گروپ بندی اور مجموعی کاموں کے بعد شق کے فلٹرز نے قطاریں جمع کیں۔جہاں شق کو حالات کی بنیاد پر انفرادی قطار کو فلٹر کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ ہونے والی شق مجموعی افعال میں شامل شرائط کی بنیاد پر فلٹرنگ گروپوں کے لئے استعمال ہوتی ہے۔"
    },
    {
        "Question": "مصنوعات کے جدول میں درج ذیل ڈیٹا کو داخل کرنے کے لئے ایک SQL استفسار لکھیں:",
        "Answer": "ایس کیو ایل میں ، گروپ بائی شق اور الگ مطلوبہ الفاظ دونوں کو نتائج کے سیٹ میں ڈپلیکیٹ اقدار کو ختم کرنے کے لئے استعمال کیا جاتا ہے ، لیکن ان کے مختلف مقاصد ہیں اور مختلف طریقوں سے کام کرتے ہیں: گروپ برائے شق: گروپ کے ذریعہ گروپ کو منتخب بیان میں گروپ کو استعمال کیا جاتا ہے۔ایک یا زیادہ کالموں پر مبنی قطاریں۔ جب آپ گروپ کو شق کے ذریعہ استعمال کرتے ہیں تو ، نتیجہ سیٹ کو مخصوص کالم (زبانیں) میں اقدار کی بنیاد پر گروپوں میں تقسیم کیا جاتا ہے۔گروپنگ کالم (زبانیں) میں ایک ہی اقدار والی قطاریں نتائج کے سیٹ میں ایک ہی صف میں مل جاتی ہیں۔ شق کے ذریعہ گروپ اکثر مجموعی افعال ، جیسے رقم ، گنتی ، اوسط ، وغیرہ کے ساتھ مل کر استعمال کیا جاتا ہے۔قطاروں کے ہر گروپ پر حساب کتاب۔ شق کے ذریعہ گروپ بنیادی طور پر اعداد و شمار کے گروپوں پر خلاصہ رپورٹس بنانے یا حساب کتاب کرنے کے لئے استعمال ہوتا ہے۔ ڈسٹسٹک کلیدی لفظ: ایک ہی کالم سے منفرد اقدار کو بازیافت کرنے کے لئے منتخب بیان میں الگ مطلوبہ الفاظ کا استعمال کیا جاتا ہے یا اس کے امتزاج کو ایک ہی کالم سے حاصل کیا جاتا ہے۔کالم۔ جب آپ الگ مطلوبہ الفاظ کا استعمال کرتے ہیں تو ، یہ صرف انوکھی قطاریں رکھتے ہوئے ، نتائج کے سیٹ سے ڈپلیکیٹ قطار کو ختم کرتا ہے۔ الگ الگ مطلوبہ الفاظ پوری صف پر چلتے ہیں ، جس میں نتائج کے سیٹ میں تمام کالموں پر غور کیا جاتا ہے۔اگر کوئی بھی قطار تمام کالموں میں کسی اور صف سے مماثل ہے تو ، اسے نتائج کے سیٹ سے ہٹا دیا جاتا ہے۔ جب آپ کسی خاص کالم یا کالموں سے کسی بھی حساب کتاب یا کسی بھی حساب کتاب کے بغیر منفرد اقدار کو بازیافت کرنا چاہتے ہیں تو الگ الگ مطلوبہ الفاظ مفید ہے۔ خلاصہ ، اہمشق کے ذریعہ گروپ کے درمیان فرق اور الگ مطلوبہ الفاظ ان کی فعالیت اور استعمال میں ہے۔گروپ بائی شق کا استعمال ایک یا زیادہ کالموں کی بنیاد پر قطاروں کو گروپ بندی کرنے اور ہر گروپ پر حساب کتاب کرنے کے لئے استعمال کیا جاتا ہے۔اس کے نتیجے میں ایک خلاصہ آؤٹ پٹ ہوتا ہے۔دوسری طرف ، الگ الگ مطلوبہ الفاظ کا استعمال نتائج کے سیٹ سے نقل قطاروں کو ختم کرنے کے لئے کیا جاتا ہے ، اس بات کو یقینی بناتے ہوئے کہ صرف انوکھی قطاریں واپس کردی گئیں ، بغیر کسی حساب کتاب یا گروپ بندی کے۔ان کے درمیان انتخاب کا انحصار اس بات پر ہے کہ آیا آپ کو قطاروں کے گروپوں (گروپ کے ذریعہ) کے گروپوں پر حساب کتاب کرنے کی ضرورت ہے یا مخصوص کالموں (الگ الگ) سے منفرد اقدار کو بازیافت کرنا ہوگا۔"
    },
    {
        "Question": "مصنوعات کے ٹیبل سے تمام مصنوعات کو منتخب کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، ایک اندرونی شمولیت اور بائیں بازو میں شامل ہونے والی دو قسمیں شامل ہیں جو ایک سے زیادہ جدولوں سے ڈیٹا کو یکجا کرنے کے لئے استعمال ہوتی ہیں ، لیکن وہ اس میں مختلف ہیں کہ وہ جوائن ٹیبلز کے مابین بے مثال قطاریں کس طرح سنبھالتے ہیں: اندرونی شمولدونوں جدولوں میں مماثل اقدار مخصوص جوائن کی حالت کی بنیاد پر شامل ہوئیں۔ جب آپ اندرونی شمولیت کو انجام دیتے ہیں تو ، نتیجہ سیٹ میں صرف قطاریں شامل ہوتی ہیں جہاں شمولیت کی حالت مطمئن ہوتی ہے۔کسی بھی جدول کی قطاریں جن کے پاس دوسرے ٹیبل میں مماثل صف نہیں ہے اس کے نتیجے سے خارج نہیں ہوتا ہے۔ اندرونی جوائن آپریشن مؤثر طریقے سے شمولیت کی حالت پر مبنی دو جدولوں کا چوراہا تلاش کرتا ہے۔ ان میں شامل ہونا عام طور پر اس وقت استعمال ہوتا ہے جب آپ صرف بازیافت کرنا چاہتے ہیںوہ قطاریں جو دونوں جدولوں میں مماثل اقدار رکھتی ہیں اور بے مثال قطاریں خارج کرتی ہیں۔. جب آپ بائیں بازو کو انجام دیتے ہیں تو ، نتیجہ سیٹ میں بائیں ٹیبل سے تمام قطاریں شامل ہوتی ہیں ، قطع نظر اس سے کہ ان کی دائیں ٹیبل میں قطاریں مماثل ہیں۔اگر بائیں ٹیبل سے کسی قطار میں دائیں ٹیبل میں مماثل صف نہیں ہے تو ، دائیں جدول کے کالموں کے لئے کالعدم اقدار واپس کردیئے جاتے ہیں۔ بائیں شمولیت کا آپریشن اس بات کو یقینی بناتا ہے کہ بائیں ٹیبل سے تمام قطاریں نتائج کے سیٹ میں شامل ہوں ، یہاں تک کہاگر دائیں ٹیبل میں کوئی میچ نہیں ہے۔ عام طور پر جب آپ بائیں ٹیبل سے تمام قطاریں بازیافت کرنا چاہتے ہیں تو عام طور پر شامل ہوتا ہے ، اس کے ساتھ ساتھ دائیں ٹیبل سے کسی بھی مماثل قطاروں کے ساتھ۔اس سے آپ کو بائیں ٹیبل سے بے مثال قطاریں شامل کرنے کی اجازت ملتی ہے۔اندرونی شمولیت صرف دونوں جدولوں میں مماثل اقدار کے ساتھ قطاریں لوٹتی ہے ، جس میں بے مثال قطاروں کو چھوڑ کر۔بائیں بازو کی شمولیت بائیں ٹیبل سے تمام قطاریں اور دائیں ٹیبل سے مماثل قطاریں لوٹاتی ہے ، جس میں دائیں ٹیبل کے کالموں کے لئے کالعدم اقدار کے ساتھ بے مثال قطاریں شامل ہیں۔ان کے مابین انتخاب کا انحصار اس بات پر ہے کہ آیا آپ بے مثال قطاریں (اندرونی شمولیت) کو خارج کرنا چاہتے ہیں یا نتائج کے سیٹ میں بے مثال قطار (بائیں شمولیت) شامل کرنا چاہتے ہیں۔"
    },
    {
        "Question": "ان تمام مصنوعات کو منتخب کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں جن کی قیمت 50.00 سے زیادہ ہے۔",
        "Answer": "ایس کیو ایل میں ، ایک \"بیرونی شمولیت\" ایک عام اصطلاح ہے جس میں دونوں \"بائیں بیرونی شمولیت\" اور \"دائیں بیرونی شمولیت\" شامل ہیں ، جو بیرونی شامل ہونے کی مخصوص قسم ہیں۔آئیے بیرونی شمولیت اور دائیں جوائن کے مابین اختلافات پر تبادلہ خیال کریں: بیرونی شمولیت: ایک بیرونی شمولیت ایک ٹیبل سے تمام قطاریں لوٹاتا ہے اور جوائن کی حالت کی بنیاد پر دوسرے ٹیبل (زبانیں) سے ملاپ کی قطاریں۔اس میں کسی بھی جدول سے بے مثال قطاریں شامل ہیں ، اگر کوئی ہے تو ، نتیجہ سیٹ میں۔ بیرونی شمولیت کا آپریشن اس بات کو یقینی بناتا ہے کہ ایک ٹیبل سے بے مثال قطاریں اب بھی دوسرے ٹیبل کے کالموں کے لئے کالعدم اقدار کو تبدیل کرکے طے شدہ نتائج میں شامل ہیں۔ بیرونی شمولیت کر سکتے ہیں۔مزید تین اقسام میں درجہ بندی کی جائے: بائیں بیرونی شمولیت ، دائیں بیرونی شمولیت ، اور مکمل بیرونی شمولیت۔ رائٹ جوائن (دائیں بیرونی شمولیت): ایک دائیں شمولیت ، جسے دائیں بیرونی شمولیت کے نام سے بھی جانا جاتا ہے ، دائیں ٹیبل اور مماثل سے تمام قطاریں لوٹاتا ہے۔جوائن کی حالت کی بنیاد پر بائیں ٹیبل سے قطاریں۔اس میں دائیں ٹیبل سے تمام قطاریں شامل ہیں ، یہاں تک کہ اگر بائیں جدول میں کوئی مماثل قطاریں نہیں ہیں۔ دائیں جوائن میں ، بائیں ٹیبل سے بے مثال قطاروں میں بائیں ٹیبل کے کالموں کے لئے کالعدم اقدار ہوں گے۔جوائن آپریشن اس بات کو یقینی بناتا ہے کہ دائیں ٹیبل سے تمام قطاریں نتائج کے سیٹ میں شامل کی گئیں ، یہاں تک کہ اگر بائیں ٹیبل میں کوئی میچ نہیں ہے۔ خلاصہ میں ، بیرونی شمولیت اور دائیں شمولیت کے درمیان بنیادی فرق ان کی عمومی نوعیت میں ہے۔بیرونی شمولیت ایک وسیع تر اصطلاح ہے جس میں مختلف اقسام کے بیرونی ملانے پر مشتمل ہے ، جس میں بائیں بیرونی شمولیت ، دائیں بیرونی شمولیت ، اور مکمل بیرونی شمولیت شامل ہے۔دائیں جوائن ، خاص طور پر دائیں بیرونی شمولیت ، بیرونی شمولیت کی ایک قسم ہے جو دائیں ٹیبل سے تمام قطاریں اور بائیں ٹیبل سے ملاپ والی قطاریں لوٹاتی ہے ، جس میں دائیں ٹیبل سے بے مثال قطاریں شامل ہیں جس میں بائیں ٹیبل کے کالموں کے لئے کالعدم اقدار ہیں۔"
    },
    {
        "Question": "\"ان تمام مصنوعات کو منتخب کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں جن کا نام حرف\" \"ٹی\" \"سے شروع ہوتا ہے۔\"",
        "Answer": "ایس کیو ایل میں ، یونین اور یونین دونوں تمام بیانات کو ایک سے زیادہ منتخب سوالات کے نتائج کے سیٹ کو ایک ہی نتیجہ سیٹ میں جوڑنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ اس میں مختلف ہیں کہ وہ ڈپلیکیٹ قطار کو کس طرح سنبھالتے ہیں: یونین: یونین کا بیان نتائج کے نتائج کو یکجا کرنے کے لئے استعمال کیا جاتا ہے۔ایک ہی نتیجہ سیٹ میں دو یا دو سے زیادہ منتخب سوالاتنتیجہ میں صرف انوکھی قطاریں شامل کی گئیں۔ یونین آپریشن مشترکہ نتائج کے سیٹوں پر ایک الگ آپریشن انجام دیتا ہے ، اس بات کو یقینی بناتا ہے کہ ڈپلیکیٹ قطاریں ختم ہوجائیں۔ یہ نوٹ کرنا ضروری ہے کہ منتخب کردہ سوالات میں کالم کے نام اور متعلقہ کالموں کے اعداد و شمار کی اقسام لازمی ہیں۔ایک کامیاب یونین کا مقابلہ کریں۔یہ انفرادی سوالات کے نتائج کے سیٹوں کو آسانی سے جوڑتا ہے ، بشمول ہر استفسار کی تمام قطاریں ، قطع نظر اس سے قطع نظر۔یہ یونین سے تیز تر ہے کیونکہ اس میں ڈپلیکیٹ قطاروں کو ختم کرنے کا اوور ہیڈ نہیں ہے۔ یونین سب کے ساتھ ، منتخب کردہ سوالات میں کالم کے ناموں اور ڈیٹا کی اقسام کے لئے ضروری نہیں ہے۔یونین اور یونین تمام جھوٹ بولتے ہیں کہ وہ ڈپلیکیٹ قطار کو کس طرح سنبھالتے ہیں۔یونین حتمی نتائج کے سیٹ سے خود بخود ڈپلیکیٹ قطاریں ہٹاتا ہے ، جبکہ یونین میں تمام انفرادی سوالات سے تمام قطاریں شامل ہیں ، جن میں نقول بھی شامل ہیں۔اگر آپ نقل کو ختم کرنا چاہتے ہیں اور صرف انوکھی قطاریں شامل کرنا چاہتے ہیں تو ، آپ یونین استعمال کرسکتے ہیں۔اگر آپ ڈپلیکیٹ کو ہٹائے اور کارکردگی کو ترجیح دیئے بغیر نتائج کے سیٹ کو اکٹھا کرنا چاہتے ہیں تو ، آپ یونین سب کو استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "تمام مصنوعات کی قیمت کو 10.00 تک اپ ڈیٹ کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، اعداد و شمار پر حساب کتاب کرنے کے لئے گنتی اور رقم کے بیانات کا استعمال کیا جاتا ہے ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: گنتی: گنتی کا بیان قطاروں کی تعداد کو واپس کرنے کے لئے استعمال کیا جاتا ہے جو کسی مخصوص حالت سے ملتے ہیں یا کسی ٹیبل میں موجود ہوتے ہیں۔ جب آپ استعمال کرتے ہیں۔گنتی ، اس میں قطاروں کی تعداد کا شمار ہوتا ہے جو مخصوص حالت کو پورا کرتی ہے یا کسی ٹیبل میں قطاروں کی کل تعداد اگر کوئی شرط نہیں بتائی جاتی ہے۔ گنتی کا فنکشن کوئی ریاضی کا حساب نہیں کرتا ہے۔یہ آسانی سے قطاروں کی گنتی کو لوٹاتا ہے۔ گنتی کے بیان کا نتیجہ ہمیشہ ایک عدد قیمت ہوتا ہے۔ اسوم: رقم کا بیان کسی مخصوص کالم یا اظہار میں اقدار کی رقم کا حساب لگانے کے لئے استعمال کیا جاتا ہے۔ جب آپ رقم کا استعمال کرتے ہیں تو ، اس سے اقدار میں اضافہ ہوتا ہے۔منتخب کردہ قطاروں کے لئے مخصوص کالم یا اظہار میں۔ مجموعی فنکشن عام طور پر عددی کالموں کے ساتھ استعمال ہوتا ہے ، جیسے عدد یا اعشاریہ۔ رقم کے بیان کا نتیجہ اقدار کی کل رقم ہے ، جو اعشاریہ مقامات کے ساتھ ایک عددی قیمت ہوسکتی ہے۔، کالم کے اعداد و شمار کی قسم پر منحصر ہے۔ خلاصہ ، گنتی اور رقم کے بیانات کے مابین بنیادی فرق ان کا مقصد ہے اور ان کے حساب کتاب کی قسم ہے۔گنتی کا استعمال قطاروں یا میچوں کی تعداد کو گننے کے لئے کیا جاتا ہے ، جبکہ ایک کالم میں اقدار کے جوڑے کا حساب لگانے کے لئے رقم کا استعمال کیا جاتا ہے۔گنتی ایک عددی واپس کرتی ہے ، جبکہ رقم ایک عددی قیمت لوٹاتی ہے جو کل رقم کی نمائندگی کرتی ہے۔"
    },
    {
        "Question": "مصنوعات کی میز سے تمام مصنوعات کو حذف کرنے کے لئے ایک SQL استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، زیادہ سے زیادہ اور کم سے کم اقدار کو ایک مخصوص کالم میں بالترتیب زیادہ سے زیادہ اور کم سے کم اقدار تلاش کرنے کے لئے استعمال کیا جاتا ہے۔ان کے مابین اختلافات یہ ہیں: زیادہ سے زیادہ: زیادہ سے زیادہ بیان کسی مخصوص کالم میں زیادہ سے زیادہ قیمت کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔ جب آپ زیادہ سے زیادہ استعمال کرتے ہیں تو ، یہ مخصوص کالم میں موجود اقدار کا اندازہ کرتا ہے اور سب سے زیادہ قیمت لوٹاتا ہے۔ زیادہ سے زیادہ فنکشن عام طور پر استعمال ہوتا ہے۔عددی کالم ، جیسے عدد یا اعشاریہ ، لیکن اس کا استعمال تاریخ یا سٹرنگ کالموں کے ساتھ بھی کیا جاسکتا ہے (جہاں اسے چھانٹنے کے آرڈر کی بنیاد پر سب سے زیادہ قیمت ملتی ہے)۔ زیادہ سے زیادہ بیان کا نتیجہ ایک ہی قیمت ہے جس میں پائی جانے والی زیادہ سے زیادہ قیمت کی نمائندگی ہوتی ہے۔کالم.مین: منٹ کا بیان کسی مخصوص کالم میں کم سے کم قیمت کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔ جب آپ کم سے کم استعمال کرتے ہیں تو ، یہ مخصوص کالم میں موجود اقدار کا اندازہ کرتا ہے اور سب سے کم قیمت لوٹاتا ہے۔ زیادہ سے زیادہ ، کم سے زیادہ ، منٹ کی تقریب عام طور پر استعمال ہوتی ہے۔عددی کالم ، لیکن اس کا استعمال تاریخ یا سٹرنگ کالموں کے ساتھ بھی کیا جاسکتا ہے (جہاں اسے چھانٹنے کے آرڈر کی بنیاد پر سب سے کم قیمت ملتی ہے)۔ منٹ کے بیان کا نتیجہ ایک ہی قیمت ہے جو کالم میں پائی جانے والی کم سے کم قیمت کی نمائندگی کرتی ہے۔زیادہ سے زیادہ اور منٹ کے بیانات کے درمیان بنیادی فرق وہ قسم ہے جو وہ انجام دیتے ہیں جو وہ انجام دیتے ہیں۔میکس کالم سے سب سے زیادہ قیمت حاصل کرتا ہے ، جبکہ من سب سے کم قیمت کو بازیافت کرتا ہے۔دونوں بیانات نتیجے کے طور پر ایک ہی قیمت لوٹاتے ہیں۔"
    },
    {
        "Question": "پروڈکٹ_ لسٹ نامی ایک ایسا نظارہ بنانے کے لئے ایک ایس کیو ایل استفسار لکھیں جو تمام مصنوعات کے لئے پروڈکٹ کا نام اور قیمت دکھاتا ہے۔",
        "Answer": "تکرار کے لئے معذرت۔میرے پچھلے ردعمل میں ایک غلطی تھی۔ ایس کیو ایل میں ، زیادہ سے زیادہ اور کم سے کم اقدار کو ایک مخصوص کالم سے بالترتیب زیادہ سے زیادہ اور کم سے کم اقدار کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔ان کے مابین اختلافات یہ ہیں: زیادہ سے زیادہ: زیادہ سے زیادہ کام کسی مخصوص کالم سے زیادہ سے زیادہ قیمت کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے۔ جب آپ زیادہ سے زیادہ استعمال کرتے ہیں تو ، یہ مخصوص کالم میں موجود اقدار کا اندازہ کرتا ہے اور سب سے زیادہ قیمت لوٹاتا ہے۔ زیادہ سے زیادہ فنکشن عام طور پر استعمال ہوتا ہے۔عددی کالم ، جیسے عدد یا اعشاریہ ، لیکن اس کا استعمال تاریخ یا سٹرنگ کالموں کے ساتھ بھی کیا جاسکتا ہے (جہاں اسے چھانٹنے کے آرڈر کی بنیاد پر سب سے زیادہ قیمت ملتی ہے)۔ زیادہ سے زیادہ فنکشن کا نتیجہ ایک ہی قیمت ہے جس میں پائی جانے والی زیادہ سے زیادہ قیمت کی نمائندگی ہوتی ہے۔کالم.مین: منٹ فنکشن کا استعمال کسی مخصوص کالم سے کم سے کم قیمت کو بازیافت کرنے کے لئے کیا جاتا ہے۔ جب آپ کم سے کم استعمال کرتے ہیں تو ، یہ مخصوص کالم میں موجود اقدار کا اندازہ کرتا ہے اور سب سے کم قیمت کو واپس کرتا ہے۔عددی کالم ، لیکن اس کا استعمال تاریخ یا سٹرنگ کالموں کے ساتھ بھی کیا جاسکتا ہے (جہاں اسے چھانٹنے کے آرڈر کی بنیاد پر سب سے کم قیمت ملتی ہے)۔ منٹ فنکشن کا نتیجہ ایک ہی قیمت ہے جو کالم میں پائی جانے والی کم سے کم قیمت کی نمائندگی کرتی ہے۔زیادہ سے زیادہ اور منٹ کے افعال کے مابین بنیادی فرق وہ قسم ہے جو وہ انجام دیتے ہیں جو وہ انجام دیتے ہیں۔میکس کالم سے سب سے زیادہ قیمت حاصل کرتا ہے ، جبکہ من سب سے کم قیمت کو بازیافت کرتا ہے۔دونوں افعال نتیجے کے طور پر ایک ہی قیمت لوٹاتے ہیں۔"
    },
    {
        "Question": "ADD_PRODUCT نامی ایک ذخیرہ شدہ طریقہ کار بنانے کے لئے ایک SQL استفسار لکھیں جو ان پٹ کے طور پر کسی مصنوع کا نام اور قیمت لیتا ہے اور مصنوعات کی میز میں ایک نئی قطار داخل کرتا ہے۔",
        "Answer": "ایس کیو ایل میں ، دونوں آرڈر کے ذریعہ اور حد کے بیانات کو استفسار کے نتائج کے سیٹ پر قابو پانے کے لئے استعمال کیا جاتا ہے ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: آرڈر بذریعہ: بیان کے ذریعہ آرڈر ایک یا زیادہ کالموں کی بنیاد پر استفسار کے نتائج کو ترتیب دینے کے لئے استعمال کیا جاتا ہے۔چڑھائی یا نزول ترتیب میں۔ جب آپ آرڈر کا استعمال کرتے ہیں تو ، آپ کالم (زبانیں) کی وضاحت کرتے ہیں جس کے ذریعہ آپ ترتیب دینا چاہتے ہیں اور چھانٹنے کا حکم (چڑھنے یا اترتے ہیں)۔ شق کے ذریعہ آرڈر عام طور پر استفسار کے آخر میں استعمال ہوتا ہے اور اس پر لاگو ہوتا ہےپورا نتیجہ سیٹ۔ یہ مخصوص معیار پر مبنی قطار کو ترتیب دینے کے لئے منتخب بیان کے ذریعہ آرڈر کا استعمال کرنا عام ہے۔زیادہ سے زیادہ قطاروں کو واپس کرنا ہے۔ حد کی شق عام طور پر کسی سوال کے آخر میں استعمال کی جاتی ہے ، اگر شق کے ذریعہ آرڈر کے بعد اگر موجود ہو تو۔ یہ آپ کو نتیجہ سیٹ کے آغاز سے ہی ایک مخصوص تعداد میں قطاروں کو بازیافت کرنے کی اجازت دیتا ہے یا اس کو چھوڑ دیتا ہے۔قطاروں کی کچھ تعداد اور قطاروں کی ایک حد کو بازیافت کرنا۔ حد کے لئے نحو مختلف ڈیٹا بیس سسٹم کے مابین تھوڑا سا مختلف ہوتا ہے ، لیکن عام تصور ایک ہی رہتا ہے۔ خلاصہ میں ، بیانات کے ذریعہ آرڈر اور حد کے درمیان بنیادی فرق ان کا مقصد اور اثر ہےنتیجہ سیٹآرڈر بذریعہ مخصوص معیار کی بنیاد پر نتائج سیٹ کو ترتیب دینے کے لئے استعمال کیا جاتا ہے ، جبکہ حد کا استعمال نتائج کے سیٹ سے واپس آنے والی قطاروں کی تعداد کو محدود کرنے کے لئے کیا جاتا ہے۔آرڈر بذریعہ قطاروں کے ترتیب کو متاثر کرتا ہے ، جبکہ حد نتائج کے سیٹ میں شامل ہونے والی قطاروں کی تعداد کا تعین کرتی ہے۔"
    },
    {
        "Question": "جب بھی کسی مصنوع کی قیمت کو اپ ڈیٹ کیا جاتا ہے تو اس میں آگ لگ جاتی ہے کہ جب کسی مصنوع کی قیمت کو اپ ڈیٹ کیا جاتا ہے تو اس میں آگ لگ جاتی ہے جس میں فائر ہوتا ہے۔ٹرگر کو پروڈکٹ_سیل_پرائس کالم کو 10 ٪ پروڈکٹ_پرائس کالم سے اپ ڈیٹ کرنا چاہئے۔",
        "Answer": "بولین اور ورچر ڈیٹا کی اقسام کو ایس کیو ایل میں مختلف قسم کے ڈیٹا کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے: بولین: بولین ڈیٹا کی قسم منطقی اقدار کی نمائندگی کرنے کے لئے استعمال کی جاتی ہے ، عام طور پر صحیح یا غلط۔ یہ بہت سے ڈیٹا بیس سسٹم میں ایک بلٹ ان ڈیٹا ٹائپ ہے اور عام طور پر ہوتا ہے اور یہ عام طور پر ہوتا ہے۔بائنری یا بولین ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ بولین ڈیٹا کی قسم میں ممکنہ اقدار کا ایک مقررہ سیٹ ہوتا ہے ، عام طور پر صحیح اور غلط ، یا مساوی نمائندگی جیسے 1 اور 0. بولین قدر کا سائز عام طور پر بہت چھوٹا ہوتا ہے ، اکثر صرف ایک ہی تھوڑا سا ہوتا ہے۔.varchar: ورچار ڈیٹا کی قسم متغیر لمبائی کے کردار کے تاروں کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے۔ اس کا استعمال مختلف لمبائی کے متنی یا تار کے اعداد و شمار کی نمائندگی کرنے کے لئے کیا جاتا ہے۔ ورچار کالم کی لمبائی کی وضاحت کی جاسکتی ہے ، جس سے یہ ظاہر ہوتا ہے کہ اس کے حروف کی زیادہ سے زیادہ تعداد موجود ہے۔ورچار کالم میں ذخیرہ شدہ ڈیٹا کی اصل لمبائی مختلف ہوسکتی ہے اور لچکدار ہے۔ ورچار ویلیو کا سائز ذخیرہ شدہ اعداد و شمار کی لمبائی پر منحصر ہوتا ہے ، جو صفر حروف سے مخصوص زیادہ سے زیادہ لمبائی تک ہوسکتا ہے۔بولین اور ورچر کے درمیان فرق وہ ڈیٹا ہے جس کی وہ نمائندگی کرتے ہیں۔بولین منطقی اقدار کے لئے استعمال ہوتا ہے ، عام طور پر صحیح یا غلط ، جبکہ ورچر متغیر لمبائی کے کردار کے تاروں کے لئے استعمال ہوتا ہے۔بولین کے پاس ممکنہ اقدار کا ایک مقررہ سیٹ ہے ، جبکہ ورچر کسی بھی کردار کے اعداد و شمار کو ایک مخصوص لمبائی کی حد میں رکھ سکتا ہے۔"
    },
    {
        "Question": "تمام مصنوعات کی اوسط قیمت تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "INT اور ڈیٹ ٹائم ڈیٹا کی اقسام کو SQL میں مختلف قسم کے ڈیٹا کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے: INT: INT ڈیٹا کی قسم عددی اقدار کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے ، جو اعشاریہ مقامات کے بغیر پوری تعداد ہیں۔ یہ عام طور پر ایک عددی مقدار کی نمائندگی کرتا ہے ، جیسے گنتی ،ایک شناخت کنندہ ، یا ریاضی کے حساب کتاب میں استعمال ہونے والی ایک قیمت۔ INT قدر کا سائز مخصوص ڈیٹا بیس سسٹم پر منحصر ہوتا ہے اور مختلف نظاموں کے مابین مختلف ہوسکتا ہے ، لیکن یہ عام طور پر -2،147،483،648 سے 2،147،483،647 (32 -بٹ دستخط شدہ عدد سے مختلف اقدار کی اجازت دیتا ہے۔) .ک ڈیٹا کی قسم تاریخوں یا اوقات کے بارے میں کوئی معلومات محفوظ نہیں کرتی ہے۔ ڈیٹ ٹائم: ڈیٹ ٹائم ڈیٹا کی قسم ایس کیو ایل میں تاریخ اور وقت کی قدروں کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے۔ یہ وقت میں ایک خاص نقطہ کی نمائندگی کرتا ہے ، بشمول تاریخ اور وقت دونوں اجزاء۔ ڈیٹا ٹائم۔ڈیٹا ٹائپ سال ، مہینہ ، دن ، گھنٹہ ، منٹ ، اور دوسرا کے بارے میں معلومات کو ذخیرہ کرتا ہے۔ ڈیٹ ٹائم ویلیو کا سائز اور تاریخوں اور اوقات کی حد جس کی نمائندگی مخصوص ڈیٹا بیس سسٹم پر ہوتی ہے ، لیکن یہ عام طور پر وسیع رینج کی اجازت دیتا ہے۔کئی سالوں میں پھیلی ہوئی اقدار کی۔ ڈیٹا ٹائم ڈیٹا کی قسم کی شکل اور صحت سے متعلق ڈیٹا بیس سسٹم کے لحاظ سے بھی مختلف ہوسکتی ہے۔ خلاصہ میں ، INT اور ڈیٹ ٹائم کے درمیان بنیادی فرق وہ اعداد و شمار کی قسم ہے جس کی وہ نمائندگی کرتے ہیں۔INT انٹیجر اقدار کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ تاریخ اور وقت کی اقدار کو ذخیرہ کرنے کے لئے ڈیٹ ٹائم استعمال ہوتا ہے۔INT عددی مقدار کی نمائندگی کرتا ہے ، جبکہ ڈیٹ ٹائم وقت میں مخصوص نکات کی نمائندگی کرتا ہے۔"
    },
    {
        "Question": "تمام مصنوعات کی سب سے زیادہ قیمت تلاش کرنے کے لئے ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، متن اور بلاب ڈیٹا کی اقسام کا استعمال بالترتیب بڑی مقدار میں متن یا بائنری ڈیٹا کو ذخیرہ کرنے کے لئے کیا جاتا ہے۔ان کے مابین اختلافات یہ ہیں: متن: ٹیکسٹ ڈیٹا کی قسم متن کے اعداد و شمار کی بڑی مقدار کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے ، جیسے متن کے پیراگراف ، مضامین ، یا معلومات کے دوسرے لمبے ٹکڑے۔ یہ زیادہ سے زیادہ حد کے ساتھ متغیر لمبائی کے تار کو رکھ سکتا ہے۔، جو ڈیٹا بیس سسٹم پر منحصر ہوتا ہے۔ ٹیکسٹ ڈیٹا کی قسم عام طور پر کریکٹر ڈیٹا کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے اور کردار کے سیٹ اور کولیشنز کی ایک وسیع رینج کی حمایت کرتی ہے۔ ٹیکسٹ کالموں کو انڈیکس اور موثر طریقے سے تلاش کیا جاسکتا ہے۔ٹیکسٹ ڈیٹا کی اقسام کی مختلف حالتوں ، جیسے ورچار ، لانگ ٹیکسٹ ، یا سی ایل او بی ، ہر ایک میں مختلف اسٹوریج کی صلاحیتوں اور لمبائی کی حدود ہیں۔ بلوب: بلاب (بائنری بڑی شے) ڈیٹا کی قسم بڑی مقدار میں بائنری ڈیٹا کو اسٹور کرنے کے لئے استعمال کی جاتی ہے ، جیسے تصاویر ، آڈیو ، آڈیوفائلیں ، ویڈیو فائلیں ، یا بائنری ڈیٹا کی کوئی دوسری قسم۔ اس میں زیادہ سے زیادہ حد کے ساتھ متغیر لمبائی بائنری ڈیٹا کو تھام سکتا ہے ، جو ڈیٹا بیس سسٹم پر منحصر ہوتا ہے۔ بلاب ڈیٹا کی قسم عام طور پر غیر متنوع ڈیٹا کو اسٹور کرنے کے لئے استعمال کی جاتی ہے ، جیسےخام بائنری فائلوں کو۔ڈیٹا کی اقسام وہ ڈیٹا کی قسم ہے جو وہ اسٹور کرتے ہیں۔متن کو بڑی مقدار میں متنی اعداد و شمار کے لئے استعمال کیا جاتا ہے ، جبکہ بلاب بڑی مقدار میں بائنری ڈیٹا کے لئے استعمال ہوتا ہے۔متن کا مقصد کردار کے اعداد و شمار کے لئے ہے اور وہ کردار کے سیٹوں اور کولیشنوں کی حمایت کرتا ہے ، جبکہ بلاب غیر ٹیکسٹیکل بائنری ڈیٹا کے لئے ہے۔"
    },
    {
        "Question": "تمام مصنوعات کی سب سے کم قیمت تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، فلوٹ اور ڈبل ڈیٹا دونوں اقسام کا استعمال فلوٹنگ پوائنٹ نمبر کی نمائندگی کرنے کے لئے کیا جاتا ہے۔تاہم ، ان کے مابین کچھ اختلافات موجود ہیں: فلوٹ: فلوٹ ڈیٹا کی قسم سنگل پریسیزیشن کے ساتھ متوقع عددی اقدار کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے۔مخصوص ڈیٹا بیس سسٹم ، لیکن یہ عام طور پر صحت سے متعلق ایک خاص سطح کے ساتھ اقدار کی ایک وسیع رینج کی اجازت دیتا ہے۔ فلوٹ ویلیو کی صحت سے متعلق عام طور پر 7 اعشاریہ کے ارد گرد ہوتی ہے۔.یہ اسٹوریج کی جگہ کے 8 بائٹس پر قبضہ کرتا ہے۔ قدروں کی حد جو ڈبل کالم میں محفوظ کی جاسکتی ہے عام طور پر فلوٹ کی نسبت بڑی ہوتی ہے۔ ڈبل ویلیو کی صحت سے متعلق عام طور پر 15 اعشاریہ 15 اعشاریہ کے ارد گرد ہوتی ہے ، جس سے یہ فلوٹ سے زیادہ عین مطابق ہوتا ہے۔خلاصہ یہ کہ ، فلوٹ اور ڈبل کے مابین اہم اختلافات اسٹوریج کا سائز اور صحت سے متعلق ہیں۔فلوٹ ایک واحد صحت سے متعلق فلوٹنگ پوائنٹ قسم ہے جس میں 4 بائٹس اسٹوریج اور قریب 7 اعشاریہ صحت سے متعلق مقامات ہیں۔ڈبل ایک ڈبل صحت سے متعلق فلوٹنگ پوائنٹ قسم ہے جس میں 8 بائٹس اسٹوریج اور تقریبا 15 15 اعشاریہ صحت سے متعلق مقامات ہیں۔اگر اعلی صحت سے متعلق کی ضرورت ہو تو ، عام طور پر ڈبل کو ترجیح دی جاتی ہے ، لیکن اس میں اسٹوریج کی زیادہ جگہ بھی استعمال ہوتی ہے۔فلوٹ اور ڈبل کے درمیان انتخاب آپ کی درخواست کی مخصوص ضروریات اور ڈیٹا کو ذخیرہ کرنے کے لئے درکار صحت سے متعلق سطح پر منحصر ہے۔"
    },
    {
        "Question": "مصنوعات کے ٹیبل میں مصنوعات کی تعداد تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، اعشاریہ اور عددی اعداد و شمار کی اقسام کا استعمال ایک مخصوص صحت سے متعلق اور پیمانے کے ساتھ فکسڈ پوائنٹ اعشاریہ اعشاریہ اعداد کو ذخیرہ کرنے کے لئے کیا جاتا ہے۔زیادہ تر ڈیٹا بیس سسٹم میں ، یہ دونوں ڈیٹا اقسام مترادف ہیں اور تبادلہ خیال کے ساتھ استعمال کی جاسکتی ہیں۔تاہم ، کچھ ڈیٹا بیس سسٹم ان کو الگ الگ ڈیٹا کی اقسام کے طور پر سلوک کرسکتے ہیں ، اگرچہ اسی طرح کی خصوصیات کے باوجود۔یہاں اہم نکات ہیں: اعشاریہ اور عددی: دونوں اعشاریہ اور عددی دونوں فکسڈ پوائنٹ پوائنٹ اعشاریہ اعداد کو ذخیرہ کرنے کے لئے استعمال ہوتے ہیں۔) ذخیرہ شدہ اقدار کی۔ یہ اعداد و شمار کی اقسام عین مطابق اعشاریہ اقدار ، جیسے مالی یا مالیاتی اعداد و شمار کو ذخیرہ کرنے کے لئے موزوں ہیں ، جہاں صحت سے متعلق اہم ہے۔ اعشاریہ/عددی اقدار کی صحت سے متعلق اور پیمانے پر زیادہ سے زیادہ تعداد کا تعین کیا جاسکتا ہے جو ذخیرہ کیا جاسکتا ہے ، دونوں کو ذخیرہ کیا جاسکتا ہے۔اعشاریہ/عددی اقدار کا اصل اسٹوریج سائز صحت سے متعلق اور پیمانے کی بنیاد پر مختلف ہوتا ہے۔ڈیٹا کی اقسام عام طور پر ایس کیو ایل میں تبادلہ طور پر استعمال ہوتی ہیں۔وہ ایک مخصوص صحت سے متعلق اور پیمانے کے ساتھ اعشاریہ اعشاریہ کے عین مطابق ذخیرہ کرنے کی اجازت دیتے ہیں۔اعشاریہ اور عددی کے درمیان انتخاب اکثر مخصوص ڈیٹا بیس سسٹم کے ساتھ ترجیح یا مطابقت کا معاملہ ہوتا ہے۔"
    },
    {
        "Question": "پچھلے 30 دنوں میں تیار کردہ مصنوعات کو تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، چار اور ورچر دونوں کو کریکٹر سٹرنگ ڈیٹا کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے ، لیکن ان کے مابین کچھ اختلافات موجود ہیں: چار: چار ڈیٹا ٹائپ فکسڈ لمبائی کے کردار کے تاروں کو ذخیرہ کرنے کے لئے استعمال ہوتا ہے۔ جب آپ چار کالم کی وضاحت کرتے ہیں تو ، آپ زیادہ سے زیادہ وضاحت کرتے ہیں۔اس کے حامل حرفوں کی تعداد ، اور یہ ہمیشہ اس جگہ کی مقدار پر قبضہ کرے گی ، قطع نظر اس سے قطع نظر کہ ذخیرہ شدہ قیمت کی اصل لمبائی۔چار ویلیو کی بازیافت ہمیشہ مخصوص لمبائی کو واپس کردے گی ، بشمول ٹریلنگ خالی جگہوں سمیت۔ ورچار: ورچر: ورچار ڈیٹا کی قسم متغیر لمبائی کے کردار کے تاروں کو ذخیرہ کرنے کے لئے استعمال کی جاتی ہے۔ جب آپ ورچار کالم کی وضاحت کرتے ہیں تو ، آپ زیادہ سے زیادہ حرفوں کی وضاحت کرتے ہیں جس میں اس کی زیادہ سے زیادہ تعداد موجود ہے۔، لیکن یہ صرف قیمت کی اصل لمبائی کو ذخیرہ کرنے کے لئے اسٹوریج کی ضروری مقدار کا استعمال کرے گا۔ ورچار کالم کے لئے اسٹوریج کی جگہ متحرک ہے اور اس کا انحصار ذخیرہ شدہ قیمت کی لمبائی پر ہے۔ذخیرہ شدہ قیمت ، بغیر کسی ٹریلنگ خالی جگہوں کے۔ خلاصہ میں ، چار اور ورچار کے درمیان بنیادی فرق وہ ہے جس طرح سے وہ کریکٹر سٹرنگ ڈیٹا کو اسٹور کرتے ہیں۔چار اسٹورز فکسڈ لمبائی کے تاروں اور ہمیشہ مخصوص لمبائی پر قبضہ کرتے ہیں ، جبکہ ورچر متغیر لمبائی کے تاروں کو اسٹور کرتا ہے اور صرف قدر کی اصل لمبائی کی بنیاد پر ضروری اسٹوریج کا استعمال کرتا ہے۔چار اور ورچار کے مابین انتخاب کا انحصار اعداد و شمار کی ذخیرہ کرنے کی نوعیت اور مطلوبہ اسٹوریج سلوک پر ہے۔اگر اقدار کی لمبائی مستقل ہے تو ، چار زیادہ مناسب ہوسکتا ہے۔اگر لمبائی نمایاں طور پر مختلف ہوتی ہے تو ، اسٹوریج کی جگہ کے لحاظ سے عام طور پر ورچر زیادہ موثر ہوتا ہے۔"
    },
    {
        "Question": "پچھلے 30 دنوں میں اپ ڈیٹ ہونے والی مصنوعات کو تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، کالم یا کالموں کے سیٹ میں انفرادیت کو نافذ کرنے کے لئے بنیادی کلید اور منفرد کلید دونوں کا استعمال کیا جاتا ہے ، لیکن ان کے مابین کچھ اختلافات موجود ہیں: بنیادی کلید: ایک بنیادی کلید ایک کالم یا کالموں کا ایک سیٹ ہے جو ہر صف میں انفرادی طور پر شناخت کرتا ہے۔ایک ٹیبل۔ یہاں صرف ایک بنیادی کلید کی وضاحت کی جاسکتی ہے۔ ایک بنیادی کلیدی کالم (زبانیں) میں اقدار کو انوکھا ہونا چاہئے اور اس میں کالعدم اقدار پر مشتمل نہیں ہوسکتا ہے۔ بنیادی کلیدی رکاوٹ خود بخود کالم (زبانیں) پر ایک انوکھا انڈیکس بناتی ہے جس کو نافذ کرنے کے لئےانفرادیت اور تلاش کی کارکردگی کو بہتر بنائیں۔ عام طور پر ، بنیادی کلید کو غیر ملکی کلیدی تعلقات کے ذریعہ دوسرے جدولوں کے حوالہ کے طور پر استعمال کیا جاتا ہے۔ انویک کلید: ایک انوکھی کلید کالم یا کالموں کا ایک مجموعہ ہے جو کالم (زبانیں) کے اندر اقدار کی انفرادیت کو یقینی بناتا ہے۔.ملیپل انوکھی کلیدی رکاوٹوں کی وضاحت کسی ٹیبل میں کی جاسکتی ہے ، جس سے متعدد کالموں یا کالموں کے سیٹوں کو انوکھی اقدار کی اجازت دی جاسکتی ہے۔ ایک منفرد کلیدی کالم (زبانیں) میں اقدار کو منفرد ہونا چاہئے ، لیکن ایک بنیادی کلید کے برعکس ، کالعدم اقدار کی اجازت ہے (ساتھایک جامع منفرد کلید میں شامل کالموں کی رعایت جہاں NULL کو صرف ایک بار اجازت دی جاتی ہے). انوکھی کلیدی رکاوٹ انفرادیت کو نافذ کرنے اور تلاش کی کارکردگی کو بہتر بنانے کے لئے کالم (زبانیں) پر ایک انوکھا انڈیکس بھی تشکیل دیتی ہے۔ ایک بنیادی کلید کی طرح ، ایک انوکھی کلید کرتا ہے۔جدول کے لئے بنیادی شناخت کنندہ کے طور پر کام نہ کریں اور تعلقات کے لحاظ سے کسی خاص اہمیت کا مطلب نہیں۔ خلاصہ میں ، بنیادی کلید اور انوکھی کلید دونوں کالم یا کالموں کے سیٹ میں انفرادیت کو یقینی بناتے ہیں۔تاہم ، ایک بنیادی کلید ایک ٹیبل میں ہر صف کی انفرادی طور پر شناخت کرتی ہے ، انفرادیت اور غیر نول ہے ، اور اس ٹیبل کے لئے بنیادی شناخت کنندہ کے طور پر کام کرتی ہے۔دوسری طرف ، ایک انوکھی کلید انفرادیت کو نافذ کرتی ہے لیکن کالعدم اقدار کی اجازت دیتی ہے اور متعدد کالموں پر اس کی تعریف کی جاسکتی ہے۔"
    },
    {
        "Question": "پروڈکٹ_کیٹریجری_ آئی ڈی کالم پر زمرہ جات ٹیبل کے ساتھ پروڈکٹ ٹیبل میں شامل ہونے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، غیر ملکی کلید اور چیک کی رکاوٹیں اعداد و شمار کی سالمیت کے قواعد کو نافذ کرنے کے لئے استعمال کی جاتی ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: غیر ملکی کلیدی رکاوٹ: ایک غیر ملکی کلیدی رکاوٹ کا استعمال ایک رشتہ دار ڈیٹا بیس میں دو جدولوں کے مابین ریفرنٹل سالمیت کو نافذ کرنے کے لئے کیا جاتا ہے۔ایک ٹیبل میں کالم یا کالم (غیر ملکی کلید) کا سیٹ اور کسی دوسرے ٹیبل میں بنیادی کلید یا ایک انوکھی کلید (حوالہ کی کلید)۔ غیر ملکی کلیدی رکاوٹ اس بات کو یقینی بناتی ہے کہ غیر ملکی کلیدی کالم (زبانیں) میں اقدار سے ملتے ہیں۔حوالہ شدہ کلیدی کالم (زبانیں) میں یا کالعدم ہیں (اگر غیر ملکی کلیدی کالم کالعدم اقدار کی اجازت دیتا ہے) ۔یہ تعلقات کی خلاف ورزی کرنے والے اقدامات کو روکنے کے ذریعہ اعداد و شمار کی سالمیت اور مستقل مزاجی کو برقرار رکھنے میں مدد کرتا ہے ، جیسے غیر ملکی کلید میں قدر داخل کرنا۔کالم جو حوالہ دینے والے کلیدی کالم میں موجود نہیں ہے۔ چیک رکاوٹ: ایک ایسی حالت کی وضاحت کرکے ڈومین کی سالمیت کو نافذ کرنے کے لئے ایک چیک رکاوٹ کا استعمال کیا جاتا ہے جو ٹیبل میں ہر صف کے لئے سچ ہونا چاہئے۔ یہ آپ کو بولین اظہار کی وضاحت کرنے کی اجازت دیتا ہے جو سچائی کا اندازہ کرتا ہے۔یا غلط ، اور اس حالت کو جدول میں ہر صف کے لئے جانچ پڑتال کی جاتی ہے۔ چیک رکاوٹ اس بات کو یقینی بناتی ہے کہ مخصوص کالم (زبانیں) میں موجود ڈیٹا مخصوص حالت کو پورا کرتا ہے۔ اس کو اجازت دی گئی اقدار کی حد کو محدود کرنے ، ڈیٹا فارمیٹنگ کے قواعد کو نافذ کرنے کے لئے استعمال کیا جاسکتا ہے۔، یا کاروباری قواعد کو اعداد و شمار پر لاگو کریں۔ چیک رکاوٹ میں بیان کی گئی حالت ایک سادہ موازنہ یا ایک پیچیدہ اظہار ہوسکتی ہے جس میں متعدد کالم شامل ہیں۔ خلاصہ میں ، جدولوں کے مابین ریفرنٹل سالمیت کو نافذ کرنے کے لئے ایک غیر ملکی کلیدی رکاوٹ کا استعمال کیا جاتا ہے ، اس بات کو یقینی بناتا ہے کہ ایک میں اقدارغیر ملکی کلیدی کالم (زبانیں) اقدار کو ایک حوالہ شدہ کلیدی کالم (زبانیں) میں یا کالعدم ہیں۔دوسری طرف ، ایک چیک رکاوٹ کا استعمال ڈومین کی سالمیت کو نافذ کرنے کے لئے کیا جاتا ہے جس کی توثیق کرکے کہ ایک مخصوص حالت ایک میز میں ہر صف کے لئے درست ہے۔یہ آپ کو کسی ایک ٹیبل کے اندر موجود ڈیٹا پر کسٹم حالات یا قواعد کی وضاحت کرنے کی اجازت دیتا ہے۔"
    },
    {
        "Question": "\"\" \"لباس\" \"زمرہ میں موجود مصنوعات کو تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔\"",
        "Answer": "ایس کیو ایل میں ، کالم کی اقدار کے قواعد کی وضاحت کے لئے کالعدم اور پہلے سے طے شدہ رکاوٹوں کا استعمال نہیں کیا جاتا ہے ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: کالعدم نہیں رکاوٹیں اس بات کو یقینی بناتی ہیں کہ کالم میں کوئی نیلی اقدار نہیں ہوں گی۔ جب کالم کے ساتھ بیان کیا جاتا ہے۔کالعدم رکاوٹ نہیں ، اس کا مطلب یہ ہے کہ اس کالم میں ٹیبل کی ہر صف کی غیر نول قیمت ہونی چاہئے۔ یہ کسی قدر کی موجودگی کی ضرورت کے ذریعہ ڈیٹا کی سالمیت کو نافذ کرتا ہے ، اور جب اعداد و شمار میں عدم مطابقت یا غلطیوں کو روکنے میں مدد ملتی ہے جب کالعدم اقدار کی اجازت نہیں ہوتی ہے۔ایک مخصوص کالم۔ اگر کسی کالم میں کسی کالم میں کسی کالم میں کال نہ ہونے والی رکاوٹ کے ساتھ داخل کرنے کی کوشش کی جاتی ہے تو ، ڈیٹا بیس ایک غلطی میں اضافہ کرے گا ، اور اندراج ناکام ہوجائے گا۔ ڈیفالٹ رکاوٹ: پہلے سے طے شدہ رکاوٹ کو پہلے سے طے شدہ قیمت کی وضاحت کرنے کے لئے استعمال کیا جاتا ہے۔ایک کالم جب کسی داخل ہونے والے آپریشن کے دوران کوئی واضح قدر فراہم نہیں کی جاتی ہے۔ جب کسی کالم کی وضاحت پہلے سے طے شدہ رکاوٹ کے ساتھ کی جاتی ہے ، اگر کسی داخل ہونے والے بیان کے دوران اس کالم کے لئے واضح طور پر کوئی قدر فراہم نہیں کی جاتی ہے تو ، رکاوٹ میں متعین پہلے سے طے شدہ قیمت استعمال کی جائے گی۔ اس کی اجازت ہوگی۔آپ کسی پہلے سے طے شدہ قیمت کی وضاحت کریں گے جو خود بخود کالم کو تفویض کردی جاتی ہے اگر کوئی دوسری قیمت فراہم نہیں کی جاتی ہے۔ پہلے سے طے شدہ قیمت مستقل قیمت ، اظہار یا سسٹم سے طے شدہ فنکشن ہوسکتی ہے۔ خلاصہ میں ، کالعدم رکاوٹ اس بات کو یقینی بناتی ہے کہ ایک کالم اس بات کو یقینی بناتا ہے۔NULL اقدار کی اجازت نہیں دیتا ہے ، جبکہ پہلے سے طے شدہ رکاوٹ کسی پہلے سے طے شدہ قیمت کی وضاحت کرتی ہے جو استعمال کی جاتی ہے جب کوئی واضح قیمت فراہم نہیں کی جاتی ہے۔NULL کسی قدر کی موجودگی کو نافذ نہیں کرتا ہے ، جبکہ ڈیفالٹ ڈیفالٹ ویلیو فراہم کرتا ہے جب کوئی قیمت واضح طور پر نہیں دی جاتی ہے۔"
    },
    {
        "Question": "\"\" \"جوتے\" \"زمرے میں موجود مصنوعات کو تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں اور اس کی قیمت 50.00 سے زیادہ ہے۔\"",
        "Answer": "ایس کیو ایل میں ، کالم یا کالموں کے سیٹ میں انفرادیت کو نافذ کرنے کے لئے دونوں منفرد اور بنیادی کلیدی رکاوٹیں استعمال کی جاتی ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: انوکھی رکاوٹ: منفرد رکاوٹ اس بات کو یقینی بناتی ہے کہ کالم یا کالموں کے سیٹ میں اقدار منفرد ہیں۔مخصوص کالم (زبانیں) میں صرف ایک بار ہونے والی ہر قیمت ، یعنی کسی ڈپلیکیٹ اقدار کی اجازت نہیں ہے۔ ملٹیپل انوکھی رکاوٹوں کو ایک جدول میں بیان کیا جاسکتا ہے ، جس سے مختلف کالموں یا کالموں کے سیٹوں کو انوکھی اقدار کی اجازت دی جاسکتی ہے۔ انویک رکاوٹوں میں کالعدم اقدار شامل ہوسکتی ہیں ،اور متعدد قطاروں میں کالموں میں انفرادیت کی ضرورت کی خلاف ورزی کے بغیر منفرد رکاوٹوں کے ساتھ کالموں میں کالعدم اقدار ہوسکتے ہیں۔ منفرد رکاوٹ انفرادیت کو نافذ کرنے اور تلاش کی کارکردگی کو بہتر بنانے کے لئے کالم (زبانیں) پر ایک انوکھا انڈیکس تشکیل دیتی ہے۔ بنیادی کلیدی رکاوٹ: ایک ہے۔خصوصی قسم کی انوکھی رکاوٹ جو ہر صف کو ایک ٹیبل میں منفرد طور پر شناخت کرتی ہے۔ یہ کسی ٹیبل کے لئے بنیادی شناخت کنندہ کی وضاحت کرنے کے لئے استعمال کیا جاتا ہے ، عام طور پر کسی ایک کالم یا کالموں کے سیٹ کو بنیادی کلید کے طور پر بیان کرکے۔ صرف ایک بنیادی کلید کی وضاحت کی جاسکتی ہے۔فی جدول۔ پرائمری کلیدی کالم (زبانیں) میں اقدار کو منفرد ہونا چاہئے اور اس میں کالعدم اقدار پر مشتمل نہیں ہوسکتا ہے۔ بنیادی کلیدی رکاوٹ خود بخود کالم (زبانیں) پر ایک انوکھا انڈیکس تشکیل دیتی ہے تاکہ انفرادیت کو نافذ کیا جاسکے اور تلاش کی کارکردگی کو بہتر بنایا جاسکے۔ بنیادی کلید اکثر ہوتی ہے۔غیر ملکی کلیدی تعلقات کے ذریعہ دیگر جدولوں کے حوالہ کے طور پر استعمال کیا جاتا ہے۔ خلاصہ میں ، دونوں ہی منفرد اور بنیادی کلیدی رکاوٹیں کالم یا کالموں کے سیٹ میں انفرادیت کو نافذ کرتی ہیں۔تاہم ، ایک انوکھا رکاوٹ NULL اقدار کے متعدد واقعات کی اجازت دیتی ہے اور اس کی وضاحت متعدد کالموں پر کی جاسکتی ہے ، جبکہ ایک بنیادی کلیدی رکاوٹ ایک میز میں ہر قطار کی انفرادی طور پر شناخت کرتی ہے ، کالعدم اقدار کی اجازت نہیں دیتی ہے ، اور عام طور پر جدول کے لئے بنیادی شناخت کنندہ کے طور پر استعمال ہوتی ہے۔"
    },
    {
        "Question": "\"قیمت کے لحاظ سے مصنوعات کو آرڈر کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔\"",
        "Answer": "ایس کیو ایل میں ، اعداد و شمار کی سالمیت کے قواعد کو نافذ کرنے کے لئے چیک اور غیر ملکی کلیدی دونوں رکاوٹیں استعمال کی جاتی ہیں ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: چیک رکاوٹ: ایک ایسی حالت کی وضاحت کرنے کے لئے ایک چیک رکاوٹ کا استعمال کیا جاتا ہے جو ایک میز میں ہر قطار کے لئے درست ہونا چاہئے۔ یہ آپ کو اجازت دیتا ہے۔ایک بولین اظہار یا حالت کی وضاحت کریں جو کالم میں اجازت دی گئی اقدار کو محدود کرتی ہے۔ چیک کی رکاوٹ کالم کی سطح پر لگائی جاتی ہے اور ہر صف کے لئے انفرادی طور پر اندازہ کیا جاتا ہے۔ اس کا استعمال ڈومین کی سالمیت کو نافذ کرنے ، کاروباری قواعد کو لاگو کرنے ، یا حد کو محدود کرنے کے لئے کیا جاسکتا ہے۔کالم میں اجازت دی گئی اقدار۔ چیک رکاوٹ میں ایک یا زیادہ کالم شامل ہوسکتے ہیں اور اس میں سادہ موازنہ یا پیچیدہ اظہار شامل ہوسکتے ہیں۔ایک ٹیبل میں کالم یا کالم (غیر ملکی کلید) کے سیٹ کے درمیان اور کسی اور ٹیبل میں بنیادی کلید یا ایک منفرد کلید (حوالہ دینے والی کلید)حوالہ شدہ کلیدی کالم (زبانیں) میں اقدار یا کالعدم ہیں (اگر غیر ملکی کلیدی کالم کالعدم اقدار کی اجازت دیتا ہے) ۔یہ تعلقات کی خلاف ورزی کرنے والے اقدامات کو روکنے کے ذریعہ اعداد و شمار کی سالمیت اور مستقل مزاجی کو برقرار رکھنے میں مدد کرتا ہے ، جیسے غیر ملکی میں قدر داخل کرنا۔کلیدی کالم جو حوالہ شدہ کلیدی کالم میں موجود نہیں ہے۔ خلاصہ یہ ہے کہ ، ایک ایسی حالت کی وضاحت کرنے کے لئے ایک چیک رکاوٹ کا استعمال کیا جاتا ہے جو ایک میز میں ہر قطار کے لئے درست ہونا چاہئے ، جبکہ میزوں کے مابین ریفرنٹل سالمیت کو نافذ کرنے کے لئے ایک غیر ملکی کلیدی رکاوٹ کا استعمال کیا جاتا ہے۔چیک کی رکاوٹ کالم کی سطح پر لگائی جاتی ہے اور کسی مخصوص حالت کی بنیاد پر کالم میں اجازت دی گئی اقدار کو محدود کرتی ہے۔دوسری طرف ، غیر ملکی کلیدی رکاوٹ میزوں کے مابین ایک رشتہ قائم کرتی ہے ، اس بات کو یقینی بناتی ہے کہ غیر ملکی کلیدی کالم (زبانیں) میں اقدار حوالہ شدہ کلیدی کالم (زبانیں) میں موجود اقدار سے ملتے ہیں یا کالعدم ہیں۔"
    },
    {
        "Question": "فروری کے مہینے میں سب سے زیادہ مشہور مصنوعات تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، کالم کی اقدار کے قواعد کی وضاحت کے لئے کالعدم اور پہلے سے طے شدہ رکاوٹوں کا استعمال نہیں کیا جاتا ہے ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں: کالعدم نہیں رکاوٹیں اس بات کو یقینی بناتی ہیں کہ کالم میں کوئی نیلی اقدار نہیں ہوں گی۔ جب کالم کے ساتھ بیان کیا جاتا ہے۔کالعدم رکاوٹ نہیں ، اس کا مطلب یہ ہے کہ اس کالم میں ٹیبل کی ہر صف کی غیر نول قیمت ہونی چاہئے۔ یہ کسی قدر کی موجودگی کی ضرورت کے ذریعہ ڈیٹا کی سالمیت کو نافذ کرتا ہے ، اور جب اعداد و شمار میں عدم مطابقت یا غلطیوں کو روکنے میں مدد ملتی ہے جب کالعدم اقدار کی اجازت نہیں ہوتی ہے۔ایک مخصوص کالم۔ اگر کسی کالم میں کسی کالم میں کسی کالم میں کال نہ ہونے والی رکاوٹ کے ساتھ داخل کرنے کی کوشش کی جاتی ہے تو ، ڈیٹا بیس ایک غلطی میں اضافہ کرے گا ، اور اندراج ناکام ہوجائے گا۔ ڈیفالٹ رکاوٹ: پہلے سے طے شدہ رکاوٹ کو پہلے سے طے شدہ قیمت کی وضاحت کرنے کے لئے استعمال کیا جاتا ہے۔ایک کالم جب کسی داخل ہونے والے آپریشن کے دوران کوئی واضح قدر فراہم نہیں کی جاتی ہے۔ جب کسی کالم کی وضاحت پہلے سے طے شدہ رکاوٹ کے ساتھ کی جاتی ہے ، اگر کسی داخل ہونے والے بیان کے دوران اس کالم کے لئے واضح طور پر کوئی قدر فراہم نہیں کی جاتی ہے تو ، رکاوٹ میں متعین پہلے سے طے شدہ قیمت استعمال کی جائے گی۔ اس کی اجازت ہوگی۔آپ کسی پہلے سے طے شدہ قیمت کی وضاحت کریں گے جو خود بخود کالم کو تفویض کردی جاتی ہے اگر کوئی دوسری قیمت فراہم نہیں کی جاتی ہے۔ پہلے سے طے شدہ قیمت مستقل قیمت ، اظہار یا سسٹم سے طے شدہ فنکشن ہوسکتی ہے۔ خلاصہ میں ، کالعدم رکاوٹ اس بات کو یقینی بناتی ہے کہ ایک کالم اس بات کو یقینی بناتا ہے۔NULL اقدار کی اجازت نہیں دیتا ہے ، جبکہ پہلے سے طے شدہ رکاوٹ کسی پہلے سے طے شدہ قیمت کی وضاحت کرتی ہے جو استعمال کی جاتی ہے جب کوئی واضح قیمت فراہم نہیں کی جاتی ہے۔NULL کسی قدر کی موجودگی کو نافذ نہیں کرتا ہے ، جبکہ ڈیفالٹ ڈیفالٹ ویلیو فراہم کرتا ہے جب کوئی قیمت واضح طور پر نہیں دی جاتی ہے۔"
    },
    {
        "Question": "نیو یارک شہر میں سب سے زیادہ مشہور مصنوعات تلاش کرنے کے لئے ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، ٹیبل سے ڈیٹا کو ہٹانے کے لئے بیانات سے تراشے جانے والے ٹیبل اور حذف کرنے والے دونوں کو استعمال کیا جاتا ہے ، لیکن وہ مختلف طریقوں سے کام کرتے ہیں: ٹیبل ٹیبل بیان: ٹیبل ٹیبل کا بیان ایک ٹیبل سے تمام قطاروں کو ہٹانے کے لئے استعمال کیا جاتا ہے۔ یہ ایک تیز اور موثر ہے۔آپریشن جو ٹیبل سے وابستہ ڈیٹا کے صفحات کو جلدی سے ختم کرتا ہے ، ٹیبل کو مؤثر طریقے سے خالی حالت میں دوبارہ ترتیب دیتا ہے۔ بیان سے حذف کرنے کے بغیر ، جو قطاروں کو ایک ایک کرکے ہٹاتا ہے ، تراشنے والی میز ایک ہی آپریشن میں تمام قطاریں ہٹاتی ہے ، جس سے یہ تیز اور کم وسائل بن جاتا ہے۔جب آپ کسی ٹیبل کو چھوٹا کرتے ہیں تو ، ٹیبل کا ڈھانچہ ، اشاریہ جات اور رکاوٹیں برقرار رہتی ہیں ، لیکن اعداد و شمار کو حذف کردیا جاتا ہے۔ کسی ٹیبل کو ٹرنکیٹ کرنا ختم نہیں کیا جاسکتا ہے ، اور آپریشن ٹرانزیکشن لاگ (کچھ ڈیٹا بیس سسٹم میں) میں لاگ ان نہیں ہوتا ہے ،لہذا اس کو واپس نہیں کیا جاسکتا۔ ایڈیشنل طور پر ، ٹرنکیٹ ٹیبل عام طور پر کسی بھی آٹو انکریمنٹنگ شناختی کالموں یا ترتیب کی اقدار کو ان کی ابتدائی حالت میں دوبارہ سیٹ کرتا ہے۔ بیان سے بیان کریں: بیان سے حذف شدہ مخصوص قطاروں سے مخصوص قطاروں کو مخصوص حالتوں پر مبنی ٹیبل سے ہٹانے کے لئے استعمال کیا جاتا ہے۔آپ کو یہ بتانے کی اجازت دیتا ہے کہ جہاں شق کو یہ معلوم کرنے کے لئے کہ کون سی قطاریں جدول سے حذف کردی جانی چاہئیں۔ بیان سے حذف کرنے سے قطاروں کو ایک ایک کرکے ہٹا دیتا ہے ، اور ہر صف کو حذف کرنے سے لین دین لاگ (زیادہ تر ڈیٹا بیس سسٹم میں) لاگ ان ہوتا ہے ، جس کے امکان کے امکان کی اجازت ہوتی ہے۔آپریشن کو واپس کرنا۔ غیر منقطع ٹیبل کو ، بیان سے حذف کرنا ایک سست آپریشن ہے ، خاص طور پر بڑی میزوں کے لئے ، کیونکہ اس میں قطاروں کو انفرادی طور پر اسکین کرنا اور حذف کرنا شامل ہے۔ جب آپ قطار کو حذف کرتے ہیں تو ، ٹیبل ڈھانچے ، اشاریہ جات اور رکاوٹوں کو برقرار رکھتے ہیں۔، اور صرف مخصوص قطاروں کو ہٹا دیا گیا ہے۔ خلاصہ میں ، ٹرنکیٹ ٹیبل ایک ہی آپریشن میں ایک میز سے تمام قطاریں ہٹاتا ہے ، ٹیبل کو جلدی سے خالی حالت میں دوبارہ ترتیب دیتا ہے ، جبکہ شرائط کی بنیاد پر مخصوص قطاروں کو ہٹاتا ہے ، جو قطار میں کام کرنے والی قطار ہے۔ٹرنکیٹ ٹیبل تیز اور کم وسائل سے متعلق ہے ، لیکن اسے واپس نہیں لایا جاسکتا ، جبکہ حذف کرنے سے آہستہ ہے لیکن حذف کرنے کے عمل پر زیادہ کنٹرول فراہم کرتا ہے اور ٹرانزیکشنل رول بیک کی اجازت دیتا ہے۔"
    },
    {
        "Question": "25 سے 34 سال کی عمر کے لوگوں میں سب سے زیادہ مقبول مصنوعات تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، ٹیبل اور ڈراپ ٹیبل کے بیانات کو بالترتیب ٹیبل بنانے اور ڈراپ کرنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ مخالف طریقوں سے کام کرتے ہیں: ٹیبل اسٹیٹمنٹ بنائیں: ٹیبل اسٹیٹمنٹ کو ایک ڈیٹا بیس میں ایک نیا ٹیبل بنانے کے لئے استعمال کیا جاتا ہے۔ یہ ٹیبل کی وضاحت کرتا ہے۔کالموں اور ان کے متعلقہ اعداد و شمار کی اقسام ، رکاوٹوں اور دیگر ٹیبل پراپرٹیز کا نام اور اس کی وضاحت کرتا ہے۔ جب ٹیبل کے بیان پر عملدرآمد کرتے ہو تو ، ڈیٹا بیس سسٹم فراہم کردہ وضاحتوں پر مبنی ایک نیا ٹیبل تیار کرتا ہے ، جس میں ضروری اسٹوریج کی جگہ مختص کرتی ہے اور ٹیبل ڈھانچے کو ترتیب دیتے ہیں۔تخلیق ٹیبل کا بیان عام طور پر ایک بار ٹیبل کو ابتدائی طور پر ترتیب دینے کے لئے استعمال کیا جاتا ہے ، اور اس کے بعد ٹیبل ڈھانچے میں ترمیم ٹیبل کے بیانات کے ذریعے کی جاتی ہے۔ ڈراپ ٹیبل بیان: ڈراپ ٹیبل کا بیان کسی ڈیٹا بیس سے کسی موجودہ ٹیبل کو حذف یا ہٹانے کے لئے استعمال کیا جاتا ہے۔ڈراپ ٹیبل بیان پر عمل کرتے وقت ، ڈیٹا بیس کا نظام اپنے تمام اعداد و شمار ، اشاریہ جات ، رکاوٹوں اور اس سے وابستہ اشیاء کے ساتھ مخصوص جدول کو مستقل طور پر حذف کرتا ہے۔ ڈراپ ٹیبل کا بیان ناقابل واپسی ہے ، اور ایک بار اس پر عمل درآمد کیا جاتا ہے ، جب تک کہ آپ ٹیبل اور اس کے ڈیٹا کو بازیافت نہیں کیا جاسکتا ہے۔بیک اپ رکھیں۔ ڈراپ ٹیبل کے بیان کو استعمال کرتے وقت احتیاط کا استعمال کرنا ضروری ہے کیونکہ اس کے نتیجے میں اعداد و شمار میں کمی واقع ہوسکتی ہے۔ڈراپ ٹیبل کا بیان موجودہ ٹیبل اور اس سے وابستہ تمام اشیاء کو ڈیٹا بیس سے مستقل طور پر حذف کرنے کے لئے استعمال کیا جاتا ہے۔تخلیق ٹیبل بیان ٹیبل کو ترتیب دیتا ہے ، جبکہ ڈراپ ٹیبل کا بیان اسے ہٹا دیتا ہے۔"
    },
    {
        "Question": "\"ان مصنوعات کو تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں جو ان لوگوں میں سب سے زیادہ مقبول ہیں جن کی گھریلو آمدنی ، 000 100،000 سے زیادہ ہے۔\"",
        "Answer": "ایس کیو ایل میں ، ڈیٹا بیس اور ڈراپ ڈیٹا بیس کے بیانات کو بالترتیب ڈیٹا بیس بنانے اور ڈراپ کرنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ مخالف طریقوں سے کام کرتے ہیں: ڈیٹا بیس کا بیان بنائیں: ڈیٹا بیس کے انتظام کے نظام میں ایک نیا ڈیٹا بیس بنانے کے لئے استعمال کیا جاتا ہے۔ڈیٹا بیس کا نام پیدا کرنے کے لئے۔ جب ڈیٹا بیس کے بیان کو انجام دینے کے بعد ، ڈیٹا بیس مینجمنٹ سسٹم مخصوص نام کے ساتھ ایک نیا ڈیٹا بیس بناتا ہے اور ضروری اسٹوریج کی جگہ مختص کرتا ہے۔ ڈیٹا بیس کے بیان میں ڈیٹا بیس کے کریکٹر سیٹ کی وضاحت کرنے کے لئے اضافی پیرامیٹرز بھی شامل ہوسکتے ہیں۔، کولیشن ، اور دیگر پراپرٹیز۔ ایک بار ڈیٹا بیس بنائے جانے کے بعد ، آپ اسے ٹیبلز بنانے ، اسکیما آبجیکٹ کی وضاحت کرنے ، اور ڈیٹا کو اسٹور کرنے کے لئے استعمال کرسکتے ہیں۔ ڈیٹا بیس کا بیان: ڈراپ ڈیٹا بیس کا بیان ڈیٹا بیس مینجمنٹ سے موجودہ ڈیٹا بیس کو حذف یا ہٹانے کے لئے استعمال کیا جاتا ہے۔سسٹم۔ جب ڈراپ ڈیٹا بیس کے بیان پر عمل درآمد کرتے ہیں تو ، ڈیٹا بیس مینجمنٹ سسٹم اپنے تمام جدولوں ، آراء ، ذخیرہ شدہ طریقہ کار اور دیگر ڈیٹا بیس آبجیکٹ کے ساتھ مخصوص ڈیٹا بیس کو مستقل طور پر حذف کرتا ہے۔ ڈراپ ڈیٹا بیس کا بیان ناقابل واپسی ہے ، اور ایک بار اس پر عمل درآمد ، ڈیٹا بیس اور اس کے تمام تماموابستہ اشیاء کو بازیافت نہیں کیا جاسکتا جب تک کہ آپ کے پاس بیک اپ نہ ہو۔ ڈراپ ڈیٹا بیس کے بیان کو استعمال کرتے وقت احتیاط کا استعمال کرنا ضروری ہے کیونکہ اس کے نتیجے میں اعداد و شمار میں کمی واقع ہوسکتی ہے اگر غلط استعمال کیا جاتا ہے۔ خلاصہ میں ، تخلیق ڈیٹا بیس کا بیان ایک نیا ڈیٹا بیس بنانے کے لئے استعمال کیا جاتا ہے ، جبکہ ایک نیا ڈیٹا بیس بنانے کے لئے استعمال کیا جاتا ہے ، جبکہڈراپ ڈیٹا بیس کا بیان موجودہ ڈیٹا بیس اور اس سے وابستہ تمام اشیاء کو مستقل طور پر حذف کرنے کے لئے استعمال کیا جاتا ہے۔تخلیق ڈیٹا بیس کا بیان ڈیٹا بیس کو مرتب کرتا ہے ، جبکہ ڈراپ ڈیٹا بیس کا بیان اسے ہٹا دیتا ہے۔"
    },
    {
        "Question": "کالج کی ڈگری رکھنے والے لوگوں میں سب سے زیادہ مقبول مصنوعات تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، بیک اپ اور بحالی کے کاموں کے لئے بیک اپ ڈیٹا بیس اور بحالی ڈیٹا بیس کے بیانات کا استعمال بالترتیب: بیک اپ ڈیٹا بیس بیان: بیک اپ ڈیٹا بیس کا بیان ڈیٹا بیس کا بیک اپ بنانے کے لئے استعمال کیا جاتا ہے ، عام طور پر بیک اپ فائل یا بیک اپ سیٹ کی شکل میں یا بیک اپ سیٹ. جب بیک اپ ڈیٹا بیس کے بیان پر عمل درآمد کرتے ہیں تو ، آپ کو بیک اپ لینے کے لئے ڈیٹا بیس کا نام اور اس منزل کی وضاحت کی جاتی ہے جہاں بیک اپ محفوظ کیا جائے گا۔ بیک اپ کو ڈسک ، ٹیپ ، یا کسی دوسرے اسٹوریج میڈیم پر محفوظ کیا جاسکتا ہے جو ڈیٹا بیس مینجمنٹ سسٹم کے ذریعہ سپورٹ کیا جاتا ہے۔. بیک اپ ڈیٹا بیس کا بیان اس کے ڈیٹا ، اسکیما ، اور دیگر ڈیٹا بیس آبجیکٹ سمیت پورے ڈیٹا بیس کو اپنی گرفت میں لے جاتا ہے۔ یہ ڈیٹا بیس کا ایک نقطہ وقت سنیپ شاٹ فراہم کرتا ہے ، جس سے آپ بیک اپ کے وقت اسے ریاست میں بحال کرسکتے ہیں۔ڈیٹا بیس کا بیان: بحالی ڈیٹا بیس کے بیان کو پہلے سے بنائے گئے بیک اپ سے ڈیٹا بیس کو بحال کرنے کے لئے استعمال کیا جاتا ہے۔ جب ڈیٹا بیس کے بیان کو بحال کرنے کے بعد ، آپ ڈیٹا بیس کا نام بحال کرنے کے لئے بتاتے ہیں اور جس ذریعہ سے بیک اپ حاصل کیا جائے گا۔بیک اپ فائل ، بیک اپ سیٹ ، یا بیک اپ ڈیوائس سے حاصل کیا جائے۔ ڈیٹا بیس کا بیان بازیافت بیک اپ کا استعمال کرتے ہوئے ڈیٹا بیس کو دوبارہ بناتا ہے ، ڈیٹا ، اسکیما اور دیگر ڈیٹا بیس آبجیکٹ کو بحال کرتا ہے۔، یا بیک اپ ڈاٹ کام میں پکڑی جانے والی پچھلی ریاست کے لئے ، بیک اپ ڈیٹا بیس بیان کو ڈیٹا بیس کا بیک اپ بنانے کے لئے استعمال کیا جاتا ہے ، اس کے ڈیٹا اور اسکیما کو اپنی گرفت میں لے لیا جاتا ہے ، جبکہ بحالی ڈیٹا بیس کے بیان کو پہلے سے تیار کردہ بیک اپ سے ڈیٹا بیس کو بحال کرنے کے لئے استعمال کیا جاتا ہے۔، ڈیٹا بیس کو دوبارہ بنانا اور اس کے ڈیٹا اور اسکیما کو بحال کرنا۔بیک اپ ڈیٹا بیس کا بیان بیک اپ تشکیل دیتا ہے ، جبکہ بحالی ڈیٹا بیس کا بیان اس بیک اپ کو ڈیٹا بیس کو بحال کرنے کے لئے استعمال کرتا ہے۔"
    },
    {
        "Question": "ان مصنوعات کو تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں جو شادی شدہ لوگوں میں سب سے زیادہ مقبول ہیں۔",
        "Answer": "ایس کیو ایل میں ، گرانٹ اور کالعدم بیانات کو کسی ڈیٹا بیس کے اندر اجازت اور مراعات کا انتظام کرنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ مخالف طریقوں سے کام کرتے ہیں: گرانٹ کا بیان: گرانٹ کا بیان صارفین کو مخصوص مراعات یا اجازت دینے کے لئے استعمال کیا جاتا ہے۔گرانٹ کا بیان ، آپ کو دیئے جانے والے مراعات کی وضاحت کرتے ہیں ، وہ صارفین یا کردار جن کو مراعات دینی چاہئیں ، اور وہ اشیاء جن پر مراعات کا اطلاق ہوتا ہے (جیسے ، میزیں ، آراء ، طریقہ کار)جیسا کہ منتخب کریں ، داخل کریں ، اپ ڈیٹ کریں ، حذف کریں ، تخلیق کریں ، ڈراپ کریں ، اور بہت کچھ۔ گرانٹ کے بیان سے آپ کو یہ کنٹرول کرنے کی اجازت ملتی ہے کہ صارف یا کردار ڈیٹا بیس کے اندر کون سے آپریشنز اور آبجیکٹ تک رسائی حاصل کرسکتے ہیں۔مختلف صارفین یا کردار۔ ریوکیٹ بیان: منسوخ کرنے والا بیان ایک ڈیٹا بیس میں صارفین یا کرداروں سے پہلے دیئے گئے مراعات یا ہٹانے کے لئے استعمال کیا جاتا ہے۔ جب آپ منسوخ ہونے والے بیان پر عملدرآمد کرتے ہیں تو ، آپ ان مراعات کو منسوخ کرنے کے لئے واضح کرتے ہیں ، جن سے مراعات یا ایسے کردار ہیں جن سے مراعات یافتہ ہیں۔منسوخ کیا جانا چاہئے ، اور جن اشیاء سے مراعات کو منسوخ کیا جاتا ہے۔ منسوخ کرنے والا بیان مؤثر طریقے سے صارفین یا کرداروں سے مخصوص مراعات کو دور کرتا ہے ، جس سے ان کی رسائی اور اشیاء پر ان کی رسائی پر پابندی عائد ہوتی ہے۔ضرورت کے مطابق کردار ، کچھ آپریشنز یا اشیاء تک رسائی کو محدود کرنے یا منسوخ کرنے کا ایک طریقہ فراہم کرنا۔کردار ، ان کو مخصوص اشیاء پر مخصوص اقدامات کرنے کی اجازت دیتے ہیں۔منسوخ کرنے والے بیان کا استعمال پہلے دیئے گئے مراعات کو منسوخ کرنے کے لئے کیا جاتا ہے ، جو مؤثر طریقے سے کچھ اقدامات یا اشیاء تک رسائی کو دور کرتا ہے۔گرانٹ گرانٹ مراعات دیتا ہے ، جبکہ ریکوکی مراعات کو دور کرتا ہے۔"
    },
    {
        "Question": "ان مصنوعات کو تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں جو ان لوگوں میں سب سے زیادہ مشہور ہیں جن کے بچے ہیں۔",
        "Answer": "ایس کیو ایل میں ، فلش مراعات اور فلش ٹیبلز کے بیانات کو مختلف آپریشنز انجام دینے کے لئے استعمال کیا جاتا ہے: فلش مراعات کا بیان: فلش مراعات کے بیان کو گرانٹ ٹیبلز کو دوبارہ لوڈ کرنے اور ایس کیو ایل سرور میں مراعات کو تازہ کرنے کے لئے استعمال کیا جاتا ہے۔ یہ عام طور پر گرانٹ ٹیبلز میں ترمیم کرنے کے بعد استعمال ہوتا ہے۔براہ راست گرانٹ ، کالعدم ، یا دیگر استحقاق سے متعلق بیانات کا استعمال کرتے ہوئے ، یا بنیادی صارف اور استحقاق کی معلومات میں تبدیلی لانے کے بعد۔ جب فلش مراعات کے بیان پر عمل درآمد کرتے ہیں تو ، ایس کیو ایل سرور گرانٹ ٹیبل کو ڈسک سے دوبارہ لوڈ کرتا ہے ، صارف کی مراعات کو دوبارہ تشکیل دیتا ہے ، اور کوئی بھی لاگو ہوتا ہے ، اور کوئی بھی لاگو ہوتا ہے۔استحقاق کے نظام میں کی جانے والی تبدیلیاں۔ یہ بیان چلانے والے رابطوں یا فعال سیشنوں کو متاثر نہیں کرتا ہے۔یہ صرف بعد کے رابطے کی کوششوں کو متاثر کرتا ہے۔ فلش ٹیبلز کا بیان: فلش ٹیبلز کا بیان میزوں کو بند کرنے اور دوبارہ کھولنے کے لئے استعمال کیا جاتا ہے ، کسی بھی کیشڈ ڈیٹا کو مؤثر طریقے سے فلش کرتے ہیں اور ٹیبل اسٹیٹس کو دوبارہ ترتیب دیتے ہیں۔ یہ عام طور پر ایسے منظرناموں میں استعمال ہوتا ہے جہاں آپ اس بات کو یقینی بنانا چاہتے ہیں کہ تمام زیر التواء تبدیلیاں لکھی گئی ہیں۔ڈسک اور اس ٹیبل کے تالے جاری کردیئے جاتے ہیں۔ جب فلش ٹیبلز کے بیان کو عملی جامہ پہنانے سے ، ایس کیو ایل سرور تمام کھلی میزیں بند کردیتا ہے ، تمام تبدیلیوں کو ڈسک پر مجبور کرتا ہے ، اور موجودہ سیشن کے پاس موجود کسی بھی ٹیبل تالے کو جاری کرتا ہے۔ یہ بیان ان معاملات میں مفید ثابت ہوسکتا ہے جہاں آپ ہوں۔انتظامی کام انجام دینے کی ضرورت ہے ، جیسے ڈیٹا بیس فائلوں کی پشت پناہی یا کاپی کرنا۔ خلاصہ میں ، فلش مراعات کے بیان کو گرانٹ ٹیبلز کو دوبارہ لوڈ کرنے اور ایس کیو ایل سرور میں صارف کے مراعات کو تازہ دم کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ فلش ٹیبلز کا بیان ٹیبل بند کرنے اور دوبارہ کھولنے کے لئے استعمال کیا جاتا ہے۔، کیشڈ ڈیٹا کو فلش کرنا اور ٹیبل تالے جاری کرنا۔فلش مراعات استحقاق کے نظام کو اپ ڈیٹ کرتی ہیں ، جبکہ فلش ٹیبل ٹیبل ریاستوں کو دوبارہ سیٹ کرتے ہیں۔"
    },
    {
        "Question": "ان مصنوعات کو تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں جو کتے کے مالک لوگوں میں سب سے زیادہ مقبول ہیں۔",
        "Answer": "ایس کیو ایل میں ، شو ٹیبلز اور ٹیبل کے بیانات کو ڈیٹا بیس میں جدولوں کے بارے میں معلومات کو بازیافت کرنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ مختلف قسم کی معلومات فراہم کرتے ہیں: ٹیبلز کا بیان دکھائیں: شو ٹیبلز کا بیان ٹیبلز کو ڈیٹا بیس میں درج کرنے کے لئے استعمال کیا جاتا ہے۔ جب اس پر عمل درآمد ہوتا ہے۔ٹیبلز کا بیان دکھائیں ، ایس کیو ایل سرور موجودہ ڈیٹا بیس میں موجود تمام جدولوں کے ناموں پر مشتمل نتیجہ سیٹ لوٹاتا ہے۔ یہ ان کے ڈھانچے یا کالموں کے بارے میں تفصیلی معلومات کے بغیر جدولوں کی فہرست کو بازیافت کرنے کا ایک تیز طریقہ فراہم کرتا ہے۔ جب آپ کو ضرورت ہو تو یہ بیان مفید ہے۔کسی ڈیٹا بیس میں موجود جدولوں کا جائزہ دیکھنے کے لئے۔ ٹیبل بیان کی وضاحت کریں: ٹیبل بیان ، یا متبادل طور پر ڈیسک ٹیبل کی وضاحت کریں یا کالم دکھائیں ، کسی خاص جدول کی ساخت اور میٹا ڈیٹا کو ظاہر کرنے کے لئے استعمال کیا جاتا ہے۔ جب جدول کے بیان کی وضاحت کریں ،ایس کیو ایل سرور کالم جیسے فیلڈ ، ٹائپ ، نول ، کلید ، ڈیفالٹ ، اور اضافی کے ساتھ ایک نتیجہ سیٹ واپس کرتا ہے ، جو مخصوص ٹیبل میں ہر کالم کے بارے میں معلومات فراہم کرتا ہے۔اقدار ، کالم کی کلید (جیسے ، بنیادی کلید یا غیر ملکی کلید) ، پہلے سے طے شدہ اقدار ، اور کوئی اضافی معلومات۔ یہ بیان مفید ہے جب آپ کسی خاص جدول کی ساخت کی جانچ کرنا چاہتے ہیں ، جس میں کالم کے نام ، ڈیٹا کی قسمیں ، اور مختلف خصوصیات شامل ہیں۔کالموں میں خلاصہ ، شو ٹیبلز کا بیان ایک ڈیٹا بیس میں ٹیبل کے ناموں کی ایک فہرست فراہم کرتا ہے ، جبکہ ٹیبل کا بیان بیان ایک مخصوص جدول کے ڈھانچے اور میٹا ڈیٹا کے بارے میں تفصیلی معلومات فراہم کرتا ہے ، جس میں کالم کے نام ، ڈیٹا کی اقسام اور کالم کی خصوصیات شامل ہیں۔ٹیبلز کی فہرست میں ٹیبل کے نام دکھائیں ، جبکہ ٹیبل کی وضاحت کالم کی سطح کی تفصیلات فراہم کرتی ہے۔"
    },
    {
        "Question": "ان مصنوعات کو تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں جو بلی کے مالک لوگوں میں سب سے زیادہ مقبول ہیں۔",
        "Answer": "ایس کیو ایل میں ، شو کے ڈیٹا بیس اور استعمال ڈیٹا بیس کے بیانات کو ڈیٹا بیس کے ساتھ تعامل کے لئے استعمال کیا جاتا ہے ، لیکن وہ مختلف مقاصد کی خدمت کرتے ہیں: ڈیٹا بیس بیان دکھائیں: شو ڈیٹا بیس کا بیان ایس کیو ایل سرور میں دستیاب تمام ڈیٹا بیس کی فہرست کے لئے استعمال کیا جاتا ہے۔ جب ڈیٹا بیس کے بیان پر عمل درآمد ہوتا ہے۔، ایس کیو ایل سرور ایک نتیجہ سیٹ لوٹاتا ہے جس میں تمام ڈیٹا بیس کے نام موجود ہیں جن تک موجودہ صارف تک رسائی حاصل ہے۔ یہ ایس کیو ایل سرور میں موجودہ ڈیٹا بیس کو دیکھنے کا ایک طریقہ فراہم کرتا ہے ، بغیر کسی خاص ڈیٹا بیس کو منتخب کرنے یا استعمال کرنے کے۔ ڈیٹا بیس کا بیان۔استعمال کے ڈیٹا بیس کے بیان کو کسی مخصوص ڈیٹا بیس کو منتخب کرنے اور تبدیل کرنے کے لئے استعمال کیا جاتا ہے ، جس سے بعد میں ہونے والی کارروائیوں کے لئے موجودہ فعال ڈیٹا بیس بن جاتا ہے۔ جب استعمال ڈیٹا بیس کے بیان پر عمل درآمد کرتے ہیں تو ، آپ جس ڈیٹا بیس کا استعمال کرنا چاہتے ہیں اس کی وضاحت کرتے ہیں۔ استعمال کریں ڈیٹا بیس کا بیان ہے۔پھانسی دی گئی ، اس کے بعد کے تمام ایس کیو ایل بیانات کو منتخب کردہ ڈیٹا بیس کے تناظر میں عمل میں لایا جائے گا۔ یہ آپ کو اپنے سیشن کے لئے پہلے سے طے شدہ ڈیٹا بیس کی وضاحت کرنے کی اجازت دیتا ہے ، لہذا آپ کو ہر بعد کے استفسار میں ڈیٹا بیس کے نام کا واضح طور پر حوالہ دینے کی ضرورت نہیں ہے۔ خلاصہ۔ڈیٹا بیس کے بیان کو ظاہر کریں ایس کیو ایل سرور میں دستیاب ڈیٹا بیس کی فہرست ہے ، جبکہ استعمال ڈیٹا بیس کا بیان ایک مخصوص ڈیٹا بیس میں منتخب اور سوئچ کرتا ہے ، جس سے بعد میں ہونے والی کارروائیوں کے لئے فعال ڈیٹا بیس بن جاتا ہے۔دکھائیں ڈیٹا بیس ڈیٹا بیس کی ایک فہرست فراہم کرتا ہے ، جبکہ استعمال ڈیٹا بیس آپ کے سیشن کے لئے پہلے سے طے شدہ ڈیٹا بیس کا تعین کرتا ہے۔"
    },
    {
        "Question": "مچھلی کے مالک افراد میں سب سے زیادہ مقبول مصنوعات تلاش کرنے کے لئے ایک ایس کیو ایل استفسار لکھیں۔",
        "Answer": "ایس کیو ایل میں ، شو گرانٹ اور شو متغیر کے بیانات مختلف قسم کی معلومات کو بازیافت کرنے کے لئے استعمال کیے جاتے ہیں: گرانٹ کا بیان: شو گرانٹ بیان کو مائی ایس کیو ایل سرور میں کسی مخصوص صارف یا کردار کو دینے والے استحقاق اور اجازتوں کو ظاہر کرنے کے لئے استعمال کیا جاتا ہے۔گرانٹ کا بیان دکھائیں ، ایس کیو ایل سرور ایک ایسا نتیجہ سیٹ لوٹاتا ہے جو گرانٹ کے عین مطابق بیانات کو ظاہر کرتا ہے جو مخصوص صارف یا کردار کو مراعات دینے کے لئے عمل میں لایا گیا ہے۔میزبان ، صارف ، اور مختلف ڈیٹا بیس آبجیکٹ پر دیئے گئے مراعات۔ یہ بیان مفید ہے جب آپ کو ایس کیو ایل سرور میں کسی خاص صارف یا کردار کو تفویض کردہ مراعات کا جائزہ لینے کی ضرورت ہوتی ہے۔موجودہ کنفیگریشن متغیرات اور ان کی اقدار ایس کیو ایل سرور میں۔ جب شو متغیرات کے بیان پر عمل درآمد کرتے ہیں تو ، ایس کیو ایل سرور ایک ایسا نتیجہ سیٹ لوٹاتا ہے جس میں مختلف سرور کنفیگریشن متغیر کے نام اور اقدار شامل ہوتے ہیں۔ یہ ایس کیو ایل سرور کی موجودہ ترتیبات اور تشکیلات کے بارے میں معلومات فراہم کرتا ہے۔میموری ، اسٹوریج انجن ، نیٹ ورکنگ ، کریکٹر سیٹ ، اور بہت کچھ سے متعلق متغیرات سمیت۔ یہ بیان مفید ہے جب آپ کو Mysql سرور کی موجودہ ترتیب کی ترتیبات کی جانچ پڑتال کرنے کی ضرورت ہوتی ہے۔ایک مخصوص صارف یا کردار ، جبکہ شو متغیر بیان موجودہ ترتیب متغیرات اور ان کی اقدار کو ایس کیو ایل سرور میں دکھاتا ہے۔گرانٹ دکھائیں۔"
    }
]