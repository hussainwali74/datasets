[
    {
        "Question": "کونیی",
        "Answer": "کونیی موبائل اور ڈیسک ٹاپ ویب ایپلی کیشنز کی تعمیر کا ایک پلیٹ فارم ہے۔یہ ایک مفت اور اوپن سورس سنگل پیج ویب ایپلیکیشن فریم ورک ہے جس کی سربراہی گوگل میں کونیی ٹیم اور افراد اور کارپوریشن 1 کی ایک جماعت کے ذریعہ ہے۔کونیی اسی ٹیم کی طرف سے ایک مکمل دوبارہ لکھنا ہے جس نے انگولر جے ایس 1 کو بنایا تھا۔کونیی کی کچھ اہم خصوصیات میں شامل ہیں: ٹائپ اسکرپٹ: کونیی ایک ٹائپ اسکرپٹ پر مبنی فریم ورک 1 ہے۔: کونیی کے پاس ایک مختلف اظہار کا نحو ہوتا ہے ، جو پراپرٹی بائنڈنگ کے لئے \"[]\" پر توجہ مرکوز کرتا ہے ، اور \"()\" ایونٹ بائنڈنگ 1.نگولر ڈویلپرز کو تیزی سے برقرار رکھنے والے ، توسیع پزیر ایپ 2 کو ترتیب دینے میں مدد کے لئے بلڈنگ بلاکس مہیا کرتا ہے۔یہ کراس پلیٹ فارم ہے ، تیز ، توسیع پذیر ، ناقابل یقین ٹولنگ رکھتا ہے ، اور اسے لاکھوں پسند ہے۔کونیی سی ایل آئی ایک کمانڈ لائن انٹرفیس ٹول ہے جسے ڈویلپرز کونیی ایپلی کیشنز کو شروع کرنے ، تیار کرنے ، سہاروں اور برقرار رکھنے کے لئے استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی کیا ہے اور اس کی کلیدی خصوصیات کیا ہیں؟",
        "Answer": "کونیولر ایک ڈویلپمنٹ پلیٹ فارم ہے جو ٹائپ اسکرپٹ پر بنایا گیا ہے جو ڈویلپرز کو تیزی سے برقرار رکھنے والے ، توسیع پذیر ایپ کو تیزی سے ترتیب دینے میں مدد کے لئے بلڈنگ بلاکس مہیا کرتا ہے۔اس کی کچھ اہم خصوصیات میں شامل ہیں: جزو پر مبنی فریم ورک: کونیولر اجزاء کے ایک درجہ بندی کو \"اسکوپ\" یا کنٹرولرز کی بجائے اپنی بنیادی تعمیراتی خصوصیت کے طور پر استعمال کرتا ہے۔افادیت میں ہر شمارہ ایک زمرے کی وضاحت کرتا ہے جس میں افادیت کو عقل اور اعداد و شمار موجود ہیں۔ایک چیز عام طور پر شخص انٹرفیس (UI) کے ایک حصے کی وضاحت کرتی ہے۔ 1. ماڈلریٹی: بہت زیادہ بنیادی فعالیت ماڈیولز 2 میں منتقل ہوگئی ہے۔ ٹائپ اسکرپٹ: کونیی ایک ٹائپ اسکرپٹ پر مبنی فریم ورک 2 ہے۔ کراس-پلیٹ فارم سپورٹ: کونیی مختلف پلیٹ فارمز کے لئے ویب ایپلی کیشنز تشکیل دے سکتا ہے ، بشمول بھی شامل ہے ، بشمول مختلف پلیٹ فارمز کے لئے ویب ایپلی کیشنز تشکیل دے سکتے ہیں۔موبائل ڈیوائسز اور ڈیسک ٹاپس 13۔ وقت (اے او ٹی) تالیف کا تعی .ن: کونیی اے او ٹی تالیف کا استعمال کرتا ہے ، جو جاوا اسکرپٹ فائلوں کے سائز کو کم کرکے اور بوجھ ٹائمز 1 کو بڑھا کر کارکردگی کو بہتر بنا سکتا ہے۔ انحصار انجیکشن: ایپلیکیشن کی تعمیراتی نشوونما کو آسان بناتا ہے۔ڈویلپرز 3. enchanced کارکردگی کے لئے: کونیی وقت سے پہلے (AOT) تالیف کا استعمال کرتا ہے ، جو جاوا اسکرپٹ فائلوں کے سائز کو کم کرکے اور بوجھ ٹائمز 1 کو بڑھا کر کارکردگی کو بہتر بنا سکتا ہے۔ میٹریل ڈیزائن کے اجزاء: کونیولر کونیولر 4. اوورل کے لئے جزو انفراسٹرکچر اور مادی ڈیزائن کے اجزاء فراہم کرتے ہیں۔کونیولر اسی ٹیم کی طرف سے ایک مکمل دوبارہ لکھنا ہے جس نے انگولر جے ایس بنایا ہے ، اور یہ گوگل میں کونیی ٹیم کی سربراہی میں اور افراد اور کارپوریشنوں کی ایک جماعت کے ذریعہ ایک مفت اور اوپن سورس سنگل صفحہ ویب ایپلی کیشن فریم ورک ہے۔"
    },
    {
        "Question": "کونیی میں ngmodule اور جزو میں کیا فرق ہے؟",
        "Answer": "کونیی میں ، ngmodule اور جزو دو مختلف تصورات ہیں۔ایک این جی موڈول کوڈ کے ایک ہم آہنگی بلاک کے لئے ایک کنٹینر ہے جو کسی ایپلی کیشن ڈومین ، ورک فلو ، یا صلاحیتوں سے متعلق ایک قریب سے متعلق سیٹ کے لئے وقف ہے۔یہ ایک ایسی تکنیک ہے جو کونییولر 2 میں ڈھیلے ڈھیلے لیکن انتہائی مربوط نظام کی تعمیر کے لئے استعمال ہوتی ہے۔ایک این جی موڈول اجزاء ، خدمات ، ہدایات اور پائپوں کا ایک مجموعہ ہے جس کا قریب سے تعلق ہے اور اس کا مطلب ایک ساتھ استعمال ہونا ہے۔ہر کونیی ایپلی کیشن میں کم از کم ایک این جی موڈول ہونا ضروری ہے ، جو روٹ ماڈیول 2 ہے۔روٹ این جی موڈول کونیی ایپلیکیشن کو بوٹسٹریپ کرنے کے لئے استعمال کیا جاتا ہے ، اور یہ اس جڑ کے ماڈیول میں ہے کہ ہم جڑ کی سطح کے جزو 2 کو بھی بوٹسٹریپ کرتے ہیں۔ دوسری طرف ، ایک جز کو کونیی کا ایک بنیادی بلاک ہے ، اور متعدد اجزاء ایک ایپلی کیشن 4 بناتے ہیں۔ایک جزو ایک ٹیمپلیٹ 1 کے ساتھ ہدایت ہے۔یہ کونیی ایپلی کیشن کا ایک بلڈنگ بلاک ہے ، اور یہ یوزر انٹرفیس (UI) 5 کے ایک حصے کی وضاحت کرتا ہے۔ایک اجزاء کسی نظارے کو پیش کرنے کے لئے ذمہ دار ہوتا ہے ، جو اسکرین کا ایک حصہ ہے جو ایپلی کیشن کے ماڈل 1۔مری میں ڈیٹا دکھاتا ہے۔جو صارف انٹرفیس کے ایک حصے کی وضاحت کرتا ہے"
    },
    {
        "Question": "آپ کونیی سی ایل آئی کا استعمال کرتے ہوئے نیا کونیی پروجیکٹ کیسے بناتے ہیں؟",
        "Answer": "کونیی سی ایل آئی کا استعمال کرتے ہوئے ایک نیا کونیی پروجیکٹ بنانے کے ل you ، آپ ان مراحل پر عمل کرسکتے ہیں: مندرجہ ذیل کمانڈ کا استعمال کرتے ہوئے اپنے سسٹم پر عالمی سطح پر کونیی سی ایل آئی انسٹال کریں: این پی ایم انسٹال کریں -جی @کونیولر/کلوپین ایک ٹرمینل یا کمانڈ پرامپٹ اور جہاں آپ چاہتے ہیں اس ڈائریکٹری میں جائیں جہاں آپ چاہتے ہیں۔اپنا نیا کونیی پروجیکٹ بنائیں۔ ایک نیا کونیی پروجیکٹ بنانے کے لئے مندرجہ ذیل کمانڈ کی تشکیل کریں: این جی نیو پروجیکٹ-نامہ پلیس \"پروجیکٹ نام\" جس نام کے ساتھ آپ اپنے پروجیکٹ کو دینا چاہتے ہیں۔کونیی سی ایل آئی آپ کو اپنے پروجیکٹ کے لئے کچھ اختیارات کا انتخاب کرنے کا اشارہ کرے گی ، جیسے روٹنگ کا استعمال کرنا ہے ، کون سا اسٹائل شیٹ فارمیٹ استعمال کرنا ہے ، اور سخت وضع کو قابل بنانا ہے یا نہیں۔آپ ان اختیارات کا انتخاب کرسکتے ہیں جو آپ کی ضروریات کے مطابق ہوں یا پہلے سے طے شدہ آپشنز کو قبول کرنے کے لئے ENTER دبائیں۔ جب پروجیکٹ تیار کیا جاتا ہے ، مندرجہ ذیل کمانڈ کا استعمال کرتے ہوئے پروجیکٹ ڈائرکٹری پر جائیں: سی ڈی پروجیکٹ-نام فائنل ، ڈویلپمنٹ سرور شروع کرنے کے لئے درج ذیل کمانڈ کو چلائیں اوراپنے نئے کونیی پروجیکٹ کو ویب براؤزر میں کھولیں: این جی سرو -اوپینٹیس آپ کے پروجیکٹ کو مرتب کرے گی اور اسے HTTP: // لوکل ہوسٹ: 4200/. نوٹ میں ایک نئے براؤزر ونڈو میں کھولے گی: ان اقدامات کا خلاصہ مندرجہ ذیل ذرائع سے کیا گیا ہے: 123.1tektutorialshub2dotnettututututurials3github"
    },
    {
        "Question": "کونیی جزو لائف سائیکل ہکس کی وضاحت کریں۔",
        "Answer": "کونیی جزو لائف سائیکل ہکس ایسے طریقے ہیں جو کسی جزو کے لائف سائیکل میں مخصوص لمحات میں کونیی کے ذریعہ پکارتے ہیں۔یہ ہکس کلیدی زندگی کے لمحات اور 1 کے وقت کام کرنے کی صلاحیت میں مرئیت فراہم کرتے ہیں۔ان ہکس کو نافذ کرنے سے ، ڈویلپرز کسی جزو کے لائف سائیکل میں ٹیپ کرسکتے ہیں اور اس کے لائف سائیکل کے مختلف مراحل پر مخصوص اعمال انجام دے سکتے ہیں۔یہاں مختلف کونیی جزو لائف سائیکل ہکس ہیں: نگونچینجس: اس ہک کو اس وقت کہا جاتا ہے جب کسی جزو کی کوئی ڈیٹا پابند جائیداد تبدیل ہوتی ہے۔اس کو ایک سادگی سے چلنے والی شے ملتی ہے جس میں تبدیل شدہ پراپرٹی 2 کی پچھلی اور موجودہ اقدار پر مشتمل ہوتا ہے۔اس کا استعمال جزو کی خصوصیات کو شروع کرنے کے لئے کیا جاتا ہے۔یہ ان تبدیلیوں کا پتہ لگانے اور اس پر عمل کرنے کے لئے استعمال کیا جاتا ہے کہ کونیی خود بخود پتہ نہیں لگاتا ہے۔یہ ابتداء انجام دینے کے لئے استعمال ہوتا ہے جس کے لئے جزو کے مواد 1 تک رسائی کی ضرورت ہوتی ہے۔اس کا استعمال مواد کی جانچ پڑتال کے بعد اضافی جانچ پڑتال اور کارروائی کرنے کے لئے کیا جاتا ہے۔یہ ابتداء انجام دینے کے لئے استعمال ہوتا ہے جس کے لئے اجزاء کے نظارے 1 تک رسائی کی ضرورت ہوتی ہے۔اس نظارے کی جانچ پڑتال کے بعد اضافی جانچ پڑتال اور کارروائی کرنے کے لئے اس کا استعمال کیا جاتا ہے۔اس کا استعمال صفائی کے کاموں کو انجام دینے کے لئے کیا جاتا ہے ، جیسے مشاہدہ کرنے والوں سے ان سبسکرائب کرنا اور ایونٹ کے ہینڈلرز کو الگ کرنا۔ جس آرڈر میں ان ہکس کو کہا جاتا ہے وہ طے شدہ اور پیش گوئی کی جاسکتی ہے ، اور یہ ضروری ہے کہ ہکس کو مؤثر طریقے سے استعمال کرنے کے لئے اس آرڈر کو سمجھنا ضروری ہے۔"
    },
    {
        "Question": "کونیی جزو میں ٹیمپلیٹ یو آر ایل اور اسٹائل یو آر ایل کی خصوصیات کا مقصد کیا ہے؟",
        "Answer": "کونیی میں ، ٹیمپلیٹ یو آر ایل اور اسٹائل یو آر ایل کی خصوصیات کو کسی جزو میں استعمال کیا جاتا ہے تاکہ اس جزو کے لئے HTML ٹیمپلیٹ اور سی ایس ایس اسٹائل شیٹ کے مقام کی وضاحت کی جاسکے ، بالترتیب 12۔یہاں ہر پراپرٹی کی ایک مختصر وضاحت ہے: ٹیمپلیٹ یو آر ایل: اس پراپرٹی کو جزو کے لئے ایچ ٹی ایم ایل ٹیمپلیٹ فائل کے مقام کی وضاحت کرنے کے لئے استعمال کیا جاتا ہے۔ٹیمپلیٹ کی وضاحت یا تو جزو میٹا ڈیٹا میں یا کسی بیرونی فائل میں ٹیمپلیٹ یو آر ایل پراپرٹی 12 کا استعمال کرتے ہوئے کی جاسکتی ہے۔اگر ٹیمپلیٹ کو بیرونی فائل میں بیان کیا گیا ہے تو ، ٹیمپلیٹ یو آر ایل پراپرٹی کو اس فائل 12 کی راہ کی وضاحت کے لئے استعمال کیا جاتا ہے۔ اسٹائل یو آر ایل: اس پراپرٹی کو جزو کے لئے ایک یا زیادہ سی ایس ایس اسٹائل شیٹ کے مقام کی وضاحت کرنے کے لئے استعمال کیا جاتا ہے۔اسلوب کی تعریف یا تو جزو میٹا ڈیٹا میں یا کسی بیرونی فائل میں اسٹائل یو آر ایل ایس پراپرٹی 12 کا استعمال کرتے ہوئے کی جاسکتی ہے۔اگر اسلوب کو بیرونی فائل میں بیان کیا گیا ہے تو ، اسٹائل یو آر ایل ایس پراپرٹی کو اس فائل 12 کی راہ کی وضاحت کرنے کے لئے استعمال کیا جاتا ہے۔ ان خصوصیات کا استعمال کرتے ہوئے ، ڈویلپرز کسی جزو کی پیش کش کی منطق کو اپنے کاروباری منطق سے الگ کرسکتے ہیں ، جس سے برقرار رکھنے اور دوبارہ استعمال کرنے میں آسانی ہوتی ہے۔ایپلی کیشن 3 کے مختلف حصوں میں جزو۔مزید برآں ، ٹیمپلیٹس اور اسٹائل شیٹس کے لئے بیرونی فائلوں کا استعمال کوڈ بیس 3 کی بہتر تنظیم اور انتظام کی اجازت دیتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں صارف کے ان پٹ کو کس طرح سنبھالتے ہیں؟",
        "Answer": "کونیی میں ، صارف کے ان پٹ کو سنبھالنے کے مختلف طریقے ہیں۔کونیی میں صارف کے ان پٹ کو سنبھالنے کے کچھ طریقے یہ ہیں: ایونٹ بائنڈنگز: کونیی ایونٹ بائنڈنگز کو صارف کے ان پٹ کے ذریعہ متحرک کسی بھی ڈوم ایونٹ کا جواب دینے کے لئے استعمال کیا جاسکتا ہے۔یہ صارفین 12 سے ان پٹ حاصل کرنے کا ایک طریقہ فراہم کرتا ہے۔مثال کے طور پر ، ہم بٹن کلکس کو مندرجہ ذیل کے طور پر سن سکتے ہیں: <بٹن (کلک کریں) = \"آن بٹن کلیک ()\"> مجھے کلک کریں </بٹن> یہ کوڈ بٹن کلیک () کے طریقہ کار کو بٹن کے اوپر پر کلک کرتا ہے۔بائنڈنگ: دو طرفہ ڈیٹا بائنڈنگ جزو اور نظارے کے مابین ڈیٹا کو ہم آہنگ کرنے کی اجازت دیتا ہے۔اس کا مطلب یہ ہے کہ نظریہ میں کی جانے والی تبدیلیاں خود بخود جزو میں ظاہر ہوتی ہیں ، اور اس کے برعکس 3۔فارموں میں صارف کے ان پٹ کو سنبھالنے کے لئے دو طرفہ ڈیٹا بائنڈنگ کا استعمال کیا جاسکتا ہے ، جیسے ان پٹ فیلڈز اور چیک باکسز۔ ٹیمپلیٹ سے چلنے والی شکلیں: کونیی فارم کے ذریعہ صارف کے ان پٹ کو سنبھالنے کے لئے ٹیمپلیٹ سے چلنے والا نقطہ نظر فراہم کرتا ہے۔یہ نقطہ نظر ان پٹ فیلڈز کو جزو میں خصوصیات سے باندھنے کے لئے ہدایتوں کا استعمال کرتا ہے ، اور یہ فارم اور اس کی توثیق کے لئے کونیی پر انحصار کرتا ہے۔یہ نقطہ نظر فارم کی حالت کو سنبھالنے کے لئے ایک رد عمل پروگرامنگ ماڈل کا استعمال کرتا ہے ، اور اس سے فارم کی توثیق اور جمع کرانے کے عمل پر زیادہ عمدہ کنٹرول کی اجازت ملتی ہے۔بائنڈنگ ، ٹیمپلیٹ سے چلنے والی شکلیں ، اور رد عمل کی شکلیں۔ڈویلپرز اس نقطہ نظر کا انتخاب کرسکتے ہیں جو ان کی ضروریات اور ان کی درخواست کی ضروریات کے مطابق بہترین ہے۔"
    },
    {
        "Question": "کونیی روٹنگ کیا ہے اور یہ کیسے کام کرتا ہے؟",
        "Answer": "کونیی روٹنگ ایک ایسی خصوصیت ہے جو ڈویلپرز کو اس بات کی وضاحت کرنے کی اجازت دیتی ہے کہ کس طرح صارفین روٹس 12 کا استعمال کرکے کسی ایپلی کیشن کے ذریعے تشریف لے جاتے ہیں۔روٹنگ آپ کو URL1 پر منحصر ہے کہ آپ کو اپنی درخواست کے مخصوص نظارے ظاہر کرنے دیتا ہے۔جب صارف ایک راستے سے دوسرے راستے پر جاتا ہے تو ، کونیی روٹر یو آر ایل کے راستے کو متعلقہ جزو کی طرف نقش کرتا ہے اور اس کا نظارہ 3 دکھاتا ہے۔یہ ہے کہ کونیی روٹنگ کس طرح کام کرتی ہے: راستوں کی وضاحت: کونیی ایپلی کیشن میں راستوں کی وضاحت کرنے کے لئے ، ڈویلپرز روٹر ماڈل اور روٹس ماڈیول استعمال کرتے ہیں۔روٹر ماڈل روٹنگ کے ل necessary ضروری خدمت فراہم کرنے والے اور ہدایات مہیا کرتا ہے ، جبکہ روٹس ماڈیول راستوں کی خود 144 کی وضاحت کرتا ہے۔. راستوں کے مابین نیویگیٹنگ: راستوں کے مابین تشریف لے جانے کے لئے ، ڈویلپرز HTML ٹیمپلیٹ میں روٹر لنک لنک ہدایت یا جزو کوڈ میں روٹر سروس کا استعمال کرسکتے ہیں۔روٹر لنک لنک ہدایت ایک ہائپر لنک بناتا ہے جسے ، جب کلک کیا جاتا ہے تو ، مخصوص راستے پر تشریف لے جاتا ہے۔راؤٹر سروس پروگرام میں نیویگیٹ کرنے کے طریقے مہیا کرتی ہے ، جیسے نیویگیٹ () اور نیویگیٹ بائورل () 15. راؤٹ گارڈز: کونیولر روٹ گارڈ بھی مہیا کرتا ہے ، جو غیر مجاز رسائی سے راستوں کو بچانے کے لئے استعمال ہوتا ہے۔روٹ گارڈز کو یہ چیک کرنے کے لئے استعمال کیا جاسکتا ہے کہ آیا کسی صارف کی توثیق کی گئی ہے ، اگر ان کے پاس ضروری اجازت ہے ، یا اگر انہیں کسی مخصوص روٹ 6 تک رسائی حاصل کرنے کی اجازت ہے۔ خلاصہ میں ، کونیی روٹنگ ایک طاقتور خصوصیت ہے جو ڈویلپرز کو اس بات کی وضاحت کرنے کی اجازت دیتی ہے کہ صارفین اے این کے ذریعے کس طرح تشریف لے جاتے ہیں۔URL پر منحصر ہے کہ درخواست اور ڈسپلے کریں۔راستوں کا استعمال کرکے ، ڈویلپرز ایک زیادہ منظم اور ساختی ایپلی کیشن تشکیل دے سکتے ہیں جو برقرار رکھنے اور پیمانے میں آسان ہے۔"
    },
    {
        "Question": "کونیی میں انحصار انجیکشن کیا ہے اور یہ کیوں ضروری ہے؟",
        "Answer": "انحصار انجیکشن ایک ڈیزائن کا نمونہ ہے جو کونیی میں استعمال ہوتا ہے جو اجزاء ، خدمات اور ماڈیولز کو باہمی انحصار کرنے کی اجازت دیتا ہے جبکہ ایپلی کیشن 12 میں انجکشن لگائے جانے والے بیرونی انحصار پر مستقل مزاجی کو برقرار رکھتے ہیں۔انحصار انجیکشن اشیاء کو فراہم کرنے کا ایک طریقہ ہے جس کی کلاس کو (اس کی انحصار) کام 3 کرنے کی ضرورت ہے۔کسی کلاس کے اندر اشیاء بنانے کے بجائے ، اشیاء کو کسی بیرونی ماخذ سے کلاس میں منتقل کیا جاتا ہے ، جو کوڈ کو ماڈیولر اور ٹیسٹ 14 میں آسان بنا دیتا ہے۔یہاں کچھ وجوہات ہیں کہ انحصار انجیکشن کونیی میں اہم ہے: ماڈیولریٹی: انحصار انجیکشن خدشات کو الگ کرکے اور اجزاء کے مابین جوڑے کو کم کرکے ماڈیولر اور دوبارہ قابل استعمال کوڈ بنانا آسان بناتا ہے۔مذاق یا انحصار کو ٹیسٹ ڈبلز 14 کے ساتھ تبدیل کریں۔ڈویلپرز کو کوڈ کو تبدیل کیے بغیر انحصار کو شامل کرنے یا ختم کرنے کے لئے جو ان کا استعمال کرتے ہیں۔1dotnettricks2freecodecamp3agular4agular- یونیورسٹی"
    },
    {
        "Question": "آپ کونیی میں اجزاء کے مابین کیسے بات چیت کرتے ہیں؟",
        "Answer": "کونیی میں اجزاء کے مابین بات چیت کرنے کے بہت سارے طریقے ہیں ، بشمول: ان پٹ اور آؤٹ پٹ بائنڈنگ: اجزاء ان پٹ اور آؤٹ پٹ بائنڈنگ کا استعمال کرکے ایک دوسرے کے ساتھ بات چیت کرسکتے ہیں۔@ان پٹ () ڈیکوریٹر کو والدین کے جزو سے بچوں کے جزو میں ڈیٹا منتقل کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ @آؤٹ پٹ () ڈیکوریٹر کو بچوں کے جزو سے والدین کے جزو سے لے کر ایوئیوچائڈ اور بعد کے نظارے تک پہنچانے کے لئے استعمال کیا جاتا ہے: اجزاء ہر ایک کے ساتھ بات چیت کرسکتے ہیںدوسرے ویوچائڈ اور بعد کے نظارے کا استعمال کرتے ہوئے۔بچوں کے جزو کا حوالہ حاصل کرنے کے لئے ویوڈائڈ کا استعمال کیا جاتا ہے ، جبکہ بچوں کے اجزاء کے نظارے کو شروع کرنے کے بعد عمل کرنے کے لئے بعد کی نظر کا استعمال کیا جاتا ہے۔خدمات کا استعمال ان اجزاء کے مابین ڈیٹا اور فعالیت کو بانٹنے کے لئے کیا جاتا ہے جن کا براہ راست تعلق نہیں ہوتا ہے۔انحصار انجیکشن 32 کا استعمال کرتے ہوئے خدمات کو اجزاء میں انجکشن لگایا جاسکتا ہے۔ایونٹ کا استعمال بچوں کے جزو سے والدین کے جزو تک واقعات کو خارج کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ مشاہدات کو اشاعت سبسکرائب پیٹرن 41 کے استعمال سے اجزاء کے مابین ڈیٹا شیئر کرنے کے لئے استعمال کیا جاتا ہے۔اور بعد کے نظارے ، خدمات ، اور ایونٹ میٹٹر اور مشاہدہ کرنے والے۔ڈویلپرز اس نقطہ نظر کا انتخاب کرسکتے ہیں جو ان کی ضروریات اور ان کی درخواست کی ضروریات کے مطابق بہترین ہے۔"
    },
    {
        "Question": "کونیی میں نگموڈل ہدایت کا مقصد کیا ہے؟",
        "Answer": "کونیی میں NGMODEL ہدایت نامہ کنٹرول عنصر اور ڈومین ماڈل کے مابین دو طرفہ ڈیٹا بائنڈنگ بنانے کے لئے استعمال کیا جاتا ہے۔یہ ایک ان بلٹ ہدایت ہے جو ڈومین ماڈل سے فارم کنٹرول مثال تیار کرتی ہے اور اسے فارم کنٹرول عنصر 1 سے باندھ دیتی ہے۔NGMODEL ہدایت HTML کنٹرولز (ان پٹ ، منتخب ، ٹیکسٹیریا) کی قیمت کو درخواست 1 سے منسلک کرتی ہے۔NGModel ہدایت نامہ کسی ڈومین ماڈل سے فارمکنٹرول مثال بنانے اور اسے فارم کنٹرول عنصر 1 سے باندھنے کے لئے استعمال کیا جاتا ہے۔NGModel ہدایت کو کنٹرول کی قدر اور توثیق کی حیثیت سے باخبر رکھنے اور ماڈل 1 کے ساتھ نظریہ مطابقت پذیر رکھنے کے لئے استعمال کیا جاتا ہے۔NGModel ہدایت نامہ کو والدین کے فارم 1 میں بچوں کے کنٹرول کے فارم کے طور پر رجسٹر کرنے کے لئے بھی استعمال کیا جاتا ہے۔این جی موڈل ہدایت کو ان پٹ ، منتخب ، اور ٹیکسٹیریا عناصر 1 کے ساتھ استعمال کیا جاسکتا ہے۔NGModel ہدایت کو کسٹم ہدایتوں کا استعمال کرتے ہوئے اپنی مرضی کے مطابق بنایا جاسکتا ہے جو NGModelController کے توسط سے NGModel کی قدر میں ترمیم کرتے ہیں۔مجموعی طور پر ، اینگولڈیل ہدایت کونیی کی ایک اہم خصوصیت ہے جو فارم کنٹرول عناصر اور ڈومین ماڈلز کے مابین دو طرفہ ڈیٹا بائنڈنگ کی اجازت دیتی ہے۔"
    },
    {
        "Question": "کونیولر میں نظریاتی اور نظریہ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں نظر آنے والی خصوصیت کونیی اجزاء کے ل template ٹیمپلیٹ اور اسٹائل انپسولیشن کے اختیارات کی وضاحت کرنے کے لئے تین مختلف طریقوں کو فراہم کرتا ہے۔تینوں طریقوں میں نظریہ ہے۔یہاں نظریہ کے درمیان اختلافات ہیں۔شیڈو ڈوم api2.viewencapsulation.emulated: کیا پہلے سے طے شدہ موڈ 34 ہے۔ اجزاء CSS شیلیوں کے لئے اور انکپسولیشن 54 کو حاصل کرنے کے لئے مارک اپ کے لئے منفرد HTML صفات شامل کرتے ہیں۔اجزاء کے اسلوب 34. کونیولر انکپسولیشن کو ایمولیٹ کرتا ہے ، لہذا اس کا نام ایمولیٹڈ 56.1 سمری میں ، نظریہ ڈوم کے ساتھ اپنی مرضی کے مطابق عناصر تخلیق کرتا ہے ، جبکہ نظریاتی۔نظریہ کیپسولیشن.نیویٹنگ حقیقی انکپسولیشن مہیا کرتی ہے ، جبکہ ویوینسیپولیشن.مولیٹڈ انکپسولیشن ۔1 اسٹیک اوور فلو 2 تھورسٹن-ہنس 3 ایسنیپیٹس 4 کوڈیک رافٹ 5 ٹیٹوریلشوب 6 میڈیم"
    },
    {
        "Question": "کونیی میں کسی صف پر تکرار کرنے کے لئے آپ NGFOR کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ایک صف پر تکرار کرنے کے ل we ، ہم NGFOR ہدایت استعمال کرسکتے ہیں۔این جی ایف آر کو استعمال کرنے کے اقدامات یہ ہیں: اجزاء کی کلاس میں ، اجزاء کے سانچے میں آئٹمز کی ایک صف کی وضاحت کریں۔ اجزاء کے سانچے میں ، این جیفور ہدایت کو سرے پر لوپ کرنے اور ہر آئٹم کو ظاہر کرنے کے لئے استعمال کریں۔ این جی ایف او آر کا بنیادی ترکیب مندرجہ ذیل ہے۔<div *ngfor = \"آئٹمز کی آئٹم\" \"> {{آئٹم}} </div> یہاں ، آئٹمز آئٹمز کی صف ہے جو تکرار کرنے کے لئے ہے ، اور آئٹم ایک متغیر نام ہے جو صف میں ہر شے کی نمائندگی کرتا ہے۔ ہم بھی کر سکتے ہیں۔انڈیکس کی ورڈ کا استعمال کرکے سرنی میں موجودہ آئٹم کا انڈیکس استعمال کریں: <div *ngfor = \"آئٹمز کی آئٹم آئیے ind انڈیکس کے طور پر i\"> {{i}} - {{آئٹم}} </div> یہاں ، iکیا سرنی میں موجودہ آئٹم کا اشاریہ ہے۔ ہم NGFOR کو بھی اشیاء کی ایک صف پر لوپ کرنے کے لئے استعمال کرسکتے ہیں: <div *ngfor = \"لوگوں کے فرد کو\"> {{شخص}}}} - {{شخص.ج}} </div> یہاں ، لوگ تکرار کرنے کے لئے اشیاء کی صف ہے ، اور شخص متغیر نام ہے جو صف میں ہر شے کی نمائندگی کرتا ہے۔ خلاصہ میں ، NGFOR ہدایت کو کونیی میں ایک صف کے اوپر تکرار کرنے کے لئے استعمال کیا جاتا ہے۔یہ جزو ٹیمپلیٹ میں ڈیٹا کو ظاہر کرنے کا ایک آسان اور طاقتور طریقہ فراہم کرتا ہے۔"
    },
    {
        "Question": "کونیی میں واقعہ کی کلاس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں واقعہ کی کلاس کا استعمال کسٹم ایونٹس کو ہم آہنگی یا سنجیدگی سے خارج کرنے کے لئے استعمال کیا جاتا ہے ، اور کسی مثال 12 کو سبسکرائب کرکے ان واقعات کے لئے ہینڈلرز کو رجسٹر کرنے کے لئے استعمال کیا جاتا ہے۔ایونٹیمیٹر کلاس کسٹم ایونٹ 1 کو خارج کرنے کی @آؤٹ پٹ ہدایت کے ساتھ اجزاء میں استعمال ہوتی ہے۔@آؤٹ پٹ ڈیکوریٹر کو آؤٹ پٹ پراپرٹی کی وضاحت کے لئے استعمال کیا جاتا ہے جو کسی واقعے کو خارج کرتا ہے جب اس کی قیمت 3 بدل جاتی ہے۔ایونٹ میٹر کلاس ایونٹ کو بڑھانے کے لئے ذمہ دار ہے ، جبکہ @آؤٹ پٹ پراپرٹی عام طور پر ٹائپ ایونٹ میٹر 3 کی ہوتی ہے۔چائلڈ جزو ایونٹ کو بڑھانے کے لئے ایونٹ میٹر کلاس کے ایمٹ طریقہ کا استعمال کرے گا ، اور والدین کا جزو آئی ٹی 3 کو سبسکرائب کرکے ایونٹ کو سن لے گا۔ایونٹیمٹر کلاس مشاہدہ کرنے والے طبقے پر مبنی ہے ، جس کا مطلب ہے کہ اس کا استعمال ڈیٹا 2 کے سلسلے کو بنانے اور ان کا نظم کرنے کے لئے کیا جاسکتا ہے۔ایونٹیمیٹر کلاس کونیی کی ایک طاقتور خصوصیت ہے جو ڈویلپرز کو اپنی مرضی کے مطابق واقعات پیدا کرنے اور اجزاء کے مابین لچکدار اور موثر انداز میں بات چیت کرنے کی اجازت دیتی ہے۔"
    },
    {
        "Question": "آپ کونیولر میں @ویوچلڈ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں @ویوچائڈ کو استعمال کرنے کے لئے ، ان مراحل پر عمل کریں: ' @کونیی/کور' لائبریری سے ویوچائڈ ڈیکوریٹر کو درآمد کریں۔ والدین کے جزو میں کسی بچے کے جزو یا عنصر کا حوالہ حاصل کرنے کے لئے ویوچائڈ ڈیکوریٹر کا استعمال کریں۔ @ویوڈائڈ کا بنیادی ترکیبمندرجہ ذیل ہے:@ویوچائلڈ ('چائلڈکیمپینٹ') چائلڈ کامپینٹ ریف: چائلڈ کامپینٹریف: چائلڈ کمپوینٹ یہاں بچوں کے اجزاء یا عنصر کا نام ہے ، اور چائلڈ کمپوینٹ بچے کے جزو کی قسم ہے۔ ہم جامد پرچم کو کنٹرول کرنے کے لئے بھی استعمال کرسکتے ہیں جب اس پر قابو پانے کے لئے جامد پرچم بھی استعمال کیا جاسکتا ہے۔ویو کے استفسار پر عملدرآمد کیا گیا ہے:@ویوچائلڈ ('چائلڈکمپینٹ' ، {جامد: غلط}) چائلڈ کامپینٹ ریف: چائلڈ کامپینٹ ریف: چائلڈ کامپینٹ ریف: یہاں ، مستحکم: غلط مطلب یہ ہے کہ نظارے کو شروع کرنے کے بعد نظریہ استفسار عمل میں لایا جاتا ہے۔ ہم پڑھنے کے جھنڈے کو بھی استعمال کرسکتے ہیں۔بچے کے جزو سے پڑھنے کے لئے ایک مختلف ٹوکن کی وضاحت کریں: @ویوچائلڈ ('چائلڈکمپینٹ' ، {پڑھیں: عنصر ریف}) چائلڈیلیمنٹریف: ایلیمینٹریف ؛ یہاں ، عنصر ریف بچے کے جزو سے پڑھنے کے لئے ٹوکن ہے۔والدین کے جزو میں بچوں کے جزو یا عنصر کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے۔یہ والدین کے جزو میں بچوں کے اجزاء اور عناصر تک رسائی اور ان میں ہیرا پھیری کرنے کا ایک آسان اور طاقتور طریقہ فراہم کرتا ہے۔"
    },
    {
        "Question": "کونیی میں NGCLASS ہدایت کا مقصد کیا ہے؟",
        "Answer": "کونیی میں NGCLASS ہدایت نامہ کچھ شرائط 12 پر مبنی HTML عنصر پر CSS کلاسوں کو شامل کرنے یا ہٹانے کے لئے استعمال ہوتا ہے۔این جی سی ایل اے ایس کی ہدایت کونیی کا طریقہ ہے کہ آپ کو اپنے کونیی جز 1 میں کیا ہو رہا ہے اس کی بنیاد پر آپ کو مختلف کلاسوں اور اسلوب کو استعمال کرنے کی اجازت دی جائے۔این جی سی ایل اے ایس سی ہدایت نامہ کو ایک HTML عنصر پر سی ایس ایس کلاسوں کو متحرک طور پر ایک ایسے اظہار کے ذریعہ استعمال کیا جاتا ہے جس میں تمام طبقات کو شامل کرنے کی نمائندگی کی جاتی ہے۔این جی سی ایل اے ایس سی ہدایت تین قسم کے اظہار \"ریٹرن ویلیوز\" کی حمایت کرتی ہے: سٹرنگ ، سرنی ، اور آبجیکٹ 2۔این جی سی ایل اے ایس سی ہدایت کو کچھ شرائط کی بنیاد پر کلاسوں کا اطلاق کرنے کے لئے استعمال کیا جاسکتا ہے ، جو متحرک اور ذمہ دار صارف انٹرفیس 12 بنانے کے ل useful مفید بناتا ہے۔پیچیدہ اور متحرک UIS12 بنانے کے لئے NGCLASS ہدایت اکثر دیگر ہدایات ، جیسے NGIF اور NGSWitch کے ساتھ مل کر استعمال کی جاتی ہے۔مجموعی طور پر ، این جی سی ایل اے ایس کی ہدایت کونیی کی ایک اہم خصوصیت ہے جو ڈویلپرز کو کچھ شرائط کی بنیاد پر سی ایس ایس کلاسوں کو شامل کرنے یا اسے ہٹانے کی اجازت دیتی ہے ، جس سے متحرک اور ذمہ دار صارف انٹرفیس بنانا آسان ہوجاتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں والدین اور بچوں کے اجزاء کے مابین ڈیٹا کیسے گزرتے ہیں؟",
        "Answer": "کونیی میں والدین اور بچوں کے اجزاء کے مابین ڈیٹا کو منتقل کرنے کے ل we ، ہم مندرجہ ذیل طریقوں کو استعمال کرسکتے ہیں: @ان پٹ () ڈیکوریٹر: @ان پٹ () ڈیکوریٹر والدین کے جزو سے ڈیٹا کو کسی بچے کے جزو میں منتقل کرنے کے لئے استعمال ہوتا ہے۔@ان پٹ () ڈیکوریٹر بچے کے جزو میں کسی پراپرٹی کی وضاحت کے لئے استعمال ہوتا ہے جو اس کی قیمت والدین کے اجزاء 12 سے حاصل کرسکتا ہے۔والدین کے جزو کا جزو۔@آؤٹ پٹ () ڈیکوریٹر بچے کے جزو میں کسی واقعے کی وضاحت کے لئے استعمال ہوتا ہے جو والدین کے جزو میں ڈیٹا خارج کرسکتا ہے۔ایونٹ میٹرٹر کو مطلوبہ ڈیٹا 34 کے ساتھ ایونٹ کو خارج کرنے کے لئے استعمال کیا جاتا ہے۔ ویوچائڈ: ویوڈائڈ کو والدین کے جزو میں بچوں کے جزو یا عنصر کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے۔اس کے بعد والدین کا جزو بچوں کے اجزاء کی خصوصیات اور طریقوں تک رسائی حاصل کرسکتا ہے تاکہ ان کے درمیان ڈیٹا کو پاس کیا جاسکے۔ خدمت: خدمات کا استعمال ان اجزاء کے مابین ڈیٹا کو بانٹنے کے لئے کیا جاسکتا ہے جن کا براہ راست تعلق نہیں ہے۔والدین کا جزو خدمت کو انجیکشن لگا سکتا ہے اور اس کو بچوں کے اجزاء 36.مری میں ڈیٹا کو منتقل کرنے کے لئے استعمال کرسکتا ہے ، اس میں کونیی میں والدین اور بچوں کے اجزاء کے مابین ڈیٹا پاس کرنے کے بہت سارے طریقے ہیں ، بشمول @ان پٹ () ڈیکوریٹر ، @آؤٹ پٹ () ڈیکوریٹر اور ایونٹ میٹٹر، ویوچائڈ ، اور خدمات۔ڈویلپرز اس نقطہ نظر کا انتخاب کرسکتے ہیں جو ان کی ضروریات اور ان کی درخواست کی ضروریات کے مطابق بہترین ہے۔"
    },
    {
        "Question": "کونیی میں نگونیٹ اور نگفٹر ویونائٹ کے درمیان کیا فرق ہے؟",
        "Answer": "نگونیٹ اور اینگفٹر ویونائٹ کونییول میں لائف سائیکل ہکس ہیں جو کسی جزو کے لائف سائیکل میں مخصوص مقامات پر کچھ کام انجام دینے کے لئے استعمال ہوتے ہیں۔یہاں نگونینٹ اور نگفٹر ویونائٹ کے مابین اختلافات ہیں: نگونینٹ: نگونینیٹ ایک لائف سائیکل ہک ہے جسے کونیی کے بعد کہا جاتا ہے کہ اس نے کسی جزو کی تمام ڈیٹا سے منسلک خصوصیات کو شروع کیا ہے۔اس کو صرف ایک بار کہا جاتا ہے جب جزو پہلے پیدا ہوتا ہے۔ngoninit ابتدا کے کاموں کو انجام دینے کے لئے استعمال کیا جاتا ہے ، جیسے سرور سے ڈیٹا بازیافت کرنا یا متغیرات کو شروع کرنا۔اس نظارے کو شروع کرنے کے بعد اسے صرف ایک بار کہا جاتا ہے۔NGAFterViewInit ان کاموں کو انجام دینے کے لئے استعمال کیا جاتا ہے جس کے نظارے تک رسائی کی ضرورت ہوتی ہے ، جیسے DOM میں جوڑ توڑ کرنا یا بچوں کے اجزاء تک رسائی حاصل کرنا۔ایک جزو کے نظریہ اور اس کے بچوں کے نظارے کو شروع کیا۔ڈویلپرز ان لائف سائیکل ہکس کو ابتدائی کاموں کو انجام دینے اور نظارے یا بچوں کے اجزاء میں ہیرا پھیری کرنے کے لئے استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی میں پائپ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں پائپوں کو ٹیمپلیٹ میں ڈیٹا کو تبدیل کرنے کے لئے استعمال کیا جاتا ہے۔کونیی میں پائپوں کو استعمال کرنے کے اقدامات یہ ہیں: وہ پائپ درآمد کریں جو آپ '@کونیی/کور' لائبریری سے استعمال کرنا چاہتے ہیں۔ پائپ کو جزو یا ماڈیول میں بنائیں جہاں آپ اسے استعمال کرنا چاہتے ہیں۔ شامل کرکے ٹیمپلیٹ میں پائپ کو استعمال کریں۔یہ پائپ آپریٹر '|' کا استعمال کرتے ہوئے ایک اظہار کے لئے۔ پائپ استعمال کرنے کا بنیادی نحو مندرجہ ذیل ہے: {{قدر |پائپ نام}} یہاں ، قدر کو تبدیل کرنے کے لئے اعداد و شمار ہے ، اور پائپ نام استعمال کرنے کے لئے پائپ کا نام ہے۔ ہم پائپ کے نام کے بعد ان کو شامل کرکے پیرامیٹرز کو بھی پائپ میں منتقل کرسکتے ہیں: {{قدر |پائپ نام: پیرم 1: پیرام 2}} یہاں ، پیرام 1 اور پیرام 2 پائپ کو منتقل کرنے کے پیرامیٹرز ہیں ۔نگولر کئی بلٹ ان پائپ مہیا کرتا ہے ، جیسے ڈیٹ پائپ ، اپر کیسیپائپ ، لوئرکیسیپائپ ، کرنسیپائپ ، فیصد پائپ ، اور جے ایس او این پائپ۔ہم ایک خاص طریقے سے ڈیٹا کو تبدیل کرنے کے لئے کسٹم پائپ بھی تشکیل دے سکتے ہیں۔ خلاصہ میں ، کونیی میں پائپوں کو ٹیمپلیٹ میں ڈیٹا کو تبدیل کرنے کے لئے استعمال کیا جاتا ہے۔وہ جزو ٹیمپلیٹ میں ڈیٹا کو فارمیٹ اور جوڑ توڑ کرنے کا ایک آسان اور طاقتور طریقہ فراہم کرتے ہیں۔ڈویلپر متعدد بلٹ ان پائپوں میں سے انتخاب کرسکتے ہیں یا اپنی ضروریات کے مطابق کسٹم پائپ تشکیل دے سکتے ہیں۔"
    },
    {
        "Question": "کونیی میں نگونچینجز اور این جی ڈوچیک میں کیا فرق ہے؟",
        "Answer": "ngonchanges اور ngdocheck کونیولر میں لائف سائیکل ہکس ہیں جو جزو میں تبدیلیوں کا پتہ لگانے کے لئے استعمال ہوتے ہیں۔یہاں نگونچینجز اور این جی ڈوکیک کے مابین اختلافات ہیں: نگونچینجس: نگونچینجس ایک لائف سائیکل ہک ہے جسے کہتے ہیں جب کسی جزو کی ان پٹ پراپرٹی کی قیمت تبدیل ہوتی ہے۔اس کو نگونائٹ سے پہلے اور صرف اس وقت کہا جاتا ہے جب ان پٹ پراپرٹی 12 میں تبدیل ہوجاتی ہے۔گونچنگس کو ایسے کام انجام دینے کے لئے استعمال کیا جاتا ہے جن کو کرنے کی ضرورت ہوتی ہے جب ان پٹ پراپرٹی میں تبدیلی آتی ہے ، جیسے نئے ویلیو 1 پر مبنی نظارے کو اپ ڈیٹ کرنا یا حساب کتاب کرنا۔اسے نگونچینجز اور نگونینٹ کے بعد کہا جاتا ہے اور اجزاء 12 کے لائف سائیکل کے دوران متعدد بار کہا جاسکتا ہے۔این جی ڈوچیک کو ان کاموں کو انجام دینے کے لئے استعمال کیا جاتا ہے جن کو کرنے کی ضرورت ہوتی ہے جب جزو کی حالت تبدیل ہوتی ہے ، جیسے موجودہ اسٹیٹ 1۔مری میں نظارہ کو اپ ڈیٹ کرنا یا حساب کتاب کرنا۔ خلاصہ میں ، نگونچینجز کو کہا جاتا ہے جب ان پٹ پراپرٹی کی قیمت تبدیل ہوتی ہے ، جبکہ این جی ڈوچیک کو بلایا جاتا ہے۔جب بھی جزو میں تبدیلیوں کے لئے کونیی چیک کرتا ہے۔ڈویلپر ان لائف سائیکل ہکس کو ایسے کام انجام دینے کے ل use استعمال کرسکتے ہیں جن کو کرنے کی ضرورت ہوتی ہے جب جزو کی ریاست تبدیل ہوتی ہے یا جب ان پٹ پراپرٹی تبدیل ہوتی ہے۔"
    },
    {
        "Question": "آپ کونیی میں کسٹم کی توثیق کرنے والا کیسے بناتے ہیں؟",
        "Answer": "کونیی میں کسٹم کی توثیق کنندہ بنانے کے ل we ، ہم ان اقدامات پر عمل کرسکتے ہیں: '@کونیی/فارم' لائبریری سے ویلیویٹر ایف این اور خلاصہ کنٹرول کلاس درآمد کریں۔ ایک فنکشن کی وضاحت کریں جو ایک خلاصہ کنٹرول آبجیکٹ کو دلیل کے طور پر لیتا ہے اور یا تو کالعدم ہوتا ہے اگر کنٹرول درست ہے تو کنٹرول درست ہے۔یا کسی غلطی کے پیغام کے ساتھ کوئی شے اگر کنٹرول غلط ہے۔ کسی کسٹم کی توثیق کرنے والے فنکشن کا بنیادی نحو مندرجہ ذیل ہے: فنکشن کسٹم ویلیڈیٹر (کنٹرول: خلاصہ کنٹرول): {[کلید: سٹرنگ]: کوئی بھی} |null {// توثیق کی منطق یہاں} ہم ایک توثیقاتی فنکشن بنانے کے لئے ویلیوئٹر ایف این کلاس کا استعمال کرسکتے ہیں جس کو رد عمل کے ساتھ استعمال کیا جاسکتا ہے: ایکسپورٹ فنکشن کسٹم ویلیڈیٹر (): ویلیویٹر ایف این {ریٹرن (کنٹرول: خلاصہ کنٹرول): {[کلید: سٹرنگ]: کوئی بھی} |null => {// توثیق کی منطق یہاں} ؛}} ہم کسی فارم کنٹرول کے لئے جائزوں کی فہرست میں شامل کرکے اپنی مرضی کے مطابق توثیق کار کے فنکشن کو استعمال کرسکتے ہیں۔'، [vilidators.required ، کسٹم ویلیڈیٹر ()])})}) ؛ ہم ان پٹ عنصر کے لئے ہدایت کی فہرست میں شامل کرکے ٹیمپلیٹ سے چلنے والی شکل میں کسٹم ویلیویٹر فنکشن کا استعمال بھی کرسکتے ہیں: <ان پٹ ٹائپ = \"ٹیکسٹ\" نام= \"نام\" [(ngmodel)] = \"نام\" مطلوبہ کسٹم ویلیڈیٹر> خلاصہ میں ، کونیی میں ایک کسٹم ویلیویٹر بنانے میں ایک ایسی تقریب کی وضاحت شامل ہوتی ہے جو ایک خلاصہ کنٹرول آبجیکٹ کو دلیل کے طور پر لیتا ہے اور اگر کنٹرول درست ہے یا کسی شے کے ساتھ واپس آجاتا ہے۔اگر کنٹرول غلط ہے تو ایک غلطی کا پیغام۔ہم ایک توثیق کنندہ کی تقریب بنانے کے لئے ویلیویٹر ایف این کلاس کا استعمال کرسکتے ہیں جو رد عمل کے فارموں کے ساتھ استعمال کیا جاسکتا ہے ، اور ہم ان پٹ عنصر کی ہدایت کی فہرست میں شامل کرکے ٹیمپلیٹ سے چلنے والی شکل میں کسٹم ویلیویٹر فنکشن کا استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "مشترکہ ماڈیول اور کونیی میں فیچر ماڈیول میں کیا فرق ہے؟",
        "Answer": "مشترکہ ماڈیولز اور فیچر ماڈیول دونوں کونیی ایپلی کیشنز میں اہم ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں۔مشترکہ ماڈیولز اور فیچر ماڈیول کے مابین اختلافات یہ ہیں: مشترکہ ماڈیولیا مشترکہ ماڈیول تمام مشترکہ ہدایت ، اجزاء اور پائپوں کو ڈالنے کے لئے استعمال کیا جاتا ہے جو فیچر ماڈیولز 123 میں دوبارہ استعمال ہوسکتے ہیں۔ ایک مشترکہ ماڈیول کوڈ کو زیادہ منظم اور صاف رکھنے کے لئے استعمال کیا جاتا ہے۔کوڈ 13 کی نقل سے پرہیز کرنا۔ مشترکہ ماڈیول بہت سے فیچر ماڈیولز میں درآمد کیا جاتا ہے ، لہذا مشترکہ ماڈیول کے اندر کونیی بلٹ ان ماڈیولز کو درآمد اور برآمد کرنا عام ہے اگر انہیں متعدد مقامات 423 میں رسائی حاصل کرنے کی ضرورت ہو۔ ایک مشترکہ ماڈیول ایک قسم کی خصوصیت ماڈیول 3 ہے۔.فیٹور ماڈیولیا فیچر ماڈیول سے متعلقہ اجزاء ، ہدایات ، اور پائپوں کے لئے استعمال کیا جاتا ہے جو ایپلی کیشن 142 کی خصوصیت یا ڈومین کے لئے مخصوص ہیں۔ ایک فیچر ماڈیول استعمال کو چھوٹے ، زیادہ قابل انتظام ٹکڑوں 42 میں توڑنے کے لئے استعمال کیا جاتا ہے۔ ایک فیچر ماڈیول کا استعمال کیا جاتا ہے۔کوڈ کو زیادہ منظم اور برقرار رکھنے کے لئے آسان رکھیں۔ماڈیولز ، جبکہ ایک فیچر ماڈیول سے متعلقہ اجزاء ، ہدایات ، اور پائپوں کو گروپ کرنے کے لئے استعمال کیا جاتا ہے جو درخواست کی خصوصیت یا ڈومین کے لئے مخصوص ہیں۔ڈویلپرز کوڈ کو زیادہ منظم رکھنے ، کوڈ کی نقل سے بچنے کے لئے مشترکہ ماڈیولز اور فیچر ماڈیول استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی میں خدمت کیسے بناتے ہیں؟",
        "Answer": "کونیی میں ایک خدمت بنانے کے ل we ، ہم ان اقدامات پر عمل کرسکتے ہیں: ٹرمینل کو کھولیں اور پروجیکٹ ڈائرکٹری پر جائیں۔ مندرجہ ذیل کمانڈ چلا کر ایک نئی خدمت بنانے کے لئے کونیی سی ایل آئی کا استعمال کریں: این جی تیار کریں <سروس-نام> یہاں ، <سروس-name> اس خدمت کا نام ہے جس کو آپ بنانا چاہتے ہیں۔ مذکورہ کمانڈ پروجیکٹ میں کچھ فائلیں اور فولڈر تیار کرتا ہے اور اس میں کچھ فائلوں کو بھی اپ ڈیٹ کیا جاتا ہے۔) اور سروس کلاس میں وضاحت کریں۔ سروس کلاس میں ، ان طریقوں اور خصوصیات کی وضاحت کریں جو آپ ایپلی کیشن میں استعمال کرنا چاہتے ہیں۔ اس جز کو جس جزو میں آپ کو استعمال کرنا چاہتے ہیں۔اجزاء میں خدمت کے طریقوں اور خصوصیات کا استعمال کریں۔ خلاصہ میں ، کونیی میں ایک خدمت بنانے کے ل we ، ہم ایک نئی خدمت پیدا کرنے ، سروس کلاس کی وضاحت کرنے ، اور درآمد اور اس جز کو انجیکشن لگانے کے لئے کونیی سی ایل آئی کا استعمال کرسکتے ہیں جہاں ہم چاہتے ہیں۔استعمال کرو.خدمات کو پورے اطلاق میں کوڈ اور فعالیت کو بانٹنے اور کوڈ کو زیادہ منظم اور برقرار رکھنے کے لئے آسان بنانے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "کونیی میں HTTPClient ماڈیول کا مقصد کیا ہے؟",
        "Answer": "HTTPClientModule کونییولر میں ایک بلٹ ان سروس ماڈیول ہے جو ڈویلپرز کو HTTP درخواستوں کو انجام دینے اور ان درخواستوں اور ان کے ردعمل 123 کو آسانی سے جوڑنے کی اجازت دیتا ہے۔HTTPClientModule ایک سروس ماڈیول ہے کیونکہ یہ صرف خدمات کو فوری طور پر پیش کرتا ہے اور کسی بھی اجزاء ، ہدایت یا پائپ 1 کو برآمد نہیں کرتا ہے۔HTTPClient سروس HTTPClientModule ماڈیول میں شامل ہے ، جو HTTP درخواستوں کو شروع کرنے اور کونیی ایپلی کیشنز 23 میں ردعمل کو سنبھالنے کے لئے استعمال کی جاسکتی ہے۔HTTPClient ماڈیول HTTP پروٹوکول کے ذریعہ ڈیٹا حاصل کرنے یا منتقل کرنے کے لئے بیک اینڈ سروسز کے ساتھ بات چیت کرنے کے لئے استعمال کیا جاتا ہے یا تو XMLHTTPREQUEST انٹرفیس یا بازیافت API34 کا استعمال کرتے ہوئے۔HTTPClient ماڈیول HTTP درخواستوں 4 کو انجام دینے کے لئے متعدد طریقے مہیا کرتا ہے ، جیسے GET ، POST ، PUT ، حذف ، اور پیچ۔HTTPClient ماڈیول بھی ایسی خصوصیات فراہم کرتا ہے جیسے درخواست اور رسپانس مداخلت ، ہموار غلطی سے نمٹنے ، اور ٹائپ شدہ رسپانس آبجیکٹ 23 کی درخواست کرنے کی صلاحیت۔خلاصہ یہ کہ ، کونیی میں HTTPClient ماڈیول HTTP درخواستوں کو انجام دینے اور ان درخواستوں اور ان کے ردعمل کو آسانی سے جوڑنے کے لئے استعمال کیا جاتا ہے۔یہ بیک اینڈ سروسز کے ساتھ بات چیت کرنے اور کونیی ایپلی کیشنز میں HTTP درخواستوں اور ردعمل کو سنبھالنے کا ایک آسان اور طاقتور طریقہ فراہم کرتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں مشاہدہ کرنے والے افراد کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "مشاہدہ کرنے والے کونیی میں ایک اہم تصور ہے جو متضاد کوڈ کو سنبھالنے اور واقعات 1 کو سنبھالنے کے لئے استعمال ہوتا ہے۔مشاہدہ کرنے والے وعدوں سے ملتے جلتے ہیں لیکن مزید خصوصیات اور لچک 12 فراہم کرتے ہیں۔کونیی میں ، مشاہدہ کرنے والوں کو مختلف قسم کے عام متضاد کارروائیوں کو سنبھالنے کے لئے استعمال کیا جاتا ہے ، جیسے ایجیکس کی درخواستیں اور ردعمل ، صارف کے ان پٹ واقعات ، اور ایپلی کیشن 345 کے کچھ حصوں کے مابین پیغامات۔'RXJS' لائبریری سے مشاہدہ کرنے والا طبقہ۔ مشاہدہ کرنے والے طبقے کی ایک مثال تشکیل دے کر اور ایک مبصر کے فنکشن کو بطور دلیل پاس کرکے قابل مشاہدہ کی وضاحت کریں۔آبزرور فنکشن اس بات کی وضاحت کرتا ہے کہ جب مشاہدہ کرنے والے کو سبسکرائب کیا جاتا ہے اور اس سے اقدار کا اخراج کیسے ہوتا ہے تو کیا ہوتا ہے۔آپریٹرز ایسے افعال ہیں جن کو مشاہدہ کرنے والے طرز عمل میں ترمیم کرنے کے لئے مل کر جکڑا جاسکتا ہے۔سبسکرائب () کا طریقہ ایک یا زیادہ افعال کو دلائل کے طور پر لیتا ہے جو اس بات کی وضاحت کرتا ہے کہ جب مشاہدہ کرنے والے اقدار ، غلطیوں ، یا مکمل ہونے سے ہوتا ہے تو کیا ہوتا ہے۔ خلاصہ میں ، مشاہدہ کرنے والے کونیی کی ایک طاقتور خصوصیت ہے جو غیر متزلزل کوڈ کو سنبھالنے اور واقعات کو سنبھالنے کے لئے استعمال ہوتی ہے۔ڈویلپر متعدد عام غیر متزلزل کارروائیوں کو سنبھالنے کے لئے مشاہدات کا استعمال کرسکتے ہیں ، جیسے ایجیکس کی درخواستیں اور ردعمل ، صارف کے ان پٹ واقعات ، اور درخواست کے کچھ حصوں کے مابین پیغامات پاس کرنا۔کونیی میں مشاہدہ کرنے والوں کو استعمال کرنے کے ل we ، ہم ایک مشاہدہ کرنے والے ، آپریٹرز کو اس کے طرز عمل کو تبدیل کرنے کے لئے استعمال کرسکتے ہیں ، اور اقدار وصول کرنا شروع کرنے کے لئے اس کو سبسکرائب کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی میں HTTP انٹرسیپٹرز کا مقصد کیا ہے؟",
        "Answer": "HTTP انٹرسیپٹرز کونیی کی ایک طاقتور خصوصیت ہے جو ڈویلپرز کو ایپلی کیشن 123 میں عالمی سطح پر HTTP درخواستوں اور ردعمل میں ترمیم کرنے کی اجازت دیتی ہے۔انٹرسیپٹرز ایپلی کیشن اور سرور کے مابین بیٹھتے ہیں اور درخواست اور رسپانس 34 کے ساتھ تعامل کرتے ہیں۔انٹرسیپٹرز کو کسٹم ہیڈر شامل کرنے ، درخواست کے جسم میں ترمیم کرنے ، توثیق/اجازت والے ٹوکن مرتب کرنے ، HTTP ردعمل میں ترمیم کرنے ، غلطیوں کو سنبھالنے ، اور لاگ ان درخواستوں اور ردعمل 135 کے لئے استعمال کیا جاسکتا ہے۔انٹرسیپٹرز بھی پورے HTTP آپریشن 2 کا وقت اور لاگ ان کرنے جیسے کام انجام دے سکتے ہیں۔ کونیی میں HTTP انٹرسیپٹرز کا استعمال کرنے کے ل we ، ہم ان اقدامات کی پیروی کرسکتے ہیں: درخواست میں ترمیم کرنے کے لئے انٹرسیپٹر () انٹرسیپٹر میں ایک انٹرسیپٹر بنائیں۔یا جواب۔ ایپ.موڈول ڈاٹ ٹی ایس فائل میں انٹرسیپٹر کو فراہم کنندگان میں شامل کرکے۔انٹرسیپٹ () طریقہ کار کا خلاصہ ، کونیی میں HTTP انٹرسیپٹرز کو درخواست میں عالمی سطح پر HTTP درخواستوں اور ردعمل میں ترمیم کرنے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز کسٹم ہیڈر شامل کرنے ، درخواست باڈی میں ترمیم کرنے ، توثیق/اجازت والے ٹوکن مرتب کرنے ، HTTP کے ردعمل میں ترمیم کرنے ، غلطیوں کو سنبھالنے ، اور لاگ ان درخواستوں اور ردعمل کے ل inter انٹرسیپٹرز کا استعمال کرسکتے ہیں۔کونیی میں HTTP انٹرسیپٹرز کو استعمال کرنے کے ل we ، ہم ایک انٹرسیپٹر تشکیل دے سکتے ہیں ، انٹرسیپٹ () کے طریقہ کار کی وضاحت کرسکتے ہیں ، ایپ.موڈول ڈاٹ ٹی ایس فائل میں انٹرسیپٹر کو رجسٹر کرسکتے ہیں ، اور ایپلی کیشن میں HTTPP درخواستیں کرنے کے لئے HTTPClient سروس کا استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی میں غلطیوں کو کس طرح سنبھالتے ہیں؟",
        "Answer": "کونیی میں غلطیوں کو سنبھالنے کے ل we ، ہم ان نکات اور بہترین طریقوں کی پیروی کرسکتے ہیں: کلائنٹ سائیڈ کی غلطیوں کو سنبھالنے کے لئے آر ایکس جے ایس آپریٹرز کے تھورٹر اور کیچ ایرر کے ساتھ کونیی کی HTTPClient سروس کا استعمال کریں۔HTTP کی درخواست کی گئی ہے ، اور یہ ڈیٹا کو جواب کے ساتھ لوٹاتا ہے اگر کچھ غلط ہوتا ہے تو وہ کسی غلطی کی حیثیت کو کسی غلطی کی حیثیت کے کوڈ 2 کے ساتھ لوٹاتا ہے۔ عالمی غلطی کو ہینڈلر کو استعمال کریں تاکہ تمام غیر منقولہ غلطیاں پھنس جائیں اور صارف 34 کو اطلاع دیں۔غلطی کا ہینڈلر HTTP کی غلطیوں کو نہیں پھنساتا ہے ، لہذا ہمیں HTTP کی غلطیوں کو سنبھالنے کے لئے HTTP انٹرسیپٹرز کا استعمال کرنے کی ضرورت ہے۔مثال کے طور پر ، اگر یہ پچھلے سرے (HTTP غلطی) سے غلطی ہے تو ، ہم HTTP کی غلطیوں 34 کو سنبھالنے کے لئے ضروری ایکشن 3. استعمال کرنے کے لئے HTTP اسٹیٹس کوڈ کا استعمال کرسکتے ہیں۔HTTP انٹرسیپٹرز ایپلی کیشن اور سرور کے مابین بیٹھتے ہیں اور درخواست اور رسپانس 56 کے ساتھ تعامل کرتے ہیں۔انٹرسیپٹرز کو کسٹم ہیڈر شامل کرنے ، درخواست کے جسم میں ترمیم کرنے ، توثیق/اجازت والے ٹوکن مرتب کرنے ، HTTP ردعمل میں ترمیم کرنے ، غلطیوں کو ہینڈل کرنے ، اور لاگ ان درخواستوں اور ردعمل 152 کے لئے استعمال کیا جاسکتا ہے۔اس خدمت کا استعمال تمام HTTP درخواستوں اور ردعمل کو سنبھالنے اور صارف کے دوستانہ پیغامات کو صارف کو ظاہر کرنے کے لئے کیا جاسکتا ہے۔ڈویلپرز کلائنٹ سائیڈ کی غلطیوں کو سنبھالنے کے لئے آر ایکس جے ایس آپریٹرز تھروورر اور کیچ ایرر کے ساتھ کونیی کی HTTPClient سروس کا استعمال کرسکتے ہیں ، تمام بغیر کسی غلطیوں کو پھنسانے کے لئے عالمی غلطی کے ہینڈلر کا استعمال کرسکتے ہیں ، غلطی ہینڈلر میں غلطی کی قسم کی جانچ پڑتال کریں اور اس کے مطابق کام کریں ، ہینڈل کے لئے HTTP انٹرسیپٹرز کا استعمال کریں۔ایچ ٹی ٹی پی کی غلطیاں ، اور مرکزی انداز میں غلطیوں کو سنبھالنے کے لئے ایک علیحدہ خدمت کا استعمال کریں۔"
    },
    {
        "Question": "کونیی میں طرز عمل اور ریپلیسوبیکج کے درمیان کیا فرق ہے؟",
        "Answer": "طرز عمل اور ریپلیسوبیکجک دونوں طرح کے مضامین ہیں جو کونیی میں ملٹی کاسٹ مشاہدات کے لئے استعمال ہوتے ہیں اور تمام صارفین میں ایک ہی قدر کا اشتراک کرتے ہیں۔تاہم ، ان کے مابین کچھ اختلافات ہیں۔کونیی میں طرز عمل اور ریپلیسوبیکجیکٹ کے مابین اختلافات یہ ہیں: طرز عمل سے متعلق طرز عمل کی ایک قسم ہے جو تمام صارفین کے مابین اقدار کو خارج کرنے اور آخری خارج ہونے والی قیمت 12 کو ذخیرہ کرنے کی اجازت دیتی ہے۔ریپلیسوبیکجیکٹ کی قسم ، لیکن اضافی فعالیت یا حدود کے ساتھ اس پر منحصر ہے کہ آپ آئی ٹی 12 کو کس طرح دیکھتے ہیں۔ ایک طرز عمل کو کسی ایپلی کیشن کی موجودہ حالت کو ٹریک رکھنے اور اسے تمام صارفین کے درمیان بانٹنے کے لئے استعمال کیا جاسکتا ہے۔نئے صارفین کو \"پرانی\" اقدار اور متعدد پرانی اقدار کو ذخیرہ کرنے کے لئے مشاہدہ کرنے والے عمل کے ایک حصے کو ریکارڈ کرنا اور انہیں نئے سبسکرائبرز 134 پر \"ری پلے\"۔کیشے اور ری پلے اقدار ، نسل کے حالات کو سنبھالیں ، اور نئے صارفین کو اقدار کا ایک بفر فراہم کریں۔طرز عمل سے متعلق آخری قیمت کو اسٹور کرتا ہے اور اس کے لئے ابتدائی قیمت کو خارج کرنے کی ضرورت ہوتی ہے ، جبکہ ریپلیسوبیکجٹ نئے صارفین کو \"پرانی\" اقدار بھیج سکتا ہے اور متعدد پرانی اقدار کو ذخیرہ کرنے کے لئے مشاہدہ کرنے والے عملدرآمد کا ایک حصہ ریکارڈ کرسکتا ہے اور انہیں نئے صارفین کو \"ری پلے\" کرسکتا ہے۔ڈویلپرز کسی درخواست کی موجودہ حالت کو ٹریک رکھنے اور اسے تمام صارفین کے درمیان بانٹنے کے لئے طرز عمل کا استعمال کرسکتے ہیں ، جبکہ ریپلیسوبیجیکٹ کو اقدار کو کیش اور دوبارہ چلانے ، نسل کے حالات کو سنبھالنے ، اور نئے صارفین کو اقدار کا ایک بفر فراہم کرنے کے لئے استعمال کیا جاسکتا ہے۔"
    },
    {
        "Question": "آپ کونییولر میں کینیکٹیوٹیٹ اور کینڈی کو کیسے استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ، کینیکٹیوٹیٹ اور کینڈی ایکٹیویٹ روٹ گارڈز ہیں جو روٹ 12 تک یا اس سے رسائی کو کنٹرول کرنے کے لئے استعمال ہوتے ہیں۔کونیولر میں کینیکٹیوٹیٹ اور کینڈیٹیویٹ کو استعمال کرنے کے طریقہ کے بارے میں یہاں تفصیلات ہیں: کینیکٹیوٹیٹیکانیٹیٹیٹ کونیی روٹنگ میں ایک روٹ گارڈ ہے جو فیصلہ کرتا ہے کہ آیا کسی راستے کو چالو کیا جاسکتا ہے۔ایک ایسی خدمت جو بولین یا قابل مشاہدہ یا وعدہ واپس کرتی ہے جو بولین 12 سے حل ہوتی ہے۔ کینیکٹیویٹ کو مخصوص صارفین تک روٹ تک رسائی کو محدود کرنے ، شرائط کو پورا کرنے کو یقینی بنانے ، اور تصدیق اور اجازت کی جانچ پڑتال 32. کینڈیکیٹیٹیکٹیویٹیٹیٹ کو کونیی روٹنگ میں ایک روٹ گارڈ ہے جو کونیی روٹنگ میں استعمال کیا جاسکتا ہے۔فیصلہ کرتا ہے کہ آیا کسی راستے کو غیر فعال کیا جاسکتا ہے۔صارف کو راستہ چھوڑنے سے پہلے متنبہ کریں ، کسی روٹ تک رسائی سے پہلے ڈیٹا کو بازیافت کریں ، اور فارم کی توثیق چیک 42۔ خلاصہ میں ، کینیکٹیوٹیٹ اور کینڈی ایکٹیویٹیٹ کونییولر میں روٹ گارڈ ہیں جو کسی راستے تک یا کسی راستے تک رسائی پر قابو پانے کے لئے استعمال ہوتے ہیں۔کینیکٹیویٹ کو کنٹرول کرنے کے لئے استعمال کیا جاتا ہے کہ آیا صارف کسی دیئے گئے راستے پر تشریف لے جاسکتا ہے ، جبکہ کینڈی ایکٹیویٹ کو کنٹرول کرنے کے لئے استعمال کیا جاتا ہے کہ آیا صارف کسی دیئے گئے راستے سے دور ہوسکتا ہے یا نہیں۔ڈویلپرز کین ایکٹیویٹیٹ اور کینڈی ایکٹیویٹ کو خدمات کے طور پر نافذ کرسکتے ہیں جو بولین یا مشاہدہ کرنے والے یا وعدے کو واپس کرتے ہیں جو بولین کو حل کرتا ہے۔ان روٹ گارڈز کو توثیق اور اجازت کی جانچ پڑتال کرنے ، راستہ چھوڑنے سے پہلے صارف کو آگاہ کرنے ، کسی راستے تک رسائی سے پہلے ڈیٹا بازیافت کرنے ، اور فارم کی توثیق کی جانچ پڑتال کرنے کے لئے استعمال کیا جاسکتا ہے۔"
    },
    {
        "Question": "کونیی میں async پائپ کا مقصد کیا ہے؟",
        "Answer": "Async پائپ کونیی میں ایک بلٹ ان پائپ ہے جو مشاہدہ کرنے یا وعدہ کی سبسکرائب کرنے اور اس کی تازہ ترین قیمت کو واپس کرنے کے لئے استعمال ہوتا ہے جس نے اس کو خارج کیا ہے۔ASYNC پائپ مشاہدہ کرنے والوں سے رینڈرنگ ڈیٹا بنانے کے لئے استعمال کیا جاتا ہے اور بہت آسان 1 کا وعدہ کرتا ہے۔ASYNC پائپ کو مشاہدات ، وعدوں ، اور یہاں تک کہ ایک فنکشن کے ساتھ بھی استعمال کیا جاسکتا ہے جو قابل مشاہدہ یا وعدہ 4 واپس کرتا ہے۔ASYNC پائپ خود بخود مشاہدہ کرنے یا وعدے کی سبسکرائب کرتا ہے اور سبسکرائب () یا پھر () طریقہ 5 کو کال کرتا ہے۔جب جزو تباہ ہوجاتا ہے تو ، ASYNC پائپ میموری لیکس 5 کو کم کرنے کے لئے خود بخود ان سبسکرائب کرتا ہے۔ASYNC پائپ کونیی APP2 کے لئے تبدیلی کا پتہ لگانے کی حکمت عملی میں بہت فرق کرسکتا ہے۔ASYNC پائپ کوڈ کو مزید پڑھنے کے قابل بنانے ، بوائلر پلیٹ کوڈ کو کم کرنے ، اور میموری لیکس 4 سے بچنے کے لئے استعمال کیا جاسکتا ہے۔خلاصہ طور پر ، کونیی میں Async پائپ کو مشاہدہ کرنے یا وعدہ کی سبسکرائب کرنے اور اس کی تازہ ترین قیمت کو واپس کرنے کے لئے استعمال کیا جاتا ہے۔ASYNC پائپ کو مشاہدہ کرنے والوں سے رینڈرنگ ڈیٹا بنانے اور وعدوں کو بہت آسان بنانے ، بوائلر پلیٹ کوڈ کو کم کرنے ، اور میموری لیک سے بچنے کے لئے استعمال کیا جاسکتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں این جی مشمولات کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "این جی-مواد کونیی میں ایک بلٹ ان ہدایت ہے جو مواد کے پروجیکشن 123 کے لئے استعمال ہوتا ہے۔یہ ایک پلیس ہولڈر ہے جو متحرک مواد کو اس وقت تک رکھتا ہے جب تک کہ اس کو پارسڈ نہیں کیا جاتا ہے۔این جی-مشمول ہدایت کا استعمال والدین کے جزو سے لے کر بچوں کے اجزاء 45 کو منتقل کرنے کے لئے کیا جاتا ہے۔این جی-مشمول ہدایت کا استعمال بچوں کے جزو کے ٹیمپلیٹ میں ایک نامزد جگہ بنانے کے لئے کیا جاتا ہے جہاں والدین کا جزو مواد 5 پاس کرسکتا ہے۔این جی-مشمول ہدایت کو سلیکٹر وصف 5 کا استعمال کرتے ہوئے ایک سے زیادہ سلاٹ بنانے کے لئے بھی استعمال کیا جاسکتا ہے۔والدین کا جزو ہر سلاٹ 5 پر مختلف مواد بھیج سکتا ہے۔این جی-مشمول ہدایت کو دوبارہ قابل استعمال اجزاء بنانے کے لئے استعمال کیا جاتا ہے جس میں والدین سے بچوں کے جزو یا اس کے برعکس ڈیٹا یا مواد کو منتقل کرنے سے کہیں زیادہ عام گنجائش ہوتی ہے۔خلاصہ یہ ہے کہ ، این جی مشمولات کونیی میں ایک بلٹ ان ہدایت ہے جو مواد کی پروجیکشن کے لئے استعمال ہوتا ہے۔اس کا استعمال والدین کے جزو سے لے کر بچوں کے جزو میں منتقل کرنے اور بچوں کے جزو کے سانچے میں ایک نامزد جگہ بنانے کے لئے کیا جاتا ہے جہاں والدین کا جزو مواد کو پاس کرسکتا ہے۔این جی-مواد کی ہدایت کا استعمال دوبارہ قابل استعمال اجزاء بنانے کے لئے کیا جاتا ہے جس میں والدین سے لے کر بچوں کے اجزاء یا اس کے برعکس ڈیٹا یا مواد کو منتقل کرنے سے کہیں زیادہ عام گنجائش ہوتی ہے۔"
    },
    {
        "Question": "کونیی میں ہدایت اور جزو کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں ہدایت اور جزو کے مابین اختلافات یہ ہیں: ڈائریکٹیو ڈائریکٹیو ڈوم میں ایک ایسی ہدایت ہے جو موجودہ ڈوم عنصر یا کسی موجودہ جزو مثال کے طور پر اضافی طرز عمل کو شامل کرنے کے لئے استعمال ہوتی ہے۔والدین سے بچوں کے اجزاء یا اس کے برعکس ڈیٹا یا مواد کو منتقل کرنے سے کہیں زیادہ عمومی دائرہ کار ڈوم میں جوڑ توڑ کرنے ، ایونٹ کے سننے والوں کو شامل کرنے ، اور موجودہ اجزاء 123 کے طرز عمل میں ترمیم کرنے کے لئے ایک ہدایت کا استعمال کیا جاسکتا ہے۔کسٹم عناصر ، اور ساختی ہدایت نامہ 123.compinenta جزو ایک قسم کی ہدایت ہے جو نظریہ کو ڈیٹا فراہم کرتا ہے اور منسلک سلوک 12364 کے ساتھ ایک نیا نظارہ (شیڈو ڈوم) بنانے کے لئے استعمال ہوتا ہے۔ ایک جزو ایک واحد یونٹ ہے جو دونوں نظارے اور منطق 126.A کو شامل کرتا ہے۔اجزاء کو ایپلی کیشن 34 کے UI کنٹرول بنانے کے لئے استعمال کیا جاسکتا ہے۔ ایک جزو کو چھوٹے ، زیادہ قابل انتظام ٹکڑوں میں توڑنے کے لئے استعمال کیا جاسکتا ہے۔عنصر یا موجودہ جزو مثال کے طور پر ، جبکہ ایک جزو ایک قسم کی ہدایت ہے جو نظریہ کو ڈیٹا فراہم کرتا ہے اور منسلک سلوک کے ساتھ ایک نیا نظارہ (شیڈو ڈوم) بنانے کے لئے استعمال ہوتا ہے۔کسی ہدایت کو ڈوم میں جوڑ توڑ کرنے ، ایونٹ کے سننے والوں کو شامل کرنے اور موجودہ اجزاء کے طرز عمل میں ترمیم کرنے کے لئے استعمال کیا جاسکتا ہے ، جبکہ ایک جزو کو استعمال کے UI کنٹرول بنانے اور ایپلی کیشن کو چھوٹے ، زیادہ منظم ٹکڑوں میں توڑنے کے لئے استعمال کیا جاسکتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں کسٹم ہدایت کیسے بناتے ہیں؟",
        "Answer": "کونیی میں اپنی مرضی کے مطابق ہدایت تیار کرنے کے ل we ، ہم ان اقدامات پر عمل پیرا ہوسکتے ہیں: مندرجہ ذیل کمانڈ کو چلا کر کونیی سی ایل آئی کا استعمال کرتے ہوئے ایک نیا ہدایت بنائیں: این جی جنریٹ ہدایت <ہدایت نامہ> یہاں ، <ہدایت نامہ> آپ کی ہدایت کا نام ہےتخلیق کرنا چاہتے ہیں۔ مذکورہ کمانڈ پروجیکٹ میں کچھ فائلیں اور فولڈر تیار کرتا ہے اور یہ کچھ فائلوں کو بھی اپ ڈیٹ کرتا ہے۔ ہدایت نامہ فائل (جیسے ، <ہدایت نامہ>. ڈائریکٹیو ڈاٹ ٹی ایس) کو کھولیں اور ہدایت کی کلاس کی وضاحت کریں۔ ہدایت نامہ میں۔کلاس ، اس طرز عمل کی وضاحت کریں جو آپ ڈوم عنصر میں شامل کرنا چاہتے ہیں۔ @ہدایت نامہ کو کسی عنصر کے ساتھ کسی عنصر کے ساتھ منسلک کرنے کے لئے ہدایت نامہ کا استعمال کریں۔ ماڈیول میں جہاں آپ اسے استعمال کرنا چاہتے ہیں اس کی ہدایت نامہ۔اس جزو کا HTML ٹیمپلیٹ جہاں آپ عنصر میں وصف سلیکٹر کو شامل کرکے اسے استعمال کرنا چاہتے ہیں۔ خلاصہ ، کونیی میں ایک کسٹم ہدایت بنانے کے لئے ، ہم ایک نئی ہدایت تیار کرنے ، ہدایت کی کلاس کی وضاحت کرنے اور استعمال کرنے کے لئے کونیی سی ایل آئی کا استعمال کرسکتے ہیں۔@ہدایت کار ڈیکوریٹر کو کسی عنصر کے ساتھ ایک وصف سلیکٹر کے ذریعہ ہدایت کو جوڑنے کے لئے۔موجودہ ڈوم عنصر یا موجودہ جزو مثال میں اضافی سلوک شامل کرنے کے لئے کسٹم ہدایت کا استعمال کیا جاتا ہے۔ڈویلپرز ڈوم میں ہیرا پھیری کرنے ، ایونٹ کے سننے والوں کو شامل کرنے ، اور موجودہ اجزاء کے طرز عمل میں ترمیم کرنے کے لئے کسٹم ہدایت کا استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی میں میزبان بائنڈنگ ڈیکوریٹر کا مقصد کیا ہے؟",
        "Answer": "کونیی میں میزبان بائنڈنگ ڈیکوریٹر کا استعمال میزبان عنصر کی پراپرٹی کو ہدایت یا اجزاء 1234 کی پراپرٹی سے باندھنے کے لئے کیا جاتا ہے۔میزبان بائنڈنگ ڈیکوریٹر آپ کو ہدایت یا جزو کلاس 12 سے میزبان عنصر کی خصوصیات کو ترتیب دینے کی اجازت دیتا ہے۔میزبان بائنڈنگ ڈیکوریٹر کا استعمال اسٹائل کی خصوصیات جیسے اونچائی ، چوڑائی ، رنگ ، مارجن ، بارڈر ، وغیرہ ، یا ہدایت یا جزو کلاس 13 میں میزبان عنصر کی کسی بھی دوسری داخلی خصوصیات کو تبدیل کرنے کے لئے کیا جاسکتا ہے۔میزبان بائنڈنگ ڈیکوریٹر ایک پیرامیٹر لیتا ہے ، جو میزبان عنصر کو باندھنے کے لئے پراپرٹی کا نام ہے۔ کونیی میں میزبان بائنڈنگ ڈیکوریٹر استعمال کرنے کے لئے ، ہم ان اقدامات پر عمل کرسکتے ہیں: '@کونیی/کور' لائبریری سے میزبان بائنڈنگ ڈیکوریٹر درآمد کریں۔ہدایت یا اجزاء کی کلاس میں ایک پراپرٹی جس کو آپ میزبان عنصر سے باندھنا چاہتے ہیں۔ ہوسٹ بائنڈنگ ڈیکوریٹر کو میزبان عنصر کی پراپرٹی کے ساتھ جائیداد کو منسلک کرنے کے لئے استعمال کریں۔ میزبان عنصر کی پراپرٹی کا نام ہوسٹ بائنڈنگ ڈیکوریٹر سے کریں. والدین کے جزو کے HTML ٹیمپلیٹ میں ہدایت یا جزو کا استعمال کریں۔ خلاصہ میں ، کونیی میں میزبان بائنڈنگ ڈیکوریٹر میزبان عنصر کی پراپرٹی کو ہدایت یا جزو کی پراپرٹی سے باندھنے کے لئے استعمال ہوتا ہے۔میزبان بائنڈنگ ڈیکوریٹر آپ کو ہدایت یا اجزاء کی کلاس سے میزبان عنصر کی خصوصیات کو ترتیب دینے کی اجازت دیتا ہے۔ڈویلپر اسٹائل کی خصوصیات جیسے اونچائی ، چوڑائی ، رنگ ، مارجن ، بارڈر ، وغیرہ ، یا ہدایت یا اجزاء کی کلاس میں میزبان عنصر کی کسی بھی دوسری داخلی خصوصیات کو تبدیل کرنے کے لئے میزبان بائنڈنگ ڈیکوریٹر کا استعمال کرسکتے ہیں۔کونیی میں میزبان بائنڈنگ ڈیکوریٹر کو استعمال کرنے کے ل we ، ہم ہدایت یا اجزاء کی کلاس میں کسی پراپرٹی کی وضاحت کرسکتے ہیں ، ہوسٹ بائنڈنگ ڈیکوریٹر کو میزبان عنصر کی پراپرٹی سے جائیداد کو جوڑنے کے لئے استعمال کرسکتے ہیں ، اور والدین کے HTML ٹیمپلیٹ میں ہدایت یا جزو کا استعمال کرسکتے ہیں۔اجزاء"
    },
    {
        "Question": "آپ کونیی میں NG-Template کس طرح استعمال کرتے ہیں؟",
        "Answer": "این جی-ٹیمپلیٹ ایک کونیی عنصر ہے جو ٹیمپلیٹ 1234 میں HTML پیش کرنے کے لئے استعمال ہوتا ہے۔تاہم ، یہ براہ راست DOM3 پر نہیں پیش کیا جاتا ہے۔این جی-ٹیمپلیٹ عنصر کا استعمال این جی آئی ایف ، این جی ایف او آر ، این جی ایس ڈبلیوچ ، یا کسٹم ساختی ہدایت نامہ 153 جیسے ساختی ہدایت کے ساتھ کیا جاتا ہے۔این جی-ٹیمپلیٹ ہدایت نامہ ایک ٹیمپلیٹ بلاک کی وضاحت کے لئے استعمال کیا جاتا ہے جو مواد کو متحرک طور پر پیش کرنے کے لئے استعمال کیا جاسکتا ہے۔یہ HTML کوڈ کی وضاحت کرنے کا ایک طریقہ فراہم کرتا ہے جسے کونیی جزو 4 کے اندر متعدد بار دوبارہ استعمال کیا جاسکتا ہے۔این جی-ٹیمپلیٹ ہدایت نامہ این جی-کنٹینر ہدایت نامہ 4 کا استعمال کرتے ہوئے ڈوم میں اضافی نوڈس شامل کیے بغیر عناصر کو گروپ کرنے کے لئے استعمال کیا جاسکتا ہے۔این جی ٹیمپلیٹ ہدایت کو متحرک طور پر پیش کرنے کے لئے بھی استعمال کیا جاسکتا ہے جو NG-content ہدایت نامہ 4 کا استعمال کرتے ہوئے والدین کے جزو سے گزرتا ہے۔خلاصہ یہ کہ ، این جی-ٹیمپلیٹ ایک کونیی عنصر ہے جو ٹیمپلیٹ میں HTML پیش کرنے کے لئے استعمال ہوتا ہے۔این جی-ٹیمپلیٹ ہدایت نامہ ایک ایسے ٹیمپلیٹ بلاک کی وضاحت کے لئے استعمال کیا جاتا ہے جو مواد کو متحرک طور پر پیش کرنے کے لئے استعمال کیا جاسکتا ہے اور کونیی جزو کے اندر متعدد بار دوبارہ استعمال کیا جاسکتا ہے۔ڈویلپرز این جی-ٹیمپلیٹ کے ساتھ ساتھ این جی آئی ایف ، این جی ایف او آر ، این جی ایس ڈبلیوچ ، یا کسٹم ساختی ہدایت نامہ جیسے ساختی ہدایت کے ساتھ استعمال کرسکتے ہیں۔این جی-ٹیمپلیٹ ہدایت نامہ NG-Container اور NG-content ہدایت نامہ کے ساتھ بھی استعمال کیا جاسکتا ہے۔"
    },
    {
        "Question": "کونیی میں دیکھنے والے بچوں اور مشمولات کے بچوں میں کیا فرق ہے؟",
        "Answer": "کونیی میں ویو بچوں اور مشمولات کے بچوں کے مابین اختلافات یہ ہیں: ویوچلڈین ویو فالڈرن ایک ایسا سجاوٹ ہے جو عناصر کی کوئری لسٹ یا ہدایت نامہ سے استعمال کیا جاتا ہے۔ دیکھیں DOM123.Viewchilders بچوں کے اجزاء یا ہدایتوں کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے جو ٹیمپلیٹ میں بیان کیا جاتا ہے۔والدین کے اجزاء 123۔ویو کے بچے بچوں کے اجزاء یا ہدایتوں کا حوالہ حاصل کرنے کے لئے استعمال ہوتے ہیں جو والدین کے اجزاء کے پیش نظر کی وضاحت کرتے ہیں۔بچوں کے اجزاء یا ہدایت نامہ 123۔کونٹینڈرکینٹینٹ چلڈرن ایک ایسا سجاوٹ ہے جو ڈوم 456 کے مواد سے عناصر یا ہدایات کی استفسار کی لسٹ حاصل کرنے کے لئے استعمال ہوتا ہے۔بچوں کے اجزاء یا ہدایتوں کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے جو والدین کے اجزاء 456 کے مواد میں پیش کیے جاتے ہیں۔خلاصہ ، ویوڈرینین اور مشترکہ بچے کونیی میں سجاوٹ ہیں جو عناصر کی کوئری لسٹ یا ہدایت نامہ کو بالترتیب ویو ڈوم اور مشمولات سے حاصل کرنے کے لئے استعمال ہوتے ہیں۔ویوچلڈین کا استعمال بچوں کے اجزاء یا ہدایتوں کا حوالہ حاصل کرنے کے لئے کیا جاتا ہے جو والدین کے جزو کے پیش نظر بیان کیے جاتے ہیں ، جبکہ مشمولات بچوں کو بچوں کے اجزاء یا ہدایتوں کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے جو والدین کے جزو کے مشمولات میں پیش کیے جاتے ہیں۔ویو فالزن بچوں کے اجزاء یا ہدایتوں کی ایک استفسار لسٹ لوٹاتا ہے ، جبکہ مشمول بچوں نے متوقع بچوں کے اجزاء یا ہدایت ناموں کی ایک استفسار لوٹ لیا ہے۔"
    },
    {
        "Question": "آپ کونیی میں ایلیمیمرف کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "ایلیمنٹ ریف کونیی کی ایک کلاس ہے جو جزو یا ہدایت نامہ کلاس 12345 میں کسی HTML عنصر کا حوالہ حاصل کرنے کے لئے استعمال ہوتی ہے۔ایلیمنٹ ریف کلاس آبائی ڈوم عنصر (HTML عنصر) آبجیکٹ کے ارد گرد ایک ریپر ہے ، اور اس میں پراپرٹی کی رہائش گاہ ہوتی ہے ، جس میں بنیادی DOM آبجیکٹ 13 کا حوالہ ہوتا ہے۔ہم ڈوم کو جوڑ توڑ کرنے اور HTML عنصر 13 کی خصوصیات اور طریقوں تک رسائی حاصل کرنے کے لئے عنصر ریف کا استعمال کرسکتے ہیں۔ہم اجزاء یا ہدایت نامہ کلاس 13 میں کسی HTML عنصر کے عنصر کو حاصل کرنے کے لئے ویوچائڈ ڈیکوریٹر کا استعمال کرتے ہیں۔جب ہم کنسٹرکٹر 13 میں درخواست کرتے ہیں تو ہم جزو یا ہدایت کے میزبان عنصر کے عنصر ریف کو بھی انجیکشن کرسکتے ہیں۔ہم کسی HTML عنصر کا حوالہ حاصل کرنے اور کونیی ایپلی کیشنز 1345 میں ڈوم کو جوڑنے کے لئے عنصر ریف کا استعمال کرسکتے ہیں۔خلاصہ یہ کہ ، ایلیمنٹریف کونییولر میں ایک کلاس ہے جو جزو یا ہدایت نامہ کلاس میں HTML عنصر کا حوالہ حاصل کرنے کے لئے استعمال ہوتا ہے۔ڈویلپرز ڈوم کو جوڑ توڑ کرنے اور HTML عنصر کی خصوصیات اور طریقوں تک رسائی حاصل کرنے کے لئے عنصر ریف کا استعمال کرسکتے ہیں۔ہم اجزاء یا ہدایت نامہ میں کسی HTML عنصر کے عنصر کو حاصل کرنے کے لئے ویوچائڈ ڈیکوریٹر کا استعمال کرسکتے ہیں ، اور جب ہم اس کی درخواست کرتے ہیں تو ہم اس کی درخواست کرتے ہیں۔"
    },
    {
        "Question": "کونیی میں رینڈر 2 کا مقصد کیا ہے؟",
        "Answer": "رینڈرر 2 کونییولر میں ایک کلاس ہے جو کونیی ایپ کے عناصر کو براہ راست ڈوم کو چھونے کے بغیر جوڑنے کے لئے ایک خدمت فراہم کرتا ہے۔رینڈرر 2 کلاس ایک خلاصہ ہے جو کونیی کے ذریعہ عناصر کو براہ راست ڈوم 2 کے ذریعے چھونے کے ذریعے جوڑ کر فراہم کیا جاتا ہے۔رینڈرر 2 کلاس DOM12 میں عناصر کو بنانے ، اس میں ترمیم کرنے اور حذف کرنے کے لئے استعمال ہوتا ہے۔رینڈرر 2 کلاس کا استعمال کلاسوں ، شیلیوں اور عناصر 12 کو اوصاف کو شامل کرنے اور اسے دور کرنے کے لئے کیا جاتا ہے۔رینڈرر 2 کلاس عناصر 12 پر واقعات سننے کے لئے استعمال ہوتا ہے۔رینڈرر 2 کلاس متحرک تصاویر اور ٹرانزیشن 12 بنانے کے لئے استعمال ہوتا ہے۔رینڈرر 2 کلاس کسٹم ہدایت اور اجزاء 12 بنانے کے لئے استعمال ہوتا ہے۔رینڈرر 2 کلاس دوبارہ قابل استعمال اجزاء بنانے کے لئے استعمال ہوتا ہے جس میں والدین سے بچوں کے جزو یا اس کے برعکس 12 کے اعداد و شمار یا مواد کو منتقل کرنے سے کہیں زیادہ عام گنجائش ہوتی ہے۔خلاصہ یہ کہ ، رینڈرر 2 کونییولر میں ایک کلاس ہے جو کونیی ایپ کے عناصر کو براہ راست چھوئے بغیر جوڑنے کے لئے ایک خدمت فراہم کرتا ہے۔ڈویلپرز ڈوم میں موجود عناصر کو تخلیق ، ترمیم اور حذف کرنے ، کلاسوں ، اسلوب ، اور عناصر سے صفات کو شامل کرنے اور ان کو ہٹانے ، عناصر پر واقعات کو سننے ، متحرک تصاویر اور ٹرانزیشن تخلیق کرنے ، اپنی مرضی کے مطابق ہدایت اور اجزاء تخلیق کرنے ، اور دوبارہ استعمال کے قابل اجزاء تخلیق کرنے کے لئے رینڈر 2 کا استعمال کرسکتے ہیں۔والدین سے لے کر بچوں کے اجزاء تک یا اس کے برعکس ڈیٹا یا مواد کو پاس کرنے سے کہیں زیادہ عام گنجائش رکھیں۔"
    },
    {
        "Question": "آپ کونیی میں NGSWitch ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں NGSwitch ہدایت نامہ استعمال کرنے کے لئے یہ اقدامات ہیں: ماڈیول میں کامن ماڈل کو درآمد کریں جہاں آپ NGSwitch ہدایت نامہ استعمال کرنا چاہتے ہیں۔ NGSWitch ہدایت کو کنٹینر عنصر میں شامل کریں اور اس کے خلاف میچ کرنے کے لئے ایک اظہار فراہم کریں۔عناصر اور اس کے خلاف میچ کرنے کے لئے ایک اظہار فراہم کرتے ہیں۔ NGSWITCHDEFALT ہدایت کو بچے کے عنصر کے ساتھ شامل کریں جس کو ظاہر کیا جانا چاہئے جب NGSWICHCASE کے اظہار میں سے کوئی بھی میچ نہیں کرتا ہے۔کونیی میں NGSwitch ہدایت نامہ استعمال کرنے کی ایک مثال: <Div [ngswitch] = \"دن\"> <p *ngswitchase = \"'پیر' '> آج پیر ہے </p> <p *ngswitchase =\"' منگل '\"> آجمنگل </p> <p *ngswitchase = \"'بدھ\" \"> آج بدھ ہے </p> <p *ngswitchase =\"' جمعرات '\"> آج جمعرات ہے </p> <p *ngswitchase =\"' جمعہ''> آج جمعہ ہے </p> <p *ngswitchdefault> یہ ہفتے کے آخر میں ہے! </p> </div> مذکورہ بالا مثال میں ، ہمارے پاس NGSwitch ہدایت کے ساتھ ایک کنٹینر عنصر موجود ہے جو ایک ان پٹ کے طور پر متغیر دن لیتا ہے۔ہم نے ہفتے کے ہر دن کے معاملات کی وضاحت کے لئے *ngswitchase ہدایت کا استعمال کیا ہے ، اور *NGSWITCHDEFAULT ہدایت کو پہلے سے طے شدہ کیس کی وضاحت کرنے کے لئے جب کوئی معاملہ نہیں مماثل ہے۔کچھ پہلے سے طے شدہ حالت پر مبنی ڈوم عناصر۔NGSWitch ہدایت کو استعمال کرنے کے ل we ، ہمیں NGSWitch ہدایت کو کنٹینر عنصر میں شامل کرنے اور اس کے مقابلہ کے ل an ایک اظہار فراہم کرنے کی ضرورت ہے۔ہمیں بچوں کے عناصر میں NGSwitchase ہدایت نامہ شامل کرنے اور اس سے ملنے کے لئے اظہار خیال کرنے کی بھی ضرورت ہے۔آخر میں ، ہمیں NGSWITCHDEFALT ہدایت کو بچوں کے عنصر میں شامل کرنے کی ضرورت ہے جس کو ظاہر کیا جانا چاہئے جب NGSWICHCASE کے اظہار میں سے کوئی بھی میچ نہیں ہوتا ہے۔"
    },
    {
        "Question": "کونیی میں ویوچائڈ اور مشمولات کے درمیان کیا فرق ہے؟",
        "Answer": "یہاں کونیولر میں ویوچائڈ اور مشمولات کے مابین اختلافات ہیں: ویوچائلڈ ویوچائلڈ ایک ایسا سجاوٹ ہے جو کسی ایک عنصر کا حوالہ حاصل کرنے کے لئے استعمال ہوتا ہے یا DOM123456 ویو سے ہدایت نامہ حاصل کیا جاتا ہے۔والدین کے اجزاء 123456 کا ٹیمپلیٹ۔ ویو چائلڈ کو کسی بچے کے جزو یا ہدایت کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے جو والدین کے اجزاء 123456 کے پیش نظر بیان کیا جاتا ہے۔ ویو چائلڈ بچوں کے جزو یا ہدایت نامہ 123456 کا ایک ہی حوالہ واپس کرتا ہے۔کسی ایک عنصر کا حوالہ حاصل کرنے کے لئے یا مشمولات سے ہدایت نامہ DOM123456. کانٹینٹائڈ کو کسی بچے کے جزو یا ہدایت کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے جو والدین کے اجزاء 123456 کے سانچے میں پیش کیا جاتا ہے۔یا ہدایت نامہ جو والدین کے اجزاء 123456 کے مواد میں پیش کیا جاتا ہے۔بالترتیب ڈوم اور مواد ڈوم دیکھیں۔ویوچڈ کو کسی بچے کے جزو یا ہدایت کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے جس کی تعریف والدین کے جزو کے پیش نظر میں کی جاتی ہے ، جبکہ مشمولات کو کسی بچے کے جزو یا ہدایت کا حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے جو والدین کے جزو کے مواد میں پیش کیا جاتا ہے۔ویوڈائڈ بچے کے جزو یا ہدایت کا ایک ہی حوالہ واپس کرتا ہے ، جبکہ مشمول بچے بچے کے جزو یا ہدایت نامہ کا ایک ہی حوالہ بھی واپس کرتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں NG-Container ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "این جی-کنٹینر کونییولر میں ایک ہدایت ہے جو DOM123456 میں اضافی نوڈس شامل کیے بغیر عناصر کو گروپ کرنے کے لئے استعمال ہوتا ہے۔این جی-کنٹینر ہدایت کو ایک منطقی کنٹینر بنانے کے لئے استعمال کیا جاتا ہے جس میں آئی ٹی 13 کے اندر متعدد عناصر شامل ہوسکتے ہیں۔اسے کسی عنصر کی حیثیت سے اسکرین پر نہیں پیش کیا جاتا ہے ، بجائے اس کے کہ یہ HTML3 میں بطور تبصرہ بے گھر ہو جاتا ہے۔ہم رن ٹائم 1234 پر ڈوم میں کوئی اضافی عنصر شامل کیے بغیر HTML عناصر کو لپیٹنے کے لئے NG-Container استعمال کرسکتے ہیں۔این جی کنٹینر کونیولر 12 میں بے کار عناصر سے بچنے کے لئے استعمال کیا جاتا ہے۔ہم این جی کنٹینر کا استعمال کرسکتے ہیں جہاں متعدد ساختی ہدایات 13 استعمال کی جاتی ہیں۔این جی کنٹینر کو ساختی ہدایت جیسے این جی آئی ایف ، این جی ایف او آر ، این جی ایس ڈبلیوچ ، وغیرہ 12346 کے ساتھ استعمال کیا جاسکتا ہے۔یہ ایک بہت ہی مفید ہدایت ہے ، خاص طور پر جب این جی آئی ایف ، این جی ایف او آر ، وغیرہ جیسے ساختی ہدایت کے ساتھ کام کرنا۔خلاصہ یہ کہ ، این جی کنٹینر کونیی میں ایک ہدایت ہے جو ڈوم میں اضافی نوڈس شامل کیے بغیر عناصر کو گروپ کرنے کے لئے استعمال ہوتا ہے۔ڈویلپرز رن ٹائم کے وقت ڈوم میں کوئی اضافی عنصر شامل کیے بغیر ایچ ٹی ایم ایل عناصر کو لپیٹنے کے لئے این جی کنٹینر کا استعمال کرسکتے ہیں۔این جی-کنٹینر کو ساختی ہدایت جیسے این جی آئی ایف ، این جی ایف او آر ، این جی ایس ڈبلیوچ ، وغیرہ کے ساتھ استعمال کیا جاسکتا ہے۔ یہ ایک بہت ہی مفید ہدایت ہے ، خاص طور پر جب این جی آئی ایف ، این جی ایف او آر وغیرہ جیسے ساختی ہدایت کے ساتھ کام کرنا۔"
    },
    {
        "Question": "کونیی میں ان پٹ اور آؤٹ پٹ سجاوٹ کا مقصد کیا ہے؟",
        "Answer": "کونیی میں @ان پٹ اور @آؤٹ پٹ ڈیکوریٹرز کونیی ایپلی کیشنز 123456 میں والدین اور بچوں کے اجزاء کے مابین ڈیٹا پاس کرنے کے لئے استعمال ہوتے ہیں۔ان سجاوٹ کے مقاصد یہ ہیں: inputthe input ڈیکوریٹر کسی بچے کے اجزاء 123456 میں ان پٹ پراپرٹی کی وضاحت کے لئے استعمال ہوتا ہے۔ @ان پٹ ڈیکوریٹر کو والدین کے جزو سے ڈیٹا کو کسی بچے کے جزو میں منتقل کرنے کے لئے استعمال کیا جاتا ہے۔جزو پراپرٹی بائنڈنگ 25 کو حاصل کریں۔والدین کے اجزاء 123456.in کا ایک بچہ جزو ، کونیی میں @ان پٹ اور @آؤٹ پٹ ڈیکوریٹرز کونیی ایپلی کیشنز میں والدین اور بچوں کے اجزاء کے مابین ڈیٹا پاس کرنے کے لئے استعمال ہوتے ہیں۔@ان پٹ ڈیکوریٹر کو بچے کے جزو میں ان پٹ پراپرٹی کی وضاحت کرنے اور والدین کے جزو سے ڈیٹا منتقل کرنے کے لئے استعمال کیا جاتا ہے۔@آؤٹ پٹ ڈیکوریٹر کو کسی بچے کے جزو میں آؤٹ پٹ پراپرٹی کی وضاحت کرنے اور بچوں کے جزو سے ڈیٹا کو والدین کے جزو میں منتقل کرنے یا بچوں کے جزو سے والدین کے جزو تک پہنچانے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "آپ کونیولر میں ڈوم میں ترمیم کرنے کے لئے رینڈر 2 کلاس کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ڈوم میں ترمیم کرنے کے لئے رینڈر 2 کلاس کو استعمال کرنے کے ل we ، ہم ان اقدامات پر عمل کرسکتے ہیں: '@@کونیی/کور' لائبریری سے رینڈر 2 کلاس درآمد کریں۔ رینڈر 2 کلاس کو اجزاء یا ہدایت کار کنسٹرکٹر میں شامل کریں۔ تخلیق کرنے کے لئے رینڈر 2 کلاس کو استعمال کریں ،ڈوم میں عناصر میں ترمیم کریں ، اور حذف کریں۔ عناصر کو کلاس ، شیلیوں اور اوصاف کو شامل کرنے اور ہٹانے کے لئے رینڈر 2 کلاس کا استعمال کریں۔ عناصر پر واقعات کو سننے کے لئے رینڈر 2 کلاس کا استعمال کریں۔ رینڈر 2 کلاس کو متحرک اور منتقلی کے ل use استعمال کریں۔ رینڈرر 2 استعمال کریں۔اپنی مرضی کے مطابق ہدایت اور اجزاء تخلیق کرنے کے لئے کلاس۔ یہاں کونیولر میں ڈوم میں ترمیم کرنے کے لئے رینڈر 2 کلاس کو استعمال کرنے کی ایک مثال ہے: درآمد {اجزاء ، رینڈرر 2 ، عنصر ریف 'سے'@کونیی/کور '؛@اجزاء ({سلیکٹر:' ایپ روٹ'، ٹیمپلیٹ:' <Div #mydiv> </div> '}) ایکسپورٹ کلاس ایپکمپرینٹ {کنسٹرکٹر (نجی رینڈرر: رینڈرر 2 ، نجی EL: ElementRef) {} ngafterViewInit () {const div = this.el.nativelement.querySelector ('#mydiv') ؛const text = this.renderer.createtext ('ہیلو ، دنیا!') ؛this.renderer.appendchild (Div ، متن) ؛this.renderer.addclass (div ، 'میرا کلاس') ؛this.renderer.setstyle (div ، 'رنگ' ، 'سرخ') ؛this.renderer.listen (div ، 'کلک' ، () => الرٹ ('کلک کیا گیا!')) ؛}} مذکورہ بالا مثال میں ، ہمارے پاس ایک ایسا جزو ہے جس میں ایک ٹیمپلیٹ ہے جس میں حوالہ Mydiv کے ساتھ ایک DIV عنصر ہوتا ہے۔ngafterviewinit لائف سائکل ہک میں ، ہم نے 'ہیلو ، ورلڈ!' کے متن کے ساتھ ٹیکسٹ نوڈ بنانے کے لئے رینڈر 2 کلاس کا استعمال کیا ہے ، اسے ڈیو عنصر میں شامل کریں ، ایک کلاس میرا کلاس شامل کریں ، اسٹائل کا رنگ ترتیب دیں۔سرخ ، اور Div عنصر پر کلک ایونٹ سنیں۔ خلاصہ میں ، کونیی میں رینڈر 2 کلاس کونیولر ایپ کے عناصر کو براہ راست چھوئے بغیر جوڑنے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز ڈوم میں عناصر کو بنانے ، اس میں ترمیم کرنے اور حذف کرنے ، کلاسوں ، شیلیوں اور عناصر سے صفات کو شامل کرنے اور ان کو ہٹانے ، عناصر کے واقعات کو سننے ، متحرک تصاویر اور منتقلی تخلیق کرنے ، اور اپنی مرضی کے مطابق ہدایت اور اجزاء تخلیق کرنے کے لئے رینڈر 2 کلاس کا استعمال کرسکتے ہیں۔کونیی میں رینڈر 2 کلاس کو استعمال کرنے کے ل we ، ہمیں '@@کونیی/کور' لائبریری سے رینڈر 2 کلاس درآمد کرنے کی ضرورت ہے ، اسے جزو یا ہدایت دینے والے کنسٹرکٹر میں انجیکشن کریں ، اور اس کو ڈوم .1itnext2digitalocean3tektutorialshub4thedukh5Ch5Ch5Chetepage میں جوڑ توڑ کرنے کے لئے استعمال کریں۔"
    },
    {
        "Question": "کونیی میں @انجیکشن ڈیکوریٹر کا مقصد کیا ہے؟",
        "Answer": "کونیی میں @انجیک ایبل ڈیکوریٹر کلاس کو بطور خدمت کی وضاحت کرنے کے لئے استعمال ہوتا ہے اور کونیولر کو انحصار 12 کے طور پر اسے جزو میں انجیکشن کرنے کی اجازت دیتا ہے۔یہاں @انجیک ایبل ڈیکوریٹر کے مقاصد ہیں: @انکج ایبل ڈیکوریٹر کو ایک کلاس کو Angular12 میں خدمت کے طور پر بیان کرنے کے لئے استعمال کیا جاتا ہے۔ @انجیکشن ڈیکوریٹر اس بات کی نشاندہی کرنے کے لئے استعمال کیا جاتا ہے کہ ایک جز ، کلاس ، پائپ ، یا این جی موڈول کی خدمت 1 پر انحصار ہوتا ہے۔. @انجیکشن ایبل ڈیکوریٹر میٹا ڈیٹا تیار کرتا ہے جو انحصار انجیکشن کے لئے صحیح طریقے سے کام کرنے کے لئے ضروری ہوتا ہے ۔345 .۔ @انجیکشن ایبل ڈیکوریٹر کلاس کو ایک میٹا ڈیٹا فراہم کرنے کے لئے استعمال کیا جاتا ہے جو کونیی کو بتاتا ہے کہ کلاس 3445 کو کس طرح تخلیق کیا جائے۔ایک میٹا ڈیٹا جو کونیی کو بتاتا ہے کہ کلاس کو کس پر انحصار کرنا پڑتا ہے 345۔خدمت اور اس کی نشاندہی کرتی ہے کہ ایک جز ، کلاس ، پائپ ، یا این جی موڈول کی خدمت پر انحصار ہوتا ہے۔@انجیک ایبل ڈیکوریٹر میٹا ڈیٹا تیار کرتا ہے جو انحصار انجیکشن کے لئے صحیح طریقے سے کام کرنے کے لئے ضروری ہوتا ہے اور کلاس کو میٹا ڈیٹا فراہم کرتا ہے جو کونییولر کو بتاتا ہے کہ کلاس کو کس طرح انحصار کرنا ہے ، اور ان انحصار کو کیسے حل کیا جائے۔"
    },
    {
        "Question": "آپ کونیولر میں اونائٹ اور اونڈسٹروی انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں اونینٹ اور اونڈسٹروی انٹرفیس کونیی اجزاء اور ہدایتوں میں لائف سائیکل ہکس کو نافذ کرنے کے لئے استعمال کیا جاتا ہے۔ان کو استعمال کرنے کا طریقہ یہ ہے کہ: اونائٹینیٹ انٹرفیس کو کسی جزو یا ہدایت نامہ 1234 میں نگونینٹ () کے طریقہ کار کو نافذ کرنے کے لئے استعمال کیا جاتا ہے۔ جزو یا ہدایت کی تعمیر کے بعد ہینگونیٹ () کے طریقہ کار کو صرف ایک بار کہا جاتا ہے۔پیچیدہ منطق کو انجام دیں اور ڈیٹا 1234 کو بازیافت کریں۔ گنگونیٹ () کا طریقہ کار کو شروع کرنے کے لئے استعمال کیا جاتا ہے یا ہدایت کے بعد کونیی پہلے اعداد و شمار سے منسلک خصوصیات کو ظاہر کرتا ہے اور ان پٹ پراپرٹیز 3 کا تعین کرتا ہے۔یا ہدایت نامہ 12564۔ این جیونڈسٹروی () کا طریقہ کار جزو یا ہدایت کو تباہ ہونے سے ٹھیک پہلے کہا جاتا ہے۔یا ہدایت نامہ 2564.in کا خلاصہ ، کونیی میں اونینٹ اور اونڈسٹروی انٹرفیس کونیی اجزاء اور ہدایتوں میں لائف سائیکل ہکس کو نافذ کرنے کے لئے استعمال کیا جاتا ہے۔ngoninit () کا طریقہ کار کو شروع کرنے کے لئے استعمال کیا جاتا ہے یا کونیی پہلے ڈیٹا سے منسلک خصوصیات کو ظاہر کرنے اور ان پٹ پراپرٹیز کا تعین کرنے کے بعد اس کا استعمال کیا جاتا ہے ، جبکہ Ngondestroy () کا طریقہ میموری لیک سے بچنے اور صفائی کے کاموں کو انجام دینے کے لئے وسائل کو جاری کرنے کے لئے استعمال کیا جاتا ہے۔جزو یا ہدایت۔ڈویلپرز ان انٹرفیس کو پیچیدہ منطق کو نافذ کرنے ، اعداد و شمار کو بازیافت کرنے ، اور کونیی اجزاء اور ہدایتوں میں صفائی کے کام انجام دینے کے لئے استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی میں واقعہ پیش کرنے والے اور مضمون کی کلاسوں میں کیا فرق ہے؟",
        "Answer": "اینگولر میں واقعہ پیش کرنے والے اور سبجیکٹ کلاسوں کے مابین اختلافات یہ ہیں: ایونٹ میٹیر ایونٹیمیٹر ایک کونیی خلاصہ ہے جو آر ایکس جے ایس سبجیکٹ کلاس 123 کو بڑھاتا ہے۔پہلے سے طے شدہ ، لیکن اسے فلیگ 4 کو پاس کرکے متضاد بنایا جاسکتا ہے۔ ایونٹیمیٹر کو صرف @آؤٹ پٹ () کے لئے اجزاء اور ہدایت ناموں میں استعمال کرنے کے لئے ڈیزائن کیا گیا ہے۔Angular523 میں اجزاء یا خدمات کے درمیان۔ سبجیکٹ ڈیفالٹ 4 کے ذریعہ متضاد ہے۔ سبجیکٹ کو ایونٹیمیٹر 2۔مری میں زیادہ عام مقاصد کے لئے استعمال کرنے کے لئے ڈیزائن کیا گیا ہے۔ایونٹیمیٹر ایک کونیی تجرید ہے جو RXJS سبجیکٹ کلاس کو بڑھاتا ہے اور بنیادی طور پر جب صارف کی کارروائی ہوتی ہے تو وہ کسی بچے کے جزو سے اپنے والدین کے جزو میں ڈیٹا منتقل کرنے کے لئے استعمال ہوتا ہے۔ایونٹیمیٹر بطور ڈیفالٹ ہم وقت ساز ہے اور اسے صرف @آؤٹ پٹ () کے لئے اجزاء اور ہدایتوں میں استعمال کرنے کے لئے ڈیزائن کیا گیا ہے۔موضوع RXJs میں ایک کلاس ہے جو مشاہدہ کرنے کے لئے استعمال ہوتا ہے اور کونیی میں اجزاء یا خدمات کے مابین ڈیٹا کو منتقل کرنے کے لئے استعمال ہوتا ہے۔مضمون بطور ڈیفالٹ متضاد ہے اور اسے ایونٹیمیٹر سے زیادہ عام مقاصد کے لئے استعمال کرنے کے لئے ڈیزائن کیا گیا ہے۔"
    },
    {
        "Question": "آپ کونیی میں NGIF ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں NGIF ہدایت کو استعمال کرنے کے ل we ، ہم ان مراحل پر عمل کرسکتے ہیں: HTML عنصر میں *NGIF ہدایت شامل کریں جسے ہم مشروط طور پر دکھانا چاہتے ہیں یا چھپانا چاہتے ہیں۔ *NGIF ہدایت کو کسی ایسے اظہار کی طرف بڑھائیں جو بولین قدر کا اندازہ کرتا ہے۔سچ کی جانچ پڑتال کرتا ہے ، عنصر ظاہر ہوتا ہے۔اگر اظہار غلط کی تشخیص کرتا ہے تو ، عنصر کو ڈوم سے ہٹا دیا جاتا ہے۔ یہاں کونیولر میں این جی آئی ایف ہدایت کو استعمال کرنے کی ایک مثال ہے: <ڈیو *این جی آئی ایف = \"نمائش\"> <p> اگر دکھاوا یہ سچ ہے تو یہ عنصر ظاہر ہوتا ہے۔ <//p> </div> مذکورہ بالا مثال میں ، ہمارے پاس *NGIF ہدایت کے ساتھ ایک DIV عنصر ہے جو shoelement متغیر کا پابند ہے۔اگر نمائش درست ہے تو ، پی عنصر ظاہر ہوتا ہے۔اگر نمائش غلط ہے تو ، پی عنصر کو ڈوم ڈاٹ ان سمری سے ہٹا دیا جاتا ہے ، کونیی میں این جی آئی ایف کی ہدایت کو بولین اظہار کی بنیاد پر ایچ ٹی ایم ایل میں مشروط طور پر ظاہر کرنے یا چھپانے کے لئے استعمال کیا جاتا ہے۔این جی آئی ایف کی ہدایت کو استعمال کرنے کے ل we ، ہمیں *این جی آئی ایف ہدایت کو ایچ ٹی ایم ایل عنصر میں شامل کرنے کی ضرورت ہے جسے ہم مشروط طور پر دکھانا چاہتے ہیں یا چھپانا چاہتے ہیں اور اسے اس اظہار کے ساتھ باندھنا چاہتے ہیں جو بولین کی قدر کا اندازہ کرتا ہے۔اگر اظہار سچائی کا جائزہ لیتا ہے تو ، عنصر ظاہر ہوتا ہے۔اگر اظہار غلط کی تشخیص کرتا ہے تو ، عنصر کو ڈوم .1.1angular-university2codecraft3tektutorialshub4geeksforgeeks5angular سے ہٹا دیا جاتا ہے"
    },
    {
        "Question": "کونیی میں ngzone سروس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں Ngzone سروس کونیی ایپلی کیشن 1234 میں غیر متزلزل کارروائیوں کے عملدرآمد کے سیاق و سباق کا انتظام کرنے کے لئے استعمال کیا جاتا ہے۔این جی زون سروس کے مقاصد یہ ہیں: این جی زون سروس کو ایک زون بنانے کے لئے استعمال کیا جاتا ہے جو اسینکرونس ٹاسکس 34 میں برقرار رہتا ہے۔ این جی زون سروس کو ایک کونیی ایپلی کیشن 1234 میں غیر متزلزل کارروائیوں کے عمل کو سنبھالنے کے لئے استعمال کیا جاتا ہے۔ این جی زون سروس کارکردگی کو بہتر بنانے کے لئے استعمال کی جاتی ہے۔کونییولر زون کے باہر کچھ کوڈ چلانے سے ، کونیولر کو کسی بھی تبدیلی کا پتہ لگانے سے روکتا ہے۔ این جی زون سروس کونیولر کے زون کے باہر کچھ کوڈ کو واضح طور پر چلانے کے لئے استعمال کیا جاتا ہے ، اور کونیی کو کسی بھی تبدیلی کا پتہ لگانے سے روکتا ہے۔ این جی زون سروس کونیولر کو مطلع کرنے کے لئے استعمال کیا جاتا ہے جب ایک غیر متزلزل کام ہوتا ہے۔234 کا آغاز یا ختم ہوا ہے۔ این جی زون سروس کونییول میں تبدیلی کی نشاندہی کو متحرک کرنے کے لئے استعمال کی جاتی ہے جب کسی ایپلی کیشن اسٹیٹ 4 میں تبدیل ہوسکتی ہے۔ خلاصہ میں ، کونییول میں این جی زون سروس کونیی ایپلی کیشن میں غیر متزلزل کارروائیوں کے عمل کے تناظر کو سنبھالنے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز این جی زون سروس کا استعمال کونییول کے زون کے باہر کچھ کوڈ چلا کر کارکردگی کو بہتر بنانے کے لئے استعمال کرسکتے ہیں ، جب ایک غیر متزلزل کام شروع ہوتا ہے یا ختم ہوتا ہے تو کونیی کو مطلع کریں ، اور کونیی میں ٹرگر تبدیلی کا پتہ لگانا جب کسی ایپلی کیشن کی حالت تبدیل ہوسکتی ہے۔"
    },
    {
        "Question": "آپ کونییولر میں کیولیوپائپ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں کیوالیوپائپ کسی شے یا نقشے پر تکرار کرنے اور اسے کلیدی قیمت کے جوڑے 123456 کی صف میں تبدیل کرنے کے لئے استعمال ہوتا ہے۔کونیولر میں کیولویلیپائپ کو استعمال کرنے کے لئے یہ اقدامات ہیں: @کونیی/کامن لائبریری سے کیولویلیپائپ درآمد کریں۔آبجیکٹ یا نقشہ کو ان پٹ کے طور پر پاس کریں۔ آبجیکٹ یا نقشہ کو کلید ویلیو جوڑیوں کی صف میں تبدیل کرنے کے لئے کیولو پائپ کا استعمال کریں۔ یہاں کونیولر میں کیوالیوپائپ کو استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {اجزاء}؛ '@کونیی/عام' سے@keyvaluepipe}@جزو ({سلیکٹر: 'ایپ روٹ' ، ٹیمپلیٹ: `<div *ngfor =\" آبجیکٹ کی آئٹم | keyvalue \"> key: {{item.key}} ، ویلیو: {{آئٹم.Value}} </div> `}) کلاس ایپکمپرینٹ {آبجیکٹ = {فو: 'بار' ، باز: 'Qux'} ؛} مذکورہ مثال کے طور پر ، ہمارے پاس ایک جزو ہےٹیمپلیٹ جس میں *ngfor ہدایت کے ساتھ ایک Div عنصر ہوتا ہے جو آبجیکٹ متغیر کا پابند ہے۔ہم نے کلیدی قیمت کے جوڑے کی ایک صف میں آبجیکٹ کو تبدیل کرنے کے لئے کیولو پائپ کا استعمال کیا ہے۔کلیدی قدر کے جوڑے کی صف پر *ngfor ہدایت نامہ کی تکرار کرتا ہے اور ہر آئٹم کی کلید اور قدر کو ظاہر کرتا ہے۔ خلاصہ میں ، کونیی میں کلیدی پائپ کسی شے یا نقشے پر تکرار کرنے اور اسے کلید ویلیو کی ایک صف میں تبدیل کرنے کے لئے استعمال ہوتا ہےجوڑےkeyvaluepipe استعمال کرنے کے ل we ، ہمیں اسے @کونیی/کامن لائبریری سے درآمد کرنے کی ضرورت ہے ، اسے *ngfor ہدایت کے ساتھ ٹیمپلیٹ میں استعمال کریں ، keyvaluepipe پر *ngfor ہدایت کو پابند کریں ، اور آبجیکٹ یا نقشہ کو تبدیل کرنے کے لئے کیولو پائپ کا استعمال کریں۔کلیدی قدر کے جوڑے کی ایک صف"
    },
    {
        "Question": "کونیی میں اجزاء فیکٹری ریرسولور اور ویو کانٹینریف کلاسوں میں کیا فرق ہے؟",
        "Answer": "کونیی میں اجزاء فیکٹری ریرسولور اور ویو کانٹینریف کلاسز متحرک جزو تخلیق اور ہیرا پھیری کے لئے استعمال ہوتے ہیں۔ان دو طبقات کے مابین اختلافات یہ ہیں: اجزاء فیکٹریئرسولورورٹ اجزاء فیکٹریئرسولور کلاس کسی دیئے گئے جزو ٹائپ 12345 کے لئے ایک اجزاء فیکٹری بنانے کے لئے استعمال کیا جاتا ہے۔ اجزاء فیکٹری ریرسولور کلاس کو جزوی طور پر 12345 کی تشکیل کرنے کے لئے استعمال کیا جاتا ہے۔جزو مثال 12345 کے ساتھ بات چیت کرنے کے لئے استعمال کیا جاتا ہے۔ اجزاء فیکٹری ریرسولور کلاس کو انگولر 12345 میں متحرک اجزاء بنانے کے لئے استعمال کیا جاتا ہے۔ ویو کونٹینریفٹ ویو کونٹینرف کلاس ایک کنٹینر کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے جہاں ایک یا زیادہ ملاحظہ کیا جاسکتا ہے۔. ویو کانٹینریف کلاس متحرک طور پر نظریات کو بنانے اور اسے ختم کرنے کے لئے استعمال کیا جاتا ہے۔اجزاء فیکٹری ریرسولور کلاس کسی دیئے گئے جزو کی قسم کے لئے ایک اجزاء فیکٹری بنانے ، متحرک طور پر کسی جزو کی مثال بنانے ، اور ایک اجزاء ریف بنانے کے لئے استعمال کیا جاتا ہے جس کو جزو مثال کے ساتھ تعامل کرنے کے لئے استعمال کیا جاسکتا ہے۔ویو کانٹینرف کلاس کسی ایسے کنٹینر کی نمائندگی کرنے کے لئے استعمال کیا جاتا ہے جہاں ایک یا زیادہ آراء منسلک ہوسکتے ہیں ، کنٹینر میں موجود نظارے کو جوڑیں ، متحرک طور پر نظارے کو تخلیق کریں اور تباہ کریں ، اور متحرک طور پر اجزاء داخل کریں اور اسے ہٹا دیں۔"
    },
    {
        "Question": "کونیی میں عنصر بنانے کے لئے آپ رینڈر 2 کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں عنصر بنانے کے لئے رینڈر 2 کلاس کو استعمال کرنے کے ل we ، ہم ان اقدامات پر عمل پیرا ہوسکتے ہیں: @کونیی/کور لائبریری سے رینڈرر 2 کلاس درآمد کریں۔ رینڈر 2 کلاس کو اجزاء یا ہدایت کار کنسٹرکٹر میں شامل کریں۔ رینڈرر 2 کلاس کو استعمال کرتے ہوئے عنصر بنانے کے لئے استعمال کریں تاکہ عنصر پیدا کریں تاکہ کسی عنصر کو استعمال کریں تاکہ کسی عنصر کو استعمال کیا جاسکے۔کریٹیلیمنٹ () کا طریقہ۔ تخلیق ٹیکسٹ () کے طریقہ کار کا استعمال کرتے ہوئے عنصر میں متن شامل کرنے کے لئے رینڈرر 2 کلاس کا استعمال کریں۔ رینڈر 2 کلاس کو ضمیمہ () طریقہ استعمال کرتے ہوئے ڈوم میں عنصر کو شامل کرنے کے لئے استعمال کریں۔ ہر ایک مثال ہے جو رینڈرر 2 کلاس استعمال کریں۔کونیی میں عنصر بنانے کے لئے: درآمد {اجزاء ، رینڈر 2 ، عنصر ریف 'سے'@کونیی/کور '؛@جزو ({سلیکٹر:' ایپ روٹ '، ٹیمپلیٹ:' <ڈیو #مائی ڈی آئی وی> </div> '})کلاس ایپکمپرینٹ {کنسٹرکٹر (نجی رینڈرر: رینڈرر 2 ، نجی EL: عنصر ریف) {} ngafterViewInit () {const div = this.el.nativelement.querySelector ('#mydiv') ؛const p = this.renderer.createelement ('p') ؛const text = this.renderer.createtext ('ہیلو ، دنیا!') ؛this.renderer.appendchild (p ، متن) ؛this.renderer.appendchild (div ، p) ؛}} مذکورہ بالا مثال میں ، ہمارے پاس ایک ایسا جزو ہے جس میں ایک ٹیمپلیٹ ہے جس میں حوالہ Mydiv کے ساتھ ایک DIV عنصر ہوتا ہے۔این جیفٹر ویو نٹ لائف سائکل ہک میں ، ہم نے پی عنصر بنانے ، اس میں متن شامل کرنے ، اور اسے ڈیو عنصر میں شامل کرنے کے لئے رینڈر 2 کلاس کا استعمال کیا ہے۔ خلاصہ میں ، کونیی میں رینڈر 2 کلاس کونیولر ایپ کے عناصر کو جوڑنے کے لئے استعمال کیا جاتا ہے۔براہ راست ڈوم کو چھوئے۔ڈویلپرز کریڈر 2 کلاس کو تخلیق ایلیمنٹ () کے طریقہ کار کا استعمال کرتے ہوئے عنصر بنانے کے لئے استعمال کرسکتے ہیں ، تخلیق ٹیکسٹ () کے طریقہ کار کا استعمال کرتے ہوئے عنصر میں متن شامل کرسکتے ہیں ، اور عنصر کو ضمیمہ () کے طریقہ کار کا استعمال کرتے ہوئے ڈوم میں شامل کرسکتے ہیں۔کونیی میں رینڈر 2 کلاس کو استعمال کرنے کے ل we ، ہمیں @کونیی/کور لائبریری سے رینڈرر 2 کلاس درآمد کرنے کی ضرورت ہے ، اسے جزو یا ہدایت دینے والے کنسٹرکٹر میں انجیکشن کریں ، اور اسے ڈوم 1 کنکریٹ پیج 2 آئی ٹی این ٹیکسٹ 3 ڈیجیٹلوسین 4 اینجولر 5thedukh میں جوڑ توڑ کرنے کے لئے استعمال کریں۔"
    },
    {
        "Question": "کونیی میں غلطی ہینڈلر انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں غلطی کا ہینڈلر انٹرفیس کونیی ایپلی کیشن 123456 میں غلطیوں کو سنبھالنے کے لئے استعمال کیا جاتا ہے۔ایرر ہینڈلر انٹرفیس کے مقاصد یہ ہیں: غلطی ہینڈلر انٹرفیس کونیولر 146 میں مرکزی استثناء کو سنبھالنے کے لئے ایک ہک فراہم کرنے کے لئے استعمال کیا جاتا ہے۔ غلطی ہینڈلر انٹرفیس غلطی سے نمٹنے کو روکنے اور ایک کسٹم استثناء ہینڈلر لکھنے کے لئے استعمال ہوتا ہے جو زیادہ مخصوص راہ میں غلطیوں کو سنبھال سکتا ہے۔غلطی ہینڈلر انٹرفیس کو کونیی ایپلی کیشن 13456 میں پائے جانے والے تمام غیر منقولہ استثناء کو سنبھالنے کے لئے استعمال کیا جاتا ہے۔ غلطی ہینڈلر انٹرفیس کو کونیی ایپلی کیشن میں تمام غلطیوں کو پکڑنے اور اس کے مطابق عمل کرنے کے لئے استعمال کیا جاتا ہے۔ایک سرور 123456.in خلاصہ ، کونیی میں غلطی ہینڈلر انٹرفیس کونیی ایپلی کیشن میں غلطیوں کو سنبھالنے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز سینٹرلائزڈ رعایت سے متعلق ہینڈلنگ ، انٹرسیپٹ غلطی سے نمٹنے کے ل a ہک فراہم کرنے کے لئے غلطی ہینڈلر انٹرفیس کا استعمال کرسکتے ہیں ، جو کونیی ایپلی کیشن میں پائے جانے والے تمام غلط استثناء کو سنبھال سکتے ہیں ، کونیی ایپلی کیشن میں تمام غلطیوں کو پکڑ سکتے ہیں اور اس کے مطابق ان پر عملدرآمد کرسکتے ہیں ، اور کنسول پر لاگ ان یا بھیج سکتے ہیں۔ان کو ایک سرور پر"
    },
    {
        "Question": "آپ کونیولر میں کیوالیوڈفرز کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیولر میں کیولیوڈفرز کلاس کو استعمال کرنے کے ل we ، ہم ان مراحل پر عمل کرسکتے ہیں: @کونیی/کور لائبریری سے کلیدی ویلیوڈفرز کلاس درآمد کریں۔ کلیدی ویلیوڈفرز کلاس کو اجزاء یا ہدایت کار کنسٹرکٹر میں شامل کریں۔ کسی دیئے گئے شے کے لئے مختلف پیدا کرنے کے لئے کلیدی ویلیوڈفرز کلاس کا استعمال کریں یانقشہ تخلیق () کے طریقہ کار کا استعمال کرتے ہوئے۔ وقت کے ساتھ ساتھ آبجیکٹ یا نقشہ میں کی جانے والی تبدیلیوں کو ٹریک کرنے اور ان تبدیلیوں پر ردعمل ظاہر کرنے کے لئے مختلف استعمال کریں۔ یہاں کونیولر میں کلیدی ویلیوڈفرز کلاس کو استعمال کرنے کی ایک مثال ہے: درآمد {اجزاء ، keyValuedifers '/کور '؛@اجزاء ({سلیکٹر:' ایپ روٹ '، ٹیمپلیٹ:' <div> </div> '}) کلاس ایپکمپرینٹ {آبجیکٹ = {فو:' بار '، باز:' Qux '} ؛مختلف: کوئی ؛کنسٹرکٹر (نجی فرق: keyValuedifers) {this.differ = this.differs.find (this.object) .create () ؛g ngdocheck () {const constances = this.differ.diff (this.object) ؛اگر (تبدیلیاں) {تبدیلیاں ۔فور ایفاڈڈیڈ آئٹم (آئٹم => کنسول.لاگ ('شامل' ، آئٹم.کی ، آئٹم.کورینٹ ویلیو)) ؛تبدیلیاں۔ فاروریمو وڈ آئٹم (آئٹم => کنسول.لاگ ('ہٹا دیئے گئے' ، آئٹم.کی ، آئٹم.پریوئس ویلیو)) ؛}}} مذکورہ بالا مثال میں ، ہمارے پاس ایک اجزاء ہے جس میں آبجیکٹ آبجیکٹ ہے اور اس میں فرق مختلف ہے۔کنسٹرکٹر میں ، ہم نے آبجیکٹ کے ل a ایک فرق پیدا کرنے کے لئے کلیدی ویلیوڈفرز کلاس کا استعمال کیا ہے۔این جی ڈوچیک لائف سائکل ہک میں ، ہم نے وقت کے ساتھ ساتھ آبجیکٹ میں کی جانے والی تبدیلیوں کو ٹریک کرنے اور شامل کردہ اور ہٹا دیئے گئے آئٹمز کو لاگ ان کرکے ان تبدیلیوں پر رد عمل ظاہر کرنے کے لئے مختلف استعمال کا استعمال کیا ہے۔ خلاصہ میں ، کونیولر میں کلیدی ویلیوڈفرز کلاس کسی شے میں کی جانے والی تبدیلیوں کو ٹریک کرنے کے لئے استعمال ہوتی ہے۔یا وقت کے ساتھ نقشہ اور ان تبدیلیوں پر رد عمل ظاہر کریں۔کلیدی ویلیوڈفرز کلاس کو استعمال کرنے کے ل we ، ہمیں اسے @کونیی/کور لائبریری سے درآمد کرنے کی ضرورت ہے ، اسے جزو یا ہدایت دینے والے کنسٹرکٹر میں انجیکشن کریں ، تخلیق () کے طریقہ کار کا استعمال کرتے ہوئے کسی دیئے گئے شے یا نقشے کے لئے مختلف بنانے کے لئے اس کا استعمال کریں ، اور اس کا استعمال کریںوقت کے ساتھ ساتھ آبجیکٹ یا نقشہ میں کی جانے والی تبدیلیوں کو ٹریک کرنے اور ان تبدیلیوں پر رد عمل ظاہر کرنے کے لئے مختلف۔"
    },
    {
        "Question": "کونیی میں مقامی اور عالمی اسکوپس میں کیا فرق ہے؟",
        "Answer": "کونیی میں مقامی اور عالمی اسکوپس جاوا اسکرپٹ میں ملتے جلتے ہیں۔کونیی میں مقامی اور عالمی اسکوپس کے مابین اختلافات یہ ہیں: عالمی اسکوپ میں اعلان کردہ عالمی اسکوپیا متغیر ایپلی کیشن 12345 میں کہیں سے بھی قابل رسائی ہے۔ گلوبل متغیر کو کسی بھی افعال یا اجزاء سے باہر قرار دیا جاتا ہے۔درخواست میں بہت سے افعال یا اجزاء کو لازمی طور پر 2445 تک رسائی حاصل ہونی چاہئے۔ گلوبل متغیرات کو ایک مقررہ مقام پر محفوظ کیا جاتا ہے جس کا فیصلہ کمپائلر 3 کے ذریعہ کیا جاتا ہے۔ مقامی اسکوپ میں اعلان کردہ لوکل اسکوپیا متغیر صرف اس فنکشن یا جزو کے اندر ہی قابل رسائی ہے جس میں اسے 612345 قرار دیا جاتا ہے۔ لوکل متغیرات کا اعلان کیا جاتا ہے۔کسی فنکشن یا اجزاء 612345. لوکل متغیرات پیدا ہوتے ہیں جب فنکشن یا جزو پر عمل درآمد شروع ہوتا ہے اور جب فنکشن یا جزو کو ختم ہوجاتا ہے تو لوکل متغیرات اسٹیک 3 پر محفوظ ہوجاتے ہیں۔جاوا اسکرپٹ میںعالمی متغیرات درخواست میں کہیں سے بھی قابل رسائی ہیں اور ان اقدار کے ل useful مفید ہیں جو نسبتا constant مستقل ہیں یا درخواست میں بہت سے افعال یا اجزاء تک رسائی حاصل کرنی ہوگی۔مقامی متغیر صرف اس فنکشن یا جزو کے اندر قابل رسائی ہیں جس میں ان کا اعلان کیا جاتا ہے اور جب فنکشن یا جزو پر عمل درآمد شروع ہوتا ہے اور اس وقت ختم ہوجاتا ہے جب فنکشن یا جزو ختم ہوجاتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں این جی اسٹائل ہدایت کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں این جی اسٹائل ہدایت کا استعمال ایک HTML عنصر کی اسٹائل خصوصیات کو متحرک طور پر ایک اظہار 123456 کا استعمال کرتے ہوئے ترتیب دینے کے لئے استعمال کیا جاتا ہے۔کونیی میں این جی اسٹائل ہدایت کو استعمال کرنے کے لئے یہ اقدامات ہیں: این جی اسٹائل ہدایت کو ایچ ٹی ایم ایل عنصر میں شامل کریں جس کو ہم اسٹائل کرنا چاہتے ہیں۔ این جی اسٹائل ہدایت کو کسی ایسے اظہار کی طرف بڑھا دیں جو سی ایس ایس کی خصوصیات اور اقدار پر مشتمل کسی شے کا اندازہ کرتا ہے۔ اگر اظہار سچائی کا اندازہ کرتا ہے۔، سی ایس ایس پراپرٹیز اور اقدار عنصر پر لاگو ہوتے ہیں۔ یہاں کونیولر میں این جی اسٹائل ہدایت کو استعمال کرنے کی ایک مثال ہے: <div [ngstyle] = \"color 'رنگ': ٹیکسٹ کلر ، 'پس منظر کا رنگ': bgcolor}\"> یہ متناین جی اسٹائل کا استعمال کرتے ہوئے اسٹائل کیا گیا ہے۔رنگ اور پس منظر کے رنگ کے رنگ کی خصوصیات بالترتیب ٹیکسٹ کلر اور بی جی کلر متغیرات کا استعمال کرتے ہوئے متحرک طور پر سیٹ کی جاتی ہیں۔ خلاصہ میں ، کونیی میں این جی اسٹائل ہدایت کو متحرک طور پر کسی اظہار کا استعمال کرتے ہوئے ایچ ٹی ایم ایل عنصر کی اسٹائل کی خصوصیات کو ترتیب دینے کے لئے استعمال کیا جاتا ہے۔این جی اسٹائل ہدایت کو استعمال کرنے کے ل we ، ہمیں این جی اسٹائل ہدایت کو ایچ ٹی ایم ایل عنصر میں شامل کرنے کی ضرورت ہے جسے ہم اسٹائل کرنا چاہتے ہیں اور اسے اس اظہار کے ساتھ باندھنا چاہتے ہیں جو سی ایس ایس کی خصوصیات اور اقدار پر مشتمل کسی شے کا اندازہ کرتا ہے۔اگر اظہار سچ پر جائزہ لیتا ہے تو ، سی ایس ایس کی خصوصیات اور اقدار کا اطلاق عنصر پر ہوتا ہے۔"
    },
    {
        "Question": "کونیی میں Iterabledfers کلاس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں Iterablediffers کلاس وقت کے ساتھ ساتھ کسی قابل تقلید چیز میں کی جانے والی تبدیلیوں کو ٹریک کرنے اور ان تبدیلیوں پر رد عمل کا اظہار کرنے کے لئے استعمال ہوتا ہے۔Iterabledfers کلاس کے مقاصد یہ ہیں: Iterabledifers کلاس NGFOR ، NGCLASS ، اور دیگر 1 کے ذریعہ استعمال ہونے والی مختلف ایٹ ایبل ایبل تفریق حکمت عملیوں کا ذخیرہ فراہم کرنے کے لئے استعمال کیا جاتا ہے۔ Iterabledfers کلاس وقت کے ساتھ کسی بھی چیز پر کی جانے والی تبدیلیوں کو ٹریک کرنے اور اس پر رد عمل ظاہر کرنے کے لئے استعمال ہوتا ہے۔یہ تبدیلیاں 2345۔ Iterabledifers کلاس کو دو مجموعوں کا موازنہ کرنے اور Iterablechanges4 کی شکل میں تبدیلیوں کی ایک فہرست تیار کرنے کے لئے استعمال کیا جاتا ہے۔ Iterabledfers کلاس کو DOM اپ ڈیٹس 4 کی تعداد کو کم کرکے کونیی ایپلی کیشنز کی کارکردگی کو بہتر بنانے کے لئے استعمال کیا جاتا ہے۔آئی ٹی ایبل آبجیکٹ 45 میں تبدیلیوں سے باخبر رہنے کے لئے کسٹم مختلف حکمت عملیوں کو نافذ کریں۔ خلاصہ میں ، کونیی میں آئٹریبلفرس کلاس وقت کے ساتھ کسی قابل تقلید شے میں کی جانے والی تبدیلیوں کو ٹریک کرنے اور ان تبدیلیوں پر رد عمل ظاہر کرنے کے لئے استعمال ہوتا ہے۔ڈویلپرز مختلف قابل تفریق حکمت عملیوں کا ایک ذخیرہ فراہم کرنے ، دو مجموعوں کا موازنہ کرنے اور تبدیلیوں کی فہرست تیار کرنے ، کونیی ایپلی کیشنز کی کارکردگی کو بہتر بنانے ، اور بغیر کسی قابل تقویت کے ل custom اپنی مرضی کے مطابق مختلف حکمت عملیوں کو بہتر بنانے کے ل It ، مختلف قسم کی تبدیلیوں کی فہرست تیار کرنے کے لئے Iterablefers کلاس کا استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی میں NGFORF ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں ngforf ہدایت کو استعمال کرنے کے ل we ، ہم ان مراحل پر عمل پیرا ہوسکتے ہیں: HTML عنصر میں NGFORF ہدایت شامل کریں جس پر ہم دوبارہ تکرار کرنا چاہتے ہیں۔ NGFORF ہدایت کو کسی بھی چیز کے ساتھ بند کریں ، جیسے کسی صف یا نقشہ کا استعمال کریں۔ایٹ ایبل آبجیکٹ میں ہر آئٹم کے ل a مقامی متغیر کا اعلان کرنے کے لئے۔ مقامی متغیر کو ٹیمپلیٹ میں ظاہر کرنے کے لئے استعمال کریں۔ یہاں کونیولر میں NGFORF ہدایت کو استعمال کرنے کی ایک مثال ہے: <ul> <li *ngfor = \"آئٹمز کی آئٹم دیں\"> {{آئٹم}} </li> </ul> مذکورہ بالا مثال میں ، ہمارے پاس NGFORF ہدایت کے ساتھ ایک UL عنصر ہے جو آئٹمز سرنی کا پابند ہے۔*NGFOR ہدایت نامہ آئٹمز کی سرنی پر تکرار کرتا ہے اور ہر آئٹم کو لی عنصر میں دکھاتا ہے۔ خلاصہ میں ، کونیی میں NGFORF ہدایت کسی بھی چیز کے اوپر تکرار کرنے کے لئے استعمال کی جاتی ہے ، جیسے کسی صف یا نقشے پر ، اور اس کی اشیاء کو ٹیمپلیٹ میں ڈسپلے کریں۔NGFORF ہدایت کو استعمال کرنے کے ل we ، ہمیں HTML عنصر میں NGFORF ہدایت شامل کرنے کی ضرورت ہے جس پر ہم اعادہ کرنا چاہتے ہیں ، اسے بغیر کسی قابل شے کے ساتھ باندھنا چاہتے ہیں ، لیٹ کلیدی لفظ کو آئٹم آئٹم کے لئے مقامی متغیر کا اعلان کرنے کے لئے استعمال کریں ، اور استعمال کریں۔آئٹم کو ٹیمپلیٹ میں ظاہر کرنے کے لئے مقامی متغیر۔"
    },
    {
        "Question": "کونیی میں عنصر ریف اور ٹیمپلیٹریف کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں عنصر ریف اور ٹیمپلیٹیر مختلف کلاسز ہیں جو مختلف مقاصد کے لئے استعمال ہوتے ہیں۔عنصر ریف اور ٹیمپلیٹریف کے مابین اختلافات یہ ہیں: ایلیمینٹریفٹ ایلیمینٹریف کلاس DOM12345 میں آبائی عنصر تک رسائی کے لئے استعمال ہوتا ہے۔ عنصر ریف کلاس آبائی عنصر 12345 کی خصوصیات اور صفات کو جوڑنے کے لئے استعمال ہوتا ہے۔ عنصر کی کلاس کو حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے۔عنصر جس کی ہدایت کو 12345 سے منسلک کیا جاتا ہے۔ عنصر ریف کلاس ڈوم تک براہ راست رسائی کے لئے استعمال ہوتا ہے ، جس کی سفارش کونیولر 2345 میں نہیں کی جاتی ہے۔متحرک طور پر 12345 کے نظارے بنائیں۔ ٹیمپلیٹریف کلاس کسی جزو یا ہدایت نامہ 12345 کو ڈیٹا کو منتقل کرنے کے لئے استعمال ہوتا ہے۔ ٹیمپلیٹریف کلاس کونیولر 2345.in میں متحرک اجزاء بنانے کے لئے استعمال کیا جاتا ہے۔عنصر ریف کلاس ڈوم میں آبائی عنصر تک رسائی حاصل کرنے ، آبائی عنصر کی خصوصیات اور صفات میں ہیرا پھیری کرنے اور اس عنصر کا حوالہ حاصل کرنے کے لئے استعمال ہوتا ہے جس سے ہدایت سے منسلک ہوتا ہے۔ٹیمپلیٹریف کلاس کو ایمبیڈڈ ٹیمپلیٹ کی نمائندگی کرنے ، متحرک طور پر نظارے بنانے ، کسی جزو یا ہدایت کو ڈیٹا منتقل کرنے ، اور کونیی میں متحرک اجزاء بنانے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "آپ کونیی میں پائپٹرانسفارم انٹرفیس کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں عنصر ریف اور ٹیمپلیٹریف کلاس مختلف مقاصد کے لئے استعمال ہوتے ہیں۔عنصر ریف اور ٹیمپلیٹریف کے مابین اختلافات یہ ہیں: ایلیمینٹریفٹ ایلیمینٹریف کلاس DOM12345 میں آبائی عنصر تک رسائی کے لئے استعمال ہوتا ہے۔ عنصر ریف کلاس آبائی عنصر 12345 کی خصوصیات اور صفات کو جوڑنے کے لئے استعمال ہوتا ہے۔ عنصر کی کلاس کو حوالہ حاصل کرنے کے لئے استعمال کیا جاتا ہے۔عنصر جس کی ہدایت کو 12345 سے منسلک کیا جاتا ہے۔ عنصر ریف کلاس ڈوم تک براہ راست رسائی کے لئے استعمال ہوتا ہے ، جس کی سفارش کونیولر 2345 میں نہیں کی جاتی ہے۔متحرک طور پر 12345 کے نظارے بنائیں۔ ٹیمپلیٹریف کلاس کو کسی جزو یا ہدایت نامہ 12345 کو ڈیٹا منتقل کرنے کے لئے استعمال کیا جاتا ہے۔ ٹیمپلیٹریف کلاس کونجولر 2345.in کا خلاصہ میں متحرک اجزاء بنانے کے لئے استعمال کیا جاتا ہے۔عنصر ریف کلاس ڈوم میں آبائی عنصر تک رسائی حاصل کرنے ، آبائی عنصر کی خصوصیات اور صفات میں ہیرا پھیری کرنے اور اس عنصر کا حوالہ حاصل کرنے کے لئے استعمال ہوتا ہے جس سے ہدایت سے منسلک ہوتا ہے۔ٹیمپلیٹریف کلاس کو ایمبیڈڈ ٹیمپلیٹ کی نمائندگی کرنے ، متحرک طور پر نظارے بنانے ، کسی جزو یا ہدایت کو ڈیٹا منتقل کرنے ، اور کونیی میں متحرک اجزاء بنانے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "کونیی میں Iterablechanges انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں Iterablechanges انٹرفیس کا استعمال آخری وقت کے بعد سے Iterablediffer.diff () کے طریقہ کار کو 123 میں لایا گیا تھا۔Iterablechanges انٹرفیس کے مقاصد یہ ہیں: Iterablechanges انٹرفیس کو آپریشنز کے ایک سیٹ پر تکرار کرنے کے لئے استعمال کیا جاتا ہے جو ، جب اصل Itable پر لاگو ہوتا ہے تو ، نیا Itable4 تیار کرے گا۔ Iterablechanges انٹرفیس ہر شے میں ہونے والی تبدیلیوں کے بارے میں معلومات فراہم کرنے کے لئے استعمال کیا جاتا ہے۔Itable3. Iterablachanges انٹرفیس کو وقت کے ساتھ ساتھ itable56 تک تبدیلیوں کا سراغ لگانے کے لئے استعمال کیا جاتا ہے۔ Iterablechanges انٹرفیس NGFOR کے ذریعہ DOM5 میں مساوی تبدیلیوں کو متاثر کرکے کسی قابل تبدیلیوں کا جواب دینے کے لئے استعمال کیا جاتا ہے۔ Iterablechanges انٹرفیس کو کسٹم Iterableffer تیار کرنے کے لئے استعمال کیا جاتا ہے تاکہ کسٹم Iterableffer تیار کیا جاسکے۔ٹریکنگ میں تبدیلی کے قابل مجموعہ۔ڈویلپر آپریشنز کے ایک سیٹ پر تکرار کرنے کے لئے Iterablechanges انٹرفیس کا استعمال کرسکتے ہیں جو ، جب اصل قابل تقلید پر لاگو ہوتا ہے تو ، نیا قابل تقلید تیار کرے گا ، بغیر کسی آئٹم میں تبدیلیوں کے بارے میں معلومات فراہم کرے گا ، وقت کے ساتھ ساتھ کسی قابل تغیرات کا پتہ لگائیں ، تبدیلیوں کا جواب دیں۔DOM میں مساوی تبدیلیوں کو متاثر کرنے کے ذریعہ بغیر کسی قابل ذکر ذخیروں میں تبدیلیوں سے باخبر رہنے کے لئے ایک کسٹم Iterablableفر تیار کریں۔"
    },
    {
        "Question": "آپ کونیی میں مشاہدہ کرنے والے افراد کے ساتھ ASYNC/AWAT SYNTAX کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں مشاہدہ کرنے والے افراد کے ساتھ Async/Awate Syntax کا استعمال کرنے کے ل we ، ہم ان اقدامات پر عمل کرسکتے ہیں: Rxjs لائبریری سے مشاہدہ کرنے والے کلاس کو درآمد کریں۔ مشاہدہ کرنے والے کو کسی وعدے میں تبدیل کرنے کے لئے Topromise () کا طریقہ استعمال کریں۔وعدہ. یہاں کونیولر میں مشاہدات کے ساتھ Async/Awate Syntax کا استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {اجزاء} درآمد {httpclient} سے '@کونیی/عام/http' ؛ درآمد {مشاہدہ} سے درآمد کریں 'rxjs '؛@اجزاء ({سلیکٹر:' ایپ روٹ '، ٹیمپلیٹ:' <div> {{ڈیٹا | async}} </div> '}) برآمد کلاس ایپکمپرینٹ {ڈیٹا: وعدہ <کوئی> ؛کنسٹرکٹر (نجی HTTP: httpclient) {} ngoninit () {this.data = this.getData () ؛} async getData () {const url = 'https://jsonplaceholder.typicode.com/todos/1' ؛کانسٹ ڈیٹا = اس کا انتظار کریں۔ http.get (url) .topromise () ؛ڈیٹا ڈیٹا ؛}} مذکورہ بالا مثال میں ، ہمارے پاس ڈیٹا پراپرٹی والا جزو ہے جو ASYNC پائپ کا استعمال کرتے ہوئے ٹیمپلیٹ میں DIV عنصر کا پابند ہے۔گیٹ ڈیٹا () کے طریقہ کار میں ، ہم نے HTTP سروس کا استعمال HTTP کی درخواست کرنے کے لئے کیا ہے اور نتیجے میں قابل مشاہدہ کو ٹاپ پرومائز () طریقہ کار کا استعمال کرتے ہوئے کسی وعدے میں تبدیل کیا ہے۔اس کے بعد ہم نے ASYNC/AWAT SYNTAX کا استعمال وعدہ کو سنبھالنے اور اعداد و شمار کو واپس کرنے کے لئے استعمال کیا ہے۔ خلاصہ ، ASYNC/AWAT SYNTAX کو Angular میں مشاہدہ کے ساتھ استعمال کرنے کے لئے ، ہمیں RXJS لائبریری سے مشاہدہ کرنے والے طبقے کو درآمد کرنے کی ضرورت ہے ، ٹاپپومائز استعمال کریں ()مشاہدہ کرنے والے کو کسی وعدے میں تبدیل کرنے کا طریقہ ، اور وعدہ کو سنبھالنے کے لئے ASYNC/AWAT SYNTAX کا استعمال کریں۔"
    },
    {
        "Question": "کونیولر میں ایپ_اینیٹیلائزر ٹوکن کا مقصد کیا ہے؟",
        "Answer": "کونیی میں ایپ_اینیٹیلائزر ٹوکن کا استعمال ایک یا زیادہ ابتداء کے افعال فراہم کرنے کے لئے کیا جاتا ہے جو کونیی ایپلی کیشن بوٹسٹریپڈ 123 ہونے پر پھانسی دی جاتی ہے۔یہاں ایپ_اینائٹیلائزر ٹوکن کے مقاصد ہیں: ایپلی کیشن 1245 چلانے سے پہلے ایپ_اینیٹیلائزر ٹوکن کوڈ کے بلاک پر عمل درآمد کرنے کے لئے استعمال ہوتا ہے۔app_initializer ٹوکن کونیی ایپلیکیشن 1245 کو شروع کرنے کے لئے صاف اور موثر طریقہ فراہم کرنے کے لئے استعمال کیا جاتا ہے۔ ایپ_اینائٹلائزر ٹوکن کو ایک وعدہ یا قابل مشاہدہ فراہم کرنے کے لئے استعمال کیا جاتا ہے جو ایپلی کیشن 123 کو پیش کرنے سے پہلے حل کرتا ہے۔ کونیی میں ایپ_اینیٹیلائزر ٹوکن کو استعمال کرنے کے لئے ، ہمیں اس کی وضاحت کرنے کی ضرورت ہے کیونکہ ہمیں اس کی وضاحت کرنے کی ضرورت ہے۔@کونیی/کور ماڈیول میں فراہم کنندہ۔یہ ایک دلیل کے طور پر ایک فنکشن لیتا ہے اور ایک وعدہ یا قابل مشاہدہ واپس کرتا ہے۔جب ایپلی کیشن شروع ہوجاتی ہے تو ، کونیی ایپ_ انیٹیلائزر فراہم کنندہ کی درخواست کرتا ہے اور ایپلی کیشن 123 میں پیش کرنے سے پہلے وعدہ یا مشاہدہ کرنے کے لئے انتظار کرتا ہے۔اعداد و شمار کو لوڈ کرنے کے طور پر ، توثیق کو انجام دینے ، یا درخواست کے ماحول کو تشکیل دینے کے بعد ، کونیی ایپلی کیشن کو شروع کرنے کا ایک صاف اور موثر طریقہ فراہم کریں ، اور ایک وعدہ یا قابل مشاہدہ فراہم کریں جو درخواست کو پیش کرنے سے پہلے حل کرتا ہے۔ڈویلپرز ابتدائی افعال کی وضاحت کے لئے ایپ_اینیٹیلائزر ٹوکن کا استعمال کرسکتے ہیں جو کونیی ایپلیکیشن بوٹسٹریپڈ ہوتے وقت پھانسی دی جاتی ہے۔"
    },
    {
        "Question": "کونیی ایپلی کیشن کو بوٹسٹریپ کرنے کے لئے آپ پلیٹ فارم بروزرڈیامک طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "پلیٹ فارم برائوزرڈینیامک طریقہ کا استعمال کرتے ہوئے کونیی ایپلی کیشن کو بوٹسٹریپ کرنے کے ل we ، ہم ان مراحل پر عمل کرسکتے ہیں: @کونیی/پلیٹ فارم-براؤزر-ڈائنامک لائبریری سے پلیٹ فارم براؤزر ڈائنیمک طریقہ کو درآمد کریں۔ ایک ماڈیول تیار کریں جو ایپلی کیشن کی جڑ کی نمائندگی کرتا ہے۔ماڈیول.ہیرے کونیولر ایپلی کیشن کو بوٹسٹریپ کرنے کے لئے پلیٹ فارم براؤزرڈیامک طریقہ استعمال کرنے کی ایک مثال ہے: '@کونیی/پلیٹ فارم-براؤزر-ڈائنیمک' سے فارم پلیٹ فارم برائوسرڈیامک} درآمد {ایپموڈول} سے 'بوٹسٹریپ موڈول (ایپموڈول). کیچ (ایر => کنسول.رور (ایرر)) ؛ مذکورہ بالا مثال میں ، ہم نے @کونیی/پلیٹ فارم براؤزر-ڈائنامک لائبریری سے پلیٹ فارم براؤزرڈیامک طریقہ درآمد کیا ہے۔اس کے بعد ہم نے ایپوموڈول کو بوٹسٹریپ کرنے کے لئے پلیٹ فارم براؤزرڈیامک طریقہ استعمال کیا ہے ، جو ایپلی کیشن کی جڑ کی نمائندگی کرتا ہے۔ خلاصہ یہ ہے کہ ، کونیی میں پلیٹ فارم براؤزرڈینیٹک طریقہ کو ایک ماڈیول بنانے کے ذریعہ ایک ایپلی کیشن کو بوٹسٹریپ کرنے کے لئے استعمال کیا جاتا ہے جو ایپلی کیشن کی جڑ کی نمائندگی کرتا ہے اور پلیٹ فارم برائوزر ڈائنیمک طریقہ استعمال کرتا ہے۔ماڈیول کو بوٹسٹریپ کرنا۔ڈویلپرز @کونیی/پلیٹ فارم-براؤزر-ڈائنامک لائبریری سے پلیٹ فارم براؤزرڈیامک طریقہ کو درآمد کرکے اور اس کو بوٹسٹریپ کرنے کے لئے ماڈیول .1 گیتھوب 2 پلورالسائٹ 3 ٹیٹوریلشب 4 اسٹیک اوور فلو 5نگولر کے ذریعہ پلیٹ فارم برائوسرڈیامک طریقہ استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "کونیولر میں ویوچولین اور کوئیر لسٹ میں کیا فرق ہے؟",
        "Answer": "ویو بچوں اور استفسار کی فہرست کونیی میں متعلقہ تصورات ہیں ، جبکہ ویوڈائڈ ایک الگ تصور ہے۔یہاں ویو فالز اور کوئیر لسٹ کے مابین اختلافات ہیں: ویوچلڈین ویویوچائلڈرین ایک ایسا سجاوٹ ہے جو ایک سے زیادہ عناصر کے لئے ڈوم سے استفسار کرنے کے لئے استعمال ہوتا ہے جو ایک مخصوص سلیکٹر 12345 سے میل کھاتا ہے۔ ویو فالڈرین عناصر کی ایک استفسار لوٹاتے ہیں جو سلیکٹر 12345 سے ملتے ہیں۔ ویویوچیلین کو کسی جز میں متعدد بچوں کے عناصر تک رسائی حاصل کرنے کے لئے استعمال کیا جاسکتا ہے۔یا ہدایت نامہ 12345. ویو بچوں کا استعمال کسی بچے کے جزو یا ہدایت کا حوالہ حاصل کرنے اور اس کی پراپرٹیز 12345 سے جوڑنے کے لئے کیا جاتا ہے۔ کوئیرلسٹ کوئیر لسٹ ایک ایسی کلاس ہے جو ایک مخصوص سلیکشن 12364 سے ملنے والی اشیاء کی فہرست کو اسٹور کرنے کے لئے استعمال ہوتی ہے۔ کوئیریلسٹ کو ویوچائلڈین یا سکونڈرین کے ذریعہ واپس کردہ اشیاء کو ذخیرہ کرنے کے لئے استعمال کیا جاتا ہے۔ایک لسٹ 12364 میں۔ کوئیر لسٹ کو اپ ڈیٹ کیا جاتا ہے جب بھی درخواست کی حالت تبدیل ہوتی ہے 12364.کیور لسٹ کو آئٹمز کی فہرست پر تکرار کرنے اور ان پر کام کرنے کے لئے استعمال کیا جاسکتا ہے۔ویوچلڈین ایک سجاوٹ ہے جو ایک سے زیادہ عناصر کے لئے ڈوم سے استفسار کرنے کے لئے استعمال ہوتا ہے جو ایک مخصوص سلیکٹر سے ملتے ہیں اور سلیکٹر سے ملنے والے عناصر کی ایک استفسار لسٹ لوٹاتے ہیں۔ویو بچوں کو کسی جزو یا ہدایت میں متعدد بچوں کے عناصر تک رسائی حاصل کرنے اور بچوں کے جزو یا ہدایت کا حوالہ حاصل کرنے اور اس کی خصوصیات میں ہیرا پھیری کے لئے استعمال کیا جاسکتا ہے۔کوئری لسٹ ایک کلاس ہے جو آئٹمز کی فہرست کو ذخیرہ کرنے کے لئے استعمال ہوتی ہے جو ایک مخصوص سلیکٹر سے مماثل ہوتی ہے اور ان کی فہرست میں تکرار کرنے اور ان پر کام کرنے کے لئے استعمال کی جاسکتی ہے۔"
    },
    {
        "Question": "آپ کونیی میں حرکت پذیری بلڈر سروس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں حرکت پذیری بلڈر سروس کو استعمال کرنے کے ل we ، ہم ان مراحل پر عمل کرسکتے ہیں: @کونیی/متحرک تصاویر لائبریری سے انیمیشن بلڈر سروس درآمد کریں۔ انیمیشن بلڈر سروس کو جزو یا ہدایت میں داخل کریں جہاں ہم اسے استعمال کرنا چاہتے ہیں۔انیمیشن بلڈر سروس ایک حرکت پذیری فیکٹری کی مثال بنانے کے لئے۔ حرکت پذیری پلیئر کی مثال بنانے کے لئے متحرک فیکٹری کے تخلیق () کا طریقہ استعمال کریں۔ حرکت پذیری شروع کرنے کے لئے انیمیشن پلیئر کا پلے () طریقہ استعمال کریں۔ یہاں انیمیشن بلڈر سروس کو استعمال کرنے کی ایک مثال ہے۔کونیی میں: '@کونیی/کور' سے درآمد {اجزاء {امپورٹ {حرکت پذیری بلڈر ، متحرک ، اسٹائل} سے '@کونیی/متحرک تصاویر' ؛@اجزاء ({سلیکٹر: 'ایپ روٹ' ، ٹیمپلیٹ: '<div [@fadeInout]> ہیلو ، ورلڈ! </div> '، متحرک تصاویر: [animate (' 1s '، انداز ({دھندلاپن:'*'}) ، انداز ({opacity: 0}))]}) کلاس ایپکمپرینٹ {کنسٹرکٹر.؛کونسٹ پلیئر = فیکٹری۔ کریٹ (دستاویز.کیری سلیکٹر ('ڈیو')) ؛پلیئر۔ پلے () ؛}} مذکورہ بالا مثال میں ، ہمارے پاس ایک DIV عنصر والا جزو ہے جو [@فیڈ ان آؤٹ] نحو کا استعمال کرتے ہوئے حرکت پذیری کا پابند ہے۔ngafterviewinit () کے طریقہ کار میں ، ہم نے متحرک فیکٹری اور ایک حرکت پذیری پلیئر کی مثال بنانے کے لئے انیمیشن بلڈر سروس کا استعمال کیا ہے۔اس کے بعد ہم نے حرکت پذیری کا آغاز کرنے کے لئے انیمیشن پلیئر کے پلے () کا طریقہ استعمال کیا ہے۔ خلاصہ ان کا خلاصہ ، کونیی میں حرکت پذیری بلڈر سروس کسی جزو یا ہدایت کے اندر پروگرام کے ساتھ متحرک تصاویر بنانے کے لئے استعمال ہوتی ہے۔انیمیشن بلڈر سروس کو استعمال کرنے کے ل we ، ہمیں اسے @کونیی/متحرک تصاویر لائبریری سے درآمد کرنے کی ضرورت ہے ، اسے اس جزو یا ہدایت میں انجیکشن کریں جہاں ہم اسے استعمال کرنا چاہتے ہیں ، حرکت پذیری بلڈر سروس کے بلڈ () طریقہ کو ایک حرکت پذیری فیکٹری کی مثال بنانے کے لئے استعمال کریں۔، حرکت پذیری پلیئر کی مثال بنانے کے لئے متحرک فیکٹری کے تخلیق () کا طریقہ استعمال کریں ، اور حرکت پذیری شروع کرنے کے لئے انیمیشن پلیئر کے پلے () طریقہ کا استعمال کریں۔"
    },
    {
        "Question": "کونیی میں inmemorywebapimodule کا مقصد کیا ہے؟",
        "Answer": "کونیی میں inmemorywebapimodule ایک ماڈیول ہے جو ڈیٹا بنانے اور لانے کے لئے ایک میموری میں ڈیٹا اسٹور مہیا کرتا ہے ، جس میں ایک حقیقی REST API بیک اینڈ 1 کی نقالی ہوتا ہے۔یہاں inmemorywebapimodule کے مقاصد ہیں: inmemorywebapimodule کو ایک باقی API کا مذاق اڑانے کے لئے استعمال کیا جاتا ہے۔API بیک اینڈ جب اصل بیک اینڈ سسٹم ابھی تک فرنٹ اینڈ ڈویلپمنٹ ٹیم 1 کے ذریعہ کھپت کے ل ready تیار نہیں ہے۔ انیموری ویو بیپیموڈول کو اصل بیک اینڈ سسٹم 1 کے لئے اسٹینڈ ان/پراکسی فراہم کرنے کے لئے استعمال کیا جاتا ہے۔Angular1 میں REST API کی نقالی کرنے کا صاف ستھرا اور موثر طریقہ۔ کونیی میں inmemorywebapimodule استعمال کرنے کے ل we ، ہمیں اسے کونیی ان میموری-ویب-API لائبریری سے درآمد کرنے کی ضرورت ہے ، ایک ایسی خدمت بنائیں جو inmemorydbservice انٹرفیس کو نافذ کرے ، اور HTTPClientInMemorewapimodule درآمد کرے۔ایپموڈول میں۔inmemorydbservice انٹرفیس میموری میں کسی ایسی چیز کو بنانے کے لئے استعمال کیا جاتا ہے جو ہمارے ڈیٹا بیس کی نمائندگی کرتا ہے۔آبجیکٹ کی ہر کلید ہمارے ڈیٹا بیس کی ایک ہستی کی نمائندگی کرتی ہے ، جیسے مصنوعات۔HTTPClientInMemorywebapimodule کونییولر HTTP اور HTTPClient کی درخواستوں کو روکنے کے لئے استعمال کیا جاتا ہے جو بصورت دیگر ریموٹ سرور پر جائیں گے اور انہیں ایک میموری والے ڈیٹا اسٹور پر بھیج دیں گے جس پر ہم کنٹرول 2۔جری میں ، کونیی میں موجود ایک ماڈیول ہے جو ایک ایسے اعداد و شمار مہیا کرتا ہے جو ایک مبینہ اعداد و شمار فراہم کرتا ہے۔ڈیٹا بنانے اور لانے کے لئے اسٹور کریں ، ایک حقیقی REST API بیک اینڈ کے آخر میں نقالی کریں۔ڈویلپرز انیموری ویوپیموڈول کا استعمال ان میموری ڈیٹا بیس کے ساتھ ایک REST API کا مذاق کرنے کے لئے استعمال کرسکتے ہیں ، کونیی ایپلی کیشن کے لئے جعلی بیک اینڈ سسٹم مہیا کرسکتے ہیں ، جب حقیقی بیک اینڈ سسٹم کھپت کے لئے ابھی تیار نہیں ہوتا ہے تو ایک حقیقی REST API بیک اینڈ کی نقالی کرسکتے ہیں۔فرنٹ اینڈ ڈویلپمنٹ ٹیم کے ذریعہ ، اصل بیک اینڈ سسٹم کے لئے اسٹینڈ ان/پراکسی فراہم کریں ، اور کونیی میں ایک REST API کی نقل کرنے کا ایک صاف اور موثر طریقہ فراہم کریں۔"
    },
    {
        "Question": "آپ کونیولر میں بچوں کے جزو سے والدین کے جزو تک ڈیٹا خارج کرنے کے لئے ایونٹیمیٹر کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "ایونٹیمیٹر کلاس کا استعمال کرتے ہوئے کونیی میں کسی بچے کے جزو سے والدین کے جزو تک ڈیٹا خارج کرنے کے ل we ، ہم ان اقدامات پر عمل کرسکتے ہیں: بچوں کے جزو میں ، ایونٹیمیٹر کلاس کی ایک مثال بنائیں اور اسے @آؤٹ پٹ () ڈیکوریٹر کے ساتھ سجائیں۔جزو ، ایک ایسا طریقہ بنائیں جو ایونٹیمیٹر مثال کے emit () طریقہ کا استعمال کرتے ہوئے ڈیٹا کو خارج کرے۔ والدین کے جزو میں ، (واقعہ) نحو کا استعمال کرتے ہوئے ایونٹ کا پابند کریں اور والدین کے جزو میں ایک طریقہ پر کال کریں۔ والدین کے جزو میں ، تخلیق کریں ، تخلیق کریں۔ایک ایسا طریقہ جو خارج ہونے والے اعداد و شمار کو دلیل کے طور پر حاصل کرتا ہے۔ یہاں ایک مثال ہے کہ ایونٹیمیٹر کلاس کو بچے کے جزو سے کونیی میں والدین کے جزو میں ڈیٹا خارج کرنے کے لئے استعمال کریں:@کونیی/کور '؛ @اجزاء ({سلیکٹر:' ایپ-چلڈ '، ٹیمپلیٹ:' <بٹن (کلک) = \"آنکلک ()\"> مجھ پر کلک کریں </بٹن> '}) کلاس چائلڈکمپینٹ { @آؤٹ پٹ ()ڈیٹا ایونٹ = نیا ایونٹ میٹر <سٹرنگ> () ؛آنکلک () {this.dataevent.emit ('بچوں کے اجزاء سے ڈیٹا') ؛}} // parent.component.tsimport '@کونیی/کور' سے@جزو (@جزو ({سلیکٹر: 'ایپ پیرنٹ' ، ٹیمپلیٹ: '<ایپ-چلڈ (ڈیٹا ایونٹ) = \"OnDataEvent ($ واقعہ)\"> </app-child> '}) کلاس پیرنٹ کامپینٹ {Ondataevent (ڈیٹا: سٹرنگ) {کنسول.لاگ (ڈیٹا) ؛}} مذکورہ بالا مثال میں ، ہمارے پاس ایک بٹن کا جزو ہے جس میں ایک بٹن ہے جو کلک کرنے پر تار خارج کرتا ہے۔ہم نے ایونٹ میٹٹر کلاس کو ایونٹ ایمیٹر کی مثال بنانے کے لئے استعمال کیا ہے اور اسے @آؤٹ پٹ () ڈیکوریٹر سے سجایا ہے۔اس کے بعد ہم نے ڈیٹا کو خارج کرنے کے لئے ایونٹ ایمیٹر کے emit () طریقہ کار کا استعمال کیا ہے۔والدین کے جزو میں ، ہم (ڈیٹا ایونٹ) نحو کا استعمال کرتے ہوئے ایونٹ کا پابند ہیں اور والدین کے جزو میں ایک طریقہ کہتے ہیں۔اس کے بعد ہم نے ایک ایسا طریقہ تیار کیا ہے جو خارج ہونے والے اعداد و شمار کو دلیل کے طور پر حاصل کرتا ہے۔ خلاصہ میں ، ایونٹیمیٹر کلاس کا استعمال کرتے ہوئے کونیی میں کسی بچے کے جزو سے والدین کے جزو تک ڈیٹا خارج کرنے کے لئے ، ہمیں ایونٹیمیٹر کلاس کی ایک مثال بنانے اور اسے سجانے کی ضرورت ہےبچوں کے جزو میں @آؤٹ پٹ () ڈیکوریٹر ، ایک ایسا طریقہ تیار کریں جو ایونٹیمیٹر مثال کے emit () طریقہ کا استعمال کرتے ہوئے ڈیٹا کو خارج کرے ، (واقعہ) نحو کا استعمال کرتے ہوئے ایونٹ کا پابند کریں اور والدین کے جزو میں ایک طریقہ پر کال کریں ، اور تخلیق کریں۔ایک ایسا طریقہ جو والدین کے جزو میں ایک دلیل کے طور پر خارج ہونے والے اعداد و شمار کو حاصل کرتا ہے۔"
    },
    {
        "Question": "کونیی فراہم کرنے والوں میں فارورڈریف اور یو ایس سی ایل اے ایس کے درمیان کیا فرق ہے؟",
        "Answer": "فارورڈریف اور یو ایس سی ایل اے ایس دونوں کونیی فراہم کرنے والوں میں استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں۔فارورڈ ریف اور یو ایس سی ایل اے ایس ایس کے مابین اختلافات یہ ہیں: فارورڈریفورورڈریف ایک ایسا فنکشن ہے جو کسی فراہم کنندہ کی طرف اشارہ کرنے کے لئے استعمال ہوتا ہے جس کی ابھی تک وضاحت نہیں کی جاتی ہے۔کوڈ 1234.فورورڈ ریف کسی فراہم کنندہ کے حل میں تاخیر کے لئے استعمال کیا جاتا ہے جب تک کہ اس کی حقیقت میں 1234 کی ضرورت نہ ہو۔ یو ایس سی ایلاسسکلاس ایک فراہم کنندہ کی ایک پراپرٹی ہے جو اس کلاس کی وضاحت کرنے کے لئے استعمال ہوتا ہے جس کو فوری طور پر بنایا جانا چاہئے جب فراہم کنندہ کو انجکشن لگایا جاتا ہے۔ایک تجریدی طبقے یا انٹرفیس 6234 کا نفاذ۔ یوزکلاس کا استعمال اس طبقے کی وضاحت کے لئے کیا جاتا ہے جس کا استعمال انحصار 6234 کو پورا کرنے کے لئے کیا جانا چاہئے۔ خلاصہ میں ، فارورڈ ریف اور یو ایس سی ایل اے ایس دونوں کونیی فراہم کنندگان میں استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں۔فارورڈریف ایک ایسا فنکشن ہے جو کسی ایسے فراہم کنندہ کا حوالہ دینے کے لئے استعمال ہوتا ہے جس کی ابھی تک وضاحت نہیں کی جاتی ہے ، فراہم کنندگان کے مابین سرکلر انحصار توڑ دیں ، کسی ایسے فراہم کنندہ کا حوالہ دیں جو بعد میں کوڈ میں اعلان کیا جاتا ہے ، اور فراہم کنندہ کی قرارداد میں تاخیر کرتا ہے جب تک کہ اس کی اصل ضرورت نہ ہو۔یو ایس سی ایل اے ایس ایس ایک فراہم کنندہ کی ایک پراپرٹی ہے جو اس کلاس کی وضاحت کے لئے استعمال ہوتی ہے جسے فوری طور پر انجکشن لگایا جاتا ہے ، ایک تجریدی طبقے یا انٹرفیس کا ٹھوس نفاذ فراہم کرتا ہے ، اور اس کلاس کی وضاحت کریں جس پر انحصار کو پورا کرنے کے لئے استعمال کیا جانا چاہئے۔"
    },
    {
        "Question": "آپ کونیولر میں ڈوم سے عنصر کو ہٹانے کے لئے رینڈر 2 کلاس کس طرح استعمال کرتے ہیں؟",
        "Answer": "رینڈر 2 کلاس کا استعمال کرتے ہوئے کونیی میں ڈوم سے کسی عنصر کو دور کرنے کے ل we ، ہم ان اقدامات پر عمل کرسکتے ہیں: رینڈر 2 سروس کو اس جزو میں انجیکشن کریں جہاں ہم عنصر کو ہٹانا چاہتے ہیں۔ جڑ کے عنصر کو منتخب کرنے کے لئے رینڈر 2 سروس کے سلیکٹرووٹلیمنٹ () کا طریقہ استعمال کریں۔اجزاء کا۔ اس عنصر کو منتخب کرنے کے لئے جڑوں کے عنصر کے استفسار سیلیکٹر () کا طریقہ استعمال کریں جسے ہم ہٹانا چاہتے ہیں۔ منتخب عنصر کو ہٹانے کے لئے روٹ عنصر کے ہٹانے () کا طریقہ استعمال کریں۔ یہاں رینڈرر 2 کلاس کو استعمال کرنے کی ایک مثال ہے۔کونیی میں ڈوم سے کسی عنصر کو ہٹا دیں: درآمد {اجزاء ، رینڈر 2 ، عنصری ریف ، ویوچائڈ} سے '@کونیی/کور' ؛@اجزاء ({سلیکٹر: 'ایپ روٹ' ، ٹیمپلیٹ: '<div #elem> عنصر کو ہٹانے کے لئے عنصر</div> <بٹن (کلک) = \"ہٹانے والا عنصر ()\"> عنصر کو ہٹا دیں </buttain> '}) کلاس ایپکمپرینٹ { @ویوچائلڈ (' الیم ') الیم: عنصر ریف ؛کنسٹرکٹر (پرائیویٹ رینڈر 2: رینڈرر 2) {} ہٹانے کا سلسلہ () {کنٹ روٹیلیمنٹ = this.renderer2.Selectrotelement ('ایپ روٹ') ؛کانسٹ ایلیمینٹوریمو = this.elem.nativelement ؛this.renderer2.removechild (روٹیلیمنٹ ، ایلیمینٹورموو) ؛}} مذکورہ بالا مثال میں ، ہمارے پاس ایک DIV عنصر اور ایک بٹن والا جزو ہے جو کلک ہونے پر DIV عنصر کو ہٹاتا ہے۔ہم نے اجزاء کے جڑ عنصر اور استفسار سیلیکٹر () کے طریقہ کار کو منتخب کرنے کے لئے رینڈر 2 کلاس کا استعمال کیا ہے جس کو ہم ہٹانا چاہتے ہیں۔اس کے بعد ہم نے منتخب کردہ عنصر کو ہٹانے کے لئے روٹ عنصر کے ہٹانے والے () کا طریقہ استعمال کیا ہے۔ خلاصہ ، کونیولر میں کسی عنصر کو کونیی میں رینڈر 2 کلاس کا استعمال کرتے ہوئے ، ہمیں رینڈر 2 سروس کو اس جزو میں انجیکشن کرنے کی ضرورت ہے جہاں ہم چاہتے ہیں۔عنصر کو ہٹا دیں ، جزو کے جڑ عنصر کو منتخب کرنے کے لئے رینڈر 2 سروس کے سلیکٹرووٹلیمنٹ () کا طریقہ استعمال کریں ، اس عنصر کو منتخب کرنے کے لئے روٹ عنصر کے استفسار سیلیکٹر () کا طریقہ استعمال کریں جسے ہم ہٹانا چاہتے ہیں ، اور ہٹانے والے چیکیلڈ () کا طریقہ استعمال کریں۔منتخب کردہ عنصر کو دور کرنے کے لئے جڑ عنصر کی"
    },
    {
        "Question": "App_bootstrap_listener ٹوکن کونیولر میں کیا مقصد ہے؟",
        "Answer": "کونیی میں app_bootstrap_listener ٹوکن ایک DI ٹوکن ہے جو کال بیکس کا ایک سیٹ فراہم کرتا ہے جس کو بوٹسٹریپڈ 12 ہے ہر جزو کے لئے بلایا جائے۔یہاں App_bootstrap_listener ٹوکن کے مقاصد ہیں: app_bootstrap_listener ٹوکن کو ہر ایک جزو کے لئے کال بیکس کا ایک سیٹ فراہم کرنے کے لئے استعمال کیا جاتا ہے جو بوٹسٹریپڈ 12 ہے۔کونیی بوٹسٹریپ پروسیس 4 میں ہک۔ ایپ_بوٹسٹریپ_ لسٹنر ٹوکن بوٹسٹریپنگ ایپلی کیشن کے دوران افعال کو عملی جامہ پہنانے کے لئے استعمال کیا جاتا ہے۔ہر جزو جو بوٹسٹریپڈ ہوتا ہے ، بوٹسٹریپڈ جزو کا حوالہ حاصل کریں ، کونیی بوٹسٹریپ کے عمل میں جکڑیں ، بوٹسٹریپنگ ایپلی کیشن کے دوران افعال کو انجام دیں ، اور ایپلی کیشن کے چلنے سے پہلے ابتدائی کام انجام دیں۔app_bootstrap_listener ٹوکن @کونیی/کور ماڈیول میں فراہم کنندہ کے طور پر بیان کیا گیا ہے۔یہ ایک دلیل کے طور پر ایک فنکشن لیتا ہے اور ایک وعدہ یا قابل مشاہدہ واپس کرتا ہے۔جب ایپلی کیشن شروع ہوتی ہے تو ، کونیی ایپ_بوٹسٹریپ_ لسٹنر فراہم کنندہ کو طلب کرتا ہے اور ایپلی کیشن 6.1Agular2ossz3Stackoverflow4hackernon5lite-corner6c-Sharpcorner پیش کرنے سے پہلے وعدہ یا مشاہدہ کرنے کا انتظار کرتا ہے۔"
    },
    {
        "Question": "کونیی میں غلطیوں کو سنبھالنے کے لئے آپ غلطی ہینڈلر انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "غلطی ہینڈلر انٹرفیس کا استعمال کرتے ہوئے کونیی میں غلطیوں کو سنبھالنے کے ل we ، ہم ان مراحل کی پیروی کرسکتے ہیں: ایک ایسی خدمت بنائیں جو غلطی ہینڈلر انٹرفیس کو نافذ کرے۔ ہینڈل ایرر () غلطی ہینڈلر انٹرفیس کے طریقہ کار کو غلطیوں کو سنبھالنے کے لئے۔غلطی کا ہینڈلر ٹوکن۔ یہاں کونیولر میں غلطیوں کو سنبھالنے کے لئے غلطی ہینڈلر انٹرفیس کو استعمال کرنے کی ایک مثال ہے: درآمد {انجیکشن ، غلطی ہینڈلر@'@کونیی/کور' سے@انجیکشن ایبل () ایکسپورٹ کلاس گلوبل ایر ہینڈلر غلطی ہینڈلر {ہینڈل ایرر (غلطی: کوئی بھی) {کنسول.رور ('ایک غلطی واقع ہوئی ہے:' ، غلطی) ؛// یہاں غلطی کو سنبھالیں}}@ngmodule ({فراہم کنندگان: [{فراہم کریں: ایرر ہینڈلر ، یو ایس سی ایلاس: گلوبل ایرر ہینڈلر}]}) کلاس ایپ موڈول {} مذکورہ بالا مثال میں ، ہم نے گلوبل ایرر ہینڈلر نامی ایک خدمت بنائی ہے جو غلطی ہینڈلر انٹرفیس کو نافذ کرتی ہے۔ہم نے غلطیوں کو سنبھالنے کے لئے غلطی ہینڈلر انٹرفیس کے ہینڈل ایرر () کے طریقہ کار کو ختم کردیا ہے۔اس کے بعد ہم نے غلطی ہینڈلر ٹوکن ڈاٹ کام کا استعمال کرتے ہوئے ایپموڈول میں فراہم کنندہ کی حیثیت سے خدمت کو رجسٹر کیا ہے ، غلطی ہینڈلر انٹرفیس کا استعمال کرتے ہوئے کونیی میں غلطیوں کو سنبھالنے کے لئے ، ہمیں ایک ایسی خدمت بنانے کی ضرورت ہے جو غلطی ہینڈلر انٹرفیس کو نافذ کرے ، ہینڈل ایرر () کے طریقہ کار کو اوور رائڈ کریںغلطیوں کو سنبھالنے کے لئے ایرر ہینڈلر انٹرفیس ، اور ای آر آر ای ہینڈلر ٹوکن کا استعمال کرتے ہوئے ایپموڈول میں فراہم کنندہ کی حیثیت سے خدمت کو رجسٹر کریں۔ڈویلپرز کونیی میں غلطیوں کو سنبھالنے اور ان کی درخواست کے لئے کسٹم غلطی سے نمٹنے کا طریقہ کار فراہم کرنے کے لئے ایرر ہینڈلر انٹرفیس کا استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی میں سوئچ میپ اور مرج میپ آپریٹرز میں کیا فرق ہے؟",
        "Answer": "کونیی میں سوئچ میپ اور مرج میپ آپریٹرز دونوں کو مشاہدہ کرنے والے کے ذریعہ خارج ہونے والی اشیاء کو تبدیل کرنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ اس میں مختلف ہیں کہ وہ اندرونی مشاہدات کے اخراج کو کس طرح سنبھالتے ہیں۔سوئچ میپ اور مرج میپ کے مابین اختلافات یہ ہیں: سوئچ میپوچ میپ ایک آپریٹر ہے جو ماخذ کے ذریعہ خارج ہونے والے ہر قدر کو ایک نئے مشاہدہ کرنے کے قابل بناتا ہے ، اور پھر اندرونی کے اخراج کو ایک واحد مشاہدہ کرنے والا 1234 میں چپٹا کرتا ہے۔ماخذ کے ذریعہ ویلیو کا اخراج کیا جاتا ہے۔اس کے بعد اندرونی مشاہدہ کے اخراج کو ایک ہی مشاہدہ کرنے والا 1234 میں ضم کردیا جاتا ہے۔ میرج میپ پچھلے اندرونی مشاہدہ کو منسوخ نہیں کرتا ہے جب ماخذ کے ذریعہ ایک نئی قدر خارج ہوتی ہے۔ماخذ مشاہدہ کرنے والا 1234. ان سمری میں ، سوئچ میپ اور مرج میپ دونوں کو مشاہدہ کرنے والے کے ذریعہ خارج ہونے والی اشیاء کو تبدیل کرنے کے لئے استعمال کیا جاتا ہے ، لیکن وہ اس میں مختلف ہیں کہ وہ اندرونی مشاہدات کے اخراج کو کس طرح سنبھالتے ہیں۔سوئچ میپ پچھلے اندرونی مشاہدہ کو منسوخ کرتا ہے جب ماخذ کے ذریعہ ایک نئی قدر خارج ہوجاتی ہے ، جبکہ مرج میپ نہیں کرتا ہے۔سوئچ میپ کا استعمال اس وقت کیا جاتا ہے جب ہم کسی نئے مشاہدے پر سوئچ کرنا چاہتے ہیں جب بھی کسی نئی قدر کو ماخذ کے ذریعہ قابل مشاہدہ کیا جاتا ہے ، جب مرج میپ استعمال کیا جاتا ہے جب ہم اندرونی مشاہدات کے اخراج کو ماخذ کے اخراج کے ساتھ ضم کرنا چاہتے ہیں۔"
    },
    {
        "Question": "آپ کونیولر میں *ngtemplateoutlet کے ساتھ NG-Container ہدایت کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں این جی-کنٹینر ہدایت نامہ عناصر کو گروپ کرنے کے لئے استعمال کیا جاتا ہے اور ڈوم میں اضافی عنصر شامل کیے بغیر ساختی ہدایت کا اطلاق ہوتا ہے۔*ngtemplateOutlet ہدایت نامہ ٹیمپلیٹ کو متحرک طور پر ٹیمپلیٹ حوالہ اور سیاق و سباق آبجیکٹ کو پیرامیٹرز کے طور پر استعمال کرتے ہوئے داخل کرنے کے لئے استعمال کیا جاتا ہے۔کونیی میں *ngtemplateOutlet کے ساتھ NG-container ہدایت کو استعمال کرنے کے اقدامات یہ ہیں: NG-Template ہدایت کا استعمال کرتے ہوئے ایک ٹیمپلیٹ کی وضاحت کریں۔ NG-Container ہدایت کو گروپ عناصر کے لئے استعمال کریں اور ساختی ہدایت نامہ استعمال کریں۔متحرک طور پر۔ سیاق و سباق کے آبجیکٹ کو *ngtemplateOutlet ہدایت کے پیرامیٹر کے طور پر پاس کریں۔ یہاں کونیولر میں *ngtemplateoutlet کے ساتھ ng-container ہدایت کا استعمال کرنے کی ایک مثال ہے: <ng-container *ngTemplateOutlet = \"myTemplate ؛ سیاق و سباق: myContext\"> </ng-کونٹینر> <ng-template #myTemplate let-name = \"name\"> <p> ہیلو ، {{نام}}! </p> </ng-template> مذکورہ بالا مثال میں ، ہم نے اس کا استعمال کرتے ہوئے ایک ٹیمپلیٹ کی وضاحت کی ہے۔این جی-ٹیمپلیٹ ہدایت۔اس کے بعد ہم نے گروپ عناصر کے لئے NG-Container ہدایت کا استعمال کیا ہے اور ساختی ہدایت کا اطلاق کیا ہے۔ہم نے ٹیمپلیٹ کو متحرک طور پر داخل کرنے کے لئے *ngtemplateOutlet ہدایت کا استعمال کیا ہے اور سیاق و سباق کے آبجیکٹ کو *ngtemplateoutletlet لیٹ ڈائریکٹیو ڈاٹ کام کے پیرامیٹر کے طور پر منتقل کیا ہے ، کونیی میں ng-container ہدایت کو *ngtemplateOutlet استعمال کرنے کے لئے ، ہمیں ایک ٹیمپلیٹ کی وضاحت کرنے کی ضرورت ہے۔این جی-ٹیمپلیٹ ہدایت ، گروپ عناصر کے لئے این جی-کنٹینر ہدایت کا استعمال کریں اور ساختی ہدایات کا اطلاق کریں ، ٹیمپلیٹ کو متحرک طور پر داخل کرنے کے لئے *این جی ٹی ایمپلیٹ آؤٹ لیٹ ہدایت کا استعمال کریں ، اور سیاق و سباق آبجیکٹ کو *این جی ٹی ایمپلیٹ آؤٹ ڈائریکٹیو کے پیرامیٹر کے طور پر پاس کریں۔ڈویلپرز NG-Container ہدایت کو *NGTemplateOutlet کے ساتھ گروپ عناصر میں استعمال کرسکتے ہیں اور ڈوم میں ایک اضافی عنصر شامل کیے بغیر ساختی ہدایات کا اطلاق کرسکتے ہیں اور ٹیمپلیٹ کو پیرامیٹرز کے طور پر ٹیمپلیٹ کے حوالہ اور سیاق و سباق کا استعمال کرتے ہوئے متحرک طور پر داخل کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں HTTPClientTestingModule کا مقصد کیا ہے؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں HTTPClientTestingModule ایک ماڈیول ہے جو HTTPSTINGCONTROLLER کے نام سے HTTP مذاق کی خدمت فراہم کرتا ہے جس میں HTTPESTINGCONTROLLER HTTP کی درخواستوں کو روکنے اور مذاق کے ردعمل 12345 کو واپس کرنے کے لئے HTTPTESTINGCONTROLLER کہا جاتا ہے۔یہاں HTTPClientTestingModule کے مقاصد ہیں: HTTPClientTestingModule کو کونیی یونٹ ٹیسٹ 12345 میں HTTP کی درخواستوں اور ردعمل کا مذاق اڑانے کے لئے استعمال کیا جاتا ہے۔ HTTPClientStingModule HTTPClientTingModule HTTTPTP کی درخواستوں کو روکنے کے لئے استعمال کیا جاتا ہے اور HTTPTSTP کی درخواستوں کو روکنے کے لئے استعمال کیا جاتا ہے اور MOCK کے ردعمل کو واپس کرنے کے لئے استعمال کیا جاتا ہے۔ استعمال کرنے والی خدمات کی جانچ کے لئے استعمال کیا جاتا ہےHTTPClient ماڈیول HTTP کی درخواستوں کو انجام دینے کے لئے HTTP کی درخواستوں کو انجام دینے کے لئے۔ HTTPClientStingModule کو انگولر 12345 میں HTTP کی درخواستوں اور ردعمل کی جانچ کرنے کے لئے ایک صاف اور موثر طریقہ فراہم کرنے کے لئے استعمال کیا جاتا ہے۔ کونگولر یونٹ کی جانچ میں HTTPClientStingModule کا استعمال کرنے کے لئے اسے @کونگولر/HTTP/HTTTP/httpclienttingModule کا استعمال کرنے کی ضرورت ہے۔لائبریری کی جانچ ، HTTPClientTestingModule سروس کو ٹیسٹ میں انجیکشن کریں ، HTTPTESTINGCONTROLLER سروس کا استعمال HTTP کی درخواستوں کو روکنے اور مذاق کے ردعمل کو واپس کرنے کے لئے کریں ، اور HTTPTESTINGCONTROLLER سروس کے متوقع () طریقہ کا استعمال کریں تاکہ یہ تصدیق کی جاسکے کہ MOCK RASPENT.IN کو واپس کیا گیا ہے۔خلاصہ ، کونیی یونٹ ٹیسٹنگ میں HTTPClientTestingModule ایک ماڈیول ہے جو HTTPSTINGCONTROLLER نامی HTTP مذاق کی خدمت فراہم کرتا ہے تاکہ HTTP کی درخواستوں کو روکنے اور مذاق کے ردعمل کی واپسی کو روک سکے۔ڈویلپرز HTTPClientStingModule کو کونیی یونٹ ٹیسٹوں میں HTTPClientStingModule کا استعمال کرسکتے ہیں اور کونیی یونٹ ٹیسٹوں میں ردعمل کا مذاق اڑ سکتے ہیں ، HTPTESTINGCONTROLLER سروس کا استعمال کرتے ہوئے HTTPSTINGCONTROLLER سروس کا استعمال کرتے ہوئے HTTPSTINGCONTROLLER سروس کا استعمال کرتے ہوئے مذاق کے ردعمل کو واپس کریں۔کونیی میں درخواستیں اور ردعمل"
    },
    {
        "Question": "آپ کونیی میں یونٹ ٹیسٹنگ کے لئے مذاق کی خدمت کیسے بناتے ہیں؟",
        "Answer": "کونیی میں یونٹ ٹیسٹنگ کے لئے ایک فرضی خدمت بنانے کے ل we ، ہم ان مراحل پر عمل کرسکتے ہیں: ایک مذاق کی کلاس بنائیں جو اصل سروس کلاس میں توسیع کرتی ہے۔ اصل سروس کلاس کے طریقوں کو مذاق کے نفاذ کے ساتھ۔موک سروس کلاس کو بطور فراہم کنندہ فراہم کریں۔ مذاق کی خدمت کو ٹیسٹ میں شامل کریں اور جزو کو جانچنے کے لئے اس کا استعمال کریں۔ یہاں کونیولر میں یونٹ ٹیسٹنگ کے لئے ایک مذاق کی خدمت بنانے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {انجیکشن}''@کونیی/عام/http 'سے import درآمد {httpclient} import درآمد {مشاہدہ ،' rxjs 'سے@@انجیکشن ایبل () ایکسپورٹ کلاس ڈیٹا سروس {کنسٹرکٹر (نجی HTTP: httpclient) {} getData (): مشاہدہ کرنے والا <کوئی بھی> {اس htttp.get واپس کریں ('https://jsonplaceholder.typicode.com/posts') ؛}}@انجیکشن ایبل () ایکسپورٹ کلاس موک ڈیٹاسروائس نے ڈیٹا سروس {کنسٹرکٹر () {سپر (NULL) میں توسیع کی۔} getData (): مشاہدہ کرنے والا <کوئی بھی> {کی واپسی ([{id: 1 ، عنوان: 'موک ڈیٹا'}]) ؛}} کی وضاحت ('اجزاء' ، () => {جزو: جزو: جزو cant فکسچر: اجزاء فکسچر <اجزاء> ؛ موکڈیٹاسروائس: موکڈیٹاسروائس: موکڈیٹاسروائس: پہلے سے پہلے (async (() => {testbed.configureteting ماڈل ({اعلان: [اجزاء]، فراہم کنندگان: [{فراہم کریں: ڈیٹا سروس ، یو ایس سی ایلاس: موک ڈاٹاسروائس}]}). انجیک (ڈیٹا سروس) ؛ فکسچر.ڈیٹیکٹچینجس () ؛}) ؛ یہ ('مذاق کا ڈیٹا ڈسپلے کرنا چاہئے' ، () => {توقع (اجزاء.ڈیٹا) .toequal ([{id: 1 ، عنوان: 'موک ڈیٹا'}]) ؛}) ؛}) ؛ مذکورہ بالا مثال میں ، ہم نے ایک ڈیٹا سروس کلاس تشکیل دی ہے جو ڈیٹا حاصل کرنے کے لئے HTTP کی درخواست کرتا ہے۔اس کے بعد ہم نے ایک موک ڈیٹاسروائس کلاس تشکیل دی ہے جو ڈیٹا سروس کلاس میں توسیع کرتی ہے اور مذاق کے نفاذ کے ساتھ گیٹ ڈیٹا () کے طریقہ کار کو اوور رائڈ کرتی ہے۔ہم نے MOCKDATASERVICE کلاس کو فراہم کنندہ کے طور پر فراہم کرنے کے لئے testbed.configuretestingmodule () کا طریقہ استعمال کیا ہے۔ہم نے موک سروس کو ٹیسٹ میں انجکشن لگایا ہے اور اس کو اجزاء کی جانچ کرنے کے لئے استعمال کیا ہے۔ خلاصہ میں ، کونیی میں یونٹ ٹیسٹنگ کے لئے ایک مذاق کی خدمت بنانے کے لئے ، ہمیں ایک مذاق کی کلاس بنانے کی ضرورت ہے جو اصل سروس کلاس میں توسیع کرے ، طریقوں کو اوور رائڈ کریں۔اصل سروس کلاس مذاق کے نفاذ کے ساتھ ، موک سروس کلاس کو ایک فراہم کنندہ کے طور پر فراہم کرنے کے لئے ٹیسٹ بیڈ ڈاٹ کوکوریٹسٹنگ موڈیول () کا طریقہ استعمال کریں ، اور مذاق کی خدمت کو ٹیسٹ میں انجیکشن لگائیں اور جزو کی جانچ کے ل it اسے استعمال کریں۔ڈویلپرز اس کے انحصار سے جانچنے والے جزو کو الگ تھلگ کرنے اور جانچ کے لئے مستقل ڈیٹا فراہم کرنے کے لئے موک خدمات کا استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ٹیسٹ بی ای ڈی۔ کونسفائگوریٹسٹنگ ماڈل کے طریقہ کار کا مقصد کیا ہے؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں ٹیسٹ بیڈ۔یہ ٹیسٹ کے ماحول کو بنانے اور تشکیل دینے اور آزمائشی جزو یا خدمت کے ساتھ بات چیت کرنے کے لئے APIs کا ایک مجموعہ فراہم کرتا ہے۔یہاں testbed.configuretestingmodule () طریقہ کے مقاصد ہیں: testbed.configuretestingmodule () طریقہ استعمال کیا جاتا ہے تاکہ ماحول کو یونٹ ٹیسٹ 12345 کے لئے تشکیل اور شروع کیا جاسکے۔ Testbed.configuretingmodule () طریقہ پیدا کرنے کے لئے استعمال کیا جاتا ہے۔ٹیسٹ کے ماحول کی تشکیل اور آزمائشی اجزاء یا سروس 12345 کے ساتھ بات چیت کرنا۔ ٹیسٹ بیڈ۔ کوکونفیگریٹسٹنگ موڈول () کا طریقہ فراہم کرنے والوں ، اعلامیہ ، درآمدات ، اور دیگر اختیارات کو ایپ.موڈول.ٹس 12345 سے ملتے جلتے تشکیل کے لئے استعمال کیا جاتا ہے۔کسی مخصوص ماڈیول یا اجزاء 12345 کے لئے ٹیسٹ بیڈ بنانے کے ل .۔ کونیی یونٹ ٹیسٹنگ میں ٹیسٹ بی ای ڈی ڈاٹ سیونفیگریٹسٹنگ موڈیول () طریقہ استعمال کرنے کے ل we ، ہمیں ہر ٹیسٹ سے پہلے اس سے پہلے فون کرنے کی ضرورت ہے ، فراہم کنندگان کو تشکیل دینے کی دلیل کے طور پر کسی شے کو پاس کریں۔.یونٹ ٹیسٹ کے لئے ماحول ، ٹیسٹ کے ماحول کو بنانے اور تشکیل دینے اور آزمائشی جزو یا خدمت کے ساتھ بات چیت کرنے ، فراہم کرنے والے ، اعلامیہ ، درآمدات ، اور ایپ.موڈول ڈاٹ ٹی ایس سے ملتے جلتے دیگر اختیارات کے لئے ایک سیٹ فراہم کریں ، اور ٹیسٹ بیڈ تیار کریں۔ایک مخصوص ماڈیول یا جزو۔ڈویلپرز یونٹ ٹیسٹوں کے لئے ماحول کو تشکیل دینے اور شروع کرنے کے لئے ٹیسٹ بیڈ۔ کوکونفیگریٹسٹنگ موڈول () کا طریقہ استعمال کرسکتے ہیں اور آزمائشی جزو یا خدمت کے ساتھ تعامل کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں اجزاء فکسچر کلاس کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں اجزاء فکسچر کلاس ایک ٹیسٹ کنٹرول ہے جو جزو مثال اور اس کے اسی عنصر تک رسائی فراہم کرتا ہے۔یہ ٹیسٹ کے ماحول میں کسی جزو کو بنانے اور ان کے ساتھ تعامل کرنے کے لئے استعمال ہوتا ہے۔کونیی یونٹ ٹیسٹنگ میں اجزاء فکسچر کلاس کو استعمال کرنے کے لئے یہ اقدامات ہیں: @کونیی/کور/ٹیسٹنگ سے اجزاء فکسچر کلاس درآمد کریں۔ ٹیسٹ بیڈ کو استعمال کریں۔اس سے متعلقہ عنصر اجزاء فکسچر مثال کے اجزاء کی تشکیل اور آبائی اجزاء کی خصوصیات کا استعمال کرتے ہوئے۔ تبدیلی کا پتہ لگانے اور نظارے کو اپ ڈیٹ کرنے کے لئے اجزاء کی تشکیل کے مثال کے طور پر ڈٹیکٹ چینجز () کا طریقہ استعمال کریں۔ یہاں کونیی یونٹ کی جانچ میں اجزاء فکسچر کلاس استعمال کرنے کی ایک مثال ہے: درآمد {اجزاء فکسر، '@کونیی/کور/ٹیسٹنگ' سے ٹیسٹ بیڈ@@کونیی/کور 'سے درآمد {جزو@@اجزاء ({سلیکٹر:' ایپ ٹیسٹ '، ٹیمپلیٹ:' <p> {{پیغام}} </p> '}) کلاس ٹیسٹ کامپینٹ {پیغام =' ہیلو ، ورلڈ! '؛}} بیان کریں (' ٹیسٹ کامپینٹ '، () => {جزو: ٹیسٹکمپرینٹ: آئیے فکسچر: اجزاء فکسچر <ٹیسٹ کامپینٹ> ؛ پہلے (async () => {Testbed.configuretestingmodule ({اعلامیہ: [ٹیسٹکمپینٹ]}) کا انتظار کریں۔}) ؛پہلے (() => {فکسچر = ٹیسٹ بیڈ۔ کریٹکومپینٹ (ٹیسٹ کامپینٹ) ؛ اجزاء = فکسچر۔یہ ('پیغام ڈسپلے کرنا چاہئے' ، () => {const عنصر = plicure.nativelement.queryselector ('p') ؛ توقع (عنصر.ٹیکونٹینٹ) .tocontain ('ہیلو ، دنیا!') ؛}) ؛})above مذکورہ بالا مثال میں ، ہمارے پاس ایک ٹیسٹ کمپوینٹ ہے جو ایک پیغام دکھاتا ہے۔ہم نے ٹیسٹ بیڈ۔ کریٹکومپینٹ () کا طریقہ استعمال کیا ہے تاکہ ٹیسٹ کے کام کے لئے ایک اجزاء فکسچر مثال تیار کیا جاسکے۔ہم نے اجزاء کی مثال اور اس سے متعلقہ عنصر تک رسائی حاصل کی ہے جس میں اجزاء کی تشکیل اور اجزاء کی تشکیل کی مثال کے طور پر اجزاء کی تشکیل کی خصوصیات کا استعمال کیا گیا ہے۔اس کے بعد ہم نے تبدیلی کا پتہ لگانے اور نظارے کو اپ ڈیٹ کرنے کے لئے اجزاء فکسچر مثال کے ڈٹیکٹ چینجز () کا طریقہ استعمال کیا ہے۔ہم نے تجربہ کیا ہے کہ اس پیغام کو توقع () فنکشن ڈاٹ کام کے استعمال سے صحیح طریقے سے ظاہر کیا گیا ہے ، کونیی یونٹ ٹیسٹنگ میں جزو فکسچر کلاس ایک ٹیسٹ کا استعمال ہے جو جزو مثال اور اس سے متعلقہ عنصر تک رسائی فراہم کرتا ہے۔ڈویلپرز ٹیسٹ ماحول میں کسی جزو کو بنانے اور اس کے ساتھ تعامل کرنے ، جزو مثال اور اس سے متعلقہ عنصر تک رسائی حاصل کرنے ، اور ٹرگر تبدیلی کی کھوج اور اپ ڈیٹ کو اپ ڈیٹ کرنے کے لئے اجزاء فکسچر کلاس کا استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں جاسوس اور اسٹب میں کیا فرق ہے؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں جاسوس اور اسٹب کے درمیان بنیادی فرق یہ ہے کہ کسی جاسوس کو کسی طریقہ کار کے طرز عمل کی تصدیق کے لئے استعمال کیا جاتا ہے ، جبکہ ایک اسٹب کو کسی طریقہ کار کو ڈبے میں ردعمل فراہم کرنے کے لئے استعمال کیا جاتا ہے۔ایک جاسوس اور اسٹب کے مابین اختلافات یہ ہیں: اسپائی اسپائی ایک ٹیسٹ ڈبل ہے جو کسی طریقہ کار پر کی جانے والی کالوں کو ریکارڈ کرتا ہے اور ہمیں اس بات کی تصدیق کرنے کی اجازت دیتا ہے کہ متوقع دلائل 123 کے ساتھ اس طریقہ کار کو بلایا گیا تھا۔ اے ایس کے طرز عمل کی تصدیق کے لئے استعمال کیا جاتا ہے۔طریقہ اور اس بات کو یقینی بنائیں کہ اسے صحیح دلائل کے ساتھ بلایا گیا تھا۔جیسمین ٹیسٹنگ فریم ورک 23 کا طریقہ۔ اسٹوبا اسٹب ایک ٹیسٹ ڈبل ہے جو کسی طریقہ کار کو ڈبہ بند ردعمل فراہم کرتا ہے اور ہمیں اس کے حقیقی عمل درآمد کے بغیر کسی طریقہ کار کے طرز عمل کی جانچ کرنے کی اجازت دیتا ہے۔کال کریں اور اس بات کو یقینی بنائیں کہ جب طریقہ کار کو صحیح طریقے سے برتاؤ کیا جائے تو اس کا صحیح سلوک کیا جائے۔تخلیق اسپائی او بی جے () جیسمین ٹیسٹنگ فریم ورک 23. کا خلاصہ کا طریقہ ، ایک جاسوس کو کسی طریقہ کار کے طرز عمل کی تصدیق کرنے اور اس بات کو یقینی بنانے کے لئے استعمال کیا جاتا ہے کہ اسے صحیح دلائل کے ساتھ بلایا گیا تھا ، جبکہ ایک اسٹب کو کسی طریقہ کار کی کال پر ڈبے والے ردعمل فراہم کرنے کے لئے استعمال کیا جاتا ہے۔اور اس بات کو یقینی بنائیں کہ جب یہ جواب دیا جائے تو طریقہ صحیح طور پر برتاؤ کرتا ہے۔ڈویلپرز کونیی یونٹ ٹیسٹنگ میں جاسوسوں اور اسٹبوں کا استعمال اس کے انحصار سے ٹیسٹ کیے جانے والے جزو کو الگ تھلگ کرنے اور جانچ کے لئے مستقل ڈیٹا فراہم کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی ٹیسٹ چلانے کے لئے کرما کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی ٹیسٹ چلانے کے لئے کرما کو استعمال کرنے کے ل we ، ہم ان اقدامات پر عمل پیرا ہوسکتے ہیں: این پی ایم کا استعمال کرتے ہوئے کرما اور جیسمین انسٹال کریں۔ پروجیکٹ کی روٹ ڈائرکٹری میں کرما کنفیگریشن فائل (karma.conf.js) کو تیار کریں۔ کرما کنفیگریشن فائل کو ضروری ہے تاکہ ضروری کو شامل کریں تاکہ ضروری شامل کریں تاکہ ضروری شامل کریںفائلیں اور پلگ ان۔ .spec.ts توسیع کے ساتھ ایک ٹیسٹ فائل کو تیار کریں جس میں جزو یا خدمت کے ٹیسٹ شامل ہوں۔ ٹرمینل میں این جی ٹیسٹ کمانڈ کا استعمال کرتے ہوئے ٹیسٹوں کو ختم کریں۔ یہاں کونیی ٹیسٹ چلانے کے لئے کرما استعمال کرنے کی ایک مثال ہے:// karma.conf.jsmodule.exports = فنکشن (تشکیل) {config.set ({Basepath: '' ، فریم ورک: ['جیسمین' ، '@کونیی/ Cli'] ، پلگ ان: [ضرورت ('کرما-جیسمین')، ضرورت ('کرما-کروم-لاؤنچر') ، کی ضرورت ہے ('کرما-جیسمین-ایچ ٹی ایم ایل-رپورٹر') ، کی ضرورت ہے ('@کونیی/سی ایل آئی/پلگ ان/کرما')] ، کلائنٹ: {کلیئرکونٹیکسٹ: جھوٹی // جیسمین چھوڑ دیںبراؤزر میں دکھائی دینے والا اسپیشل رنر آؤٹ پٹ} ، کوریجسٹان بلری پورٹر: {دیر: ضرورت ('راستہ')۔ شامل کریں (__ dirname ، '../coverage') ، رپورٹس: ['html' ، 'lcovonly' ، 'ٹیکسٹ سمریری'] ،فکس ویب پیک سورس سورس پاتھس: سچ} ، کونگولرل: {ماحولیات: 'دیو'} ، رپورٹرز: ['پیشرفت' ، 'کے جے ایچ ٹی ایم ایل'] ، پورٹ: 9876 ، رنگ: سچ ، لگیول: کنفگ.لوگ_ انفو ، آٹواچ: سچ ، براؤزر: ['کروم: [' کروم'] ، سنگلرون: غلط}) ؛} ؛ // test.spec.tsimport {ٹیسٹ بیڈ ، اجزاء فکسچر} سے'@کونیی/کور/ٹیسٹنگ 'سے'@کونیی/کور 'سے درآمد {اجزاء@@جزو ({سلیکٹر ({سلیکٹر.اجزاء: ٹیسٹکمپینٹ ؛آئیے حقیقت: اجزاء فکسچر <ٹیسٹ کامپینٹ> ؛پہلے (async () => test ٹیسٹ بیڈ.کونفیگریٹسٹنگ موڈول ({اعلامیہ: [ٹیسٹکمپینٹ]}). مرتب اجزاء () ؛}) ؛پہلے (() => {فکسچر = ٹیسٹ بیڈ۔ کریٹکومپینٹ (ٹیسٹ کامپینٹ) ؛ اجزاء = فکسچر۔یہ ('پیغام ڈسپلے کرنا چاہئے' ، () => {const عنصر = plicure.nativelement.queryselector ('p') ؛ توقع (عنصر.ٹیکونٹینٹ) .tocontain ('ہیلو ، دنیا!') ؛}) ؛})؛ مذکورہ بالا مثال میں ، ہم نے این پی ایم کا استعمال کرتے ہوئے کرما اور جیسمین انسٹال کی ہے۔ہم نے پروجیکٹ کی روٹ ڈائرکٹری میں ایک کرما کنفیگریشن فائل (karma.conf.js) تشکیل دی ہے اور ضروری فائلوں اور پلگ انز کو شامل کرنے کے لئے اسے تشکیل دیا ہے۔ہم نے .spec.ts توسیع کے ساتھ ایک ٹیسٹ فائل بنائی ہے جس میں ٹیسٹ کے کام کے ٹیسٹ شامل ہیں۔اس کے بعد ہم نے ٹرمینل میں این جی ٹیسٹ کمانڈ کا استعمال کرتے ہوئے ٹیسٹ چلایا ہے۔ خلاصہ ، کونیولر ٹیسٹ چلانے کے لئے کرما کا استعمال کرنے کے لئے ، ہمیں این پی ایم کا استعمال کرتے ہوئے کرما اور جیسمین انسٹال کرنے کی ضرورت ہے ، کرما کنفیگریشن فائل بنائیں ، کرما کنفیگریشن فائل کو شامل کریں تاکہ اس کو شامل کیا جاسکے۔ضروری فائلیں اور پلگ ان ، .spec.ts توسیع کے ساتھ ایک ٹیسٹ فائل بنائیں جس میں جزو یا خدمت کے ٹیسٹ موجود ہوں ، اور ٹرمینل میں این جی ٹیسٹ کمانڈ کا استعمال کرتے ہوئے ٹیسٹ چلائیں۔ڈویلپرز کونیی ٹیسٹ چلانے کے لئے کرما کا استعمال کرسکتے ہیں اور اس بات کو یقینی بنا سکتے ہیں کہ ان کے اجزاء اور خدمات صحیح طریقے سے برتاؤ کریں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں جیسمین۔ کسی بھی طریقہ کا مقصد کیا ہے؟",
        "Answer": "جیسمین۔ کونیی یونٹ ٹیسٹنگ میں کوئی بھی طریقہ ایک مماثل فنکشن ہے جو ہمیں یہ چیک کرنے کی اجازت دیتا ہے کہ آیا کوئی قیمت کسی خاص قسم کی ہے یا نہیں۔اس کا استعمال متوقع قیمت کی قسم کے ساتھ اصل قدر کی قسم کا موازنہ کرنے کے لئے کیا جاتا ہے۔یہاں جیسمین کے مقاصد یہ ہیں۔ کوئی بھی طریقہ: جیسمین۔ کوئی طریقہ یہ چیک کرنے کے لئے استعمال کیا جاتا ہے کہ آیا کوئی قیمت کسی خاص قسم کی ہے۔ویلیو 123. جیسمین۔ کوئی طریقہ کسی شے ، سرنی ، یا دوسرے ڈیٹا ٹائپ 123 کی قسم کو جانچنے کے لئے استعمال کیا جاتا ہے۔ کونیی یونٹ کی جانچ میں جیسمین۔ کسی بھی طریقہ کو استعمال کرنے کی ایک مثال ہے: بیان کریں ('ٹیسٹکمپرینٹ' ، () =>content جزو: ٹیسٹکمپینٹ ؛ آئیے فکسچر: اجزاء فکسچر <ٹیسٹ کامپینٹ>> پہلے (async () => test ٹیسٹ بیڈ.کونفیگریٹسٹنگ موڈول ({اعلامیہ: [ٹیسٹکمپرینٹ]}). مرتب کامپونٹس () ؛}) ؛}) ؛}) ؛حقیقت = testbed.createcompient (ٹیسٹکمپرینٹ) ؛ اجزاء = فکسچر.jasmine.any (string) ؛}) ؛}) ؛ مذکورہ بالا مثال میں ، ہم نے جیسمین۔ کسی بھی طریقہ کا استعمال کیا ہے تاکہ ٹیسٹ کے اجزاء کی میسج پراپرٹی کی قسم کی جانچ کی جاسکے۔ہم نے تجربہ کیا ہے کہ میسج پراپرٹی توقع () فنکشن اور جیسمین۔ کسی بھی طریقہ کار کا استعمال کرتے ہوئے ٹائپ سٹرنگ کی ہے۔ خلاصہ ، جیسمین۔ کونیی یونٹ ٹیسٹنگ میں کوئی بھی طریقہ ایک مماثل فنکشن ہے جو ہمیں یہ چیک کرنے کی اجازت دیتا ہے کہ آیا کوئی قیمت ہے یا نہیںایک خاص قسم ، کسی متوقع قیمت کی قسم کے ساتھ اصل قدر کی قسم کا موازنہ کریں ، اور کسی شے کی قسم ، سرنی ، یا دیگر ڈیٹا کی قسم کی جانچ کریں۔ڈویلپرز ان کے کونیی یونٹ ٹیسٹ میں اقدار کی قسم کی جانچ کرنے کے لئے جیسمین۔ کوئی طریقہ استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں غیر متزلزل کوڈ کی جانچ کیسے کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں غیر متزلزل کوڈ کو جانچنے کے ل we ، ہم ان مراحل پر عمل کرسکتے ہیں: غیر متزلزل کوڈ کو سنبھالنے کے لئے async () فنکشن یا فاکسینک () فنکشن کا استعمال کریں۔asynchronous tasks. async () فنکشن کا استعمال کرتے ہوئے کونیی یونٹ کی جانچ میں غیر متناسب کوڈ کی جانچ کی ایک مثال ہے: '@@@@angular سے درآمد {ٹیسٹ بیڈ ، اجزاء فکسچر ، async}/کور/ٹیسٹنگ '؛ درآمد {اجزاء@@کونیی/کور' سے@@اجزاء ({سلیکٹر: 'ایپ ٹیسٹ' ، ٹیمپلیٹ: '<p> {{پیغام}} </p>'}) کلاس ٹیسٹ کامپینٹ{پیغام = '' ؛ngoninit () {سیٹ ٹائم آؤٹ (() => {this.message = 'ہیلو ، دنیا!' ؛} ، 1000) ؛}} بیان کریں ('ٹیسٹکمپینٹ' ، () => {جزو: ٹیسٹ کامپینٹ: آئیے فکسچر: اجزاء فکسچر <ٹیسٹ کامپینٹ> ؛ پہلے (async (() => {testbed.configuretestingdule ({اعلامیہ: [ٹیسٹکمپرینٹ]}.) ؛})) ؛ پہلے (() => {pricate = testbed.createcompient (ٹیسٹ کامپینٹ) ؛ اجزاء = فکسچر. concuture.detectchanges () ؛}) ؛ یہ (1 سیکنڈ کے بعد پیغام کو ظاہر کرنا چاہئے '، async(() => {سیٹ ٹائم آؤٹ (() => {توقع (اجزاء.میسیج)ٹیسٹ میں غیر سنجیدہ کوڈ کو سنبھالنے کے لئے async () فنکشن۔ہم نے ایک غیر متزلزل کام کی نقالی کرنے کے لئے سیٹ ٹائم آؤٹ () فنکشن کا استعمال کیا ہے جو 1 سیکنڈ کے بعد ٹیسٹ کے اجزاء کی میسج پراپرٹی کو طے کرتا ہے۔اس کے بعد ہم نے ٹیسٹ میں سیٹ ٹائم آؤٹ () فنکشن کا استعمال اس بات کی تصدیق کے لئے کیا ہے کہ میسج پراپرٹی کو 1 سیکنڈ کے بعد صحیح طور پر ترتیب دیا گیا ہے۔ خلاصہ میں ، کونیی یونٹ کی جانچ میں غیر متزلزل کوڈ کی جانچ کرنے کے لئے ، ہمیں async () فنکشن یا Fakeasync () استعمال کرنے کی ضرورت ہے۔غیر متزلزل کوڈ کو سنبھالنے کے لئے فنکشن ، وقت گزرنے کی نقالی کرنے اور غیر متزلزل کاموں کو عملی جامہ پہنانے کے لئے ٹک () فنکشن یا فلش () فنکشن کا استعمال کریں ، اور کونیی 12 اور بعد میں غیر متزلزل کوڈ کو سنبھالنے کے لئے ویٹفوراسینک () فنکشن کا استعمال کریں۔ڈویلپرز ان افعال کو اپنے کونیی یونٹ ٹیسٹوں میں غیر متزلزل کوڈ کی جانچ کرنے کے لئے استعمال کرسکتے ہیں اور اس بات کو یقینی بنا سکتے ہیں کہ ان کے اجزاء اور خدمات صحیح طریقے سے برتاؤ کریں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں اتلی ٹیسٹ اور گہرے ٹیسٹ میں کیا فرق ہے؟",
        "Answer": "کونیی یونٹ کی جانچ میں ، ٹیسٹ کی دو اہم اقسام ہیں: اتلی ٹیسٹ اور گہرے ٹیسٹ۔اتلی ٹیسٹوں اور گہرے ٹیسٹوں کے مابین اختلافات یہ ہیں: اتلی ٹیسٹ شیلو ٹیسٹ الگ تھلگ ٹیسٹ ہیں جو صرف اپنے بچے کے اجزاء کو پیش کیے بغیر کسی ایک جزو کی جانچ کرتے ہیں۔ٹیسٹنگ 1234. شیلو ٹیسٹ تنہائی میں کسی جزو کے طرز عمل کی جانچ کرنے اور اس بات کو یقینی بنانے کے لئے مفید ہیں کہ یہ اپنے بچے کے اجزاء 1234 کے بارے میں فکر کیے بغیر صحیح طور پر برتاؤ کرتا ہے۔ شیلو ٹیسٹ عام طور پر پریزنٹیشنل اجزاء کی جانچ کے لئے استعمال ہوتے ہیں جن میں بچوں کے اجزاء پر پیچیدہ منطق یا انحصار نہیں ہوتا ہے۔ٹیسٹ ڈپ ٹیسٹ انضمام ٹیسٹ ہوتے ہیں جو کسی جزو اور اس کے بچے کے اجزاء کو پورے 534 کے طور پر جانچتے ہیں۔ ڈی ای ای پی ٹیسٹ ٹیسٹ پر عمل درآمد کے دوران پورے جزو کے پورے درخت کو مرتب اور پیش کرتے ہیں ، جس سے ان کو آہستہ اور اجزاء 5334 کے مابین تعامل پر زیادہ توجہ دی جاتی ہے۔ کنٹینر کے اجزاء کی جانچ کے لئے مفید ہیں۔جس میں بچوں کے اجزاء 53434 پر پیچیدہ منطق اور انحصار ہوتا ہے۔ ڈی ای ای پی ٹیسٹ اس بات کو یقینی بناتے ہیں کہ اجزاء کے درخت کو صحیح طریقے سے پیش کیا گیا ہے اور یہ کہ اجزاء کے مابین تعامل متوقع 534 کے طور پر برتاؤ کرتا ہے۔جبکہ گہرے ٹیسٹ انضمام کے ٹیسٹ ہیں جو مجموعی طور پر کسی جزو اور اس کے بچے کے اجزاء کی جانچ کرتے ہیں۔اتلی ٹیسٹ تیز اور زیادہ توجہ مرکوز کرنے والے جزو پر زیادہ توجہ مرکوز کرتے ہیں ، جبکہ گہری ٹیسٹ آہستہ اور اجزاء کے مابین تعامل پر زیادہ توجہ مرکوز کرتے ہیں۔ڈویلپرز کنٹینر کے اجزاء کی جانچ کے ل presention پریزنٹیشنل اجزاء اور گہرے ٹیسٹوں کی جانچ کے ل shall اتلی ٹیسٹوں کا استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں آپ Async () اور Fakeasync () طریقوں کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں غیر متزلزل کوڈ کو جانچنے کے ل we ، ہم Async () اور Fakeasync () طریقوں کا استعمال کرسکتے ہیں۔ان کو کس طرح استعمال کرنے کے بارے میں تفصیلات یہ ہیں: ASYNC () ASYNC () کا طریقہ کونیی یونٹ ٹیسٹنگ 1234 میں غیر سنجیدہ کوڈ کو سنبھالنے کے لئے استعمال کیا جاتا ہے۔ ASYNC () کا طریقہ ایک خصوصی ٹیسٹ زون تشکیل دیتا ہے جو وعدوں اور دیگر متضاد آپریشنوں کو روکتا ہے اور ان کا انتظار کرتا ہے اور ان کا انتظار کرتا ہے۔ٹیسٹ 1234 کے ساتھ جاری رکھنے سے پہلے مکمل کرنے کے لئے۔ Async () طریقہ کو غیر متزلزل کوڈ کی جانچ کرنے کے لئے استعمال کیا جاتا ہے جس میں وعدے ، مشاہدہ کرنے والے ، ٹائمر ، اور دیگر متضاد آپریشنز 1234 شامل ہوتے ہیں۔ Async () طریقہ عام طور پر اسینکرونوس کوڈ کی جانچ کے لئے استعمال ہوتا ہے جس میں HTTP کی درخواستوں یا دیگر شامل ہیں۔بیرونی انحصار 1234.fakeasync () Fakeasync () کا طریقہ کونیی یونٹ ٹیسٹنگ 14 میں غیر متزلزل کوڈ کو سنبھالنے کے لئے استعمال کیا جاتا ہے۔ Fakeasync () کا طریقہ ایک جعلی ٹیسٹ زون تشکیل دیتا ہے جو وقت گزرنے کی نقالی کرتا ہے اور ہمیں asynchronous tasks14 کی پھانسی پر قابو پانے کی اجازت دیتا ہے۔فاکسینک () کا طریقہ غیر متزلزل کوڈ کی جانچ کرنے کے لئے استعمال کیا جاتا ہے جس میں ٹائمر ، وقفے اور دیگر وقت پر مبنی آپریشنز شامل ہوتے ہیں۔کونیی یونٹ ٹیسٹنگ میں async () کے طریقہ کار کا استعمال: یہ ('1 سیکنڈ کے بعد پیغام کو ظاہر کرنا چاہئے' ، async (() => {سیٹ ٹائم آؤٹ (() => {توقع (اجزاء.میسیج) .toequal ('ہیلو ، دنیا! ') ؛} ، 1000) ؛})) ؛ مذکورہ بالا مثال میں ، ہم نے ٹیسٹ میں غیر متزلزل کوڈ کو سنبھالنے کے لئے async () کا طریقہ استعمال کیا ہے۔ہم نے ایک غیر متزلزل کام کی نقالی کرنے کے لئے سیٹ ٹائم آؤٹ () فنکشن کا استعمال کیا ہے جو 1 سیکنڈ کے بعد ٹیسٹ کے اجزاء کی میسج پراپرٹی کو طے کرتا ہے۔اس کے بعد ہم نے ٹیسٹ میں سیٹ ٹائم آؤٹ () فنکشن کا استعمال اس بات کی تصدیق کے لئے کیا ہے کہ میسج پراپرٹی کو 1 سیکنڈ کے بعد صحیح طور پر ترتیب دیا گیا ہے۔ یہاں کونیی یونٹ ٹیسٹنگ میں فاکایسینک () طریقہ استعمال کرنے کی ایک مثال ہے: یہ ('کے بعد پیغام کو ظاہر کرنا چاہئے۔دوسرا '، Fakesync (() => {سیٹ ٹائم آؤٹ (() => {توقع (اجزاء.میسیج) .toequal (' ہیلو ، دنیا! ') ؛} ، 1000) ؛ ٹک (1000) ؛})) ؛مثال کے طور پر ، ہم نے ٹیسٹ میں غیر متزلزل کوڈ کو سنبھالنے کے لئے فاکایسینک () کا طریقہ استعمال کیا ہے۔ہم نے ایک غیر متزلزل کام کی نقالی کرنے کے لئے سیٹ ٹائم آؤٹ () فنکشن کا استعمال کیا ہے جو 1 سیکنڈ کے بعد ٹیسٹ کے اجزاء کی میسج پراپرٹی کو طے کرتا ہے۔اس کے بعد ہم نے وقت گزرنے کی نقالی کرنے اور اسینکرونس ٹاسک پر عمل درآمد کرنے کے لئے ٹک () فنکشن کا استعمال کیا ہے۔ ہم اسنکرونس کوڈ کو سنبھالنے کے لئے کونیی یونٹ ٹیسٹنگ میں async () اور Fakeasync () طریقوں کو استعمال کرسکتے ہیں۔async () طریقہ کو غیر متزلزل کوڈ کی جانچ کرنے کے لئے استعمال کیا جاتا ہے جس میں وعدے ، مشاہدہ کرنے والے ، ٹائمر ، اور دیگر متضاد کاروائیاں شامل ہوتی ہیں ، جبکہ فاکایسینک () کا طریقہ غیر متزلزل کوڈ کو جانچنے کے لئے استعمال ہوتا ہے جس میں ٹائمر ، وقفے اور دیگر وقت پر مبنی آپریشن شامل ہوتے ہیں۔ڈویلپرز ان طریقوں کو اپنے کونیی یونٹ ٹیسٹوں میں غیر متزلزل کوڈ کی جانچ کرنے کے لئے استعمال کرسکتے ہیں اور اس بات کو یقینی بنا سکتے ہیں کہ ان کے اجزاء اور خدمات صحیح طریقے سے برتاؤ کریں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ٹک () کے طریقہ کار کا مقصد کیا ہے؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں ٹک () کا طریقہ وقت گزرنے کی نقل اور غیر متزلزل کاموں کو عملی جامہ پہنانے کے لئے استعمال کیا جاتا ہے۔یہ عام طور پر غیر سنجیدہ کوڈ کو سنبھالنے کے لئے فاکایسینک () کے طریقہ کار کے ساتھ مل کر استعمال کیا جاتا ہے جس میں ٹائمر ، وقفے اور دیگر وقت پر مبنی آپریشن 1234 شامل ہوتے ہیں۔یہاں ٹک () طریقہ کار کے مقاصد ہیں: ٹک () طریقہ وقت گزرنے کی نقالی کرنے اور غیر متزلزل کاموں کو انجام دینے کے لئے استعمال کیا جاتا ہے۔پر مبنی آپریشنز 1234۔ ٹِک () کا طریقہ فاکسینک () کے طریقہ کار کے ساتھ مل کر ایک جعلی ٹیسٹ زون بنانے کے لئے استعمال کیا جاتا ہے جو وقت گزرنے کی تقلید کرتا ہے اور ہمیں غیر متزلزل کاموں کی نفاذ کو کنٹرول کرنے کی اجازت دیتا ہے۔) کونیی یونٹ ٹیسٹنگ میں طریقہ: یہ ('1 سیکنڈ کے بعد پیغام ڈسپلے کرنا چاہئے' ، فاکایسینک (() => {سیٹ ٹائم آؤٹ (() => {توقع (اجزاء.میسیج) .toequal ('ہیلو ، دنیا!') ؛} ، 1000) ؛ ٹک (1000) ؛})) ؛ مذکورہ بالا مثال میں ، ہم نے ٹیسٹ میں غیر متزلزل کوڈ کو سنبھالنے کے لئے فاکاسینک () کا طریقہ استعمال کیا ہے۔ہم نے ایک غیر متزلزل کام کی نقالی کرنے کے لئے سیٹ ٹائم آؤٹ () فنکشن کا استعمال کیا ہے جو 1 سیکنڈ کے بعد ٹیسٹ کے اجزاء کی میسج پراپرٹی کو طے کرتا ہے۔اس کے بعد ہم نے وقت گزرنے کی نقالی کرنے اور اسینکرونس ٹاسک پر عمل درآمد کرنے کے لئے ٹک () فنکشن کا استعمال کیا ہے۔ خلاصہ میں ، کونیی یونٹ کی جانچ میں ٹک () کا طریقہ وقت گزرنے کی نقالی کرنے اور غیر متزلزل کاموں کو انجام دینے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز غیر متزلزل کوڈ کو سنبھالنے کے لئے Fakeasync () کے طریقہ کار کے ساتھ مل کر ٹک () کا طریقہ استعمال کرسکتے ہیں جس میں ٹائمر ، وقفے اور دیگر وقت پر مبنی آپریشن شامل ہیں اور اس بات کو یقینی بنائیں کہ ان کے اجزاء اور خدمات صحیح طریقے سے برتاؤ کریں۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں HTTP کی درخواستوں کا مذاق کیسے کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں HTTP کی درخواستوں کا مذاق اڑانے کے ل we ، ہم HTTPClientTestingModule اور HTTPTESTINGCONTROLLER کونیولر کے ذریعہ فراہم کردہ استعمال کرسکتے ہیں۔کونیی یونٹ ٹیسٹنگ میں HTTP کی درخواستوں کا مذاق اڑانے کے اقدامات یہ ہیں: @کونیی/کامن/ایچ ٹی ٹی پی/ٹیسٹنگ سے HTTPClientTestingModule اور HttptestingController درآمد کریں۔ ٹیسٹ بیڈڈ ڈاٹ کام کو استعمال کریں۔HTTP کی درخواست کو روکنے اور مذاق کا جواب فراہم کرنے کا طریقہ () HTTPTESTINGCONTROLLER استعمال کریں۔، انجیکشن} سے '@کونیی/کور/ٹیسٹنگ' ؛ درآمد {httpclientStingModule ، httptestingController} سے '@کونیی/عام/HTTP/ٹیسٹنگ' ؛ امپورٹ {ڈیٹا سروس} سے './data.service' ؛ ڈیٹاسروائس' 'ڈیڈاسرویس' 'ڈیڈاسروئس'۔() => let سروس: ڈیٹا سروس ؛ آئیے HTTPMOCK: HTTPTESTINGCONTROLLER ؛ پہلے (() => {testbed.configureTestingModule ({درآمدات: [HTTPClientStingModule] ، فراہم کنندگان: [ڈیٹا سروسز]}) ؛httpmock = testbed.inject (httptestingController) ؛}) ؛atherail (() => {httpmock.verify () ؛}) ؛یہ ('صارفین کی ایک صف کو واپس کرنا چاہئے' ، () => {const mocusers = [{id: 1 ، نام: 'جان'} ، {ID: 2 ، نام: 'جین'}] ؛ سروس.گٹائزرز ().subscribe (صارفین => {توقع (صارف۔ لمبائی)صارفین ') ؛ توقع (req.request.method) .tobe (' get ') ؛ Req.flush (Mocusers) ؛}) ؛}) ؛ مذکورہ بالا مثال میں ، ہم نے HTTPClientTestingModule اور HttptestingController استعمال کیا ہے تاکہ HTTP کی درخواست کا مذاق اڑایا جاسکے۔ڈیٹا سروس میںہم نے ٹیسٹ ماڈیول کو تشکیل دینے کے لئے ٹیسٹ بی ای ڈی۔ کوکوریٹسٹنگ موڈول () کا طریقہ استعمال کیا ہے اور HTTPClientTestingModule کو شامل کیا ہے۔اس کے بعد ہم نے HTTPTESTINGCONTROLLER.EXPECTONE () کا طریقہ استعمال کیا ہے تاکہ HTTP درخواست کو روکیں اور مذاق کا جواب فراہم کیا جاسکے۔کونیی یونٹ کی جانچ میں HTTPSTINGCOLROLLER.Verify () طریقہ استعمال کرنے کے لئے ہم نے HTTP کی کوئی بقایا درخواستیں موجود نہیں ہیں۔HTTPClientStestingModule ، HTTP کی درخواست کو روکیں اور HTTPTESTINGCONTROLLER.EXPECTONE () کے طریقہ کار کا استعمال کرتے ہوئے ایک مذاق کا جواب فراہم کریں ، اور اس بات کو یقینی بنائیں کہ HTTPTESTINGCONTROLLER.verify () طریقہ استعمال کرتے ہوئے HTTP کی کوئی بقایا درخواستیں موجود نہیں ہیں۔ڈویلپر ان طریقوں کو اپنے کونیی یونٹ ٹیسٹوں میں HTTP کی درخواستوں کا مذاق اڑاتے ہیں اور اس بات کو یقینی بناسکتے ہیں کہ ان کے اجزاء اور خدمات صحیح طریقے سے برتاؤ کریں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں testbed.inject اور testbed.get کے درمیان کیا فرق ہے؟",
        "Answer": "testbed.get () کا طریقہ کونیی 9+ میں فرسودہ ہے ، اور testbed.inject () اب انحصار 12 کو انجیکشن لگانے کا ترجیحی قسم کا محفوظ طریقہ ہے۔یہاں testbed.get () اور testbed.inject (): testbed.get () testbed.get () کے درمیان اختلافات ہیں جو کونیی 9+12.testbed.get () میں ایک فرسودہ طریقہ ہے۔ٹیسٹ بیڈ کا انجیکٹر 12. ٹیسٹ بیڈ۔ گیٹ () ٹائپ سیف نہیں ہے اور اگر انحصار نہیں پایا جاتا ہے تو رن ٹائم کی غلطیوں کا سبب بن سکتا ہے۔testbed.inject () ٹیسٹ بیڈ کے انجیکٹر سے انحصار بازیافت کرنے کے لئے استعمال کیا جاتا ہے جس میں ٹائپ سیف وے 12.testbed.inject () ایک غلطی پھینک دیتا ہے اگر انحصار نہیں پایا جاتا ہے تو ، ترقی کے دوران غلطیوں کو پکڑنا آسان ہوجاتا ہے۔testbed.get () کونیی 9+ میں ایک فرسودہ طریقہ ہے جو ٹیسٹ بیڈ کے انجیکٹر سے انحصار بازیافت کرنے کے لئے استعمال ہوتا ہے ، جبکہ ٹیسٹ بیڈ ڈاٹ اینجیکٹ () کونیی 9+ میں انحصار انجیکشن کرنے کا ترجیحی طریقہ ہے جو A کو بازیافت کرنے کے لئے استعمال ہوتا ہے۔قسم کے محفوظ طریقے سے ٹیسٹ بیڈ کے انجیکٹر سے انحصار۔ڈویلپرز کو رن ٹائم کی غلطیوں سے بچنے اور ٹائپ سیفٹی کو یقینی بنانے کے لئے ٹیسٹ بیڈ ڈاٹ جی جی () کے بجائے ٹیسٹ بیڈ ڈاٹ اینجیکٹ () استعمال کرنا چاہئے۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں اسپائیون () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں اسپائیون () کا طریقہ ایک جاسوس آبجیکٹ بنانے کے لئے استعمال کیا جاتا ہے جو ہمیں کالوں کو کسی طریقہ پر ٹریک کرنے اور اس کے طرز عمل کو تبدیل کرنے کی اجازت دیتا ہے۔کونیی یونٹ ٹیسٹنگ میں اسپائیون () کے طریقہ کار کو استعمال کرنے کے لئے یہ اقدامات ہیں: اس طریقہ کار کے لئے جاسوس آبجیکٹ کے لئے اسپائیون () کا طریقہ استعمال کریں۔جاسوسی کی جانے والی اس طریقہ کار کے لئے ایک مخصوص ریٹرن ویلیو کو طے کرنے کے ل And اور اس کے استعمال کرنے کے طریقہ کار کے لئے کسٹم پر عمل درآمد فراہم کرنے کے لئے طریقہ استعمال کرنے کے لئے ایک مخصوص ریٹرن ویلیو کو استعمال کریں۔کونیی یونٹ کی جانچ میں اسپائیون () کا طریقہ: یہ ('لاگ طریقہ کو فون کرنا چاہئے' ، () => {const logger = testbed.inject (لاگگرسروائس) ؛ اسپائیون (لاگر ، 'لاگ') ؛ اجزاء.ڈوسومنگ () ؛توقع کریں (LOGGER.LOG)اس کے بعد ہم نے توقع () فنکشن کا استعمال اس بات کی تصدیق کے لئے کیا ہے کہ لاگ () کا طریقہ کہا گیا تھا۔ خلاصہ میں ، کونیی یونٹ ٹیسٹنگ میں اسپائیون () طریقہ ایک جاسوس آبجیکٹ بنانے کے لئے استعمال کیا جاتا ہے جو ہمیں کالوں کو کسی طریقہ کار پر ٹریک کرنے کی اجازت دیتا ہے اوراس کے طرز عمل کو تبدیل کریں۔ڈویلپرز کسی طریقہ کار کے طرز عمل کی جانچ کرنے اور اس بات کو یقینی بنانے کے لئے اسپائیون () کے طریقہ کار کا استعمال کرسکتے ہیں اور اسے صحیح دلائل کے ساتھ بلایا گیا تھا۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ایکٹیویٹر آؤٹ اسٹب کا مقصد کیا ہے؟",
        "Answer": "ایکٹیویٹر آؤٹ اسٹب ایک مذاق آبجیکٹ ہے جو کونیی یونٹ ٹیسٹنگ میں ایکٹیویٹیڈ راؤٹ سروس کی نقالی کرنے کے لئے استعمال ہوتا ہے۔یہ عام طور پر ان اجزاء کی جانچ کرنے کے لئے استعمال ہوتا ہے جو ایکٹیویٹ روٹ سروس اور اس کے پیرامیٹرز 123456 پر انحصار کرتے ہیں۔کونیی یونٹ ٹیسٹنگ میں ایکٹیویٹر آؤٹ اسٹب کو کس طرح استعمال کرنے کے بارے میں تفصیلات یہ ہیں: ٹیسٹ ماڈیول کو تشکیل دینے کے لئے ایک ٹیسٹ بیڈ۔ کونسفائگوریٹسٹنگ موڈیول () طریقہ بنائیں اور روٹرسٹسٹنگ موڈول کو شامل کریں۔ ایک ایم او سی ای آبجیکٹ کے ساتھ ایکٹیویٹیٹ رائوٹ سروس کو اوور رائڈ کرنے کے لئے ایک ٹیسٹ بیڈ۔. ایکٹیویٹریوٹ اسٹب.سناپ شاٹ کو استعمال کریں۔ ایکٹیویٹر آؤٹ اسٹب.سناپ شاٹ کو استعمال کریں۔امپورٹ {اجزاء فکسچر ، '@کونیی/کور/ٹیسٹنگ' سے Testbed} درآمد {ایکٹیویٹیڈ راؤٹ} سے '@کونیی/روٹر' ؛ درآمد {of 'rxjs' سے '@کونیی/کور' سے import درآمد {اجزاء@@@کونیول/کور '؛@اجزاء ({سلیکٹر: 'ایپ ٹیسٹ' ، ٹیمپلیٹ: '<p> {{id}} </p>'}) کلاس ٹیسٹ کامپینٹ {ID: سٹرنگ ؛کنسٹرکٹر (نجی روٹ: ایکٹیویٹیڈ روٹ) {} ngoninit () {this.route.params.subscribe (پیرامس => {this.id = پیرامس ['id'] ؛}) ؛}} کی وضاحت ('ٹیسٹکمپینٹ' ، () => {جزو: ٹیسٹ کامپینٹ: آئیے فکسچر: اجزاء فکسچر <ٹیسٹ کامپینٹ> ؛ پہلے (() => const ایکٹیویٹر آؤٹ اسٹب = {اسنیپ شاٹ: {پیرامس: {ID: '123'}}}} ؛ testbed.configuretestingmodule ({اعلامیے: [ٹیسٹکمپرینٹ] ، فراہم کنندگان: [{فراہم کریں: ایکٹیویٹ روٹ ، یوزیولو: ایکٹیویٹر آؤٹ اسٹب}]}) ؛ فکسچر = ٹیسٹ بیڈ۔}) ؛ یہ ('ID کو ظاہر کرنا چاہئے' ، () => {const عنصر = پرکسچر۔ nativelement.queryselector ('p') ؛ توقع (عنصر.ٹیکونٹینٹ) .tocontain ('123') ؛}) ؛})؛ مذکورہ بالا مثال میں ، ہم نے ایکٹیویٹر آؤٹ اسٹب کا استعمال ٹیسٹ کے اجزاء میں ایکٹیویٹیٹ روٹ سروس کی نقالی کرنے کے لئے کیا ہے۔ہم نے ٹیس بیڈ۔ اوور رائیڈ پرووائڈر () کا طریقہ استعمال کیا ہے تاکہ ایک موک آبجیکٹ کے ساتھ ایکٹیویٹیڈ روٹ سروس کو اوور رائڈ کیا جاسکے۔اس کے بعد ہم نے ایکٹیویٹر آؤٹ اسٹب.سناپ شاٹ۔ پیرامس پراپرٹی کو ایکٹیویٹیٹ راؤٹ سروس کے پیرامیٹرز ترتیب دینے کے لئے استعمال کیا ہے۔ ان کا خلاصہ یہ ہے کہ ، ایکٹیویٹر آؤٹ اسٹب ایک مذاق آبجیکٹ ہے جو کونیی یونٹ کی جانچ میں ایکٹیویٹیڈ راؤٹ سروس کی نقالی کرنے کے لئے استعمال ہوتا ہے۔ڈویلپرز ایکٹیویٹر آؤٹ اسٹب کو ان اجزاء کی جانچ کرنے کے لئے استعمال کرسکتے ہیں جو ایکٹیویٹیٹ راؤٹ سروس اور اس کے پیرامیٹرز پر منحصر ہیں۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں ایکٹیویٹیڈ راؤسٹنپ شاٹ کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں ایکٹیویٹیڈ روٹسناپ شاٹ کلاس کو استعمال کرنے کے ل we ، ہم ان اقدامات پر عمل پیرا ہوسکتے ہیں: @کونیی/راؤٹر سے ایکٹیویٹیڈ روٹسناپ شاٹ کلاس درآمد کریں۔ماڈیول اور شامل کریں روٹرسٹسٹنگ موڈیول۔ ٹیسٹ بیڈ استعمال کریں۔ اوور رائڈ پرووائڈر () کو ایکٹیویٹیڈ روٹسناپ شاٹ سروس کو موک آبجیکٹ کے ساتھ اوور رائڈ کرنے کا طریقہ۔ ٹیسٹ بیڈ۔ انجیکٹ () کا طریقہ استعمال کریں جس کا تجربہ کیا جاتا ہے۔کونیی یونٹ کی جانچ میں ایکٹیویٹیڈ روٹسناپ شاٹ کلاس: درآمد {اجزاء فکسچر ، ٹیسٹ بیڈ} سے '@کونیی/کور/ٹیسٹنگ' ؛ درآمد {ایکٹیویٹیڈ راؤسٹنپ شاٹ ، راؤٹر 'سے'@کونیی/راؤٹر '؛ درآمد {اجزاء@@کونیول/کور' سے@@@@@کور '؛اجزاء ({سلیکٹر: 'ایپ ٹیسٹ' ، ٹیمپلیٹ: '<p> {{id}} </p>'}) کلاس ٹیسٹ کامپینٹ {ID: سٹرنگ ؛کنسٹرکٹر (نجی روٹ: ایکٹیویٹڈ راؤٹ ایس این اے پی شاٹ) {} ngoninit () {this.id = this.route.params ['id'] ؛}} بیان کریں ('ٹیسٹکمپینٹ' ، () => {جزو: ٹیسٹکمپینٹ ؛ آئیے فکسچر: اجزاء فکسچر <ٹیسٹ کامپینٹ> ؛ پہلے (() => const ایکٹیویٹڈ راؤسٹنپ شاٹ = {پیرامس: {ID: '123'}} ؛ ٹیسٹ بی۔کنفیگریٹسٹنگ موڈیول ({اعلامیے: [ٹیسٹکمپینٹ] ، فراہم کنندگان: [{فراہم کریں: ایکٹیویٹڈ روٹسناپ شاٹ ، یو ایس ای ویلیو: ایکٹیویٹڈ راؤسٹنپ شاٹ}]}) ؛ فکسچر = ٹیسٹ بیڈ۔ کریٹکومیپینٹ (ٹیسٹکمپرینٹ) ؛ اجزاء = فکسچر ڈاٹ کامپینٹنس ؛('ID کو ڈسپلے کرنا چاہئے' ، () => {const عنصر = plicure.nativelement.queryselector ('p') ؛ توقع (عنصر۔ ٹیکسٹ کونٹینٹ) .tocontain ('123') ؛}) ؛ مذکورہ بالا میں ؛مثال کے طور پر ، ہم نے ٹیسٹ کے کام میں ایکٹیویٹیڈ راؤٹ سروس کی نقالی کرنے کے لئے ایکٹیویٹیڈ راؤسٹنپ شاٹ کلاس کا استعمال کیا ہے۔ہم نے ایک موک آبجیکٹ کے ساتھ ایکٹیویٹیڈ روٹسناپ شاٹ سروس کو اوور رائڈ کرنے کے لئے ٹیسٹ بیڈ۔ اوور رائیڈ پرووائڈر () کا طریقہ استعمال کیا ہے۔اس کے بعد ہم نے ٹیسٹ بیڈ ڈاٹ اینجیکٹ () کا طریقہ استعمال کیا ہے جس میں ایکٹیویٹیڈ راؤسٹنپ شاٹ سروس کو جانچ کی جارہی جزو میں انجکشن لگائیں۔ خلاصہ میں ، کونیی یونٹ ٹیسٹنگ میں ایکٹیویٹیڈ راؤسٹنپ شاٹ کلاس کو استعمال کرنے کے لئے ، ہمیں ایکٹیویٹیڈ روٹسناپ شاٹ کلاس کو درآمد کرنے کی ضرورت ہے ، ایکٹیویٹیڈ راؤٹ ایس این اے پی ایس ٹی کلاس کی ایک مثال بنائیں۔ضروری خصوصیات کے ساتھ ، ٹیسٹ ماڈیول کی تشکیل کریں اور روٹرسٹسٹنگ موڈول کو شامل کریں ، ٹیس بیڈ ڈاٹ اوور رائڈ پرووائڈر () طریقہ کار کا استعمال کرتے ہوئے موک آبجیکٹ کے ساتھ ایکٹیویٹیڈ روٹسناپ شاٹ سروس کو اوور رائڈ کریں ، اور ٹیسٹ بیڈ ڈاٹ انجیکٹ () کے طریقہ کار کا استعمال کرتے ہوئے ٹیسٹ کیے جانے والے اجزاء میں ایکٹیویٹیڈ روٹس نپ شاٹ سروس کو انجیکشن کریں۔ڈویلپرز ایکٹیویٹیڈ راؤسٹناپ شاٹ کلاس کو اجزاء کی جانچ کرنے کے لئے استعمال کرسکتے ہیں جو ایکٹیویٹیٹ روٹ سروس اور اس کے پیرامیٹرز پر انحصار کرتے ہیں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں پہلے اور بیفوریل کے درمیان کیا فرق ہے؟",
        "Answer": "اس سے پہلے اور بیفوریل کونیی یونٹ ٹیسٹنگ میں لائف سائیکل کے طریقے ہیں جو ٹیسٹوں کے لئے ماحول کو ترتیب دینے کے لئے استعمال ہوتے ہیں۔پہلے اور پہلے سے پہلے کے درمیان اختلافات یہ ہیں: پہلے سے پہلے کا طریقہ بیان بلاک میں ہر ٹیسٹ سے پہلے کہا جاتا ہے جس میں اسے 1234 کہا جاتا ہے۔ ہر ٹیسٹ کے لئے ماحول کو ترتیب دینے کے لئے پہلے کا طریقہ استعمال کیا جاتا ہے ، جیسے ٹیسٹ ڈیٹا بنانا یا انحصار 1234 کو شروع کرنا۔پہلے کا طریقہ یہ یقینی بنانے کے لئے مفید ہے کہ ہر ٹیسٹ صاف ستھرا ماحول میں چلایا جاتا ہے اور یہ کہ پچھلے ٹیسٹ 1234 سے کوئی ضمنی اثرات نہیں ہوتے ہیں۔بیان کردہ بلاک میں موجود تمام ٹیسٹوں کے لئے ماحولیات کو ترتیب دینے کے لئے استعمال کیا جاتا ہے ، جیسے ڈیٹا بیس کنکشن کو شروع کرنا یا بڑے ڈیٹا سیٹ 356 کو لوڈ کرنا۔ بیفوریل کا طریقہ کار ٹیسٹ کے لئے سیٹ اپ کے وقت کو کم کرنے کے لئے مفید ہے جو ایک ہی ماحولیات 356.1 میں ، پہلے اور پہلے ہی مشترکہ طور پر ہوتا ہے۔بیفوریل کونیی یونٹ ٹیسٹنگ میں لائف سائیکل کے طریقے ہیں جو ٹیسٹوں کے لئے ماحول قائم کرنے کے لئے استعمال ہوتے ہیں۔بیان کردہ بلاک میں ہر ٹیسٹ سے پہلے پہلے کہا جاتا ہے اور ہر ٹیسٹ کے لئے ماحولیات کو ترتیب دینے کے لئے استعمال ہوتا ہے ، جبکہ بیان کردہ بلاک میں کسی بھی ٹیسٹ سے پہلے بیفوریل کو ایک بار بلایا جاتا ہے اور اس کو بیان بلاک میں موجود تمام ٹیسٹوں کے لئے ماحول قائم کرنے کے لئے استعمال کیا جاتا ہے۔ڈویلپر ان طریقوں کو اس بات کا یقین کرنے کے لئے استعمال کرسکتے ہیں کہ ان کے ٹیسٹ صاف ستھرا ماحول میں چل رہے ہیں اور پچھلے ٹیسٹوں سے کوئی ضمنی اثرات نہیں ہیں۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں اجزاء فکسٹوراؤٹوڈیٹیکٹ حکمت عملی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں اجزاء فکسٹوریٹوریٹوٹیٹیکٹ حکمت عملی کو استعمال کرنے کے ل we ، ہم ان مراحل پر عمل کرسکتے ہیں: @کونیی/کور/ٹیسٹنگ سے اجزاء فکسٹوریٹوریٹیٹ سیٹ کو درآمد کریں۔ ٹیسٹ بیڈ کو استعمال کریں۔.createcompient () ایک اجزاء کی حقیقت پیدا کرنے کا طریقہ۔ اجزاء فکسچر استعمال کریں۔ آوٹوڈیٹیکٹ چینجز () خود کار طریقے سے تبدیلی کا پتہ لگانے کے لئے طریقہ کار کا طریقہ۔ یہاں کونیولر یونٹ کی علامت میں اجزاء فکسٹوریاٹوڈیٹیکٹ حکمت عملی کو استعمال کرنے کی ایک مثال ہے: درآمد {اجزاء فکسٹور آٹاٹوڈیٹ ،@انگلولر/@کونسٹر فکسٹورآٹوڈیٹیکٹ ، ٹیسٹ بیڈ}کور/ٹیسٹنگ ''@@کونیی/کور 'سے درآمد {اجزاء@@جزو ({سلیکٹر:' ایپ ٹیسٹ '، ٹیمپلیٹ:' <p> {{پیغام}} </p> '}) کلاس ٹیسٹ کامپینٹ {پیغام = 'ہیلو ، دنیا!' ؛اپ ڈیٹ میسیج () {this.message = 'ہیلو ، کونیی!' ؛}} کی وضاحت ('ٹیسٹکمپینٹ' ، () => {جزو: ٹیسٹ کامپینٹ: آئیے فکسچر: اجزاء فکسچر <ٹیسٹ کامپینٹ> ؛ پہلے (() => {ٹیسٹ بیڈ.کونفیگوریٹسٹنگ موڈول ({اعلامیہ: [ٹیسٹ اجزاء] ، فراہم کنندہ: [{فراہم کرنے والے: [{فراہم کرنے والے:اجزاء فکسٹوریاٹوڈیٹیکٹ ، usevalue: true}]}) ؛ حقیقت = testbed.createcompient (ٹیسٹ کامپینٹ) ؛ اجزاء = فکسچر.استفسار سلیکٹر ('p') ؛ توقع (عنصر۔ ٹیکسٹ کانٹ)= plicure.nativelement.querySelector ('p') ؛ توقع (عنصر.ٹیکسٹ کونٹینٹ) .tocontain ('ہیلو ، کونیی!') ؛}) ؛}) ؛ مذکورہ بالا مثال میں ، ہم نے خود کار طریقے سے تبدیلی کو قابل بنانے کے لئے اجزاء فکسٹوریٹوٹیٹیکٹ حکمت عملی کا استعمال کیا ہے۔ٹیسٹ کے اجزاء میں پتہ لگانا۔ہم نے ٹیسٹ ماڈیول کو تشکیل دینے کے لئے testbed.configuretestingmodule () کا طریقہ استعمال کیا ہے اور اس میں اجزاء فکسٹوراؤٹوڈیٹیٹ سروس شامل ہے۔اس کے بعد ہم نے ایک جزو کی حقیقت اور اجزاء فکسچر بنانے کے لئے ٹیسٹ بیڈ۔ کریٹکمپمنٹ () کا طریقہ استعمال کیا ہے۔ خودکار تبدیلی کا پتہ لگانے کے ل aut ، آوٹوڈیٹیکٹ چینجز () کا طریقہ کار ، کونیی یونٹ کی جانچ میں اجزاء فکسٹور آٹووڈیٹیکٹ کی حکمت عملی کو استعمال کرنے کے لئے ، ہمیں اجزاء فکسٹور آٹاٹوڈیٹیکٹ سروس کو درآمد کرنے کی ضرورت ہے۔، ٹیسٹ ماڈیول کو تشکیل دیں اور اجزاء فکسٹوریٹو ڈیٹیکٹ سروس کو شامل کریں ، ٹیسٹ بیڈ۔ کریٹکومیپینٹ () طریقہ کار کا استعمال کرتے ہوئے ایک جزو کی حقیقت بنائیں ، اور اجزاء فکسچر.ایوٹوڈیٹیکٹچینجس () کے طریقہ کار کا استعمال کرتے ہوئے خود کار طریقے سے تبدیلی کا پتہ لگانے کو فعال کریں۔ڈویلپرز ہر ٹیسٹ کے معاملے میں کالنگ ڈیکٹ چینجز () سے بچنے کے لئے اجزاء فکسٹوریٹو آٹاٹیکٹ حکمت عملی کا استعمال کرسکتے ہیں اور اس بات کو یقینی بنا سکتے ہیں کہ ان کے اجزاء صحیح طریقے سے برتاؤ کریں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ngzone.runoutsideangular () طریقہ کار کا مقصد کیا ہے؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں ngzone.runoutsideangular () طریقہ کونیولر زون سے باہر افعال چلانے کے لئے استعمال کیا جاتا ہے۔اس سے ہمیں ایسا کام انجام دینے کی اجازت ملتی ہے جو کونیی تبدیلی کا پتہ لگانے کو متحرک نہیں کرتا ہے یا کونیی کی غلطی کو ہینڈلنگ 12 کے تابع ہے۔یہاں ngzone.runoutsideangular () طریقہ استعمال کرنے کے طریقہ کار کے بارے میں تفصیلات ہیں: @کونیی/کور سے ngzone سروس درآمد کریں۔ ٹیسٹ بیڈ کو استعمال کریں۔() این جی زون سروس کو جانچنے والے اجزاء میں انجیکشن لگانے کا طریقہ'@@کونیی/کور/ٹیسٹنگ' سے test ٹیسٹ بیڈ@@@کونیی/کور 'سے امپورٹ {ngzone} بیان کریں (' ٹیسٹکمپینٹ '، () => {ngzone: ngzone ؛ پہلے (() => {ٹیسٹ بیڈ۔کنفیگریٹسٹنگ موڈیول ({فراہم کنندگان: [ngzone]}) ؛ ngzone = testbed.inject (ngzone) ؛}) ؛ یہ ('کونیی \\' s زون '، () => {ngzone = 0 ؛ ngzone کے باہر فنکشن کو چلانا چاہئے۔.runoutsideangular (() => {سیٹ ٹائم آؤٹ (() => {ویلیو = 1 ؛} ، 1000) ؛}) ؛ سیٹ ٹائم آؤٹ (() => {توقع (قیمت) .tobe (1) ؛} ، 2000) ؛}) ؛}) ؛ مذکورہ بالا مثال میں ، ہم نے ngzone.runoutsideangular () کا طریقہ استعمال کیا ہے تاکہ کونیی کے زون سے باہر کسی فنکشن کو چلائیں۔ہم نے ایک متضاد کام کی نقالی کرنے کے لئے سیٹ ٹائم آؤٹ () فنکشن کا استعمال کیا ہے جو 1 سیکنڈ کے بعد ویلیو متغیر کو طے کرتا ہے۔اس کے بعد ہم نے ٹیسٹ میں سیٹ ٹائم آؤٹ () فنکشن کا استعمال اس بات کی تصدیق کے لئے کیا ہے کہ ویلیو متغیر کو 2 سیکنڈ کے بعد صحیح طور پر ترتیب دیا گیا ہے۔ خلاصہ میں ، کونیی یونٹ کی جانچ میں ngzone.runoutsideangular () طریقہ کونیی کے زون سے باہر افعال کو چلانے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز اس طریقہ کار کو کام انجام دینے کے لئے استعمال کرسکتے ہیں جو کونیی تبدیلی کا پتہ لگانے کو متحرک نہیں کرتا ہے یا کونیی کی غلطی سے نمٹنے کے تابع ہے۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں آپ ٹیسٹ بیڈ۔ اوور رائیڈ پروویڈر طریقہ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں ٹیسٹ بیڈ۔ٹیسٹ بیڈ کو استعمال کرنے کے لئے اقدامات یہ ہیں۔ اوور رائیڈ پرووائڈر () طریقہ: ٹیسٹ ماڈیول کو تشکیل دینے کے لئے ٹیسٹ بیڈ۔ کونسفائگوریٹسٹنگ موڈول () طریقہ استعمال کریں۔ایک جزو کی حقیقت کو بنانے کے لئے ٹیسٹ بیڈ۔@کونیی/کور/ٹیسٹنگ '؛ امپورٹ {میسروائس} سے' ./my.service '؛ import {mymockservice} منجانب') => {testbed.configuretestingmodule ({فراہم کنندگان: [میسروائس]}) ؛}) ؛ یہ ('مذاق کی خدمت کا استعمال کرنا چاہئے' ، () => test ٹیسٹ بیڈ۔ اوور رائیڈ پرووائڈر (میسرویس ، {استعمال: نیو مائی ماکسروائس ()})const const CONGENTEFIXTURE = testbed.createcompient (mycompointe) ؛ const const اجزاء = اجزاء فکسچر.توقع کریں (اجزاء۔}) ؛}) ؛ مذکورہ بالا مثال میں ، ہم نے میسروائس فراہم کرنے والے کو مذاق آبجیکٹ کے ساتھ اوور رائڈ کرنے کے لئے ٹیسٹ بیڈ۔ اوور رائیڈ پرووائڈر () طریقہ استعمال کیا ہے۔اس کے بعد ہم نے ایک جزو کی حقیقت کو بنانے کے لئے ٹیسٹ بیڈ۔ کریٹکومپینٹ () کا طریقہ استعمال کیا ہے اور اجزاء کی جانچ پڑتال کے ل con اجزاء فکسچر۔ایک مذاق آبجیکٹ یا مختلف عمل درآمد۔ڈویلپرز اس طریقہ کار کو ان اجزاء کی جانچ کرنے کے لئے استعمال کرسکتے ہیں جو خدمات پر انحصار کرتے ہیں اور اس بات کو یقینی بناتے ہیں کہ وہ صحیح طریقے سے برتاؤ کریں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں ٹیسٹ بیڈ۔ کریٹکومیپینٹ اور ٹیسٹ بیڈ ڈاٹ کامپیلکمپونٹس کے طریقوں میں کیا فرق ہے؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں ٹیسٹ بیڈ۔ کریٹکومپینٹ () اور ٹیسٹ بیڈ ڈاٹ کام پی ایل کامپوننٹس () کے طریقے بالترتیب جزو کے ٹیمپلیٹ کو مرتب کرنے اور جزو کے ٹیمپلیٹ کو مرتب کرنے کے لئے استعمال کیے جاتے ہیں۔یہاں testbed.createcompient () اور testbed.compilecomponents () کے درمیان اختلافات ہیں: ٹیسٹ بیڈ۔ کریٹکومیپینٹ () ٹیسٹ بیڈ۔ کریٹکومیپینٹ () طریقہ کار ایک اجزاء کی ایک مثال تخلیق کرتا ہے اور ایک اجزاء فکسچر آبجیکٹ 123۔ٹیسٹ-رنر ڈوم 1 سے متعلق عنصر۔ ٹیسٹ بیڈ۔ کریٹکومپینٹ () کا طریقہ جزو کے طرز عمل اور ڈوم تعامل کی جانچ کرنے کے لئے استعمال کیا جاتا ہے۔کمپلیکومپینٹینٹس () کا طریقہ یہ یقینی بنانے کے لئے استعمال کیا جاتا ہے کہ جزو کا ٹیمپلیٹ اور اس کی انحصار مرتب کیا جاتا ہے اس سے پہلے کہ ٹیسٹ رن 42.in کا خلاصہ ہوتا ہے۔بالترتیب اجزاء کے ٹیمپلیٹ کو حقیقت اور مرتب کریں۔ڈویلپرز جزو کے طرز عمل اور ڈوم تعامل کو جانچنے کے لئے ٹیسٹ بیڈ۔ کریٹکمپمنٹ () استعمال کرسکتے ہیں ، جبکہ ٹیسٹ بیڈ ڈاٹ کام پی ایل کامپونٹس () کو یقینی بنانے کے لئے استعمال کیا جاتا ہے کہ جزو کا ٹیمپلیٹ اور اس کی انحصار مرتب کیا جائے۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں HTTPClientTestingModule کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں HTTPClientStingModule استعمال کرنے کے ل we ، ہم ان اقدامات پر عمل کرسکتے ہیں: @کونیی/عام/HTTP/ٹیسٹنگ سے HTTPClientTestingModule اور Httptestingcontroller درآمد کریں۔ ٹیسٹنگٹنگٹنگ میڈیموڈول () ٹیسٹ ماڈیول کی تشکیل کے لئے طریقہ کار کو شامل کریں۔testbed.inject () HTTPClient سروس کو جانچنے والے جزو میں انجیکشن کرنے کا طریقہ۔ HTTPTESTINGCONTROLLER.EXPECTONE () HTTP درخواست کو روکنے اور مذاق کا جواب فراہم کرنے کے لئے طریقہ استعمال کریں۔ HTTPTESTINGCONTROLLER.VERIFE () کا طریقہ یہ یقینی بنانے کے لئے نہیں ہے کہ کوئی نہیں ہےبقایا HTTP کی درخواستیں۔ یہاں کونیی یونٹ ٹیسٹنگ میں HTTPClientTestingModule استعمال کرنے کی ایک مثال ہے: '@کونیی/کور/ٹیسٹنگ' سے درآمد {Testbed} امپورٹ {HTTPClientTestingModule ، HttptestingController} سے '@کونگول/مشترکہ/HTTP/ٹیسٹنگ' سے '{میسروائس} منجانب '، فراہم کنندگان: [میسروائس]}) ؛خدمت = testbed.inject (MyService) ؛httpmock = testbed.inject (httptestingController) ؛}) ؛atherail (() => {httpmock.verify () ؛}) ؛یہ ('اعداد و شمار کی ایک صف کو واپس کرنا چاہئے' ، () => {const mockdata = [{id: 1 ، نام: 'جان'} ، {ID: 2 ، نام: 'جین'}] ؛ سروس.گٹ ڈیٹا ().subscribe (ڈیٹا => {توقع (ڈیٹا. لمبائی)) ؛ توقع (req.request.method) .tobe ('get') ؛ Req.flush (MockData) ؛}) ؛}) ؛ مذکورہ مثال میں ، ہم نے HTTPClientStingModule اور HttptestingController استعمال کیا ہے تاکہ میں HTTP کی درخواست کا مذاق اڑائیں۔میسروائسہم نے ٹیسٹ ماڈیول کو تشکیل دینے کے لئے ٹیسٹ بی ای ڈی۔ کوکوریٹسٹنگ موڈول () کا طریقہ استعمال کیا ہے اور HTTPClientTestingModule کو شامل کیا ہے۔اس کے بعد ہم نے HTTPTESTINGCONTROLLER.EXPECTONE () کا طریقہ استعمال کیا ہے تاکہ HTTP درخواست کو روکیں اور مذاق کا جواب فراہم کیا جاسکے۔ہم نے HTTPTESTINGCONTROLLER.verify () طریقہ استعمال کیا ہے تاکہ یہ یقینی بنایا جاسکے کہ HTTP کی کوئی بقایا درخواستیں موجود نہیں ہیں۔ خلاصہ ، کونیی یونٹ کی جانچ میں HTTPCLIENTTESTINGMODULE کو استعمال کرنے کے لئے ، ہمیں HTTPClientStingModule کو درآمد کرنے کی ضرورت ہے اور HTTPTESTINGMODULE اور HTTPTESTINGCONTROLE کو شامل کرنے کی ضرورت ہے اور HTTTPTESTINGCORTER اور HTTTPTESTINGCONTROLE کو شامل کریں اور HTTTPTESTINGMODULE کو بھی شامل کریں۔HTTPClient سروس کو ٹیسٹ بی ای ڈی ڈاٹ اینجیکٹ () کے طریقہ کار کا استعمال کرتے ہوئے جانچنے والے جزو میں انجیکشن کریں ، ایچ ٹی ٹی پی کی درخواست کو روکیں اور HTTPTESTINGCONTROLLER.EXPECTONE () کے طریقہ کار کا استعمال کرتے ہوئے ایک مذاق کا جواب فراہم کریں ، اور اس بات کو یقینی بنائیں کہ HTTPTESTINGCONTRORLER.Verify کا استعمال کرتے ہوئے HTTP کی کوئی بقایا درخواستیں موجود نہیں ہیں۔() طریقہڈویلپرز ان طریقوں کو اپنے کونیی یونٹ ٹیسٹوں میں HTTP کی درخواستوں کا مذاق اڑانے کے لئے استعمال کرسکتے ہیں اور اس بات کو یقینی بناسکتے ہیں کہ ان کے اجزاء اور خدمات صحیح طریقے سے برتاؤ کریں۔"
    },
    {
        "Question": "کونیی یونٹ ٹیسٹنگ میں روٹرسٹنگ موڈول کا مقصد کیا ہے؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں روٹرسٹنگ موڈول کونیی روٹنگ کے اجزاء کو جانچنے کے لئے استعمال کیا جاتا ہے۔روٹنگ جزو ایک جزو ہے جو ایپلی کیشن نیویگیشن کو متحرک کرنے کے لئے استعمال ہوتا ہے۔یہ نیویگیشن مینو کا جزو ہوسکتا ہے ، ایک جزو ایک یا زیادہ روٹر لنک ہدایت کے ساتھ ، یا یہ ایک ایسا جزو ہوسکتا ہے جو راؤٹر ڈاٹ نیویگیٹ یا راؤٹر.نویگیٹ بائورل 1 کو کال کرتا ہے۔راؤٹرسٹنگ موڈول روٹر کا ایک مذاق مہیا کرتا ہے جو روٹنگ اجزاء کو حقیقت میں کسی مختلف صفحے 2 پر تشریف لے جانے کے بغیر استعمال کیا جاسکتا ہے۔ روٹرسٹسٹنگ موڈول کو استعمال کرنے کے ل we ، ہم ان اقدامات کی پیروی کرسکتے ہیں: @کونیی/روٹر/ٹیسٹنگ سے راؤٹرسٹنگ موڈول کو درآمد کریں۔ ٹیسٹ بیڈ کا استعمال کریں۔ٹیسٹ ماڈیول کو تشکیل دینے کے ل configuretetestingmodule () طریقہ کار کو شامل کرنے کا طریقہ اور روٹر ٹسٹنگ موڈول شامل کریں۔ ٹیسٹ بیڈ استعمال کریں۔ کریٹکومیپینٹ () ایک جزو کی حقیقت پیدا کرنے کے لئے طریقہ کار بنائیں۔ اجزاء کی تشکیل کا استعمال کریں۔DOM عناصر تک رسائی حاصل کرنے کا طریقہ۔ یہاں کونیی یونٹ کی جانچ میں روٹرسٹنگ ماڈل استعمال کرنے کی ایک مثال ہے: '@کونیی/کور/ٹیسٹنگ' سے درآمد {ٹیسٹ بیڈ} امپورٹ {روٹرسٹنگ موڈول} سے '@کونیی/روٹر/ٹیسٹنگ' ؛ امپورٹ {امپورٹ {mycompointent} from './my.component' ؛ describe('mycompiente '، () => {جزو: mycomponent: compention: concepture: اجزاء فکسچر <mycompoint> ؛ پہلے (() => {testbed.configuretestingmodule ({درآمدات: [{درآمدات: [روٹر ٹسٹنگ موڈول] ، اعلامیہ: [mycompointe]}) ؛حقیقت = testbed.createcompient (mycompointer) ؛اجزاء = حقیقتpickure.detectchanges () ؛}) ؛یہ ('بنانا چاہئے' ، () => {توقع (جزو) .tobetruthy () ؛}) ؛یہ ('ڈیش بورڈ پر تشریف لے جانا چاہئے' ، () => {const بٹن = پرکسچر۔ nativelement.queryselector ('بٹن') ؛ بٹن.کلک () ؛ توقع (اجزاء.روٹر.نویگیٹ)']) ؛}) ؛}) ؛ مذکورہ بالا مثال میں ، ہم نے مائکمپمنٹ کو جانچنے کے لئے روٹر ٹسٹنگ موڈول کا استعمال کیا ہے۔ہم نے ٹیسٹ ماڈیول کو تشکیل دینے اور روٹر ٹسٹنگ موڈول کو شامل کرنے کے لئے testbed.configuretestingmodule () کا طریقہ استعمال کیا ہے۔اس کے بعد ہم نے ایک جزو کی حقیقت کو بنانے کے لئے ٹیسٹ بیڈ۔ کریٹکومپینٹ () کا طریقہ استعمال کیا ہے۔ہم نے DOM عناصر تک رسائی کے ل comp اجزاء فکسچر. nativelement.queryselector () کا طریقہ استعمال کیا ہے۔ خلاصہ۔ڈویلپرز اس ماڈیول کو روٹنگ کے اجزاء کو جانچنے کے لئے استعمال کرسکتے ہیں بغیر کسی مختلف صفحے پر تشریف لےے بغیر۔"
    },
    {
        "Question": "آپ کونیی یونٹ ٹیسٹنگ میں jasmine.createspyobj طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی یونٹ ٹیسٹنگ میں جیسمین۔یہ طریقہ کارآمد ہے جب ہم کسی ایسے جزو یا خدمت کی جانچ کرنا چاہتے ہیں جو دوسرے اجزاء یا خدمات پر منحصر ہو۔ہم انحصار کے ل a ایک مذاق آبجیکٹ بنانے کے لئے jasmine.createspyobj () کا استعمال کرسکتے ہیں اور اس کو جزو یا خدمت کو جانچنے کے لئے مہیا کرسکتے ہیں۔ یہاں جیسمین۔ کریٹیسوبج () طریقہ استعمال کرنے کے اقدامات ہیں: جیسمین کور سے جیسمین لائبریری درآمد کریں۔ایک یا ایک سے زیادہ طریقوں کے ساتھ مذاق آبجیکٹ بنانے کے لئے جیسمین۔ کریٹیسپیو بی جے () کا طریقہ استعمال کریں۔ ٹیسٹ بیڈ کو استعمال کریں۔پرکچر۔ اجزاء کا استعمال کریں۔'@@کونیی/کور/ٹیسٹنگ' سے test ٹیسٹ بیڈ {امپورٹ {mycompident} منجانب '.آئیے میسرویسسپی: jasmine.spyobj <Myservice> ؛ پہلے (() => {myservicesspy = jasmine.createspyobj ('Myservice' ، ['getData']) ؛testbed.configuretestingmodule ({اعلامیہ: [mycompointe] ، فراہم کنندگان: [{فراہم کریں: میسروائس ، یوزولیو: میسرویسسپی}]}) ؛حقیقت = testbed.createcompient (mycompointer) ؛اجزاء = حقیقت}) ؛یہ ('getData طریقہ کو فون کرنا چاہئے' ، () => {myservicesspy.getData.and.returnvalue (([1 ، 2 ، 3])) ؛ اجزاء.انگونیٹ () ؛ توقع توقع (میسرویسیسپی ڈاٹ گیٹ ڈیٹا)) ؛}) ؛}) ؛ مذکورہ بالا مثال میں ، ہم نے JASMINE.CREATESPYOBJ () کا طریقہ استعمال کیا ہے تاکہ میسروائس انحصار کے لئے ایک مذاق آبجیکٹ تیار کیا جاسکے۔اس کے بعد ہم نے ٹیسٹ ماڈیول کو تشکیل دینے اور مذاق آبجیکٹ کو شامل کرنے کے لئے testbed.configuretestingmodule () کا طریقہ استعمال کیا ہے۔ہم نے جزو کی حقیقت کو بنانے کے لئے ٹیسٹ بی ای ڈی۔ کریٹکومپینٹ () کا طریقہ استعمال کیا ہے اور جزو کی جانچ کی جانے والی جزو تک رسائی حاصل کرنے کے لئے اجزاء فکسچر۔ہم نے MOCK آبجیکٹ کے گیٹ ڈیٹا کے طریقہ کار پر جاسوسی کے لئے اسپائیون () کا طریقہ استعمال کیا ہے۔ڈویلپرز اس طریقہ کار کو کسی ایسے اجزاء یا خدمت کی جانچ کرنے کے لئے استعمال کرسکتے ہیں جو دوسرے اجزاء یا خدمات پر منحصر ہوتا ہے۔"
    },
    {
        "Question": "کونیی میں خدمت اور فراہم کنندہ کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی میں سروس سروس ایک ایسی کلاس ہے جو صارف کے انٹرفیس 123 سے الگ پرت میں کاروباری منطق اور ڈیٹا ہیرا پھیری کے لئے استعمال ہوتی ہے۔ سروسز کو فعالیت فراہم کرنے کے لئے استعمال کیا جاتا ہے جو ایک ایپلی کیشن 123 میں متعدد اجزاء میں شیئر کیا جاسکتا ہے۔انحصار انجیکشن 123 کا استعمال کرتے ہوئے دیگر خدمات۔ کونیی میں پرووئڈرا فراہم کنندہ ایک سروس 1345 بنانے کا ایک نسخہ ہے۔ پرووائڈرز کو خدمات کی تشکیل کے لئے استعمال کیا جاتا ہے اور انہیں ایپلی کیشن 1345 میں اجزاء کے لئے دستیاب کرنے کے لئے استعمال کیا جاتا ہے۔فنکشن یا کلاس 45. پرووائڈرز کو درخواست میں مختلف سطحوں پر رجسٹر کیا جاسکتا ہے ، جیسے جزو کی سطح پر یا ماڈیول کی سطح پر 135.in سمری میں ، ایک خدمت اور کونیی میں فراہم کنندہ کے درمیان بنیادی فرق یہ ہے کہ ایک خدمت ایک کلاس ہے جو ایک کلاس ہےکاروباری منطق اور ڈیٹا میں ہیرا پھیری کو انکاسٹ کرتا ہے ، جبکہ فراہم کنندہ خدمت بنانے کا ایک نسخہ ہے۔خدمات کو فعالیت فراہم کرنے کے لئے استعمال کیا جاتا ہے جو متعدد اجزاء میں شیئر کی جاسکتی ہے ، جبکہ فراہم کنندگان کو خدمات کی تشکیل کے لئے استعمال کیا جاتا ہے اور انہیں ایپلی کیشن میں اجزاء کے لئے دستیاب بناتے ہیں۔"
    },
    {
        "Question": "آپ کونیولر میں @اوپنشنل ڈیکوریٹر کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں @آپشنل ڈیکوریٹر کا استعمال اس بات کی نشاندہی کرنے کے لئے کیا جاتا ہے کہ انحصار اختیاری ہے اور اگر یہ انحصار نہیں ڈھونڈ سکتا ہے تو کونیی کو کالعدم واپس کرنا چاہئے۔@آپشنل ڈیکوریٹر کو استعمال کرنے کے لئے یہ اقدامات ہیں: @کونیی/کور سے اختیاری ڈیکوریٹر درآمد کریں۔ کنسٹرکٹر میں انحصار کو سجانے کے لئے @آپشنل ڈیکوریٹر کا استعمال کریں۔ ٹیسٹ بیڈ کو استعمال کریں۔انحصار۔ جزو کی حقیقت کو بنانے کے لئے ٹیسٹ بیڈ۔ کریٹکومپینٹ () کا طریقہ استعمال کریں۔ اجزاء فکسچر کو استعمال کریں۔/کور/ٹیسٹنگ '؛ امپورٹ {اختیاری} سے'@کونیی/کور '؛ درآمد {میسروائس} سے'.{اگر (this.myservice) {اس کو واپس کریں۔} else {واپسی NULL ؛}}} بیان کریں ('mycompointe' ، () => {جزو: mycompointe ؛ آئیے فکسچر: اجزاء فکسچر <mycompocent> ؛ پہلے (() => {testbed.configuretestingmodule ({اعلامیہ: [mycompedent] ، فراہم کنندگان: [اسراروائس]}) ؛ فکسچر = ٹیسٹ بیڈ۔ کریٹکومپینٹ (مائکمپمنٹ) ؛ اجزاء = فکسچر ڈاٹ کامپینٹ ان اسٹینس ؛}) ؛ یہ (اگر خدمت فراہم نہیں کی گئی ہے تو 'کالعدم کو لوٹانا چاہئے' ، () => {توقع (جزو۔() ؛}) ؛ یہ (اگر خدمت فراہم کی گئی ہے تو 'گیٹ ڈیٹا کے طریقہ کار کو فون کرنا چاہئے' ، () => {کونٹ میسروائس = ٹیسٹ بیڈ ڈاٹ انجیکٹ (میسروائس) ؛ اسپائیون (میسروائس ، 'گیٹ ڈیٹا')۔1 ، 2 ، 3]) ؛ توقع (اجزاء.ڈوسومنگ ())میسروائس انحصار اختیاری ہے۔اس کے بعد ہم نے ٹیسٹ ماڈیول کو تشکیل دینے کے لئے testbed.configuretestingmodule () کا طریقہ استعمال کیا ہے اور اس میں میسروائس انحصار شامل کیا ہے۔ہم نے جزو کی حقیقت کو بنانے کے لئے ٹیسٹ بیڈ۔ کریٹکومپینٹ () کا طریقہ استعمال کیا ہے اور اجزاء فکسچر۔اگر انحصار نہیں مل سکتا ہے تو کالعدم واپس لوٹیں۔ڈویلپر اس سجاوٹ کو رن ٹائم غلطیوں کو روکنے کے لئے استعمال کرسکتے ہیں جب کچھ مواد غائب ہو یا صحیح طور پر رجسٹرڈ نہ ہو۔"
    },
    {
        "Question": "کونیی میں NGModulefactoryloader سروس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں NGModulefactoryloader سروس کونیی ایپلی کیشن میں سست بھری ہوئی ماڈیولز کو لوڈ کرنے اور انسٹیٹ کرنے کے لئے استعمال کیا جاتا ہے۔یہ کونیی فریم ورک کے انحصار انجیکشن سسٹم کا ایک کلیدی حصہ ہے اور روٹر کے ذریعہ داخلی طور پر استعمال ہوتا ہے جب ضرورت پڑنے پر سست بوجھ ماڈیولز کے لئے۔یہاں NGModulefactoryloader سروس کے بارے میں کچھ اہم نکات ہیں: NGModulefactoryLoader رن ٹائم 1 پر ایک ماڈیول فیکٹری کو متحرک طور پر لوڈ کرنے کے لئے ایک طریقہ کار مہیا کرتا ہے۔ یہ کونیی کو ماڈیول کی لوڈنگ کو موخر کرنے کی اجازت دیتا ہے جب تک کہ اس کی حقیقت میں ضرورت نہ ہو ، بجائے اس کے کہ اس کو باقی ایپلی کیشن 1 کے ساتھ پیش کریں۔NGModulefactoryloader کونیولر 1 میں سست بھری ہوئی ماڈیولز کو لوڈ کرنے اور انسٹیٹ کرنے کا ایک طریقہ فراہم کرکے کام کرتا ہے۔ NGModulefactoryLoader کو داخلی طور پر روٹر کے ذریعہ سست بوجھ کے ماڈیولز کے ذریعہ استعمال کیا جاتا ہے۔، کونیی میں NGModulefactoryloader سروس کونیی ایپلی کیشن میں سست بھری ہوئی ماڈیولز کو لوڈ کرنے اور تیز کرنے کے لئے استعمال کیا جاتا ہے۔یہ رن ٹائم کے وقت ایک ماڈیول فیکٹری کو متحرک طور پر لوڈ کرنے کے لئے ایک طریقہ کار مہیا کرتا ہے ، جو کونییولر کو ماڈیول کی لوڈنگ کو موخر کرنے کی اجازت دیتا ہے جب تک کہ اس کی حقیقت میں ضرورت نہ ہو۔ngmodulefactoryloader کو داخلی طور پر روٹر کے ذریعہ سست بوجھ کے ماڈیولز کے لئے استعمال کیا جاتا ہے جب ضرورت ہو اور کونیی فریم ورک کے انحصار انجیکشن سسٹم کا حصہ ہوتا ہے۔"
    },
    {
        "Question": "آپ کونیولر میں روٹر موڈل.فوروروٹ () طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں روٹر موڈل۔ فوروروٹ () کا طریقہ کسی ایپلی کیشن کے لئے روٹ روٹنگ ماڈیول کو تشکیل دینے کے لئے استعمال ہوتا ہے۔یہاں روٹر موڈیول استعمال کرنے کے اقدامات ہیں۔ فوروروٹ () طریقہ: @کونیی/راؤٹر سے روٹر موڈل اور راستوں کو درآمد کریں۔ روٹس سرنی کا استعمال کرتے ہوئے ایپلی کیشن کے راستوں کی وضاحت کریں۔ روٹرموڈول کا استعمال کریں۔ایپلی کیشن کے ل .۔ روٹر موڈلول۔ فورڈ () کا استعمال کریں۔'@کونیی/کور' سے {ngmodule} درآمد {routerModule ، '@کونیی/راؤٹر' سے روٹس} import درآمد {ہومومپینٹ} سے '.کے بارے میں ڈاٹ کام '؛ کونٹ روٹس: روٹس = [{راستہ:' '، جزو: گھریلو اجزاء} ، {راستہ:' کے بارے میں '، اجزاء: کے بارے میں کامیپینٹ}]@ngmodule ({درآمدات: [routermodule.forroot (روٹس)] ،برآمدات: [راؤٹر موڈل]}) مندرجہ بالا مثال کے طور پر ، ہم نے روٹرموڈول.فوروٹ () طریقہ استعمال کیا ہے تاکہ ہم درخواست کے لئے روٹ روٹنگ ماڈیول کو تشکیل دیں۔ہم نے روٹس سرنی کا استعمال کرتے ہوئے درخواست کے راستوں کی وضاحت کی ہے۔ہم نے روٹر لنک لنک ہدایت کو استعمال کیا ہے۔ڈویلپرز اس طریقہ کار کو استعمال کے ل the راستوں کی وضاحت کے لئے استعمال کرسکتے ہیں اور روٹر لنک لنک ہدایت کو راستوں کے درمیان نیویگیٹ کرنے کے لئے استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "اسکرپٹ ٹیگز میں ASYNC اور Defer صفات میں کیا فرق ہے؟",
        "Answer": "async attributethe async انتساب ایک بولین وصف ہے جس کی نشاندہی کرنے کے لئے استعمال کیا جاتا ہے کہ اسکرپٹ کو asynchronously1234 پر عمل درآمد کیا جانا چاہئے۔ جب کسی اسکرپٹ کو Async کے نام سے نشان زد کیا جاتا ہے ، تو اس کو ڈاؤن لوڈ کرتے ہی اس پر عمل درآمد کیا جائے گا ، بغیر صفحہ 1234 کی پیش کش کو بلاک کیے۔وصف اسکرپٹ کے لئے مفید ہے جو دوسرے اسکرپٹ یا DOM1234 پر انحصار نہیں کرتے ہیں۔ ASYNC انتساب اسکرپٹ 1234 پر عمل درآمد کے حکم کی ضمانت نہیں دیتا ہے۔اس صفحے کو پارسنگ 1234 ختم کرنے کے بعد۔ جب اسکرپٹ کو ڈیفر کے طور پر نشان زد کیا جاتا ہے تو ، اس کو مکمل طور پر تعمیر ہونے کے بعد اس پر عمل درآمد کیا جائے گا ، لیکن اس سے پہلے کہ ڈومکونٹلوڈ ایونٹ کو برطرف کردیا جائے۔.یہ ڈیفل وصف اسکرپٹ 1234.in کے خلاصے کے عمل کے حکم کی ضمانت دیتا ہے ، اسکرپٹ ٹیگز میں ASYNC اور ڈیفر اوصاف کا استعمال پارسر بلاک کرنے والی جاوا اسکرپٹ کو ختم کرنے اور ویب پیج کی کارکردگی کو بہتر بنانے کے لئے استعمال کیا جاتا ہے۔ASYNC وصف کا استعمال اس بات کی نشاندہی کرنے کے لئے کیا جاتا ہے کہ اسکرپٹ کو سنجیدگی سے عمل میں لایا جانا چاہئے ، جبکہ ڈیفر وصف کا استعمال اس بات کی نشاندہی کرنے کے لئے کیا جاتا ہے کہ صفحہ کی تجزیہ ختم ہونے کے بعد اسکرپٹ کو عمل میں لایا جانا چاہئے۔ASYNC وصف اسکرپٹس کے لئے مفید ہے جو دوسرے اسکرپٹ یا ڈوم پر انحصار نہیں کرتے ہیں ، جبکہ موخر التواء اسکرپٹ کے لئے مفید ہے جو دوسرے اسکرپٹ یا ڈوم پر منحصر ہے۔ڈیفر وصف اسکرپٹ پر عمل درآمد کے حکم کی ضمانت دیتا ہے ، جبکہ ASYNC وصف اسکرپٹ پر عمل درآمد کے حکم کی ضمانت نہیں دیتا ہے۔"
    },
    {
        "Question": "آپ کونیولر میں کسٹم ویلیویٹر ہدایت کس طرح بناتے ہیں؟",
        "Answer": "کونیی میں اپنی مرضی کے مطابق توثیق کرنے والے ہدایت کو بنانے کے ل we ، ہم ان مراحل کی پیروی کرسکتے ہیں: @کونیی/فارم سے توثیق کنندہ اور خلاصہ کنٹرول کلاسوں کو درآمد کریں۔ @ڈائریکٹر ڈیکوریٹر کا استعمال کرتے ہوئے ایک نئی ہدایت تیار کریں۔توثیق کی منطق کو انجام دینے کے لئے ہدایت کی کلاس میں۔ NG_Validators ٹوکن کا استعمال کرتے ہوئے ایک فراہم کنندہ کے طور پر ہدایت نامہ کی رجسٹر کریں۔ ٹیمپلیٹ سے چلنے والے یا رد عمل میں ہدایت کا استعمال کریں۔ یہاں کونیولر میں کسٹم کی توثیق کرنے والا ہدایت تیار کرنے کی ایک مثال ہے: درآمد {ہدایت {{ہدایت}'@کونیی/کور' سے import امپورٹ {ویلیویٹر ، خلاصہ کنٹرول ، این جی_والیڈیٹرز@'@کونیی/فارم' سے@@ہدایت نامہ ({سلیکٹر: '[کسٹم ویلیڈیٹر]' ، فراہم کنندگان: [{فراہم کریں: این جی_ ویلیڈیٹرز ، یو ایس ای ایکسسٹنگ: کسٹم ویلیڈیٹورڈ ڈائریکٹیکٹو ، ملٹی:سچ}]}) برآمد کلاس کسٹم ویلیڈٹورڈائریکٹو ایبٹیٹر validator {توثیق (کنٹرول: خلاصہ کنٹرول): {[کلید: سٹرنگ]: کوئی} |null {const value = control.value ؛اگر (ویلیو اینڈ اینڈ ویلیو۔ لمبائی <5) {واپسی {'کسٹم ویلیڈیٹر': سچ} ؛} واپس کالعدم ؛}} مذکورہ بالا مثال میں ، ہم نے ایک کسٹم ویلیویٹر ہدایت تیار کی ہے جس کو کسٹم ویلیڈیٹورڈائرٹیو کہتے ہیں۔ہم نے توثیق کرنے والے انٹرفیس کو نافذ کیا ہے اور توثیق کی منطق کو انجام دینے کے لئے توثیق کے طریقہ کار کی وضاحت کی ہے۔ہم نے NG_Validators ٹوکن کا استعمال کرتے ہوئے ایک فراہم کنندہ کی حیثیت سے ہدایت درج کی ہے۔اب ہم کسٹم ویلیڈیٹر ہدایت کو ٹیمپلیٹ سے چلنے والے یا رد عمل شکل میں استعمال کرسکتے ہیں۔ خلاصہ ، کونیی میں ایک کسٹم ویلیویٹر ہدایت تیار کرنے کے لئے ، ڈویلپرز ڈائریکٹر ڈیکوریٹر کا استعمال کرتے ہوئے ایک نئی ہدایت تشکیل دے سکتے ہیں ، توثیق کنندہ انٹرفیس کو نافذ کرسکتے ہیں ، توثیق کے طریقہ کار کی وضاحت کریں۔توثیق کی منطق کو انجام دیں ، NG_Validators ٹوکن کا استعمال کرتے ہوئے ایک فراہم کنندہ کی حیثیت سے ہدایت کو رجسٹر کریں ، اور ٹیمپلیٹ سے چلنے والے یا رد عمل کی شکل میں ہدایت کا استعمال کریں۔"
    },
    {
        "Question": "کونیی میں فارم بلڈر سروس کا مقصد کیا ہے؟",
        "Answer": "کونیی میں فارم بلڈر سروس کونیی ایپلی کیشنز میں رد عمل کی شکلوں کی تخلیق کو آسان بنانے کے لئے استعمال کی جاتی ہے۔فارم بلڈر سروس کے بارے میں کچھ کلیدی نکات یہ ہیں: فارم بلڈر مصنوعی شوگر مہیا کرتا ہے جو فارم کنٹرول ، فارمگروپ ، یا فارمرری 1 کی مثال پیدا کرتا ہے۔ فارم بلڈر فارم کنٹرول ، فارم گروپوں ، اور فارم کو بنانے کے لئے ایک سادہ فنکشنل API کا استعمال کرتے ہوئے رد عمل کی شکلیں بنانے میں مدد کرتا ہے۔arrays2. فارم بلڈر کے طریقے گروپ () ، کنٹرول () ، اور سرنی () ہیں جو بالترتیب فارم گروپ ، فارم کنٹرول ، اور فارم ایری کو واپس کرتے ہیں۔ فارم بلڈر کا استعمال کرتے ہوئے ، ڈویلپرز فارم 32 بنانے کے لئے کسی طبقے کے آبجیکٹ یا کسی طبقے کی اشیاء کو براہ راست پاس کرسکتے ہیں۔فارم بلڈر سروس کا استعمال کونیی ایپلی کیشنز 32 میں کم سے کم کوڈ کے ساتھ ایک بڑا رد عمل شکل بنانے کے لئے کیا جاتا ہے۔ خلاصہ میں ، کونیی میں فارم بلڈر سروس کونیی ایپلی کیشنز میں رد عمل کی شکلوں کی تخلیق کو آسان بنانے کے لئے استعمال کی جاتی ہے۔ڈویلپر فارم بلڈر کا استعمال فارم کنٹرول ، فارم گروپس ، اور فارم اریوں کو بنانے کے لئے ایک سادہ فنکشنل API کا استعمال کرتے ہوئے رد عمل کی شکلیں بنانے کے لئے کرسکتے ہیں۔فارم بلڈر کے طریقے گروپ () ، کنٹرول () ، اور سرنی () ہیں جو بالترتیب فارم گروپ ، فارمونٹرول اور فارمری کو لوٹتے ہیں۔فارم بلڈر کا استعمال کرتے ہوئے ، ڈویلپرز کم سے کم کوڈ کے ساتھ فارم بنانے کے لئے کسی کلاس کے آبجیکٹ یا اشیاء کو براہ راست پاس کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی میں این جی مشمولات پروجیکشن کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں NG-مشمول پروجیکشن HTML مواد کو والدین کے جزو سے بچوں کے جزو میں منتقل کرنے کا ایک طریقہ ہے۔چائلڈ جزو این جی-مشمول عنصر 12 کا استعمال کرتے ہوئے کسی نامزد جگہ پر ٹیمپلیٹ کو ظاہر کرے گا۔این جی مشمہ ہمیں سلیکٹر وصف کا استعمال کرتے ہوئے متعدد سلاٹ بنانے کی بھی اجازت دیتا ہے۔والدین ہر سلاٹ 1 پر مختلف مواد بھیج سکتے ہیں۔کونیی میں NG-مشترکہ پروجیکشن کو استعمال کرنے کے اقدامات یہ ہیں: بچوں کے اجزاء میں ، ایک NG-content عنصر شامل کریں جہاں آپ چاہتے ہیں کہ پیش گوئی شدہ مواد ظاہر ہو۔ NG-مشترکہ عنصر سے ایک سلیکٹر وصف شامل کریں۔سلیکٹر وصف کو ایک سے زیادہ سلاٹ بنانے کے لئے استعمال کیا جاسکتا ہے۔ والدین کے جزو میں ، وہ مواد شامل کریں جس کو آپ بچوں کے جزو میں پیش کرنا چاہتے ہیں۔ والدین کے جزو کے ٹیمپلیٹ میں بچے کے جزو کو استعمال کریں اور اس مواد کو این جی کے مشمول عنصر میں شامل کریںسلیکٹر وصف. ہر ایک مثال ہے جو کونیی میں NG-content پروجیکشن استعمال کرنے کی ایک مثال ہے:div> <h2> چائلڈ جز </h2> <ng-content> </ng-content> </div> `}) کلاس چائلڈکمپرینٹ {{} // parent.compoint.tsimport {اجزاء@@کونیولر/کور سے ''؛ compentent ({سلیکٹر:' ایپ پیرنٹ '، ٹیمپلیٹ: `<div> <h2> والدین کا جزو </h2> <pp-child> <p> مشمولات کو بچوں کے جزو میں پیش کیا جائے </p>/ایپ-چلڈ> </div> `}) برآمد کلاس پیرنٹکمپینٹ {{مذکورہ بالا مثال میں ، ہم نے والدین کے جزو سے لے کر بچے کے جزو تک مواد کو منتقل کرنے کے لئے این جی-مواد پروجیکشن کا استعمال کیا ہے۔ہم نے بچوں کے جزو میں ایک این جی مشمول عنصر شامل کیا ہے جہاں ہم چاہتے ہیں کہ پیش گوئی کا مواد ظاہر ہو۔ہم نے والدین کے جزو کے ٹیمپلیٹ میں بچوں کے جزو کا استعمال کیا ہے اور <pp-child> سلیکٹر ڈاٹ کام کا استعمال کرتے ہوئے NG-content عنصر میں مواد شامل کیا ہے ، کونیی میں NG-content پروجیکشن والدین سے HTML مواد کو منتقل کرنے کا ایک طریقہ ہے۔کسی بچے کے جزو کا جزو۔ڈویلپرز این جی مشترکہ عنصر کا استعمال بچوں کے جزو کے ٹیمپلیٹ میں کسی جگہ کو نامزد کرنے اور سلیکٹر وصف کا استعمال کرتے ہوئے ایک سے زیادہ سلاٹ تشکیل دے سکتے ہیں۔والدین ہر سلاٹ پر مختلف مواد بھیج سکتے ہیں"
    },
    {
        "Question": "کونیی میں رد عمل کی شکلوں اور ٹیمپلیٹ سے چلنے والی شکلوں میں کیا فرق ہے؟",
        "Answer": "تلاش کے نتائج کی بنیاد پر کونیی میں رد عمل کی شکلوں اور ٹیمپلیٹ سے چلنے والی شکلوں کے مابین کلیدی اختلافات یہ ہیں: ٹیمپلیٹ سے چلنے والی فارم اسٹیمپلیٹ سے چلنے والی شکلیں \"فارمسموڈول\" ماڈیول کا استعمال کرتی ہیں ، جبکہ رد عمل کی شکلیں \"ری ایکٹیوفارمسموموڈول\" ماڈیول 1234.Template پر مبنی ہوتی ہیں۔متناسب شکلیں فطرت میں متضاد ہیں ، جبکہ رد عمل کی شکلیں زیادہ تر ہم وقت سازی کی شکلیں ہیں۔.مپلیٹ سے چلنے والی شکلیں استعمال کرنے میں آسان ہیں اور کم کوڈ بنانے کی ضرورت ہوتی ہیں ، لیکن وہ رد عمل کے فارم 634 کے مقابلے میں کم لچک اور کنٹرول پیش کرتے ہیں۔اجزاء کی کلاس کی سطح ، جبکہ ٹیمپلیٹ سے چلنے والی شکلیں صرف ٹیمپلیٹ ڈائریکٹیوز 1234 پر مبنی ہیں۔ ری ایکٹیو فارم نئی ایپلی کیشنز کے لئے بہتر ڈیفالٹ انتخاب ہیں ، کیونکہ وہ 234 استعمال کرنے میں زیادہ طاقتور اور آسان ہیں۔ٹیمپلیٹس کلینر 23. ری ایکٹیو فارم عام طور پر استعمال کرنا آسان ہے اور اس کے مشاہدہ کرنے والے پر مبنی API23 کے ذریعہ بہتر اعلی درجے کے استعمال کے معاملات کی تائید کرنا آسان ہے۔ ری ایکٹیو فارمز کو زیادہ کوڈ کی ضرورت ہوتی ہے اور وہ ٹیمپلیٹ سے چلنے والے فارم 634.1 سمری ، رد عمل کی شکلوں کے مقابلے میں زیادہ پیچیدہ ہیں۔اور ٹیمپلیٹ سے چلنے والی شکلیں دو تکنیک ہیں جو کونیی کے ذریعہ فارم بنانے کے لئے استعمال ہوتی ہیں۔ٹیمپلیٹ سے چلنے والی شکلیں \"فارمس موڈول\" ماڈیول پر مبنی ہیں اور استعمال کرنا آسان ہیں لیکن کم لچک اور کنٹرول پیش کرتے ہیں۔رد عمل کی شکلیں \"ری ایکٹیوفارمسموڈول\" ماڈیول پر مبنی ہیں اور استعمال کرنے میں زیادہ طاقتور اور آسان ہیں لیکن زیادہ کوڈ کی ضرورت ہوتی ہے اور استعمال کرنے اور استعمال کرنے میں زیادہ پیچیدہ ہوتی ہے۔"
    },
    {
        "Question": "آپ کونیی رد عمل کی شکلوں میں فارمکنٹرول نام کی ہدایت کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی رد عمل والی شکلوں میں فارمکنٹرول نام کی ہدایت کا استعمال فارم گروپ میں متعین فارم کنٹرول کو کسی فرد ان پٹ عنصر 123 کے ساتھ باندھنے کے لئے کیا جاتا ہے۔یہاں کونیولر میں رد عمل کی شکلوں اور ٹیمپلیٹ سے چلنے والی شکلوں کے مابین کلیدی اختلافات ہیں: ٹیمپلیٹ سے چلنے والی فارم اسٹیمپلیٹ سے چلنے والی شکلیں \"فارمس موڈول\" ماڈیول 1234. ایک ٹیمپلیٹ سے چلنے والے نقطہ نظر میں استعمال کرتی ہیں ، زیادہ تر منطق ٹیمپلیٹ 1234.Template سے چلتی ہے۔-534343434343434343434343430. کو کم کوڈ کی ضرورت ہوتی ہے۔جزو کی کلاس 1234. ری ایکٹیو فارمز ٹیمپلیٹ سے توثیق کی منطق کو ہٹا دیتے ہیں ، ٹیمپلیٹس کو صاف ستھرا رکھتے ہوئے۔ٹیمپلیٹ سے چلنے والے فارمز 534. کے مقابلے میں ترتیب دیں اور استعمال کریں۔ خلاصہ میں ، کونیی رد عمل کی شکلوں میں فارم کنٹرول نام کی ہدایت نامہ کسی فرد ان پٹ عنصر کے لئے فارم گروپ میں بیان کردہ فارم کنٹرول کو باندھنے کے لئے استعمال کیا جاتا ہے۔رد عمل کی شکلوں کو جزوی کلاس کی سطح پر پروگرام کے ساتھ بیان کیا جاتا ہے ، جبکہ ٹیمپلیٹ سے چلنے والی شکلیں صرف ٹیمپلیٹ ہدایت پر مبنی ہوتی ہیں۔رد عمل کی شکلیں زیادہ طاقتور اور استعمال کرنے میں آسان ہیں لیکن زیادہ کوڈ کی ضرورت ہوتی ہے اور ترتیب دینے اور استعمال کرنے میں زیادہ پیچیدہ ہوتی ہے۔ٹیمپلیٹ سے چلنے والی شکلیں استعمال کرنا آسان ہیں لیکن کم لچک اور کنٹرول پیش کرتے ہیں۔"
    },
    {
        "Question": "کونیی رد عمل کی شکلوں میں فارم گروپ کلاس کا مقصد کیا ہے؟",
        "Answer": "کونیی رد عمل کی شکلوں میں فارم گروپ کلاس کا استعمال کسی ایک شے میں مل کر فارم کے کنٹرول کو گروپ کرنے کے لئے کیا جاتا ہے۔فارم گروپ گروپ کے بارے میں کچھ اہم نکات یہ ہیں: فارم گروپ کلاس سے متعلقہ فارم عناصر 123 کو منظم کرنے اور ان کا نظم کرنے کے لئے استعمال کیا جاتا ہے۔ فارم گروپ گروپ فارم کنٹرولز کا ایک مجموعہ ہے جو فارم کنٹرول مثال کے گروپ کی قدر اور درستگی کی حالت کو ٹریک کرتا ہے۔ فارم گروپ گروپ کلاس۔کونیی شکلوں کے بلڈنگ بلاکس میں سے ایک ہے ، اس کے ساتھ ساتھ فارمونٹرول اور فارمرری 23 کے ساتھ۔ فارم گروپ گروپ کی کلاس 143 کی سطح پر پروگرام کی وضاحت کی گئی ہے۔کلاس کو ایک ہی آبجیکٹ 123 میں ایک ساتھ مل کر فارم کے کنٹرول کو گروپ کرنے کے لئے استعمال کیا جاتا ہے۔ خلاصہ میں ، کونیی رد عمل کی شکلوں میں فارم گروپ گروپ کا استعمال کسی ایک شے میں مل کر گروپ سے متعلق فارم کنٹرول کو گروپ کرنے کے لئے کیا جاتا ہے۔ڈویلپرز فارم گروپ کلاس سے متعلقہ فارم عناصر کو منظم کرنے اور ان کا انتظام کرنے ، فارم کنٹرول مثالوں کے ایک گروپ کی قدر اور درستگی کی حالت کو ٹریک کرنے اور کم سے کم کوڈ کے ساتھ ایک بڑا رد عمل شکل تشکیل دینے کے لئے استعمال کرسکتے ہیں۔فارم گروپ کلاس کونیی شکلوں کے بلڈنگ بلاکس میں سے ایک ہے ، اس کے ساتھ ساتھ فارمونٹرول اور فارمرری۔"
    },
    {
        "Question": "آپ توثیق کاروں کو کس طرح استعمال کرتے ہیں۔ کونیی رد عمل کی شکلوں میں تقویت یافتہ طریقہ؟",
        "Answer": "کونیولر رد عمل کی شکلوں میں توثیق کرنے والوں کو استعمال کرنے کے ل we ، ہم ان اقدامات پر عمل پیرا ہوسکتے ہیں: @کونیی/فارم سے ویلیویٹرز کلاس کو درآمد کرسکتے ہیں۔ جزو کی کلاس میں ایک فارم گروپ آبجیکٹ کی وضاحت کریں۔ فارمگروپ آبجیکٹ کے اندر ایک فارمکنٹرول آبجیکٹ کی وضاحت کریں اور توثیق کرنے والوں کو مرتب کریں۔درست طریقہ کار کے طور پر۔کونیی رد عمل کی شکلیں: '@کونیی/کور' سے درآمد {اجزاء import درآمد {فارم گروپ ، فارمکنٹرول ، توثیق کنندگان@'@کونیی/فارم' سے@@جزو ({سلیکٹر: 'ایپ-فارم' ، ٹیمپلیٹ: `<فارم [formgroup] = \"فارم\"> <لیبل> نام: <ان پٹ کی قسم = \"ٹیکسٹ\" فارمکونٹرول نام = \"نام\"> </لیبل> <div *ngif = \"form.get ('نام')۔ غلط && (form.get('نام')/div> </form> `}) برآمد کلاس فارمکمپینٹ {فارم = نیا فارم گروپ ({نام: نیا فارمکنٹرول ('' '، جائز)})} مذکورہ بالا مثال میں ، ہم نے جزو میں ایک فارم گروپ آبجیکٹ کی وضاحت کی ہے۔کلاس اور فارم گروپ گروپ آبجیکٹ کے اندر ایک فارمکنٹرول آبجیکٹ کی تعریف کی۔ہم نے توثیق کرنے والوں کو ترتیب دیا ہے۔ہم نے فارمکنٹرول نامی ہدایت کا استعمال کرتے ہوئے ٹیمپلیٹ میں فارمکنٹرول آبجیکٹ کا پابند کیا ہے۔ہم نے *NGIF ہدایت نامہ کا استعمال کرتے ہوئے ٹیمپلیٹ میں توثیق کی غلطی کا پیغام ظاہر کیا ہے۔اور ویلڈیٹرز کو سیٹ کریں۔ قابل تقاضا کرنے والا طریقہ کار میں سے ایک کے طور پر ، فارمکنٹرول نامی ہدایت کا استعمال کرتے ہوئے ٹیمپلیٹ میں فارمکنٹرول آبجیکٹ کو ٹیمپلیٹ میں باندھ دیں ، اور *NGIF ہدایت نامہ کا استعمال کرتے ہوئے ٹیمپلیٹ میں توثیق کی غلطی کا پیغام ڈسپلے کریں۔"
    },
    {
        "Question": "کونیی رد عمل کی شکلوں میں پیچ ویلیو اور سیٹ ویلیو طریقوں میں کیا فرق ہے؟",
        "Answer": "کونیی رد عمل کی شکلوں میں سیٹ ویلیو اور پیچ ویلیو طریقوں کا استعمال فارم کنٹرول یا فارم کنٹرول کے گروپ کی قدر کو اپ ڈیٹ کرنے کے لئے کیا جاتا ہے۔دونوں طریقوں کے مابین کلیدی اختلافات یہ ہیں: سیٹ وولویتھ سیٹ ویلیو کا طریقہ فارم گروپ یا فارمکنٹرول آبجیکٹ 1234 میں تمام فارم کنٹرولز کی قدر طے کرنے کے لئے استعمال کیا جاتا ہے۔ سیٹ ویلیو کے طریقہ کار کی ضرورت ہوتی ہے کہ فارم گروپ یا فارمکنٹرول آبجیکٹ میں تمام فارم کنٹرولز کو طریقہ 1234 میں پاس کیا جائے۔اگر سیٹ ویلیو کے طریقہ کار میں کسی بھی فارم پر قابو نہیں پایا جاتا ہے تو ، یہ ایک غلطی 34 پھینک دے گا۔ سیٹ ویلیو کا طریقہ پورے فارم کنٹرول ٹری کو دوبارہ ترتیب دیتا ہے ، جس میں بچوں کے فارم کے تمام گروپس شامل ہیں اور فارم arays34۔فارم گروپ یا فارمکنٹرول آبجیکٹ 1234 میں فارم کنٹرولز۔ پیچ ویلیو کے طریقہ کار کی ضرورت نہیں ہے کہ فارم گروپ یا فارمکنٹرول آبجیکٹ میں تمام فارم کنٹرولز کو طریقہ 1234 میں منتقل کیا جائے۔ اگر کوئی فارم کنٹرول پیچ ویلیو کے طریقہ کار میں پاس نہیں ہوتا ہے تو ، یہ غلطی 34 نہیں پھینکے گا۔پیچ ویلیو کا طریقہ صرف مخصوص فارم کنٹرول کو اپ ڈیٹ کرتا ہے اور پورے فارم کو کنٹرول ٹری 34.مری میں دوبارہ ترتیب نہیں دیتا ہے۔سیٹ ویلیو کا طریقہ فارم گروپ یا فارمکنٹرول آبجیکٹ میں تمام فارم کنٹرولز کی قدر طے کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ پیچ ویلیو کا طریقہ ایک فارم گروپ یا فارمکنٹرول آبجیکٹ میں ایک یا زیادہ فارم کنٹرولز کی قیمت کو طے کرنے کے لئے استعمال ہوتا ہے۔سیٹ ویلیو کے طریقہ کار کا تقاضا ہے کہ فارم گروپ یا فارمکنٹرول آبجیکٹ میں تمام فارم کنٹرولز کو طریقہ کار میں منظور کیا جائے ، جبکہ پیچ ویلیو کے طریقہ کار میں ضرورت نہیں ہے کہ تمام فارم کنٹرول پاس کیے جائیں۔سیٹ ویلیو کا طریقہ پورے فارم کنٹرول ٹری کو دوبارہ ترتیب دیتا ہے ، جبکہ پیچ ویلیو طریقہ صرف مخصوص فارم کنٹرول کو اپ ڈیٹ کرتا ہے۔"
    },
    {
        "Question": "آپ کونیی رد عمل کی شکلوں میں فارم بلڈر۔ گروپ () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی رد عمل کی شکلوں میں formbuilder.group () کے طریقہ کار کو استعمال کرنے کے ل we ، ہم ان اقدامات پر عمل کرسکتے ہیں: فارم بلڈر کلاس کو @کونیی/فارم سے درآمد کریں۔ایک نیا فارم گروپ آبجیکٹ بنائیں۔ گروپ () کے طریقہ کار کی دلیل میں فارم کے کنٹرول اور ان کی ابتدائی اقدار کی کلیدی قیمت کے جوڑے کے طور پر بیان کریں۔ فارم گروپ میں فارم گروپ کو ان پٹ عناصر کے ساتھ پابند کرنے کے لئے فارم گروپ گروپ کا استعمال کریں۔ اس کی ایک مثال ہے۔کونیی رد عمل کی شکلوں میں formbuilder.group () طریقہ کا استعمال کرتے ہوئے: '@کونیی/کور' سے درآمد {اجزا amport درآمد کریں {فارم بلڈر ، فارم گروپ ، ویلیولیٹرز@@کونیی/فارم 'سے@@جزو ({سلیکٹر:' ایپ-فارم '، ٹیمپلیٹ: `<فارم [فارم گروپ] =\" فارم \"> <لیبل> نام: <ان پٹ کی قسم =\" متن \"فارمکنٹرول نام =\" نام \"> </لیبل> <ڈیو *ngif =\" form.get (' نام') .invalid && (فارم.یٹ (' نام ')> نام کی ضرورت ہے </div> </div> </ فارم> `}) برآمدی کلاس فارم کامپینٹ {فارم: فارم گروپ ؛کنسٹرکٹر (نجی فارم بلڈر: فارم بلڈر) {this.form = this.formbuilder.group ({نام: ['' '، validers.required]}) ؛}} مذکورہ بالا مثال میں ، ہم نے @کونیی/فارم سے فارم بلڈر کلاس درآمد کیا ہے اور فارم بلڈر سروس کو جزو کنسٹرکٹر میں انجکشن لگایا ہے۔ہم نے فارم بلڈر سروس کے گروپ () کے طریقہ کار کو ایک نیا فارم گروپ گروپ بنانے کے لئے استعمال کیا ہے اور گروپ () کے طریقہ کار کی دلیل میں فارم کنٹرول اور ان کی ابتدائی اقدار کو کلیدی قدر کے جوڑے کے طور پر بیان کیا ہے۔ہم نے جزو ٹیمپلیٹ میں فارم گروپ کے آبجیکٹ کا استعمال فارم کنٹرول کو ان پٹ عناصر پر پابند کرنے کے لئے کیا ہے۔جزو کنسٹرکٹر میں خدمت ، فارم بلڈر سروس کے گروپ () کا طریقہ استعمال کریں تاکہ ایک نیا فارم گروپ گروپ بنایا جاسکے ، فارم کنٹرول اور ان کی ابتدائی اقدار کو گروپ () کے طریقہ کار کی دلیل میں کلیدی قیمت کے جوڑے کے طور پر بیان کریں ، اور فارم گروپ کو استعمال کریں۔اجزاء کے ٹیمپلیٹ میں آبجیکٹ فارم کنٹرول کو ان پٹ عناصر پر پابند کرنے کے لئے۔"
    },
    {
        "Question": "کونیی رد عمل کی شکلوں میں خلاصہ کنٹرول کلاس کا مقصد کیا ہے؟",
        "Answer": "کونیی رد عمل کی شکلوں میں خلاصہ کنٹرول کلاس زیادہ تر فارم کنٹرول 123 کے لئے ایک بیس کلاس ہے۔خلاصہ کنٹرول کلاس کے بارے میں کچھ اہم نکات یہ ہیں: خلاصہ کنٹرول کلاس فارم کنٹرول ، فارم گروپ ، اور فارماری کلاس 123 کے لئے ایک بیس کلاس ہے۔کلاس کو فارم کنٹرول اور فارم گروپ کلاسز 2 کی مثال بنانے کے لئے استعمال کیا جاتا ہے۔ خلاصہ کنٹرول کلاس فارم کنٹرول 5 کے ایک مجموعہ کے انتظام کے لئے ذمہ دار ہے۔دوسرے خلاصہ طریقے 6.مری میں ، کونیی رد عمل کی شکلوں میں خلاصہ کنٹرول کلاس زیادہ تر فارم کنٹرولوں کے لئے ایک بیس کلاس ہے۔ڈویلپرز خلاصہ کنٹرول کلاس کو فارم کنٹرول اور فارم گروپ کلاسوں کی مثال بنانے ، فارم کنٹرولز کا ایک مجموعہ کا نظم و نسق ، اور فارم کی حالت کو کنٹرول کرنے کے لئے استعمال کرسکتے ہیں اور ان پٹ کی توثیق کو سنبھالتے وقت پیغامات کو کب ظاہر کرنا ہے اس کا تعین کرسکتے ہیں۔خلاصہ کنٹرول کلاس کونیی رد عمل کی ایک بنیادی عمارت ہے۔"
    },
    {
        "Question": "کونیولر میں کسٹم فارم کنٹرول بنانے کے لئے آپ کنٹرول ویلیو ایکسیسر انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں کسٹم فارم کنٹرول بنانے کے ل develop ، ڈویلپرز کنٹرول ویلیو ایکسیسر انٹرفیس استعمال کرسکتے ہیں۔کونیی میں کسٹم فارم کنٹرول بنانے کے لئے کنٹرول ویلیو ای ای سی سی ایس او آر انٹرفیس کو استعمال کرنے کے لئے یہ اقدامات ہیں: @کونیی/فارم سے کنٹرول ویلیو ای ای سی ایس سی آر انٹرفیس کو درآمد کریں۔ کسٹم فارم کنٹرول کے لئے ایک نیا جزو تیار کریں۔، اجزاء کی کلاس میں رجسٹرون چینج ، رجسٹریٹوچڈ ، اور سیٹ ڈیسبلڈ اسٹیٹ کے طریقے۔ این جی_ ویلیو_اکیسسر ٹوکن کا استعمال کرتے ہوئے جزو کو ویلیو ایکسیسر کے طور پر رجسٹر کریں۔ ٹیمپلیٹ سے چلنے والے یا دوبارہ فعال فارم میں کسٹم فارم کنٹرول کا استعمال کریں۔ یہاں ایک مثال ہے کہ تخلیق کے ل control کنٹرول ویلیو ای ای سی سی ای ایس سیور انٹرفیس کو استعمال کرنے کی ایک مثال ہے۔کونیولر میں ایک کسٹم فارم کنٹرول: درآمد {اجزاء ، فارورڈ ریف 'سے'@کونیی/کور 'سے import درآمد {کنٹرول ویلیو ای اے سی سی ای ایس سیور ، این جی_ ویلیو_اکیسسر' سے '@کونیی/فارمز' سے@@اجزاء ({سلیکٹر: 'ایپ کسٹوم ان پٹ' ، ٹیمپلیٹ.`، فراہم کنندگان: [{فراہم کریں: ng_value_accessor ، useexisting: فارورڈ ریف (() => کسٹم ان پٹ کامپینٹ) ، ملٹی: ٹرو}]}) برآمدی کلاس کسٹم ان پٹکمپریشن کنٹرول ویلیو ای ای سی سی ای ایس سیور {ویلیو: سٹرنگ ؛غیر فعال: بولین ؛آن چینج: (ویلیو: سٹرنگ) => باطل ؛ontouched: () => باطل ؛WriteValue (ویلیو: سٹرنگ): باطل {this.value = value ؛} رجسٹرون چینج (آن چینج: (ویلیو: سٹرنگ) => باطل): باطل {this.onchange = onChange ؛} رجسٹرونچڈ (ontouched: () => باطل): باطل {this.ontouch = ontouched ؛} سیٹ ڈیسبلڈ اسٹیٹ (غیر فعال: بولین): باطل {this.disabled = غیر فعال ؛}} مذکورہ بالا مثال میں ، ہم نے کسٹم فارم کنٹرول کے لئے کسٹم ان پٹکمپینٹ نامی ایک نیا جزو تشکیل دیا ہے۔ہم نے اجزاء کی کلاس میں کنٹرول ویلیو ایکسیسر انٹرفیس کو نافذ کیا ہے اور رائٹ ویلیو ، رجسٹرون چینج ، رجسٹرونچچڈ ، اور سیٹ ڈیسبلڈ اسٹیٹ طریقوں کی وضاحت کی ہے۔ہم نے NG_VALUE_ACCESSOR ٹوکن کا استعمال کرتے ہوئے ویلیو ایکسیسر کے طور پر جز کو رجسٹر کیا ہے۔اب ہم کسٹم ان پٹ کام کو ٹیمپلیٹ سے چلنے والے یا رد عمل کی شکل میں استعمال کرسکتے ہیں۔ خلاصہ میں ، کونییولر میں کسٹم فارم کنٹرول بنانے کے لئے کنٹرول ویلیو ای ای سی ایس سی آر انٹرفیس کو استعمال کرنے کے لئے ، ڈویلپرز کسٹم فارم کنٹرول کے لئے ایک نیا جزو تشکیل دے سکتے ہیں ، اس میں کنٹرول ویلیو ایکسیسر انٹرفیس کو نافذ کرسکتے ہیں۔اجزاء کی کلاس ، اجزاء کلاس میں رائٹ ویلیو ، رجسٹرون چینج ، رجسٹریٹوچڈ ، اور سیٹ ڈیسبلڈ اسٹیٹ کے طریقوں کی وضاحت کریں ، این جی_ ویلیو_ایسیسر ٹوکن کا استعمال کرتے ہوئے جزو کو ویلیو ایکسیسر کے طور پر رجسٹر کریں ، اور ٹیمپلیٹ سے چلنے والے یا دوبارہ رد عمل میں کسٹم فارم کنٹرول کا استعمال کریں۔"
    },
    {
        "Question": "کونیی میں @ویوچائڈ اور @کنٹینٹچلڈ سجاوٹوں میں کیا فرق ہے؟",
        "Answer": "کونیی میں @ویوچائلڈ اور @کنٹینٹائڈ سجاوٹ کو والدین کے جزو سے بچوں کے اجزاء یا عناصر تک رسائی حاصل کرنے کے لئے استعمال کیا جاتا ہے۔یہاں دو ڈیکوریٹرز کے مابین کلیدی اختلافات ہیں: @ویو چائلڈ کو @ویوچائڈ ڈیکوریٹر کا استعمال کسی ایک ہی بچے کے جزو یا عنصر تک رسائی حاصل کرنے کے لئے ہوتا ہے۔ویوچائڈ ڈیکوریٹر ویو ڈوم 5 میں عناصر کی تلاش کرتا ہے۔ @ویوچائڈ ڈیکوریٹر کو کسی بچے کے جزو یا عنصر تک رسائی حاصل کرنے کے لئے استعمال کیا جاتا ہے جس کی براہ راست جز HTML فائل 35 میں کی جاتی ہے۔مواد DOM12345.the @contentchild سجاوٹ صرف ہدایت یا اجزاء تک رسائی حاصل کرنے کے لئے استعمال کیا جاسکتا ہے جن کی پیش گوئی ٹیمپلیٹ 145 میں کی جاتی ہے۔ٹیمپلیٹ 145.in سمری میں پیش کیا گیا ہے ، کونیی میں @ویوچائلڈ اور @کنٹینٹائڈ سجاوٹ کاروں کو والدین کے جزو سے بچوں کے اجزاء یا عناصر تک رسائی حاصل کرنے کے لئے استعمال کیا جاتا ہے۔@ویوچلڈ ڈیکوریٹر کو ویو ڈوم سے کسی ایک ہی بچے کے جزو یا عنصر تک رسائی حاصل کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ @کونٹینٹچلڈ ڈیکوریٹر مواد ڈوم سے کسی ایک ہی بچے کے جزو یا عنصر تک رسائی کے لئے استعمال ہوتا ہے۔@ویوچلڈ ڈیکوریٹر کو کسی بھی ڈوم عنصر ، جزو ، یا ہدایت تک رسائی حاصل کرنے کے لئے استعمال کیا جاسکتا ہے ، جبکہ @کونٹینٹچلڈ ڈیکوریٹر کو صرف ہدایت یا اجزاء تک رسائی حاصل کرنے کے لئے استعمال کیا جاسکتا ہے جو ٹیمپلیٹ میں پیش کی جاتی ہیں۔"
    },
    {
        "Question": "کونیی سست لوڈنگ میں آپ روٹر موڈل.فروڈولڈ () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی میں روٹر موڈل.فورائلڈ () کا طریقہ سست لوڈنگ فیچر ماڈیولز کے لئے استعمال ہوتا ہے۔کونیی کاہل لوڈنگ میں روٹر موڈلول۔ فورچائلڈ () طریقہ استعمال کرنے کے اقدامات یہ ہیں: سست بھری ہوئی ماڈیول کے لئے ایک نیا فیچر ماڈیول بنائیں۔فیچر ماڈیول میں کونیی/روٹر۔ روٹر موڈل۔ فورچڈ () کا طریقہ فیچر ماڈیول کے لئے نیا روٹر ماڈیول بنانے کا طریقہ۔ روٹر ماڈیول کے طریقہ کار میں سست بھری ہوئی ماڈیول کے راستوں کی وضاحت کریں۔فیچر ماڈیول سے۔ یہاں کونیولر سست لوڈنگ میں روٹر موڈل۔ فورچائلڈ () کا طریقہ استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {ngmodule} '@کونیی/کور' ؛'' ./lazy.compointe '؛ کونسٹ روٹس: روٹس = [{راستہ:' '، اجزاء: لازکیمپینٹ}]@ngmodule ({درآمدات: [routermodule.forchild)] ، برآمدات: [روٹرموڈول]: [روٹرموڈول]}) برآمد کلاس لازیروٹنگ موڈول {{مذکورہ بالا مثال میں ، ہم نے لازیموڈول کے نام سے ایک نیا فیچر ماڈیول تشکیل دیا ہے اور لازیروٹنگ موڈول میں سست بھری ہوئی ماڈیول کے راستوں کی وضاحت کی ہے۔ہم نے فیچر ماڈیول میں @کونیی/روٹر سے روٹر موڈل اور روٹس کی کلاسیں درآمد کیں اور فیچر ماڈیول کے لئے نیا روٹر ماڈیول بنانے کے لئے روٹر موڈل۔ فورچلڈ () طریقہ استعمال کیا ہے۔ہم نے راؤٹر ماڈیول کے فورسائڈ () طریقہ کار میں سست بھری ہوئی ماڈیول کے راستوں کی وضاحت کی ہے اور روٹر ماڈیول کو فیچر ماڈیول سے برآمد کیا ہے۔سست بھری ہوئی ماڈیول کے لئے ایک نیا فیچر ماڈیول ، فیچر ماڈیول میں سست بھری ہوئی ماڈیول کے راستوں کی وضاحت کریں ، فیچر ماڈیول میں @کونیی/روٹر سے روٹر موڈل اور روٹس کلاس درآمد کریں ، Rottermodule.fordule () کا طریقہ A تخلیق کرنے کے لئے استعمال کریں۔فیچر ماڈیول کے ل New نیا روٹر ماڈیول ، روٹر ماڈیول کے فورڈ () طریقہ کار میں سست بھری ہوئی ماڈیول کے راستوں کی وضاحت کریں ، اور روٹر ماڈیول کو فیچر ماڈیول سے برآمد کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں ایکٹیویٹ روٹ انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ایکٹیویٹ روٹ انٹرفیس کا استعمال کسی جزو سے وابستہ روٹ سے متعلق معلومات فراہم کرنے کے لئے کیا جاتا ہے جو آؤٹ لیٹ 123456 میں بھری ہوئی ہے۔ایکٹیویٹیٹ راؤٹ انٹرفیس کے بارے میں کچھ اہم نکات یہ ہیں: ایکٹیویٹیڈ روٹ انٹرفیس ایک ایسی خدمت ہے جو روٹ سے متعلق مخصوص معلومات جیسے روٹ پیرامیٹرز ، استفسار پیرامیٹرز ، یو آر ایل کے ٹکڑے ، وغیرہ فراہم کرتی ہے۔اس راستے سے منسلک ٹکڑے ، جامد اعداد و شمار ، روٹ کی ترتیب جو اس راستے سے مماثل ہے ، اور جڑ ، والدین ، فرسٹچائڈ ، اور تمام بچوں کے اجزاء کی ایکٹیویٹ روٹ مثال۔DOM میں موجودہ فعال راستے تک رسائی حاصل کریں اور راستے تک رسائی حاصل کریں۔ایک دکان میں بھری ہوئی ہے۔ڈویلپرز روٹ پیرامیٹرز ، استفسار پیرامیٹرز ، یو آر ایل کے ٹکڑے ، روٹ سے منسلک جامد ڈیٹا ، اس راستے سے مماثل روٹ کی تشکیل ، اور جڑ ، والدین ، فرسٹائڈ ، اور بچوں کے تمام اجزاء کی ایکٹیویٹ روٹ مثال تلاش کرنے کے لئے ایکٹیویٹ روٹ انٹرفیس کا استعمال کرسکتے ہیں۔ایکٹیویٹیڈ راؤٹ انٹرفیس کونیی میں روٹرموڈول کا ایک حصہ ہے اور ڈوم میں موجودہ فعال راستے تک رسائی اور راستے کی معلومات تک رسائی حاصل کرنے کے لئے استعمال کیا جاتا ہے ۔1 کوڈ-سیمپل 2 اسٹیک اوور فلو 3 ٹیٹوریلشب 4 میننگننگ 5 ٹیلریک 6positronx"
    },
    {
        "Question": "کونیی روٹنگ میں آپ روٹر لنک ہدایت کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "اینگولر روٹنگ میں روٹر لنک لنک ہدایت استعمال کرنے والے راستوں کے لنکس بنانے کے لئے استعمال کیا جاتا ہے۔کونیی روٹنگ میں روٹر لنک ہدایت کو استعمال کرنے کے لئے یہ اقدامات ہیں: ایپ ماڈیول میں @کونیی/راؤٹر سے روٹر موڈل اور روٹس کلاسز درآمد کریں۔ روٹس میں ایپلی کیشن کے لئے راستوں کی وضاحت کریں۔ لنکس بنانے کے لئے ٹیمپلیٹ میں روٹر لنک لنک ہدایت کا استعمال کریں۔راستوں پر۔ روٹ لنک لنک ہدایت کے پہلے پیرامیٹر کے طور پر راستے کے نام کو پاس کریں۔ روٹر لنک لنک ہدایت کے لئے کسی بھی روٹ پیرامیٹرز کو پاس کریں۔ یہاں کونیی روٹنگ میں روٹر لنک لنک ہدایت کو استعمال کرنے کی ایک مثال ہے: درآمد {ngModule} سے ''@کونیی/کور 'import درآمد {راؤٹرڈول ، راستے'@کونیی/راؤٹر 'سے روٹس import امپورٹ {ہومکمپینٹ} سے' ./home.compointent '؛ import {aber component} منجانب'= [{راستہ: '' ، اجزاء: گھریلو اجزاء} ، {راستہ: 'کے بارے میں/: id' ، جزو: کے بارے میں کامپینٹ}]@ngmodule ({درآمدات: [روٹرموڈول.فورروٹ (راستے)] ، برآمدات: [روٹرموڈول]}) کلاس ایپروٹنگ ماڈل ایکسپورٹ کریں {{مذکورہ بالا مثال میں ، ہم نے روٹس سرنی میں درخواست کے راستوں کی وضاحت کی ہے اور راستوں کے لنکس بنانے کے لئے ٹیمپلیٹ میں روٹر لنک لنک ہدایت کا استعمال کیا ہے۔ہم نے روٹر لنک ہدایت کے پہلے پیرامیٹر کے طور پر اور روٹ لنک لنک ہدایت کے لئے کسی بھی روٹ پیرامیٹرز کے نام سے راستے کا نام منظور کرلیا ہے۔کے بارے میں/{{ID}} \"> کے بارے میں </a> </vai> مذکورہ بالا مثال میں ، ہم نے ٹیمپلیٹ میں روٹر لنک لنک ہدایت کو راستوں سے لنک بنانے کے لئے استعمال کیا ہے۔ہم نے روٹر لنک لنک ہدایت کے پہلے پیرامیٹر کے طور پر اور روٹ لنک لنک ہدایت نامہ کے طور پر کسی بھی روٹ پیرامیٹرز کے طور پر اس راستے کا نام منظور کرلیا ہے۔ایپ ماڈیول میں کونیی/روٹر ، روٹس سرنی میں درخواست کے راستوں کی وضاحت کریں ، روٹس کے لنکس بنانے کے لئے ٹیمپلیٹ میں روٹر لنک لنک ہدایت کا استعمال کریں ، روٹ لنک لنک ہدایت کے پہلے پیرامیٹر کے طور پر راستے کا نام منتقل کریں ، اور پاس کریں۔روٹ لنک لنک کی ہدایت کے طور پر کسی بھی راستے کے پیرامیٹرز۔"
    },
    {
        "Question": "کونیی روٹنگ میں کینیکٹیوٹیٹ اور کین لوڈ گارڈز کے مابین کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں کینیکٹیوٹیٹ اور کین لوڈ گارڈز بالترتیب راستوں اور ماڈیول تک رسائی کو کنٹرول کرنے کے لئے استعمال ہوتے ہیں۔دونوں محافظوں کے مابین کلیدی اختلافات یہ ہیں: کینیکٹیویٹیٹیٹیٹیٹ گارڈ کو روٹ 12345 تک رسائی پر قابو پانے کے لئے استعمال کیا جاتا ہے۔ کین ایکٹیویٹ گارڈ کو غیر مجاز صارفین کو روٹ 125 تک رسائی سے روکنے کے لئے استعمال کیا جاتا ہے۔ کینیکٹیویٹ گارڈ کو یہ فیصلہ کرنے کے لئے استعمال کیا جاتا ہے کہ آیا کوئی راستہ چالو کیا جاسکتا ہے یا نہیں۔not235. کین ایکٹیویٹ گارڈ کو یہ چیک کرنے کے لئے استعمال کیا جاتا ہے کہ آیا صارف کو ہدف کے اجزاء 235 پر تشریف لے جانے کا اختیار دیا گیا ہے۔ایک سست طریقہ (سست لوڈنگ) اگر صارف کو اختیار نہیں کیا گیا ہے 1245۔ کینلوڈ گارڈ کو یہ فیصلہ کرنے کے لئے استعمال کیا جاتا ہے کہ آیا کوئی ماڈیول بھری جاسکتی ہے یا نہیں 245۔ کینلوڈ گارڈ کو غیر مجاز صارفین کو ماڈیول 25.in کا ماخذ کوڈ دیکھنے سے روکنے کے لئے استعمال کیا جاتا ہے۔خلاصہ ، بالترتیب راستوں اور ماڈیول تک رسائی کو کنٹرول کرنے کے لئے کونیی روٹنگ میں کینیکٹیوٹیٹ اور کین لوڈ گارڈز کا استعمال کیا جاتا ہے۔کینیکٹیویٹ گارڈ کو کسی راستے تک رسائی پر قابو پانے اور غیر مجاز صارفین کو کسی راستے تک رسائی سے روکنے کے لئے استعمال کیا جاتا ہے ، جبکہ کینلوڈ گارڈ کو ماڈیول تک رسائی پر قابو پانے اور ایپلی کیشن کو کسی پورے ماڈیول یا جز کو سست طریقے سے لوڈ کرنے سے روکنے کے لئے استعمال کیا جاتا ہے اگر صارف صارفمجاز نہیں ہے۔کینیکٹیویٹ گارڈ کو یہ فیصلہ کرنے کے لئے استعمال کیا جاتا ہے کہ آیا کوئی راستہ چالو کیا جاسکتا ہے یا نہیں اور چیک کریں کہ صارف کو ہدف کے جزو پر تشریف لے جانے کا اختیار ہے ، جبکہ کینلوڈ گارڈ کو یہ فیصلہ کرنے کے لئے استعمال کیا جاتا ہے کہ آیا کوئی ماڈیول بھری یا نہیں اور غیر مجاز صارفین کو روک سکتا ہے یا نہیں۔یہاں تک کہ ماڈیول کا ماخذ کوڈ دیکھ کر"
    },
    {
        "Question": "آپ کونیی روٹنگ میں نیویگیشن ایکسٹراس انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں نیویگیشن ایکسٹراس انٹرفیس کا استعمال کسی راستے پر تشریف لاتے وقت اضافی معلومات فراہم کرنے کے لئے کیا جاتا ہے۔کونیی روٹنگ میں نیویگیشن ایکسٹراس انٹرفیس کو استعمال کرنے کے لئے یہ اقدامات ہیں: جزو میں @کونیی/روٹر سے نیویگیشن ایکسٹراس انٹرفیس درآمد کریں۔ نیویگیشن ایکسٹراس آبجیکٹ کو اضافی معلومات کے ساتھ روٹ پر منتقل کریں۔ نیویگیشن ایکسٹراس آبجیکٹ کو دوسرا پیرامیٹر کے طور پر پاس کریںنیویگیٹ () راؤٹر سروس کا طریقہ۔ یہاں کونیی روٹنگ میں نیویگیشن ایکسٹراس انٹرفیس کو استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {اجزا} درآمد {راؤٹر ، نیویگیشن ایکسٹراس@@کونیی/راؤٹر 'سے@اجزاء.) {کونسٹ نیویگیشن ایکسٹراس: نیویگیشن ایکسٹراس = {استفسار پیرمز: {ID: 123} ، ٹکڑا: 'اینکر'} ؛this.router.navigate (['/کے بارے میں'] ، نیویگیشن ایکسٹراس) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے نیویگیشن ایکسٹراس انٹرفیس درآمد کیا ہے۔ہم نے نیویگیشن ایکسٹراس آبجیکٹ کو اضافی معلومات کے ساتھ اس راستے پر منتقل کرنے کے لئے بیان کیا ہے۔ہم نے نیویگیشن ایکسٹراس آبجیکٹ کو دوسرے پیرامیٹر کے طور پر راؤٹر سروس کے نیویگیٹ () کے طریقہ کار کے طور پر منظور کیا ہے۔ خلاصہ ، کونیی روٹنگ میں نیویگیشن ایکسٹراس انٹرفیس کو استعمال کرنے کے لئے ، ڈویلپرز جزو میں @کونیی/راؤٹر سے نیویگیشن ایکسٹراس انٹرفیس کو @کونییگسٹراس انٹرفیس درآمد کرسکتے ہیں ، اس کی وضاحت کریں۔نیویگیشن ایکسٹراس آبجیکٹ کو اضافی معلومات کے ساتھ راستے میں منتقل کرنے کے لئے ، اور نیویگیشن ایکسٹراس آبجیکٹ کو دوسرے پیرامیٹر کے طور پر راؤٹر سروس کے نیویگیٹ () طریقہ پر پاس کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں کینڈی کوٹیویٹ انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں کینڈی ایکٹیویٹ انٹرفیس کا استعمال صارفین کو غلطی سے کسی ایپلی کیشن 12345 میں روٹ یا صفحہ چھوڑنے سے روکنے کے لئے استعمال کیا جاتا ہے۔کینڈی ایکٹیویٹ انٹرفیس کے بارے میں کچھ اہم نکات یہ ہیں: کینڈیکٹیوٹ انٹرفیس ایک روٹ گارڈ ہے جسے روٹر کے ذریعہ یہ فیصلہ کرنے کے لئے استعمال کیا جاسکتا ہے کہ آیا کسی راستے کو غیر فعال کیا جاسکتا ہے۔حفاظت کی جائے ، موجودہ روٹ ، موجودہ روٹر ریاست ، اور اگلا روٹر اسٹیٹ 12345۔ کینڈی ایکٹیویٹ طریقہ کار ایک قابل مشاہدہ ، وعدہ ، یا بولین قدر لوٹاتا ہے جو اس بات کی نشاندہی کرتا ہے کہ آیا اس راستے کو غیر فعال کیا جاسکتا ہے۔کسی روٹ یا اجزاء 235 سے دور جائیں۔ کینڈیکٹیویٹ انٹرفیس صارفین کو متنبہ کرنے کے لئے استعمال کیا جاتا ہے کہ وہ غیر محفوظ شدہ تبدیلیوں یا کسی غیر محفوظ شدہ شکلوں کے ساتھ کسی صفحے یا جز کو چھوڑنے والے ہیں۔کسی درخواست میں راستہ یا صفحہ چھوڑنا۔ڈویلپرز یہ چیک کرنے کے لئے کینڈی ایکٹیویٹ انٹرفیس کا استعمال کرسکتے ہیں کہ آیا صارف کسی راستے یا جزو سے دور ہوسکتا ہے ، صارفین کو متنبہ کرتا ہے کہ وہ غیر محفوظ شدہ تبدیلیوں یا غیر منقولہ شکل کے ساتھ کسی صفحے یا جزو کو چھوڑنے والے ہیں ، اور ایک کینڈیکٹیویٹ طریقہ فراہم کرتے ہیں جو مشاہدہ کرنے والے کو لوٹاتا ہے ،وعدہ ، یا بولین قدر جو اس بات کی نشاندہی کرتی ہے کہ آیا اس راستے کو غیر فعال کیا جاسکتا ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایکٹیویٹیڈ روٹسناپ شاٹ کلاس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ایکٹیویٹیڈ روٹسناپ شاٹ کلاس کا استعمال ٹائم 12 میں کسی خاص لمحے میں کسی آؤٹ لیٹ میں بھری ہوئی ایک جزو سے وابستہ راستے کی موجودہ حالت کا سنیپ شاٹ فراہم کرنے کے لئے کیا جاتا ہے۔ایکٹیویٹیڈ راؤسٹنپ شاٹ کلاس کے بارے میں کچھ کلیدی نکات یہ ہیں: ایکٹیویٹیڈ راؤسٹنپ شاٹ کلاس کا استعمال ٹائم 12 میں کسی خاص لمحے میں کسی آؤٹ لیٹ میں بھری ہوئی ایک جزو سے وابستہ راستے کی موجودہ حالت کا سنیپ شاٹ فراہم کرنے کے لئے کیا جاتا ہے۔روٹ انفارمیشن 12۔ ایکٹیویٹیڈ راؤسٹنپ شاٹ کلاس کو سمجھنے کے لئے استعمال کیا جاتا ہے کہ جزو کس طرح کام کرتا ہے اور استعمال کیا جاتا ہے۔ 1۔ ایکٹیویٹڈ راؤسٹنپ شاٹ کلاس میں راستے ، اس کے پیرامیٹرز ، اور اس مخصوص روٹ 12 سے متعلق ڈیٹا کے بارے میں تفصیلات شامل ہیں۔پیرامیٹرز ، یو آر ایل کے ٹکڑے ، اس راستے سے منسلک جامد اعداد و شمار ، روٹ کی ترتیب جو اس روٹ سے مماثل ہے ، اور جڑ ، والدین ، فرسٹائڈ ، اور تمام بچوں کے اجزاء کی ایکٹیویٹ روٹسناپ شاٹ مثال کے طور پر ، کونیی روٹنگ میں ایکٹیویٹیڈ روٹسناپ شاٹ کلاس کو A فراہم کرنے کے لئے استعمال کیا جاتا ہے۔کسی خاص لمحے میں کسی آؤٹ لیٹ میں بھری ہوئی ایک جزو سے وابستہ راستے کی موجودہ حالت کا اسنیپ شاٹ۔ڈویلپرز ایکٹیویٹیڈ راؤسٹنپ شاٹ کلاس کا استعمال روٹ پیرامیٹرز ، استفسار پیرامیٹرز ، یو آر ایل کے ٹکڑے ، اس راستے سے منسلک جامد ڈیٹا ، روٹ کی ترتیب جو اس راستے سے مماثل ہے ، اور جڑ ، والدین ، فرسٹ چائلڈ ، اور تمام بچوں کے اجزاء کی ایکٹیویٹیڈ راؤسٹنپ شاٹ مثال تک رسائی حاصل کرسکتے ہیں۔ایکٹیویٹیڈ راؤسٹنپ شاٹ کلاس کونیی روٹنگ کا ایک بنیادی عمارت ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں پاتھ لوکیشن اسٹریٹی اور ہیشلوکیشن اسٹریٹی میں کیا فرق ہے؟",
        "Answer": "پاتھ لوکیشن اسٹریٹی اور ہیشلوکیشن اسٹریٹی کونیی روٹنگ میں مقام کی دو مختلف حکمت عملی ہیں۔ان دونوں کے مابین اختلافات یہ ہیں: Pathlocationsstrategyuses HTML5 پش اسٹیٹ URL طرز عمل 123. ایک واضح URL جیسے http://example.com/foo2.supports سرور سائیڈ رینڈرنگ 2. ایپلیکیشن 3 میں تشکیل شدہ تمام راستوں کے لئے سرور سائیڈ کنفیگریشن کی ترتیب دیتا ہے۔HTML5 پش اسٹیٹ تکنیک کا فائدہ اٹھا سکتا ہے جو سرور کے صفحے کی درخواست کو متحرک کیے بغیر براؤزر کے مقام اور تاریخ کو تبدیل کرتا ہے۔سرور 4.ولڈر براؤزرز سرور کو صفحہ کی درخواستیں بھیجیں جب مقام یو آر ایل تبدیل ہوتا ہے جب تک کہ ہیش 3 کے بعد تبدیلی نہ آجائے۔ ہاشیس 3 کے ساتھ اطلاق کے راستے یو آر ایل کو کمپوز کرکے پرانے براؤزرز کے لئے استثنا کا فائدہ اٹھائیں۔کونیی روٹنگ میں مقام کی دو مختلف حکمت عملی۔پاتھ لوکیشن اسٹریٹی ایچ ٹی ایم ایل 5 پش اسٹیٹ یو آر ایل سلوک کا استعمال کرتی ہے ، سرور سائیڈ رینڈرنگ کی حمایت کرتی ہے ، اور ایپلی کیشن میں تشکیل شدہ تمام راستوں کے لئے سرور سائیڈ کنفیگریشن کی ضرورت ہوتی ہے۔ہیشلوکیشن اسٹریٹیٹی ہیش اسٹائل روٹنگ کا استعمال کرتی ہے ، اسے ترتیب دینا آسان ہے ، اور بوڑھے براؤزرز کے لئے استثنا سے فائدہ اٹھا سکتا ہے جس میں درخواست کے راستے میں یو آر ایل کو ہیش کے ساتھ استعمال کیا جاسکتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں آپ روٹر ڈاٹ نیویگیٹ () طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں راؤٹر۔ نیویگیٹ () کے طریقہ کار کو استعمال کرنے کے لئے ، ڈویلپر ان مراحل پر عمل پیرا ہوسکتے ہیں: روٹر کلاس کو @کونیی/روٹر سے جزو میں درآمد کریں۔ راستے کے راستے اور کسی بھی روٹ پیرامیٹرز کو سرنی کے طور پر بیان کریں۔ گزرنے کے لئے کسی بھی اضافی معلومات کی وضاحت کریں۔نیویگیشن ایکسٹراس انٹرفیس کا استعمال کرتے ہوئے راستے میں۔ روٹر سروس کے نیویگیٹ () طریقہ کار پر کال کریں اور راستے کے راستے اور کسی بھی راستے کے پیرامیٹرز کو بطور صف اور نیویگیشن ایکسٹراس کو دوسرے پیرامیٹر کے طور پر منتقل کریں۔ راؤٹر کو استعمال کرنے کی ایک مثال ہے۔() کونیی روٹنگ میں طریقہ: '@کونیی/کور' سے درآمد {اجزاء {امپورٹ {روٹر ، نیویگیشن ایکسٹراس} سے '@کونیی/راؤٹر' ؛@اجزاء ({سلیکٹر: 'ایپ ہوم' ، ٹیمپلیٹ: `<بٹن(کلک کریں) = \"گوٹوباؤٹ ()\"> کے بارے میں </بٹن> `}) پر جائیں کلاس ہومکمپمنٹ {کنسٹرکٹر (نجی روٹر: روٹر) {} gotoAbout () {کانسٹیٹ روٹ پیتھ = ['/کے بارے میں' ، 123] ؛کونسٹ نیویگیشن ایکسٹراس: نیویگیشن ایکسٹراس = {استفسار پیرمز: {نام: 'جان'} ، ٹکڑا: 'اینکر'} ؛this.router.navigate (روٹ پیتھ ، نیویگیشن ایکسٹراس) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کیا ہے۔ہم نے راستے کے راستے اور کسی بھی روٹ پیرامیٹرز کو صف کے طور پر بیان کیا ہے۔ہم نے نیویگیشن ایکسٹراس انٹرفیس کا استعمال کرتے ہوئے راستے میں جانے کے لئے کسی بھی اضافی معلومات کی وضاحت کی ہے۔ہم نے روٹر سروس کے نیویگیٹ () طریقہ کو بلایا ہے اور راستے کے راستے اور کسی بھی راستے کے پیرامیٹرز کو سرنی کے طور پر منتقل کیا ہے ، اور نیویگیشن ایکسٹراس کو دوسرے پیرامیٹر کے طور پر آبجیکٹ کے طور پر ، کونیی روٹنگ میں روٹر.نویگیٹ () طریقہ استعمال کرنے کے لئے ، اور نیویگیشن ایکسٹراس آبجیکٹ ،ڈویلپرز جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کرسکتے ہیں ، راستے کے راستے اور کسی بھی روٹ پیرامیٹرز کو صف کے طور پر بیان کرسکتے ہیں ، نیویگیشن ایکسٹراس انٹرفیس کا استعمال کرتے ہوئے راستے میں جانے کے لئے کسی بھی اضافی معلومات کی وضاحت کرسکتے ہیں ، اور نیویگیٹ () کے طریقہ کار کو کال کریں گے۔روٹر سروس اور روٹ کے راستے اور کسی بھی راستے کے پیرامیٹرز کو بطور سرنی پاس کریں ، اور نیویگیشن ایکسٹراس کو دوسرے پیرامیٹر کے طور پر آبجیکٹ۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر لنکیکٹیو ہدایت کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں روٹر لنکیکٹیو ہدایت کا استعمال HTML عنصر سے کلاسوں کو شامل کرنے یا ہٹانے کے لئے کیا جاتا ہے جو موجودہ روٹسٹیٹ 123 کی بنیاد پر روٹر لنک کا پابند ہے۔روٹر لنکیکٹیو ڈائریکٹیو کے بارے میں کچھ کلیدی نکات یہ ہیں: روٹر لنکیکٹیو ڈائریکٹیو کو اجاگر کرنے کے لئے استعمال کیا جاتا ہے کہ اس وقت کون سا راستہ فعال ہے۔سی ایس ایس کلاسز ، جو عنصر پر لاگو ہوں گی جب روٹ فعال ہو۔فعال حیثیت 3 کا حساب لگانے کے لئے روٹر لنک لنک ہدایت۔ روٹر لنکیکٹیو ڈائریکٹیو کو کسی خاص روٹنگ عنصر کو مشروط انداز دینے کے لئے استعمال کیا جاسکتا ہے جس کی بنیاد پر اس سے وابستہ راستہ چالو ہے یا نہیں۔یا کسی HTML عنصر سے کلاسوں کو ہٹا دیں جو موجودہ روٹسٹیٹ کی بنیاد پر روٹر لنک کا پابند ہے۔ڈویلپرز روٹر لنکیکٹیو ڈائریکٹیو کو اجاگر کرنے کے لئے استعمال کرسکتے ہیں کہ اس وقت کون سا راستہ فعال ہے ، جب روٹ فعال ہوتا ہے تو عنصر پر سی ایس ایس کلاسوں کا اطلاق ہوتا ہے ، اور کسی خاص روٹنگ عنصر کو مشروط انداز دیتا ہے یا نہیں اس پر مبنی ہے کہ آیا اس سے وابستہ راستہ چالو کیا گیا ہے یا نہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں آپ روٹر۔ ایونٹ پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں روٹر۔ ایونٹ پراپرٹی کا استعمال روٹر واقعات کو سبسکرائب کرنے کے لئے کیا جاتا ہے جس سے ڈویلپرز کو روٹر کے لائف سائیکل کو ٹریک کرنے اور روٹنگ اسٹیٹ 1234 میں ہونے والی تبدیلیوں کا جواب دینے کی اجازت ملتی ہے۔کونیی روٹنگ میں روٹر کو استعمال کرنے کے لئے یہاں اقدامات ہیں۔ روٹر کلاس کو @کونیی/روٹر سے جزو میں درآمد کریں۔صرف ان لوگوں کے واقعات جو متعلقہ ہیں۔ روٹر واقعات کو سنبھالنے کے لئے سبسکرائب () کا طریقہ استعمال کریں۔ یہاں راؤٹر کو استعمال کرنے کی ایک مثال ہے۔ کونیی روٹنگ میں پراپرٹی کا استعمال کریں: '@کونیی/کور' سے درآمد {اجزاء {درآمد {امپورٹ {راؤٹر ، نیویگیشنینڈ} سے '@کونیی/راؤٹر' سے 'RXJS/آپریٹرز' سے امپورٹ {فلٹر@@اجزاء ({سلیکٹر: 'ایپ روٹ' ، ٹیمپلیٹ: `<p *ngif =\" shomessage \"> میں خوش آمدیدایپ!کنسٹرکٹر (نجی روٹر: روٹر) {this.router.events.pipe (فلٹر (واقعہ => ایونٹ مثال کے طور پر نیویگیشنینڈ))) سبسکرائب ((واقعہ: نیویگیشن) => {this.showmessage = غلط ؛}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کیا ہے۔ہم نے روٹر کے واقعات کو سننے کے لئے روٹر کو سبسکرائب کیا ہے۔ہم نے فلٹر () آپریٹر کا استعمال واقعات کو صرف ان ہیوں پر فلٹر کرنے کے لئے کیا ہے جو متعلقہ ہیں۔ہم نے روٹر واقعات کو سنبھالنے کے لئے سبسکرائب () کا طریقہ استعمال کیا ہے۔ خلاصہ استعمال کرنے کے لئے ، کونیی روٹنگ میں روٹر۔روٹر واقعات کو سننے کے لئے ، واقعات کو صرف متعلقہ افراد پر فلٹر کرنے کے لئے فلٹر () آپریٹر کا استعمال کریں ، اور روٹر واقعات کو سنبھالنے کے لئے سبسکرائب () کا طریقہ استعمال کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر لنک اور [روٹر لنک] کے درمیان کیا فرق ہے؟",
        "Answer": "روٹر لنک اور [روٹر لنک] کونیی روٹنگ میں روٹر لنک لنک ہدایت کو استعمال کرنے کے دو مختلف طریقے ہیں۔دونوں کے مابین اختلافات یہ ہیں: روٹر لنک لنک لنک لنک لنک لنک لنک لنک لنک ہدایت نامہ 12 کے تار کے طور پر منتقل کرنے کے لئے صرف ایک مستحکم لنک 3 کی وضاحت کریں۔روٹر لنک ہدایت نامہ 12.را ایک متحرک لنک 3 کی وضاحت کریں۔ اس راستے کی وضاحت جزو کلاس 3 میں کی گئی ہے۔ خلاصہ میں ، روٹر لنک اور [روٹر لنک] کونیی روٹنگ میں روٹر لنک لنک ہدایت کو استعمال کرنے کے دو مختلف طریقے ہیں۔روٹر لنک کو ایک مستحکم راہ کو روٹر لنک لنک ہدایت کے لئے تار کے طور پر منتقل کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ [روٹر لنک] کو متحرک قدر کو روٹر لنک ہدایت کو منتقل کرنے کے لئے استعمال کیا جاتا ہے۔روٹر لنک کے ٹیمپلیٹ میں راستہ سخت کوڈ کیا گیا ہے ، جبکہ [روٹر لنک] کے اجزاء کی کلاس میں اس راستے کی وضاحت کی گئی ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں آپ روٹر ڈاٹ نیویگیٹ بائورل () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں راؤٹر ڈاٹ نیویگیٹ بائورل () کے طریقہ کار کو استعمال کرنے کے لئے ، ڈویلپر ان مراحل پر عمل پیرا ہوسکتے ہیں: روٹر کلاس کو @کونیی/روٹر سے جزو میں درآمد کریں۔ روٹر سروس کے نیویگیٹ بائورل () کے طریقہ کار کو کال کریں اور یو آر ایل کو تار کے طور پر پاس کریں۔کونیی روٹنگ میں راؤٹر.نویگیٹ بائورل () کے طریقہ کار کو استعمال کرنے کی ایک مثال یہ ہے: '@کونیی/کور' سے {اجزاء کو درآمد کریں ؛ '@کونیی/روٹر' سے درآمد {روٹر@@@جزو ({سلیکٹر: 'ایپ-ہوم '، ٹیمپلیٹ: `<بٹن (کلک کریں) =\" gootoabout () \"> کے بارے میں </buttain>`}) کلاس گھریلو اجزاء {کنسٹرکٹر (نجی روٹر: روٹر) {} gootoabout () {this.router.navegatByurl('/کے بارے میں/123') ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کیا ہے۔ہم نے روٹر سروس کے نیویگیٹ بائورل () طریقہ کو بلایا ہے اور کونیی روٹنگ میں راؤٹر ڈاٹ نیویگیٹ بائورل () طریقہ استعمال کرنے کے لئے ، ڈویلپرز کو @کونیی/روٹر سے جزو میں روٹر کلاس درآمد کرسکتے ہیں۔اور روٹر سروس کے نیویگیٹ بائورل () کے طریقہ کار کو کال کریں اور یو آر ایل کو سٹرنگ کے طور پر پاس کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر لنک وِتھ ہریف ڈائریکٹیو کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں روٹر لنک وِتھ ہریف ڈائریکٹیو کا استعمال ایک کلک لنک بنانے کے لئے کیا جاتا ہے جو 12 پر کلک کرنے پر کسی راستے پر نیویگیشن کو متحرک کرتا ہے۔روٹر لنک وِتھ ہریف ڈائریکٹیو کے بارے میں کچھ اہم نکات یہ ہیں: روٹر لنک وِتھ ہریف ڈائریکٹیو کو ایک کلک لنک بنانے کے لئے استعمال کیا جاتا ہے جو 12 پر کلک کرتے وقت کسی راستے پر نیویگیشن کو متحرک کرتا ہے۔ روٹر لنک وِتھ ہریف ڈائریکٹیو روٹر لنک لنک لنک لنک کی ہدایت ہے۔اینکر ٹیگ 2 کا استعمال کرتے ہوئے کسی راستے پر جانے کے لئے استعمال ہوتا ہے۔ روٹر لنک وِتھ ہریف ڈائریکٹیو کو ایک لنک بنانے کے لئے استعمال کیا جاتا ہے جس کو نئے ٹیب یا ونڈو 3 میں کھولنے کے لئے دائیں کلک کیا جاسکتا ہے۔کلکس 3.in کا خلاصہ ، کونیی روٹنگ میں روٹر لنک وِتھ ہریف ڈائریکٹیو کا استعمال ایک کلک لنک بنانے کے لئے کیا جاتا ہے جو کلیک ہونے پر کسی راستے پر نیویگیشن کو متحرک کرتا ہے۔ڈویلپرز اینکر ٹیگ کا استعمال کرتے ہوئے کسی روٹ پر تشریف لے جانے کے لئے روٹر لنک وِتھ ہریف ڈائریکٹیو کا استعمال کرسکتے ہیں ، ایک لنک بنا سکتے ہیں جس کو نئے ٹیب یا ونڈو میں کھولنے کے لئے دائیں کلک کیا جاسکتا ہے ، اور عام بائیں کلک کے لئے کسی واقعہ کو خارج کرنے کے لئے اس میں ترمیم کی جاسکتی ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں کینیکٹیویٹیچیلڈ انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں کینیکٹیو ٹیچیلڈ انٹرفیس بچوں کے راستوں کی حفاظت کے لئے استعمال ہوتا ہے۔کینیکٹیو ٹیچیلڈ گارڈ بچوں کے راستے پر جانے سے پہلے چلتا ہے ، اور اس سے ڈویلپرز کو کچھ شرائط کی جانچ پڑتال کرنے اور یہ فیصلہ کرنے کی اجازت ملتی ہے کہ آیا نیویگیشن کے ساتھ آگے بڑھیں یا آئی ٹی 1234 کو منسوخ کریں۔کونیی روٹنگ میں کینیکٹیویٹیچیلڈ انٹرفیس کو استعمال کرنے کے لئے یہ اقدامات ہیں: ایک ایسی خدمت بنائیں جو کینیکٹیویٹیٹیچیلڈ انٹرفیس کو نافذ کرے۔ خدمت میں کینیکٹیویٹیچیلڈ () کا طریقہ کار۔ماڈیول کی فراہم کنندگان کی خدمت جو بچے کو راستوں کا اعلان کرتی ہے۔ کینیکٹیویٹیکلڈ پراپرٹی کو بچوں کے راستوں پر شامل کریں اور اسے خدمت پر سیٹ کریں۔ یہاں کونیی روٹنگ میں کینیکٹیویٹیکلڈ انٹرفیس کو استعمال کرنے کی ایک مثال ہے: '@ سے درآمد {انجیکشن}'کونیی/کور 'import امپورٹ {Canactivatechild ، ایکٹیویٹیٹ راؤسٹنپ شاٹ ، روٹسٹیٹسناپ شاٹ' '@کونیی/راؤٹر' سے 'rxjs' سے درآمد {مشاہدہ}@انجیکشن ایبل ({فراہم کردہ: 'روٹ'}) برآمدی کلاس کی تصنیف سے متعلقہ گارڈ کی کینیکٹیوٹیٹیلیٹ پر عمل درآمد ہوتا ہے۔.وعدہ <بولین> |بولین {// چیک کریں کہ آیا صارف کو تصدیق کی گئی ہے اور بچوں کے راستے تک رسائی حاصل کرنے کا مجاز ہے // اگر مجاز ہے تو درست لوٹیں ، غلط اگر اختیار نہیں کیا گیا تو سچ ؛}} مذکورہ بالا مثال میں ، ہم نے ایک ایسی خدمت تیار کی ہے جو کینیکٹیویٹیکلڈ انٹرفیس کو نافذ کرتی ہے۔ہم نے خدمت میں کینیکٹیو ٹیچیلڈ () کے طریقہ کار کو نافذ کیا ہے اور حالات کی جانچ پڑتال کرنے اور بولین یا بولین کے قابل مشاہدہ کو واپس کرنے کے لئے منطق کی وضاحت کی ہے۔ہم نے ماڈیول کے فراہم کنندگان میں خدمت کو شامل کیا ہے جو بچوں کے راستوں کا اعلان کرتا ہے۔ہم نے کینیکٹیویٹیکلڈ پراپرٹی کو بچوں کے راستوں میں شامل کیا ہے اور اسے سروس ڈاٹ کام پر سیٹ کیا ہے ، کونیی روٹنگ میں کینیکٹیویٹیکلڈ انٹرفیس کو استعمال کرنے کے لئے ، ڈویلپرز ایک ایسی خدمت تشکیل دے سکتے ہیں جو کینیکٹیویٹیکلڈ انٹرفیس کو نافذ کرے ، خدمت میں کینیکٹیویٹیکیلڈ () کے طریقہ کار کو نافذ کرے ،حالات کی جانچ پڑتال کے ل the منطق کی وضاحت کریں اور بولین یا بولین کے قابل مشاہدہ کو واپس کریں ، ماڈیول کے فراہم کنندگان کی خدمت میں شامل کریں جو بچوں کے راستوں کا اعلان کرتا ہے ، اور کینیکٹیویٹیکلڈ پراپرٹی کو بچوں کے راستوں میں شامل کریں اور اسے خدمت میں سیٹ کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں ایکٹیویٹیڈ راؤسٹنپ شاٹ اور روٹسٹیٹیسناپ شاٹ میں کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ایکٹیویٹیڈ روٹسناپ شاٹ اور روٹسٹیٹس ناپ شاٹ دو مختلف کلاسز ہیں جو ٹائم 12345 میں کسی خاص لمحے میں کسی جزو میں بھری ہوئی ایک جزو سے وابستہ راستے کی موجودہ حالت کا سنیپ شاٹ فراہم کرنے کے لئے استعمال ہوتے ہیں۔ان دونوں کے مابین اختلافات یہ ہیں: ایکٹیویٹیڈ روٹسناپ شاٹ کنٹینز ٹائم 125 کے کسی خاص لمحے میں کسی آؤٹ لیٹ میں بھری ہوئی ایک جزو سے وابستہ راستے کے بارے میں معلومات۔اس مخصوص روٹ 125 سے متعلق ہے۔ یہ سمجھنے کے لئے استعمال کیا جاتا ہے کہ ایک جزو کس طرح کام کرتا ہے اور استعمال کیا جاتا ہے۔.کیا ہوا روٹ کا ایک درخت اسنیپ شاٹس 6. یہ روٹر 6 کی موجودہ حالت کا ایک سنیپ شاٹ فراہم کرنے کے لئے استعمال ہوتا ہے۔ خلاصہ یہ ہے کہ ، ایکٹیویٹیڈ روٹسناپ شاٹ اور روٹسٹیٹس ناپ شاٹ کونیی روٹنگ میں دو مختلف کلاس ہیں جو موجودہ کی موجودہ حالت کا سنیپ شاٹ فراہم کرنے کے لئے استعمال ہوتے ہیں۔کسی خاص لمحے میں کسی خاص لمحے میں بھری ہوئی جزو سے وابستہ راستہ۔ایکٹیویٹیڈ روٹسناپ شاٹ میں کسی خاص لمحے میں کسی دکان میں بھری ہوئی جزو سے وابستہ کسی راستے کے بارے میں معلومات موجود ہوتی ہے ، جبکہ روٹسٹیٹسناپ شاٹ ایک لمحے میں روٹر کی حالت کی نمائندگی کرتا ہے اور اس میں یو آر ایل سمیت روٹر کی موجودہ حالت ہوتی ہے ،چالو راستہ ، اور روٹر کنفیگریشن ۔1KNOLDUS2GEEKBOOTS3YOUTUBE4STACKOVERFLOW5PLURLURALSIGHT6ANGULAR"
    },
    {
        "Question": "آپ کونیی روٹنگ میں استفسار پیرامس پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں استفسار پیرمز پراپرٹی کو استعمال کرنے کے لئے ، ڈویلپر ان اقدامات پر عمل کرسکتے ہیں: جزو میں ایکٹیویٹیڈ راؤٹر کلاس کو @کونیی/روٹر سے اجزاء میں ایکٹیویٹیٹ راؤٹ سروس کو شامل کریں۔.یہ کونیولر روٹنگ میں استفسار پیرامس پراپرٹی کو استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {جزو import درآمد {ایکٹیویٹ راؤٹ} سے '@کونیی/راؤٹر' ؛@اجزاء ({سلیکٹر: 'ایپ-کے بارے میں ،'ٹیمپلیٹ: `<h1> کے بارے میں </h1> <p> id: {{ID}} </p> <p> نام: {{نام}} </p>` `) برآمدی کلاس کے بارے میں کام کے بارے میں {ID: سٹرنگ ؛نام: تار ؛کنسٹرکٹر (نجی روٹ: ایکٹیویٹیڈ روٹ) {this.route.queryparams.subscribe (پیرامس => {this.id = پیرامس ['id'] ؛ this.name = پیرامس ['نام'] ؛}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے ایکٹیویٹ روٹ کلاس درآمد کی ہے۔ہم نے جزو کنسٹرکٹر میں ایکٹیویٹ روٹ سروس کو انجکشن لگایا ہے۔ہم نے استفسار پیرامیٹرز.ایئر سمری حاصل کرنے کے لئے ایکٹیویٹڈ راؤٹ سروس کی استفسار پیرا پراپرٹی تک رسائی حاصل کی ہے ، کونیولر روٹنگ میں استفسار پیرامس کی پراپرٹی کو استعمال کرنے کے لئے ، ڈویلپرز جزو میں @کونیی/روٹر سے ایکٹیویٹیڈ راؤٹ کلاس کو @کونییولر/روٹر سے درآمد کرسکتے ہیں ، جزو میں ایکٹیویٹیٹ راؤٹ سروس انجیکشن لگائیں۔کنسٹرکٹر ، اور استفسار پیرامیٹرز حاصل کرنے کے لئے ایکٹیویٹ روٹ سروس کی استفسار پیرامس پراپرٹی تک رسائی حاصل کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں انٹرفیس کو حل کرنے کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں حل انٹرفیس کا استعمال کسی جزو سے پہلے اعداد و شمار سے پہلے کی بازیافت کے لئے کیا جاتا ہے ، اور اس سے ڈویلپرز کو راستہ چالو ہونے سے پہلے ڈیٹا کو غیر متزلزل طور پر حل کرنے کی اجازت دیتا ہے۔حل کے انٹرفیس کے بارے میں کچھ اہم نکات یہ ہیں: حل انٹرفیس ایک کلاس ہے جو کونیی روٹر 1256 کے حل کے انٹرفیس کو نافذ کرتا ہے۔ حل انٹرفیس ایک ایسی خدمت ہے جسے روٹ ماڈیول 1256 میں فراہم کرنا پڑتا ہے۔کسی جزو کو بھری جانے سے پہلے اس پر عمل درآمد کیا جائے۔ ریزولو انٹرفیس ڈویلپرز کو کسی اجزاء سے پہلے لادنے سے پہلے ڈیٹا کو پہلے سے بازیافت کرنے کی اجازت دیتا ہے۔اپنے روٹنگ ماڈیول میں وضاحت کریں ، راؤٹر کے نیویگیشن لائف سائیکل کے دوران درخواستوں پر عملدرآمد کرنے کی اجازت دیتا ہے اس سے پہلے کہ آپ کے جزو کو لوڈ کیا جائے۔ سمری میں ، کونیی روٹنگ میں حل انٹرفیس کو کسی جزو سے پہلے اعداد و شمار سے پہلے کی بازیافت کرنے کے لئے استعمال کیا جاتا ہے ، اور یہ ڈویلپرز کو حل کرنے کی اجازت دیتا ہے۔راستے کو چالو کرنے سے پہلے اعداد و شمار متضاد طور پر۔ڈویلپرز کو حل کرنے والے انٹرفیس کا استعمال اعداد و شمار سے پہلے کی بازیافت کرنے ، اعداد و شمار کو غیر متزلزل طور پر حل کرنے ، اور اسے کسی بھی راستے میں شامل کرسکتے ہیں جس کی وہ اپنے روٹنگ ماڈیول میں بیان کرتے ہیں۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں نیویگیشن اسٹارٹ ایونٹ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں نیویگیشن اسٹارٹ ایونٹ کو استعمال کرنے کے لئے ، ڈویلپر ان مراحل پر عمل کرسکتے ہیں: روٹر کلاس کو @کونیی/روٹر سے اجزاء میں درآمد کریں۔نیویگیشن اسٹارٹ واقعہ کو سنبھالنے کے لئے صرف نیویگیشن اسٹارٹ ایونٹ کے واقعات۔ سبسکرائب () کا طریقہ استعمال کریں۔ یہاں کونییگولر روٹنگ میں نیویگیشن اسٹارٹ ایونٹ کو استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {اجزا} درآمد {راؤٹر ، نیویگیشن اسٹارٹ}'@کونیی/راؤٹر' سے 'rxjs/آپریٹرز' سے import درآمد {فلٹر@@اجزاء ({سلیکٹر: 'ایپ روٹ' ، ٹیمپلیٹ: `<p *ngif =\" shomessage \"> ایپ میں خوش آمدید! <//p> <روٹر آؤٹ لیٹ> </router-otlet> `}) ایکسپورٹ کلاس ایپکمپینٹ {shoveMessage = سچ ؛کنسٹرکٹر (نجی روٹر: روٹر) {this.router.events.pipe (فلٹر (واقعہ => واقعہ مثال کے طور پر نیویگیشن اسٹارٹ)). سبسکرائب ((واقعہ: نیویگیشن اسٹارٹ) => {this.showMessage = غلط ؛}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کیا ہے۔ہم نے روٹر کے واقعات کو سننے کے لئے روٹر کو سبسکرائب کیا ہے۔ہم نے واقعات کو صرف نیویگیشن اسٹارٹ ایونٹ میں فلٹر کرنے کے لئے فلٹر () آپریٹر کا استعمال کیا ہے۔ہم نے نیویگیشن اسٹارٹ ایونٹ ڈاٹ کام کو سنبھالنے کے لئے سبسکرائب () کا طریقہ استعمال کیا ہے ، کونیی روٹنگ میں نیویگیشن اسٹارٹ ایونٹ کو استعمال کرنے کے لئے ، ڈویلپرز جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کرسکتے ہیں ، سننے کے لئے روٹر کو سبسکرائب کریں۔روٹر واقعات کے ل investion ، واقعات کو صرف نیویگیشن اسٹارٹ ایونٹ میں فلٹر کرنے کے لئے فلٹر () آپریٹر کا استعمال کریں ، اور نیویگیشن اسٹارٹ ایونٹ کو سنبھالنے کے لئے سبسکرائب () کا طریقہ استعمال کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر اور ایکٹیویٹ روٹ کے درمیان کیا فرق ہے؟",
        "Answer": "روٹر اور ایکٹیویٹ روٹ کونیی روٹنگ میں دو مختلف کلاس ہیں جو مختلف مقاصد کے لئے استعمال ہوتے ہیں۔ان دونوں کے مابین اختلافات یہ ہیں: روٹر نے براؤزر میں یو آر ایل کی ترجمانی کی ہے اور ترتیب شدہ اجزاء 12 کو نیویگیشن کو سنبھالتا ہے۔ پورے ایپلی کیشن 2 کے لئے نیویگیشن اور روٹنگ۔پروگرام کے ساتھ کسی روٹ 3 پر تشریف لے جائیں۔اجزاء کے افعال اور استعمال کیا جاتا ہے ۔142. تمام ایک ہی خصوصیات کو ایکٹیویٹڈ راؤسٹنپ شاٹ کے طور پر مشاہدہ کرنے والے 5. خلاصہ کے طور پر بیان کرتا ہے۔ خلاصہ ، روٹر اور ایکٹیویٹیٹ روٹ کونیی روٹنگ میں دو مختلف کلاس ہیں جو مختلف مقاصد کے لئے استعمال ہوتے ہیں۔روٹر براؤزر میں یو آر ایل کی ترجمانی کرتا ہے اور نیویگیشن کو کنفیگرڈ جزو میں سنبھالتا ہے ، جبکہ ایکٹیویٹ روٹ میں کسی خاص لمحے میں کسی آؤٹ لیٹ میں بھری ہوئی ایک اجزاء سے وابستہ راستے کے بارے میں معلومات موجود ہوتی ہے اور وہ روٹ پیرامیٹرز ، استفسار پیرامیٹرز ، تک رسائی فراہم کرتی ہے ،اور روٹ کے ساتھ وابستہ ڈیٹا ۔1 اسٹیک اوور فلو 2 وی ایس اے وی ایس اے وی کے این 3 جی آئی ٹی بوک 4 ان لائن لائن ویو کوکسیشنز 5 اسٹیک اوور فلو"
    },
    {
        "Question": "آپ کونیی روٹنگ میں حل کی پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں حل کی پراپرٹی کا استعمال کسی جزو سے پہلے اعداد و شمار سے پہلے کی بازیافت کے لئے کیا جاتا ہے ، اور اس سے ڈویلپرز کو راستے کو چالو ہونے سے پہلے ڈیٹا کو غیر متزلزل طور پر حل کرنے کی اجازت ملتی ہے۔کونیی روٹنگ میں پراپرٹی کو حل کرنے کے لئے یہ اقدامات ہیں: ایک ایسی خدمت بنائیں جو حل کے انٹرفیس کو نافذ کرے۔ خدمت میں حل () کے طریقہ کار کو نافذ کریں۔ اعداد و شمار کو لانے کے لئے منطق کی وضاحت کریں اور اسے ایک مشاہدہ کے طور پر واپس کریں۔ خدمت کو شامل کریں۔ماڈیول کی فراہم کنندگان کی سرنی جو روٹ کا اعلان کرتی ہے۔ روٹ کو حل کرنے کی پراپرٹی کو شامل کریں اور اسے خدمت پر سیٹ کریں۔ یہاں کونیی روٹنگ میں حل کی پراپرٹی کو استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {انجیکشن}درآمد {حل کریں ، '@کونیی/راؤٹر' سے ایکٹیویٹڈ راؤسٹنپ شاٹ} 'rxjs' سے درآمد {مشاہدہ} سے '' ./data.service 'سے درآمد کریں {ڈیٹا سروس} سے'عمل کو حل کرنے کے لئے <کوئی بھی> {کنسٹرکٹر (نجی ڈیٹا سروس: ڈیٹا سروس) {} حل (روٹ: ایکٹیویٹڈ راؤسٹنپ شاٹ): مشاہدہ کرنے والا <کوئی بھی> {کانٹ ID = روٹ.پارامپ.یٹ ('ID') ؛اس کو واپس کریں۔ ڈیٹااسروائس۔ گیٹ ڈیٹا (ID) ؛}} مذکورہ بالا مثال میں ، ہم نے ایک ایسی خدمت تشکیل دی ہے جو حل کے انٹرفیس کو نافذ کرتی ہے۔ہم نے خدمت میں عزم () کے طریقہ کار کو نافذ کیا ہے اور اعداد و شمار کو لانے اور اسے مشاہدہ کرنے والے کے طور پر واپس کرنے کے لئے منطق کی وضاحت کی ہے۔ہم نے ماڈیول کے فراہم کنندگان میں خدمات کو شامل کیا ہے جو راستے کا اعلان کرتا ہے۔ہم نے روٹ میں حل کی پراپرٹی کو شامل کیا ہے اور اسے خدمت میں ترتیب دیا ہے۔ خلاصہ ، کونیی روٹنگ میں حل کرنے والی پراپرٹی کو استعمال کرنے کے لئے ، ڈویلپر ایک ایسی خدمت تشکیل دے سکتے ہیں جو حل کے انٹرفیس کو نافذ کرے ، خدمت میں حل () کے طریقہ کار کو نافذ کرے ، وضاحت کرے ، وضاحت کرے۔اعداد و شمار کو لانے اور اسے ایک قابل مشاہدہ کے طور پر واپس کرنے کی منطق ، روٹ کا اعلان کرنے والے ماڈیول کے فراہم کنندگان کی خدمت میں شامل کریں ، اور روٹ میں حل کی پراپرٹی کو شامل کریں اور اسے سروس میں سیٹ کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں نیوی گیشن ایونٹ کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں نیوی گیشن ایونٹ کا آغاز ہوتا ہے جب نیویگیشن کامیابی کے ساتھ ختم ہوجاتا ہے 123۔نیوی گیشن ایونٹ کے بارے میں کچھ اہم نکات یہ ہیں: نیویگیشن ایونٹ ایک کلاس ہے جو راؤٹر ایونٹ کلاس 1 میں توسیع کرتی ہے۔ نیویگیشن ایونٹ جب نیویگیشن کامیابی کے ساتھ ختم ہوتا ہے تو اس کا آغاز ہوتا ہے۔. نیوی گیشن ایونٹ کو نیویگیشن کے ختم ہونے کے بعد کچھ اقدامات کرنے کے لئے استعمال کیا جاسکتا ہے ، جیسے UI کو اپ ڈیٹ کرنا یا ڈیٹا 2 کو لانا۔ خلاصہ میں ، جب نیویگیشن کامیابی کے ساتھ ختم ہوجاتی ہے تو کونیی روٹنگ میں نیویگیشن ایونٹ متحرک ہوجاتا ہے۔ڈویلپر نیوی گیشن ایونٹ کا استعمال نیویگیشن کے ختم ہونے کے بعد کچھ اقدامات کرنے کے لئے کرسکتے ہیں ، جیسے UI کو اپ ڈیٹ کرنا یا ڈیٹا لانا۔"
    },
    {
        "Question": "کونیی روٹنگ میں آپ کینلوڈ انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں کین لوڈ انٹرفیس کا استعمال سست بوجھ والے ماڈیول کی لوڈنگ کو روکنے کے لئے کیا جاتا ہے اگر کچھ شرائط پوری نہ ہوں۔کونیی روٹنگ میں کینلوڈ انٹرفیس کو استعمال کرنے کے اقدامات یہ ہیں: ایک ایسی خدمت بنائیں جو کینلوڈ انٹرفیس کو نافذ کرے۔ خدمت میں کینلوڈ () کا طریقہ کار۔ماڈیول کی فراہم کنندگان کی خدمت جو سست بوجھ والے ماڈیول کا اعلان کرتی ہے۔ کین لوڈ پراپرٹی کو اس راستے پر لے جاتا ہے جو کاہل سے لادے ہوئے ماڈیول کو لوڈ کرتا ہے اور اسے خدمت پر سیٹ کرتا ہے۔ یہاں کونیولر روٹنگ میں کینلوڈ انٹرفیس کو استعمال کرنے کی ایک مثال ہے۔: '@کونیی/کور' سے import امپورٹ {انجیکشن} سے '@کونیی/راؤٹر' سے درآمد {کینلوڈ ، روٹ ، urlsegment '؛' rxjs 'سے درآمد {مشاہدہ} درآمد {itherserservice} سے' ./auth.service '؛ injectable ({فراہم کردہ: 'روٹ'}) برآمدی کلاس اتیگ گارڈ کے اوزار کینلوڈ {کنسٹرکٹر (پرائیویٹ ایوٹ سرویس: ایوٹ سرویس) {} کینلوڈ (روٹ: روٹ ، طبقات: urlsegment []): مشاہدہ <بولین> |وعدہ <بولین> |بولین {لوٹائیں۔}} مذکورہ بالا مثال میں ، ہم نے ایک ایسی خدمت تیار کی ہے جو کینلوڈ انٹرفیس کو نافذ کرتی ہے۔ہم نے خدمت میں کینلوڈ () کے طریقہ کار کو نافذ کیا ہے اور حالات کی جانچ پڑتال کرنے اور بولین یا بولین کا مشاہدہ کرنے والے کو واپس کرنے کے لئے منطق کی وضاحت کی ہے۔ہم نے ماڈیول کی فراہم کنندگان کی صف میں خدمت شامل کی ہے جو سست بھری ہوئی ماڈیول کا اعلان کرتی ہے۔ہم نے کینلوڈ پراپرٹی کو اس راستے میں شامل کیا ہے جو سست بھری ہوئی ماڈیول کو لوڈ کرتا ہے اور اسے سروس ڈاٹ کام پر سیٹ کرتا ہے ، کونیی روٹنگ میں کینلوڈ انٹرفیس استعمال کرنے کے لئے ، ڈویلپرز ایک ایسی خدمت تشکیل دے سکتے ہیں جو کینلوڈ انٹرفیس کو نافذ کرے ، کینلوڈ کو نافذ کرے (اس کو نافذ کرے (کینلوڈ کو نافذ کرے () خدمت میں طریقہ ، حالات کی جانچ پڑتال کے ل the منطق کی وضاحت کریں اور بولین کا ایک مشاہدہ کرنے والے یا بولین کا مشاہدہ کریں ، ماڈیول کے فراہم کنندگان کی صف میں خدمت شامل کریں جو کاہل سے بھرے ہوئے ماڈیول کا اعلان کرتا ہے ، اور اس راستے میں کین لوڈ پراپرٹی کو شامل کریں۔سست بھری ہوئی ماڈیول کو لوڈ کرتا ہے اور اسے سروس پر سیٹ کرتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں پاتھ مچ اسٹریٹی ڈاٹ فل اور پاتھ مچ اسٹریٹی.پرفکس کے درمیان کیا فرق ہے؟",
        "Answer": "پاتھ مچ اسٹریٹی ۔فلیٹ پاتھ مچ اسٹریٹی۔ فل کا مطلب یہ ہے کہ پورے یو آر ایل کے راستے کو میچ کرنے کی ضرورت ہے اور اس راستے سے ملنے والے راستے سے ملاپ کرنے والے روٹ مماثلات۔-پاتھ روٹس 5. رپوٹ میچ اسٹریٹی۔خلاصہ ، پاتھ مچ اسٹریٹی۔ فل کا مطلب یہ ہے کہ پورے یو آر ایل کے راستے کو میچ کرنے کی ضرورت ہے اور اس کو روٹ مماثل الگورتھم کے ذریعہ کھایا جاتا ہے ، جبکہ پاتھ مچ اسٹریٹی۔ پریفکس کا مطلب ہے کہ یہ راستہ پہلے مماثل سابقہ کے یو آر ایل کے راستے سے میل کھاتا ہے۔خالی راستہ کے راستوں کو ری ڈائریکٹ کرتے وقت پاتھ مچ اسٹریٹی.فول کو استعمال کرنا ضروری ہے ، جبکہ پاتھ مچ اسٹریٹی۔ پریفکس ڈیفالٹ راہ سے ملنے والی حکمت عملی ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں نیویگیشن کینسل ایونٹ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں نیویگیشن کینسل ایونٹ کو متحرک کیا جاتا ہے جب نیویگیشن منسوخ ہوجاتا ہے ، یا تو براہ راست یا بالواسطہ طور پر ، کچھ وجوہات کی وجہ سے جیسے روٹ گارڈ جھوٹا لوٹتا ہے یا جب نیویگیٹڈ روٹ بچوں کو 1234 لوڈ نہیں کیا جاسکتا ہے۔کونیی روٹنگ میں نیویگیشن کینسل ایونٹ کو استعمال کرنے کے لئے یہ اقدامات ہیں: روٹر کلاس کو @کونیی/روٹر سے جزو میں درآمد کریں۔ روٹر کو سبسکرائب کریں۔ روٹر واقعات کو سننے کے لئے پراپرٹی۔نیویگیشن کینسل ایونٹ کو سنبھالنے کے لئے صرف نیویگیشن کینسیل ایونٹ۔ سبسکرائب () کا طریقہ استعمال کریں۔ یہاں کونیی روٹنگ میں نیویگیشن کینسل ایونٹ کو استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {اجزا apport درآمد {راؤٹر ، نیویگیشن کینسل} منجانب '@کونیی/راؤٹر '' r ایکس جے ایس/آپریٹرز 'سے امپورٹ {فلٹر@@اجزاء ({سلیکٹر:' ایپ روٹ '، ٹیمپلیٹ: `<p *ngif =\" shomessage \"> ایپ میں خوش آمدید! </p><روٹر آؤٹ لیٹ> </روٹر آؤٹ لیٹ> `}) برآمد کلاس ایپکمپینٹ {شو میسیج = سچ ؛کنسٹرکٹر (نجی روٹر: روٹر) {this.router.events.pipe (فلٹر (واقعہ => واقعہ مثال کے طور پر نیویگیشن کینسل))) سبسکرائب کریں ((واقعہ: نیویگیشن کینسیل) => {کنسول.لاگ (واقعہ.ریون) ؛}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کیا ہے۔ہم نے روٹر کے واقعات کو سننے کے لئے روٹر کو سبسکرائب کیا ہے۔ہم نے فلٹر () آپریٹر کو واقعات کو صرف نیویگیشن کینسل ایونٹ میں فلٹر کرنے کے لئے استعمال کیا ہے۔ہم نے نیویگیشن کینسل ایونٹ ڈاٹ کام کو سنبھالنے کے لئے سبسکرائب () کا طریقہ استعمال کیا ہے۔روٹر واقعات کے ل invest ، واقعات کو صرف نیویگیشن کینسل ایونٹ میں فلٹر کرنے کے لئے فلٹر () آپریٹر کا استعمال کریں ، اور نیویگیشن کینسل ایونٹ کو سنبھالنے کے لئے سبسکرائب () کا طریقہ استعمال کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں ٹارگٹ پراپرٹی کے ساتھ روٹر لنک لنک ہدایت کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ٹارگٹ پراپرٹی کے ساتھ روٹر لنک لنک ہدایت کو نئے ٹیب یا ونڈو میں لنک کھولنے کے لئے استعمال کیا جاتا ہے۔ہدف کی پراپرٹی کی وضاحت کرتی ہے کہ منسلک دستاویز کہاں کھولنا ہے۔کونیی روٹنگ میں ہدف پراپرٹی کے ساتھ روٹر لنک لنک ہدایت کو استعمال کرنے کے اقدامات یہ ہیں: ہدف پراپرٹی کو روٹر لنک ہدایت میں شامل کریں۔ ہدف پراپرٹی کو _ بلینک میں سیٹ کریں۔ HREF پراپرٹی کو روٹر لنک لنک ہدایت میں شامل کریں۔ HREF پراپرٹی کو URL میں سیٹ کریں۔لنک.ہیرے کونیی روٹنگ میں ایک ہدف پراپرٹی کے ساتھ روٹر لنک لنک ہدایت کو استعمال کرنے کی ایک مثال ہے: <a routerlink=\"/example\" target=\"_blank\"> نئی ٹیب میں کھولیں </a> مذکورہ بالا مثال میں ، ہم نے مزید کہا ہے۔روٹر لنک لنک ہدایت کے لئے ہدف پراپرٹی اور اسے _ بلینک پر سیٹ کریں۔ہم نے HREF پراپرٹی کو روٹر لنک ہدایت میں شامل کیا ہے اور اسے لنک کے URL پر سیٹ کیا ہے۔ خلاصہ ان سمری میں ، کونیی روٹنگ میں ایک ہدف پراپرٹی کے ساتھ روٹر لنک لنک ہدایت کو نئے ٹیب یا ونڈو میں لنک کھولنے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز ہدف پراپرٹی کو روٹر لنک ہدایت میں شامل کرسکتے ہیں ، اسے _ بلینک میں سیٹ کرسکتے ہیں ، HREF پراپرٹی کو روٹر لنک ہدایت میں شامل کرسکتے ہیں ، اور اسے لنک کے URL میں سیٹ کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں نیویگیشن ایرر ایونٹ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں نیویگیشن ایرر ایونٹ کو متحرک کیا جاتا ہے جب غیر متوقع غلطی 123 کی وجہ سے نیویگیشن ناکام ہوجاتا ہے۔کونیی روٹنگ میں نیویگیشن ایرر ایونٹ کو استعمال کرنے کے لئے یہ اقدامات ہیں: @کونیولر/روٹر سے جزو میں روٹر کلاس درآمد کریں۔ روٹر پر جائیداد کی پراپرٹی کو سبسکرائب کریں۔ روٹر واقعات کو سننے کے لئے۔نیوی گیشن ایرٹر ایونٹ کو سنبھالنے کے لئے صرف نیوی گیشن ایونٹ۔ سبسکرائب () کا طریقہ استعمال کریں۔ یہاں نیویگیشن ایرر ایونٹ کونیولر روٹنگ میں استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {اجزاء {درآمد {راؤٹر ، نیویگیشن ایرر} سے '@کونیی/راؤٹر '' r ایکس جے ایس/آپریٹرز 'سے امپورٹ {فلٹر@@اجزاء ({سلیکٹر:' ایپ روٹ '، ٹیمپلیٹ: `<p *ngif =\" shomessage \"> ایپ میں خوش آمدید! </p><روٹر آؤٹ لیٹ> </روٹر آؤٹ لیٹ> `}) برآمد کلاس ایپکمپینٹ {شو میسیج = سچ ؛کنسٹرکٹر (نجی روٹر: روٹر) {this.router.events.pipe (فلٹر (واقعہ => واقعہ مثال کے طور پر نیوی گیشن ایرر)). سبسکرائب ((واقعہ: نیویگیشن ایرر) => {کنسول.لاگ (واقعہ.رور) ؛}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کیا ہے۔ہم نے روٹر کے واقعات کو سننے کے لئے روٹر کو سبسکرائب کیا ہے۔ہم نے فلٹر () آپریٹر کو صرف نیویگیشن ایرر ایونٹ میں واقعات کو فلٹر کرنے کے لئے استعمال کیا ہے۔ہم نے نیوی گیشن ایرر ایونٹ ڈاٹ کام کو سنبھالنے کے لئے سبسکرائب () کا طریقہ استعمال کیا ہے۔روٹر واقعات کے ل investion ، واقعات کو صرف نیویگیشن ایرر ایونٹ میں فلٹر کرنے کے لئے فلٹر () آپریٹر کا استعمال کریں ، اور نیوی گیشن ایرر ایونٹ کو سنبھالنے کے لئے سبسکرائب () کا طریقہ استعمال کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں ID اور /: ID کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں ، /: ID اور: ID روٹ پیرامیٹر کی وضاحت کے لئے استعمال ہوتا ہے۔دونوں کے مابین اختلافات یہ ہیں: /: idthe /: ID ایک روٹ پیرامیٹر ہے جو کسی بھی URL سے مماثل ہے جس کی ID طبقہ میں ایک قدر ہے۔کسی پیرامیٹر کو راستے میں منتقل کرنے اور پھر اس پیرامیٹر تک رسائی حاصل کرنے کے لئے استعمال کیا جاتا ہے تاکہ کچھ ڈیٹا 1 حاصل کرنے کے لئے API کال کریں۔پہلے مماثل پریفکس 4.: آئی ڈی: آئی ڈی ایک روٹ پیرامیٹر ہے جو کسی بھی یو آر ایل سے مماثل ہے جس کی ID طبقہ میں ایک قدر ہے۔راستے تک اور پھر اس پیرامیٹر تک رسائی حاصل کریں تاکہ کچھ ڈیٹا 56 حاصل کرنے کے لئے API کو کال کریں۔ ID: ID کو روٹ 56 کے متحرک حصے کی وضاحت کے لئے استعمال کیا جاتا ہے۔خلاصہ میں ، /: ID اور: ID کونیی روٹنگ میں روٹ پیرامیٹر کی وضاحت کے لئے استعمال کیا جاتا ہے۔وہ ایک پیرامیٹر کو راستے میں منتقل کرنے اور پھر اس پیرامیٹر تک رسائی حاصل کرنے کے لئے استعمال ہوتے ہیں تاکہ کچھ ڈیٹا حاصل کرنے کے لئے کسی API کو کال کریں۔وہ راستے کے ایک متحرک حصے کی وضاحت کرنے اور پہلے مماثل پیش کردہ پریفکس تک یو آر ایل کے راستے سے ملنے کے لئے بھی استعمال ہوتے ہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں رشتہ دار راستوں کے ساتھ آپ روٹر۔ نیویگیٹ () طریقہ کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں رشتہ دار راستوں کے ساتھ راؤٹر۔ نیویگیٹ () طریقہ استعمال کرنے کے لئے ، ڈویلپر ان مراحل پر عمل کرسکتے ہیں: روٹر اور ایکٹیویٹیٹ راؤٹ کلاس کو @کونیی/روٹر سے جزو میں درآمد کریں۔ موجودہ روٹ حاصل کرنے کے لئے ایکٹیویٹیڈ روٹ کلاس کا استعمال کریں۔ راؤٹر کا استعمال کریں۔.نویگیٹ () کسی رشتہ دار راستے پر تشریف لے جانے کا طریقہ۔ روٹر پر رشتہ دار راستے کے حصوں کی ایک صف کو راؤٹر پر پاس کریں۔ نیویگیٹ () طریقہ۔ ہر ایک مثال ہے جو کونیی روٹنگ میں رشتہ دار راستوں کے ساتھ راؤٹر۔ نیویگیٹ () طریقہ استعمال کرنے کی ایک مثال ہے: درآمد {اجزاء} سے '@کونیی/کور' ؛ امپورٹ {روٹر ، ایکٹیویٹ روٹ} سے '@کونیی/روٹر' ؛@اجزاء ({سلیکٹر: 'ایپ مثال' ، ٹیمپلیٹ: `<بٹن (کلک) =\" گوٹوسٹپ 2 () \"> مرحلہ 2 پر جائیں </بٹن> `}) برآمدی کلاس مثال کے طور پر کامپمنٹ {کنسٹرکٹر (نجی روٹر: راؤٹر ، نجی روٹ: ایکٹیویٹ روٹ) {} gotostep2 () {this.router.navegate (['../ Step2'] ، {متعلقہ: this.route}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر اور ایکٹیویٹ روٹ کلاس درآمد کی ہے۔ہم نے موجودہ راستہ حاصل کرنے کے لئے ایکٹیویٹ روٹ کلاس کا استعمال کیا ہے۔ہم نے رشتہ دار راستے پر تشریف لے جانے کے لئے روٹر ڈاٹ نیویگیٹ () کا طریقہ استعمال کیا ہے۔ہم نے روٹر کو رشتہ داروں کو استعمال کرنے کے لئے راؤٹر۔ نیویگیٹ () طریقہ کار کو سمری پر رشتہ دار راستے والے حصوں کی ایک صف منتقل کردی ہے۔جزو میں ، موجودہ راستے کو حاصل کرنے کے لئے ایکٹیویٹیڈ راؤٹ کلاس کا استعمال کریں ، روٹر۔ نیویگیٹ () کا طریقہ کسی رشتہ دار راستے پر جانے کے لئے استعمال کریں ، اور رشتہ دار راستے والے حصوں کی ایک صف کو روٹر پر منتقل کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں مقام کی خدمت کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں مقام کی خدمت کا استعمال کونیی ایپلی کیشن 123456 میں موجودہ URL راستے کے ساتھ بات چیت کرنے کے لئے کیا جاتا ہے۔مقام کی خدمت کے بارے میں کچھ اہم نکات یہ ہیں: مقام کی خدمت @کونیی/کامن ماڈیول 145 کا حصہ ہے۔ مقام کی خدمت ڈویلپرز کو موجودہ URL PATH123456 کے ساتھ بات چیت کرنے کی اجازت دیتی ہے۔ مقام کی خدمت کو موجودہ URL پڑھنے کے لئے استعمال کیا جاسکتا ہے ، اسے تبدیل کرنے کے لئے استعمال کیا جاسکتا ہے۔، استفسار کے پیرامیٹرز ، اور اس سے زیادہ 123456 کو اپ ڈیٹ کریں۔ مقام کی خدمت مفید ہے جب کونیی روٹر کی ضرورت نہیں ہوتی ہے یا جب ڈویلپرز کو روٹر 1 کو شامل کیے بغیر یو آر ایل کو متاثر کرنے کی ضرورت ہوتی ہے۔ مقام کی خدمت کو کسی جزو یا سروس 123456 میں انجکشن لگایا جاسکتا ہے۔کونیی روٹنگ میں سروس کونیی ایپلی کیشن میں موجودہ URL راستے کے ساتھ بات چیت کرنے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز لوکیشن سروس کا استعمال موجودہ یو آر ایل کو پڑھنے ، اسے تبدیل کرنے ، استفسار کے پیرامیٹرز کو اپ ڈیٹ کرنے اور بہت کچھ کے لئے استعمال کرسکتے ہیں۔مقام کی خدمت مفید ہے جب کونیی روٹر کی ضرورت نہیں ہوتی ہے یا جب ڈویلپرز کو روٹر کو شامل کیے بغیر یو آر ایل کو متاثر کرنے کی ضرورت ہوتی ہے۔مقام کی خدمت کو کسی جزو یا خدمت میں انجکشن لگایا جاسکتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں استفسار پیرامیٹرز کے ساتھ آپ روٹر ڈاٹ نیویگیٹ بائورل () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں استفسار پیرامیٹرز کے ساتھ راؤٹر ڈاٹ نیویگیٹ بائورل () کا طریقہ استعمال کرنے کے لئے ، ڈویلپر ان مراحل پر عمل پیرا ہوسکتے ہیں: @کونیی/روٹر سے جزو میں روٹر کلاس درآمد کریں۔استفسار پیرامیٹرز۔ ایک یو آر ایل سٹرنگ کو پاس کریں جس میں راؤٹر پر استفسار پیرامیٹرز شامل ہیں۔ نیویگیٹ بائورل () طریقہ۔ ہر ایک مثال ہے جو کونیی روٹنگ میں استفسار پیرامیٹرز کے ساتھ راؤٹر۔ نیویگیٹ بائورل () طریقہ استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {اجزاء}'@@کونیی/روٹر' سے {روٹر@@جزو ({سلیکٹر: 'ایپ مثال' ، ٹیمپلیٹ: `<بٹن (کلک) =\" gotoexample () \"> مثال کے طور پر </butt>`})برآمد کلاس مثال کے طور پر اجزاء {کنسٹرکٹر (نجی روٹر: روٹر) {} gotoexample () {کانسٹ کوئری پیرامس = {ID: '123' ، نام: 'مثال'} ؛this.router.navigatybyurl (`/مثال؟ $ {this.serialize (استفسار پیرمز)}`) ؛} نجی سیریلائز (OBJ: کوئی بھی): سٹرنگ {Cont params = [] ؛کے لئے (کون سے اعتراض میں کلید) {اگر (OBJ.HASOWNPROPERTY (KEY)) {params.push (`$ {encodeuricompient (KEY)} = $ {encodeuricompient (Obj [key])}`) ؛}} واپس پیرامس۔ جوین ('&') ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کیا ہے۔ہم نے استفسار پیرامیٹرز سمیت یو آر ایل سٹرنگ میں تشریف لے جانے کے لئے روٹر ڈاٹ نیویگیٹ بائورل () کا طریقہ استعمال کیا ہے۔ہم نے ایک یو آر ایل سٹرنگ کو پاس کیا ہے جس میں استفسار کے پیرامیٹرز شامل ہیں۔ راؤٹر ڈاٹ نیویگیٹ بائورل () طریقہ کار۔ ان سمری ، کونیی روٹنگ میں استفسار پیرامیٹرز کے ساتھ روٹر۔ نیویگیٹ بائورل () طریقہ استعمال کرنے کے لئے ، ڈویلپرز @کونیی/روٹر سے روٹر کلاس درآمد کرسکتے ہیںاجزاء ، استفسار پیرامیٹرز سمیت یو آر ایل سٹرنگ پر تشریف لے جانے کے لئے روٹر.نویگیٹ بائورل () کا طریقہ استعمال کریں ، اور یو آر ایل سٹرنگ کو استفسار پیرامیٹرز سمیت راؤٹر۔ نیویگیٹ بائورل () طریقہ ۔1 گیتھب 2 اسٹیک اوور فلو 3 ٹیلرلیکولر 5 گیٹ بوک پر پاس کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر.ایونٹس اور روٹر۔ ایوینٹس۔ سبسکرائب () میں کیا فرق ہے؟",
        "Answer": "روٹر۔ ایونٹ اور روٹر۔ ایوینٹس۔ سبسکرائب () کونیی روٹنگ میں روٹر واقعات کو سننے کے لئے استعمال ہوتے ہیں۔دونوں کے مابین اختلافات یہ ہیں: روٹر۔ ایونٹ راؤٹر۔ ایونٹ راؤٹر کلاس کی ایک پراپرٹی ہے جو تمام روٹر واقعات 1234 کے قابل مشاہدہ کو لوٹتی ہے۔مفید جب ڈویلپرز کو تمام روٹر واقعات کو سننے کی ضرورت ہوتی ہے۔) تمام روٹر واقعات 533 کے مشاہدہ کرنے کے لئے استعمال کیا جاتا ہے۔کونیی روٹنگ میں روٹر واقعات کو سننے کے لئے استعمال کیا جاتا ہے۔روٹر۔ ایونٹ کا استعمال تمام روٹر واقعات کا مشاہدہ کرنے کے لئے کیا جاتا ہے اور جب ڈویلپرز کو روٹر کے تمام واقعات کو سننے کی ضرورت ہوتی ہے تو وہ مفید ہے۔روٹر.ایونس.سوبسکرائب () تمام روٹر واقعات کے مشاہدہ کرنے والے کو سبسکرائب کرنے کے لئے استعمال کیا جاتا ہے اور مفید ہے جب ڈویلپرز کو کسی مخصوص روٹر ایونٹ کو سننے کی ضرورت ہوتی ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں راؤٹیرسیسٹریٹی انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں راؤٹیریسیسٹریٹی انٹرفیس کو استعمال کرنے کے لئے ، ڈویلپر ان مراحل پر عمل پیرا ہوسکتے ہیں: ایک نئی کلاس بنائیں جو راؤٹیرسسٹریجی انٹرفیس کو نافذ کرے۔کلاس۔ روٹ کے دوبارہ استعمال کے طرز عمل پر قابو پانے کے لئے ہر طریقہ کار کی منطق کی وضاحت کریں۔ نئی کلاس کو موجودہ راؤٹیرسسٹریجی کلاس کی قدر کے طور پر فراہم کریں۔ یہاں کونیی روٹنگ میں راؤٹیریسیسٹریٹی انٹرفیس کو استعمال کرنے کی ایک مثال ہے: 'ing@انجیکشن}'/کور 'import درآمد {routerreusestrategy ، activedroutesnapshot ،'@کونیی/راؤٹر 'سے الگ الگ ہینڈل@@انجیکشن ایبل () برآمدی کلاس کسٹمرسٹریسیسٹرجی اوزار راؤٹیرسیسٹرجی {کو لازمی طور پر لازمی طور پر (مستقبل: ایکٹیویٹیٹ راؤٹ راؤسٹنپ شاٹ: چالو)curr.routeconfig ؛} کیڈٹاچ (روٹ: ایکٹیویٹڈ راؤسٹنپ شاٹ): بولین {سچ واپس ؛} اسٹور (روٹ: ایکٹیویٹڈ راؤٹ ایس این اے پی شاٹ ، ہینڈل: علیحدہ روٹ ہینڈل): باطل {سیشن اسٹوریج.سیٹ آئٹم (روٹ.روٹیکونفگ.پاتھ ، json.stringify (ہینڈل)) ؛} کیڈٹاچ (روٹ: ایکٹیویٹڈ راؤٹ ایس این اے پی شاٹ): بولین {واپسی !! سیشن اسٹوریج.جیٹ آئٹم (روٹ.روٹیکونفگ.پاتھ) ؛} بازیافت (روٹ: ایکٹیویٹیڈ راؤٹ نپ شاٹ): ڈسٹریوٹ راؤٹ ہینڈل {json.parse واپس کریں (سیشن اسٹوریج.جیٹ آئٹم (روٹ.روٹیکونفگ.پاتھ)) ؛}} مذکورہ بالا مثال کے طور پر ، ہم نے ایک نئی کلاس تشکیل دی ہے جو راؤٹیریسٹریسٹیجی انٹرفیس کو نافذ کرتی ہے۔ہم نے کلاس میں reareuseroute () ، canddetach () ، store () ، کینڈٹاچ () ، اور بازیافت () کے طریقے نافذ کیے ہیں۔ہم نے روٹ کے دوبارہ استعمال کے طرز عمل پر قابو پانے کے لئے ہر طریقہ کار کی منطق کی وضاحت کی ہے۔ہم نے نئی کلاس کو موجودہ راؤٹیرسسٹریجی کلاس کی قدر کے طور پر فراہم کیا ہے۔ خلاصہ میں ، کونیی روٹنگ میں راؤٹیرسسٹریجی انٹرفیس کو استعمال کرنے کے لئے ، ڈویلپرز ایک نئی کلاس تشکیل دے سکتے ہیں جو راؤٹیرسیسٹریٹی انٹرفیس کو نافذ کرتا ہے ، کینڈریوسروٹ () ، کونٹ ڈیٹ () ، اسٹور کو نافذ کرتا ہے ،() ، کنڈٹاچ () ، اور کلاس میں () طریقوں کو بازیافت کریں ، روٹ کے دوبارہ استعمال کے طرز عمل کو کنٹرول کرنے کے لئے ہر طریقہ کار کے ل the منطق کی وضاحت کریں ، اور موجودہ راؤٹریسیسٹریٹیجی کلاس کو ایک قدر کے طور پر فراہم کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں کینیکٹیویٹیکلڈ گارڈ کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں کینیکٹیویٹیچیلڈ گارڈ ایک ایسا روٹ گارڈ ہے جو یہ فیصلہ کرنے کے لئے استعمال ہوتا ہے کہ صارف بچوں کے راستوں پر تشریف لے جاسکتا ہے یا اجازت نامہ 1234 پر مبنی نہیں ہے۔کینیکٹیویٹیچلڈ گارڈ کے بارے میں کچھ کلیدی نکات یہ ہیں: کینیکٹیویٹیچیلڈ گارڈ ایک انٹرفیس ہے جس کو یہ فیصلہ کرنے کے لئے نافذ کیا جاسکتا ہے کہ اگر کسی بچے کے راستے کو چالو کیا جاسکتا ہے۔بچوں کے راستے پر قابو پالیں۔گارڈ جو فیصلہ کرنے کے لئے استعمال ہوتا ہے کہ آیا صارف بچوں کے راستوں پر تشریف لے جاسکتا ہے یا اجازت پر مبنی نہیں۔ڈویلپرز بچوں کے راستوں تک رسائی کو کنٹرول کرنے اور اجازت کی بنیاد پر رسائی کو محدود کرنے کے لئے کینیکٹیو ٹیچیلڈ گارڈ انٹرفیس کو نافذ کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں جزو مثال کے ساتھ آپ کینڈی ایکٹیویٹیگاڈارڈ انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں جزو مثال کے ساتھ کینڈی ایکٹیویٹٹیو گارڈ انٹرفیس کو استعمال کرنے کے لئے ، ڈویلپر ان اقدامات پر عمل پیرا ہوسکتے ہیں: ایک نئی کلاس بنائیں جو کینڈی ایکٹیویٹ انٹرفیس کو نافذ کرے۔ کلاس میں کینڈیکٹیوٹ () کے طریقہ کار کو نافذ کریں۔کسی روٹ کو غیر فعال کرنے کا طرز عمل۔ نئی کلاس کو موجودہ کینڈیکٹیویٹ کلاس کی قدر کے طور پر فراہم کریں۔ یہاں کونیولر روٹنگ میں جزو مثال کے ساتھ کینڈیکٹیٹیو زمرہ انٹرفیس کو استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {انجیکشن {امپورٹ {کینڈیکٹیویٹیٹ۔} سے '@کونیی/روٹر' ؛@انجیکشن ایبل () ایکسپورٹ کلاس کسٹم کینڈیٹیکٹیو گارڈ کینڈی کو ایکٹیویٹیٹ <اجزاء نام> {کینڈی ایکٹیویٹیٹ (اجزاء: اجزاء کا نام): بولین {ریٹرن اجزاء.کینڈایکٹیٹ ()) ؛}} مذکورہ بالا مثال میں ، ہم نے ایک نئی کلاس تشکیل دی ہے جو کینڈی کوٹیویٹ انٹرفیس کو نافذ کرتا ہے۔ہم نے کلاس میں کینڈی ایکٹیویٹ () کے طریقہ کار کو نافذ کیا ہے۔ہم نے کسی راستے کو غیر فعال کرنے کے طرز عمل کو کنٹرول کرنے کے لئے کینڈیکٹیوٹ () کے طریقہ کار کے لئے منطق کی وضاحت کی ہے۔ہم نے نئی کلاس کو موجودہ کینڈیکٹیوٹیٹ کلاس کے لئے ایک قدر کے طور پر فراہم کیا ہے۔ خلاصہ ، کونیولر روٹنگ میں جزو مثال کے ساتھ کینڈی ایکٹیویٹیگاڈارڈ انٹرفیس کو استعمال کرنے کے لئے ، ڈویلپرز ایک نئی کلاس تشکیل دے سکتے ہیں جو کینڈی ایکٹیویٹ انٹرفیس کو نافذ کرتا ہے ، کینڈیکٹیوٹیٹ () کے طریقہ کار کو نافذ کرتا ہے ()کلاس ، کسی راستے کو غیر فعال کرنے کے طرز عمل پر قابو پانے کے لئے کینڈیکٹیوٹیٹ () کے طریقہ کار کے لئے منطق کی وضاحت کریں ، اور موجودہ کینڈی کوٹیویٹ کلاس کو ایک قدر کے طور پر فراہم کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر اور روٹرموڈول میں کیا فرق ہے؟",
        "Answer": "راؤٹر اور روٹرموڈول دونوں کونیی روٹنگ میں استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کو پورا کرتے ہیں۔ان دونوں کے مابین اختلافات یہ ہیں: روٹر روٹر @کونیی/راؤٹر پیکیج میں ایک کلاس ہے جو کونیی روٹر 123 کی نیویگیشن اور یو آر ایل کی ہیرا پھیری کی صلاحیتوں کو مہیا کرتا ہے۔ راؤٹر راستوں کے مابین تشریف لے جانے ، روٹ پیرامیٹرز کو بازیافت کرنے ، اور مزید 123. تھی۔روٹر کو پروگرام کے ساتھ مختلف روٹ 4 پر تشریف لے جانے کے لئے استعمال کیا جاتا ہے۔ راؤٹر کو موجودہ یو آر ایل پاتھ 1 کے ساتھ بات چیت کرنے کے لئے استعمال کیا جاتا ہے۔ راؤٹرموڈولیٹ راؤٹروموڈول @کونیی/راؤٹر پیکیج میں ایک ماڈیول ہے جو راؤٹر کنفیگریشن اور ہدایت نامہ فراہم کرتا ہے۔کونیی ایپلی کیشن 15623 کے لئے راؤٹر کی ترتیب اور راستے۔ روٹرموڈول راؤٹر آؤٹ لیٹ ہدایت کا اعلان کرنے کے لئے استعمال کیا جاتا ہے ، جو موجودہ روٹ 15623 کے جزو کو ظاہر کرنے کے لئے استعمال ہوتا ہے۔ راؤٹرموڈول کو راؤٹر سروس کو ایپلی کیشن 15623.in سمری ، راؤٹر ، اور اور اور اور اور اور اور اور اور اور اور اور اور اوری کو استعمال کیا جاتا ہے۔روٹرموڈول دونوں کونیی روٹنگ میں استعمال ہوتے ہیں ، لیکن وہ مختلف مقاصد کی تکمیل کرتے ہیں۔روٹر کو راستوں کے مابین تشریف لے جانے ، روٹ پیرامیٹرز کو بازیافت کرنے اور موجودہ یو آر ایل کے راستے کے ساتھ بات چیت کرنے کے لئے استعمال کیا جاتا ہے۔روٹر ماڈل کو کونیی ایپلی کیشن کے لئے روٹر کنفیگریشن اور راستوں کی وضاحت کرنے ، روٹر آؤٹ لیٹ ہدایت کا اعلان کرنے ، اور درخواست کو روٹر سروس فراہم کرنے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایکٹیویٹیڈ روٹ۔ کووریپرامس پراپرٹی کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ایکٹیویٹیڈ راؤٹ۔ کیوریپرامس پراپرٹی کا استعمال موجودہ URL123456 سے استفسار کے پیرامیٹرز کو پڑھنے کے لئے کیا جاتا ہے۔ایکٹیویٹیڈ روٹ کو استعمال کرنے کے لئے یہاں اقدامات ہیں۔ کوئیرپرمس پراپرٹی: جزو میں @کونیی/روٹر سے ایکٹیویٹیڈ راؤٹ کلاس درآمد کریں۔ اجزاء کے کنسٹرکٹر میں ایکٹیویٹیٹ راؤٹ کلاس کو شامل کریں۔. ایکٹیویٹیڈ راؤٹ کے لئے سبسکرائب کریں۔ کوئری پیرامس کو استفسار کے پیرامیٹرز حاصل کرنے کے لئے قابل مشاہدہ کیا جاسکتا ہے۔ یہاں کونیولر روٹنگ میں ایکٹیویٹیڈ راؤٹ۔ کوئری پیرامس پراپرٹی کو استعمال کرنے کی ایک مثال ہے: '@کونیی/کور' سے درآمد {جزو can کو امپورٹ کریں {ایکٹیویٹیٹ روٹ} سے '@کونیولر/@کونیولر/کور'راؤٹر '؛@اجزاء ({سلیکٹر:' ایپ مثال '، ٹیمپلیٹ: `<p> استفسار پیرامیٹر: {{استفسار پیرام}} </p>` `) ایکسپورٹ کلاس مثال کے طور پر {استفسار پیرم: سٹرنگ ؛کنسٹرکٹر (نجی روٹ: ایکٹیویٹڈ روٹ) {this.route.queryparams.subscribe (پیرامس => {this.queryparam = پیرامس ['مثال'] ؛}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے ایکٹیویٹ روٹ کلاس درآمد کی ہے۔ہم نے جزو کے کنسٹرکٹر میں ایکٹیویٹ روٹ کلاس انجکشن لگایا ہے۔استفسار پیرامیٹرز کا مشاہدہ کرنے کے لئے ہم نے ایکٹیویٹ راؤٹ۔ کوئیرپرمس پراپرٹی تک رسائی حاصل کی ہے۔ہم نے ایکٹیویٹیڈ روٹ۔ کوئری پیرامس کو استفسار پیرامیٹرز حاصل کرنے کے لئے مشاہدہ کیا ہے۔ خلاصہ۔اجزاء کے تعمیر کنندہ ، استفسار کے پیرامیٹرز کا مشاہدہ کرنے کے لئے ایکٹیویٹڈ راؤٹ۔ کیوریپرامس پراپرٹی تک رسائی حاصل کریں ، اور ایکٹیویٹیڈ روٹ کو سبسکرائب کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں لوکیشن اسٹریٹی انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں مقامات کی تعمیر کا انٹرفیس براؤزر کے یو آر ایل 123 میں اپنی ریاست کی نمائندگی کے لئے مقام کی خدمت کو تشکیل دینے کے لئے استعمال کیا جاتا ہے۔مقامات کی تعمیر کے بارے میں کچھ اہم نکات یہ ہیں: مقامات کی تشکیل ایک خلاصہ کلاس ہے جو تمام مقام کی حکمت عملیوں کے لئے بنیادی فعالیت فراہم کرتی ہے۔براؤزر کے URL123 میں اپنی ریاست کی نمائندگی کرنے کے لئے مقام کی خدمت۔ مقامات کی تعمیر میں کونیی میں دو نفاذ ہیں: پاتھ لوکیشن اسٹریٹی اور ہیشلوکیشن اسٹریٹی 245۔ راہیں کی تیاری کا استعمال براؤزر کے URL245 کی راہ میں اس کی حالت کی نمائندگی کرنے کے لئے مقام کی خدمت کو تشکیل دینے کے لئے استعمال کیا جاتا ہے۔براؤزر کے URL1245.IN سمری کے ہیش ٹکڑے میں اس کی ریاست کی نمائندگی کرنے کے لئے مقام کی خدمت ، کونیی روٹنگ میں مقامات کی تعمیر کا انٹرفیس براؤزر کے یو آر ایل میں اس کی ریاست کی نمائندگی کرنے کے لئے مقام کی خدمت کو تشکیل دینے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز براؤزر کے یو آر ایل کے راستے یا ہیش کے ٹکڑے میں اس کی ریاست کی نمائندگی کرنے کے لئے مقام کی خدمت کو تشکیل دینے کے لئے پاتھ لوکیشن اسٹریٹی یا ہیشلوکیشن اسٹریٹیجی عمل کو استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں آپ اسکرولپوزیشن ریسٹوریشن آپشن کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں اسکرولپوزیشن ریسٹوریشن آپشن کو استعمال کرنے کے لئے ، ڈویلپر ان مراحل کی پیروی کرسکتے ہیں: ایپ-routing.module.ts فائل کھولیں۔'. آبجیکٹ کو روٹر موڈل پر پاس کریں۔ فوروروٹ () طریقہ۔ ہر ایک مثال ہے جو کونیی روٹنگ میں اسکرولپوزیشن ریسٹوریشن آپشن کو استعمال کرنے کی ایک مثال ہے:'@کونیی/کور 'سے درآمد {ngmodule} درآمد کریں ؛کونیی/راؤٹر '؛ کانسٹ روٹس: روٹس = [// اپنے راستوں کی یہاں وضاحت کریں] const سکرولوپشنز کو کنسٹ: ایکسٹراپشنز = {اسکرولپوزیشن ریسٹوریشن:' فعال '،}@ngmodule ({درآمدات: [روٹرموڈول.فوروروٹ (روٹس ، اسکرولپشنز) ،] ،برآمدات: [روٹر موڈل]}) مندرجہ بالا مثال کے طور پر ، ہم نے ایپ-routing.module.ts فائل کو کھول دیا ہے۔ہم نے @کونیی/روٹر سے ایکسٹراپشن انٹرفیس درآمد کیا ہے۔ہم نے قسم کے اضافی اشارے کی ایک شے کی وضاحت کی ہے اور اسکرولپوزیشن ریسٹوریشن پراپرٹی کو 'قابل' پر سیٹ کیا ہے۔ہم نے آبجیکٹ کو روٹر موڈل.فوروٹ () طریقہ کار کو منتقل کیا ہے۔ خلاصہ ، کونیی روٹنگ میں اسکرولپوزیشن ریسٹوریشن آپشن کو استعمال کرنے کے لئے ، ڈویلپرز ایپ روٹنگ.موڈول ڈاٹ ٹی ایس فائل کو کھول سکتے ہیں ، @کونیی/روٹر سے ایکسٹراپشن انٹرفیس درآمد کرسکتے ہیں۔قسم کی ایکسٹراپشنز کا ایک شے اور اسکرولپوزیشن ریسٹوریشن پراپرٹی کو 'قابل' پر سیٹ کریں ، اور اس آبجیکٹ کو راؤٹر موڈل.فوروٹ () طریقہ ۔1dsebastien2stackoverflow3angular4damirscorner5sap پر منتقل کریں"
    },
    {
        "Question": "\"[روٹر لنک] =\" \"['/پاتھ' ، {پیرم: ویلیو}]\" \"اور [روٹر لنک] =\" \"['/پاتھ' ، پیرم ، ویلیو]\" \"کے درمیان کیا فرق ہے؟\"",
        "Answer": "[روٹر لنک] = \"\" ['/راستہ' ، {پیرم: ویلیو}] \"\" اور [روٹر لنک] = \"\" ['/پاتھ' ، پیرم ، ویلیو] \"\" دونوں مختلف راستے میں تشریف لے جانے کے لئے استعمال ہوتے ہیںکونیی روٹنگ ، لیکن ان میں مختلف نحو اور استعمال ہے۔دونوں کے مابین اختلافات یہ ہیں: [روٹر لنک] = \"['/پاتھ' ، {پیرم: ویلیو}]\" [روٹر لنک] = \"['/پاتھ' ، {پیرم: ویلیو}]\" نحو کو گزرنے کے لئے استعمال کیا جاتا ہےروٹ 123 پر استفسار پیرامیٹرز کا ایک مقصد۔، {پیرم: ویلیو}] \"نحو مفید ہے جب ڈویلپرز کو متعدد استفسار کے پیرامیٹرز کو روٹ 123 پر منتقل کرنے کی ضرورت ہوتی ہے۔، پیرم ، ویلیو] \"نحو کو استفسار پیرامیٹرز کو راستے میں علیحدہ پیرامیٹرز 123 کے طور پر منتقل کرنے کے لئے استعمال کیا جاتا ہے۔روٹر لنک] = \"['/پاتھ' ، پیرم ، ویلیو]\" نحو مفید ہے جب ڈویلپرز کو ایک ہی استفسار پیرامیٹر کو روٹ 123.in خلاصہ پر منتقل کرنے کی ضرورت ہوتی ہے ، [روٹر لنک] = \"['/راستہ' ، {پیرم: ویلیو: ویلیو}] \"اور [روٹر لنک] =\" ['/پاتھ' ، پیرام ، ویلیو] \"دونوں کونیی روٹنگ میں ایک مختلف راستے پر جانے کے لئے استعمال ہوتے ہیں ، لیکن ان میں مختلف نحو اور استعمال ہوتا ہے۔[روٹر لنک] = \"['/راستہ' ، {پیرم: ویلیو}]\" نحو کو استفسار کے پیرامیٹرز کے کسی شے کو راستے میں منتقل کرنے کے لئے استعمال کیا جاتا ہے اور جب ڈویلپرز کو متعدد استفسار پیرامیٹرز کو راستے میں منتقل کرنے کی ضرورت ہوتی ہے۔[روٹر لنک] = \"['/پاتھ' ، پیرم ، ویلیو]\" نحو کو استفسار پیرامیٹرز کو راستے میں علیحدہ پیرامیٹرز کے طور پر منتقل کرنے کے لئے استعمال کیا جاتا ہے اور جب ڈویلپرز کو ایک ہی سوال پیرامیٹر کو روٹ پر منتقل کرنے کی ضرورت ہوتی ہے۔"
    },
    {
        "Question": "کونیولر روٹنگ میں آپ کوئیر پیرامشینڈلنگ پراپرٹی کے ساتھ آپ روٹر۔ نیویگیٹ () طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں راؤٹر۔ نیویگیٹ () طریقہ کار پروگرام کے لحاظ سے ایک مختلف روٹ پر تشریف لے جانے کے لئے استعمال ہوتا ہے۔استفسار پیرامشینڈلنگ پراپرٹی کو یہ بتانے کے لئے استعمال کیا جاتا ہے کہ جب کسی مختلف راستے پر تشریف لاتے وقت استفسار کے پیرامیٹرز کو ہینڈل کیا جائے۔استفسار پیرا میشینڈلنگ پراپرٹی کے ساتھ روٹر۔ نیویگیٹ () طریقہ استعمال کرنے کے اقدامات یہ ہیں: اجزاء میں @کونیی/روٹر سے راؤٹر کلاس درآمد کریں۔ اجزاء کے کنسٹرکٹر میں راؤٹر کلاس کو شامل کریں۔یو آر ایل طبقات کی ایک صف اور استفسار پیرامیٹرز کی ایک شے کے ساتھ۔ استفسار پیرامیٹرز کو کس طرح سنبھالنے کا طریقہ یہ بتانے کے لئے استفسار پیرا میشینڈلنگ پراپرٹی کو 'انضمام' یا 'محفوظ' کرنے کے لئے سیٹ کریں۔ یہاں استفسار پیرام شینڈنگ پراپرٹی کے ساتھ روٹر۔ نیویگیٹ () کے طریقہ کار کو استعمال کرنے کی ایک مثال ہے۔کونیی روٹنگ میں: '@کونیی/کور' سے {اجزاء} درآمد {روٹر@'@کونیی/روٹر' سے درآمد کریں@@اجزاء ({سلیکٹر: 'ایپ مثال' ، ٹیمپلیٹ: `<بٹن (کلک) =\"gotoexample () \"> مثال کے طور پر جائیں </buttain>`}) کلاس مثال کے طور پر کامپلوینٹر {کنسٹرکٹر (نجی روٹر: روٹر) {} gotoexample () {کانسٹور کوئری پیرامس = {id: '123' ، نام: 'مثال'} ؛this.router.navigate (['/مثال'] ، {استفسار پیرمز ، استفسار پیرام شینڈلنگ: 'ضم'}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کیا ہے۔ہم نے جزو کے کنسٹرکٹر میں روٹر کلاس انجکشن لگایا ہے۔ہم نے URL طبقات کی ایک صف اور استفسار پیرامیٹرز کی ایک چیز کے ساتھ روٹر.نویگیٹ () طریقہ کو بلایا ہے۔ہم نے استفسار پیرامیٹرز کو موجودہ استفسار پیرامیٹرز کے ساتھ ضم کرنے کے لئے 'ضم' کرنے کے لئے کوئری پیرا میسینڈلنگ پراپرٹی کا تعین کیا ہے۔اجزاء میں کونیی/روٹر ، جزو کے کنسٹرکٹر میں روٹر کلاس انجیکشن لگائیں ، URL طبقات کی ایک صف اور استفسار پیرامیٹرز کی ایک چیز کے ساتھ راؤٹر۔ نیویگیٹ () کے طریقہ کار کو کال کریں ، اور استفسار پیرامشینڈلنگ پراپرٹی کو 'انضمام' پر سیٹ کریں '۔استفسار کے پیرامیٹرز کو کس طرح سنبھالنے کا طریقہ بتانے کے لئے محفوظ کریں"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر پرلوڈر سروس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں روٹر پرلوڈر سروس کا استعمال کونیی ایپلی کیشن 1 میں سست بوجھ والے راستوں کو پہلے سے لوڈ کرنے کے لئے استعمال کیا جاتا ہے۔روٹر پرلوڈر کے بارے میں کچھ کلیدی نکات یہ ہیں: روٹر پرلوڈر @کونیی/راؤٹر پیکیج میں ایک خدمت ہے جو ایپلی کیشن کے لازمی طور پر بھری ہوئی حصوں میں نیویگیشن بنانے کے لئے تمام راؤٹر کنفیگریشن کو پہلے سے لوڈ کرتا ہے۔کونیی ایپلی کیشن 1 میں سست بھری ہوئی روٹس۔ روٹر پرلوڈر کو حقیقت کی ضرورت سے پہلے لیزی لڈ روٹس کی تشکیل کو لوڈ کرنے کے لئے استعمال کیا جاتا ہے۔ روٹرل لوڈر مفید ہے جب ڈویلپرز کو کونیی ایپلی کیشن 1.in میں سست بھری ہوئی راستوں کی کارکردگی کو بہتر بنانے کی ضرورت ہوتی ہے۔خلاصہ ، کونیی روٹنگ میں روٹر پرلوڈر سروس کونیی ایپلی کیشن میں سست بوجھ والے راستوں کو پہلے سے لوڈ کرنے کے لئے استعمال کیا جاتا ہے۔ڈویلپرز روٹر پرلوڈر کا استعمال سست بھری ہوئی راستوں کی کارکردگی کو بہتر بنانے اور ان کی ترتیب کو حقیقت میں درکار ہونے سے پہلے ہی لوڈ کرنے کے لئے استعمال کرسکتے ہیں۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینیکٹیویٹیکلڈ انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینیکٹیویٹیچیلڈ انٹرفیس کو استعمال کرنے کے لئے ، ڈویلپرز ان اقدامات پر عمل پیرا ہوسکتے ہیں: ایک نئی کلاس بنائیں جو کینیکٹیویٹیکلڈ انٹرفیس کو نافذ کرے۔بچوں کے راستے کو چالو کرنے کا سلوک۔ نئی کلاس کو والدین کے روٹ کی کینیکٹیویٹیکلڈ پراپرٹی کی قدر کے طور پر فراہم کریں۔ ایک سے زیادہ محافظوں کو والدین کے روٹ کی کینیکٹیویٹیکلڈ پراپرٹی میں منتقل کرنے کے لئے ایک صف کا استعمال کریں۔ یہاں ایک سے زیادہ کینٹیٹیٹیکلڈ انٹرفیس کے ساتھ ایک مثال ہے۔کونیی روٹنگ میں گارڈز: '@کونیی/کور' سے درآمد {انجیکشن ایبل {امپورٹ {CanactivateChild ، ایکٹیویٹیٹ راؤسٹنپ شاٹ ، روٹسٹیٹسناپ شاٹ} سے '@کونیی/راؤٹر' ؛@انجیکشن کلاس () ایکسپورٹ کلاس کسٹینیٹیوٹیکیلڈ گارڈ (Canactivatechild {Canactivatechild {Canactivatechild {Canactivatechild {Canactivatechild {Canactivatechild es: روٹسٹیٹیسناپ شاٹ): بولین {// اپنی منطق کی وضاحت یہاں سچ واپس کریں۔}} مذکورہ بالا مثال میں ، ہم نے ایک نئی کلاس تشکیل دی ہے جو کینیکٹیویٹیکلڈ انٹرفیس کو نافذ کرتی ہے۔ہم نے کلاس میں کینیکٹیو ٹیچیلڈ () کے طریقہ کار کو نافذ کیا ہے۔ہم نے بچے کے راستے کو چالو کرنے کے طرز عمل پر قابو پانے کے لئے کینیکٹیویٹیچیلڈ () کے طریقہ کار کی منطق کی وضاحت کی ہے۔ہم نے نئی کلاس کو والدین کے روٹ کی کینیکٹیویٹیچیلڈ پراپرٹی کو ایک قیمت کے طور پر فراہم کیا ہے۔ والدین کے راستے کی کینیکٹیویٹیکلڈ پراپرٹی کے ساتھ ایک سے زیادہ گارڈز کا استعمال کرنے کے لئے ، ڈویلپرز محافظوں کو پراپرٹی کو منتقل کرنے کے لئے ایک صف کا استعمال کرسکتے ہیں: کونسٹ روٹس = [راستے = [{راستہ: 'والدین' ، اجزاء: پیرنٹکمپینٹ ، کینیکٹیویٹیٹیچلڈ: [کسٹم کیناٹیویٹیٹیٹیچلڈ گارڈ ، ایک اورکاینٹیویٹیٹیچلڈ گارڈ]}]} مذکورہ بالا مثال کے طور پر ، ہم نے والدین روٹ کی سمری کی کینیکٹیویٹیکلڈ پراپرٹی کو متعدد محافظوں کو منتقل کرنے کے لئے ایک صف کا استعمال کیا ہے۔کونیولر روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینیکٹیویٹیچیلڈ انٹرفیس ، ڈویلپرز ایک نئی کلاس تشکیل دے سکتے ہیں جو کینیکٹیویٹیچیلڈ انٹرفیس کو نافذ کرے ، کلاس میں کینیکٹیویٹیکیلڈ () کے طریقہ کار کو نافذ کرے ، بچے کے راستے کو چالو کرنے کے طرز عمل کو کنٹرول کرنے کے لئے کینیکٹیوٹیٹیکیلڈ () کے طریقہ کار کے لئے منطق کی وضاحت کریں ،نئی کلاس کو والدین کے راستے کی کینیکٹیویٹیکلڈ پراپرٹی کو ایک قدر کے طور پر فراہم کریں ، اور ایک سے زیادہ گارڈز کو والدین کے روٹ کی کینیکٹیو ٹیچیلڈ پراپرٹی کو منتقل کرنے کے لئے ایک صف کا استعمال کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں اسکیپلوکیشن چینج اور اس کی جگہ لینے کے درمیان کیا فرق ہے؟",
        "Answer": "کونیی روٹنگ میں اسکیپلوکیشن چینج اور اس کی جگہ لے لیتے ہیں۔ان دونوں کے مابین اختلافات یہ ہیں: اسکیپلوکیشن چینجٹے اسکیپلوکیشن چینج پراپرٹی کو براؤزر کی تاریخ 123 میں نئے یو آر ایل کو شامل کیے بغیر کسی مختلف راستے پر تشریف لے جانے کے لئے استعمال کیا جاتا ہے۔ اسکیپلوکیشن چینج پراپرٹی مفید ہے جب ڈویلپرز کو موجودہ یو آر ایل میں موجودہ یو آر ایل کو تبدیل کیے بغیر کسی مختلف راستے پر تشریف لے جانے کی ضرورت ہوتی ہے۔براؤزر کی تاریخ 123۔ اسکیپلوکیشن چینج پراپرٹی نیویگیشن ایکسٹراس آبجیکٹ کا ایک آپشن ہے جو راؤٹر کو منتقل کیا جاتا ہے۔ نیویگیٹ () طریقہ 13. ری پلیسر لیٹورل پراپرٹی کو کسی مختلف راستے پر جانے اور براؤزر کی تاریخ میں موجودہ یو آر ایل کو نیو یو آر ایل 123 کے ساتھ تبدیل کرنے کے لئے استعمال کیا جاتا ہے۔پراپرٹی مفید ہے جب ڈویلپرز کو کسی مختلف راستے پر تشریف لے جانے اور براؤزر کی تاریخ میں موجودہ URL کو نئے URL123 کے ساتھ تبدیل کرنے کی ضرورت ہوتی ہے۔ ریپلیسورل پراپرٹی نیویگیشن ایکسٹراس آبجیکٹ کا ایک آپشن ہے جو روٹر کو منتقل کیا جاتا ہے۔کونیی روٹنگ میں اسکیپلوکیشن چینج اور اس کی جگہ لے لیتے ہیں۔اسکیپلوکیشن چینج پراپرٹی کو براؤزر کی تاریخ میں نئے یو آر ایل کو شامل کیے بغیر کسی مختلف راستے پر جانے کے لئے استعمال کیا جاتا ہے ، جبکہ ریپلیسورل پراپرٹی کو کسی مختلف راستے پر جانے اور براؤزر کی تاریخ میں موجودہ یو آر ایل کو نئے url.1stackoverflow2ligtututurialshub کے ساتھ تبدیل کرنے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینلوڈ گارڈ انٹرفیس کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینلوڈ گارڈ انٹرفیس کا استعمال کرنے کے لئے ، ڈویلپرز ان مراحل پر عمل پیرا ہوسکتے ہیں: ایک نئی کلاس بنائیں جو کینلوڈ انٹرفیس کو نافذ کرے۔ کلاس میں کینلوڈ () کے طریقہ کار کو نافذ کریں۔سست بوجھ والے ماڈیول کو لوڈ کرنے کا طرز عمل۔ نئی کلاس کو سست بوجھ والے ماڈیول کی کینلوڈ پراپرٹی کی قیمت کے طور پر پیش کریں۔ ایک سے زیادہ محافظوں کو لیزی لوڈڈ ماڈیول کی کین لوڈ پراپرٹی میں منتقل کرنے کے لئے ایک صف کا استعمال کریں۔ اس کی ایک مثال ہے۔کونیی روٹنگ میں ایک سے زیادہ محافظوں کے ساتھ کینلوڈ گارڈ انٹرفیس کا استعمال: '@کونیی/کور' سے درآمد {انجیکشن {امپورٹ {کینلوڈ ، روٹ@'@کونیی/روٹر' سے روٹ@@انجیکشن ایبل () ایکسپورٹ کلاس کسٹم کینلوڈ گارڈ کے اوزار کین لوڈ (روٹ روٹ روٹ: روٹ): بولین {// اپنی منطق کی وضاحت یہاں سچ واپس کریں۔}} مذکورہ بالا مثال میں ، ہم نے ایک نئی کلاس تشکیل دی ہے جو کینلوڈ انٹرفیس کو نافذ کرتی ہے۔ہم نے کلاس میں کینلوڈ () کا طریقہ کار نافذ کیا ہے۔ہم نے سست بوجھ والے ماڈیول کو لوڈ کرنے کے طرز عمل کو کنٹرول کرنے کے لئے کینلوڈ () کے طریقہ کار کے لئے منطق کی وضاحت کی ہے۔ہم نے نئی کلاس کو سست بھری ہوئی ماڈیول کی کینلوڈ پراپرٹی کو قیمت کے طور پر فراہم کیا ہے۔ لیزی لوڈڈ ماڈیول کی کین لوڈ پراپرٹی کے ساتھ متعدد گارڈز کا استعمال کرنے کے لئے ، ڈویلپرز محافظوں کو پراپرٹی کو منتقل کرنے کے لئے ایک صف کا استعمال کرسکتے ہیں: کانسٹ روٹس: روٹس = [{راستہ: 'سست' ، لوڈچنین: () => درآمد ('./ سست/سست.موڈول')مذکورہ بالا مثال میں ، ہم نے ایک سے زیادہ محافظوں کو سست بوجھ والے ماڈیول کی کینلوڈ پراپرٹی پر منتقل کرنے کے لئے ایک صف کا استعمال کیا ہے۔ خلاصہ۔انٹرفیس ، کلاس میں کینلوڈ () کے طریقہ کار کو نافذ کریں ، سست بوجھ والے ماڈیول کو لوڈ کرنے کے طرز عمل کو کنٹرول کرنے کے لئے کینلوڈ () کے طریقہ کار کے ل the منطق کی وضاحت کریں ، نئی کلاس کو کاہل سے بھرے ہوئے ماڈیول کی کین لوڈ پراپرٹی کو قیمت کے طور پر فراہم کریں۔، اور ایک سے زیادہ گارڈز کو لیزی لوڈڈ ماڈیول کی کین لوڈ پراپرٹی پر منتقل کرنے کے لئے ایک صف کا استعمال کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر لنکیکٹیو اپشنز انٹرفیس کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں راؤٹر لنکیکٹیو آپشن انٹرفیس کا استعمال روٹر لنکیکٹیو ہدایت کے طرز عمل کو تشکیل دینے کے لئے کیا جاتا ہے۔راؤٹر لنکیکٹی ایکٹیو اپشنز کے بارے میں کچھ اہم نکات یہ ہیں: روٹر لنک ایکٹیویکٹیویشنز @کونیی/راؤٹر پیکیج میں ایک انٹرفیس ہے جو روٹر لنکیکٹیو ڈائریکٹیو 12 کے اختیارات کی وضاحت کرتا ہے۔ راؤٹر لنکیکٹیو آپشنز کو روٹر لنکیکٹیو پیٹس کے طرز عمل کو ترتیب دینے کے لئے استعمال کیا جاتا ہے۔سی ایس ایس کلاسز عنصر پر لاگو ہونے کے لئے جب لنک فعال ہے۔کونیی روٹنگ میں انٹرفیس روٹر لنکیکٹیو ہدایت کے طرز عمل کو تشکیل دینے کے لئے استعمال کیا جاتا ہے۔جب لنک فعال ہوتا ہے اور اس بات کا تعین کرنے کے لئے کہ آیا کوئی لنک فعال ہے تو ڈویلپرز سی ایس ایس کلاسوں کی وضاحت کرنے کے لئے روٹر لنکیکٹیو آپشنز کا استعمال کرسکتے ہیں۔جب ڈویلپرز کو روٹر لنکیکٹیو ڈائریکٹیو کے طرز عمل کو اپنی مرضی کے مطابق بنانے کی ضرورت ہوتی ہے تو روٹر لنکیکٹیو آپشنز مفید ہیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں اختیاری پیرامیٹرز کے ساتھ آپ پیرامیٹرائزڈ روٹ نحو کو کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں اختیاری پیرامیٹرز کے ساتھ پیرامیٹرائزڈ روٹ نحو کو استعمال کرنے کے لئے ، ڈویلپر ان اقدامات پر عمل پیرا ہوسکتے ہیں: اختیاری پیرامیٹر کے ساتھ راستے کے راستے کی وضاحت کریں: پیرامیٹر کا نام اور اس کے بعد علامت کا استعمال کرتے ہوئے؟علامت اس بات کی نشاندہی کرنے کے لئے کہ پیرامیٹر اختیاری ہے۔ راستے اور کسی بھی دوسری خصوصیات کے ساتھ روٹ کی ترتیب کی وضاحت کریں۔ ایکٹیویٹیٹ روٹ سروس کا استعمال کرتے ہوئے جزو میں اختیاری پیرامیٹر۔ کوجاتی روٹنگ میں اختیاری پیرامیٹرز کے ساتھ پیرامیٹرائزڈ روٹ نحو کو استعمال کرنے کی ایک مثال ہے:کانسٹ روٹس: روٹس = [{راستہ: 'مثال/: ID؟' ، جزو: مثال کے طور پر}] ؛ مذکورہ بالا مثال میں ، ہم نے اختیاری پیرامیٹر ID کے ساتھ راستے کے راستے کی وضاحت کی ہے جس کا استعمال کرتے ہوئے: پیرامیٹر کا نام اور اس کے بعد علامت؟علامت اس بات کی نشاندہی کرنے کے لئے کہ پیرامیٹر اختیاری ہے۔ہم نے راستے اور مثال کے طور پر جزو کے جزو میں اختیاری پیرامیٹر تک رسائی کے لئے روٹ کی ترتیب کی وضاحت کی ہے۔'@کونیی/راؤٹر' ؛@اجزاء ({سلیکٹر: 'ایپ مثال' ، ٹیمپلیٹ: `<p> اختیاری پیرامیٹر: {{ID}} </p>` `) ایکسپورٹ کلاس کی مثال کے طور پر عمل کی مثال کے طور پر اونٹ {ID: سٹرنگ ؛کنسٹرکٹر (نجی روٹ: ایکٹیویٹیڈ روٹ) {} ngoninit () {this.id = this.route.snapshot.parammap.get ('id') ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے ایکٹیویٹ روٹ کلاس درآمد کی ہے۔ہم نے جزو کے کنسٹرکٹر میں ایکٹیویٹ روٹ کلاس انجکشن لگایا ہے۔ہم نے ایکٹیویٹیڈ راؤٹ.سناپ شاٹ.پارامپ.جیٹ () طریقہ کار کا استعمال کرتے ہوئے اختیاری پیرامیٹر آئی ڈی تک رسائی حاصل کی ہے ، کونیی روٹنگ میں اختیاری پیرامیٹرز کے ساتھ پیرامیٹرائزڈ روٹ نحو کو استعمال کرنے کے لئے ، ڈویلپرز اختیاری پیرامیٹر کے ساتھ راستے کے راستے کی وضاحت کرسکتے ہیں: علامت کا استعمال کرتے ہوئے: علامت کا استعمال کرتے ہیں۔پیرامیٹر کا نام اور اس کے بعد؟اس بات کی نشاندہی کرنے کے لئے علامت کہ پیرامیٹر اختیاری ہے ، راستے اور کسی بھی دوسری خصوصیات کے ساتھ روٹ کی ترتیب کی وضاحت کریں ، اور ایکٹیویٹیڈ روٹ سروس کا استعمال کرتے ہوئے جزو میں اختیاری پیرامیٹر تک رسائی حاصل کریں۔"
    },
    {
        "Question": "کونیی روٹنگ میں urlsegment اور urlsegment گروپ کے درمیان کیا فرق ہے؟",
        "Answer": "urlsegment یہ کونیی روٹنگ میں urlsement کلاس URL12 کے ایک ہی حصے کی نمائندگی کرتا ہے۔ urlsement کلاس URL طبقات کو تجزیہ کرنے اور اس میں جوڑ توڑ کے لئے استعمال کیا جاتا ہے۔ urlsement کلاس پیرامیٹرز کو نکالنے اور URL12 سے پیرامیٹرز سے استفسار کرنے کے لئے استعمال کیا جاتا ہے۔کونیی روٹنگ میں یو آر ایل 12 کے انفرادی طبقات کے ساتھ کام کریں۔یو آر ایل طبقات 342۔ یو آر ایل سیگمنٹ گروپ کلاس مفید ہے جب ڈویلپرز کو URL342.IN خلاصہ کے طبقات کے گروپوں کے ساتھ کام کرنے کی ضرورت ہوتی ہے ، کونیی روٹنگ میں URLSEGMENT اور URLSEGMETGROUP کلاس بالترتیب URL کے حصوں اور طبقات کے انفرادی طبقات اور گروپس کو پارس اور جوڑ توڑ کرنے کے لئے استعمال ہوتے ہیں۔یو آر ایل سیگمنٹ کلاس کو یو آر ایل کے انفرادی طبقات کے ساتھ کام کرنے کے لئے استعمال کیا جاتا ہے ، جبکہ یو آر ایل سیگمنٹ گروپ کلاس کو یو آر ایل کے طبقات کے گروپوں کے ساتھ کام کرنے کے لئے استعمال کیا جاتا ہے۔"
    },
    {
        "Question": "کونیی روٹنگ میں روٹر کے واقعات کو سنبھالنے کے لئے آپ روٹر.ایونٹس.ایونس۔ سبسکرائب () کا طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "روٹر کے واقعات کو کونیی روٹنگ میں راؤٹر کے واقعات کو سنبھالنے کے لئے۔واقعات۔ فیلٹر صرف ان لوگوں کو سنبھالنے کے لئے جو ایپلیکیشن سے متعلق ہیں۔اجزا} سے '@کونیی/کور' ؛ درآمد {راؤٹر ، نیوی گیشن} سے '@کونیی/روٹر' سے 'rxjs/آپریٹرز' سے درآمد {فلٹر@@جزو ({سلیکٹر: 'ایپ مثال' ، ٹیمپلیٹ: `<p> راؤٹر ایونٹ: {{واقعہ}} </p> `}) برآمدی کلاس مثال کے طور پر {واقعہ: سٹرنگ ؛کنسٹرکٹر (نجی روٹر: روٹر) {this.router.events.pipe (فلٹر (واقعہ => ایونٹ مثال کے طور پر نیویگیشنینڈ))) سبسکرائب ((واقعہ: نیویگیشنینڈ) => {this.event = ایونٹ.ورل ؛}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر اور نیویگیشنینڈ کلاسز درآمد کی ہیں۔ہم نے RXJs/آپریٹرز سے فلٹر فنکشن درآمد کیا ہے۔ہم نے جزو کے کنسٹرکٹر میں روٹر کلاس انجکشن لگایا ہے۔ہم نے روٹر کو سبسکرائب کیا ہے۔ روٹر واقعات کو سننے کے لئے قابل مشاہدہ۔ہم نے واقعات کو صرف نیوی گیشن ایونٹ کو سنبھالنے کے لئے فلٹر کیا ہے۔ہم نے کال بیک بیک فنکشن میں واقعات کو سنبھالا ہے۔ خلاصہ میں ، راؤٹر روٹنگ میں روٹر واقعات کو سنبھالنے کے لئے روٹر۔ ایوینٹس۔ سبسکرائب () طریقہ () ، ڈویلپرز جزو یا خدمت میں @کونیی/روٹر سے روٹر کلاس انجیکشن کرسکتے ہیں ، اس کو سبسکرائب کرسکتے ہیں۔روٹر۔ روٹر واقعات کو سننے کے لئے مشاہدہ کرنے والے ، واقعات کو صرف ان کو سنبھالنے کے لئے فلٹر کریں جو ایپلیکیشن سے متعلق ہیں ، اور کال بیک فنکشن میں واقعات کو سنبھالیں۔"
    },
    {
        "Question": "کونیی روٹنگ میں ایکٹیویٹ روٹ کا مقصد کیا ہے؟",
        "Answer": "کونیی روٹنگ میں ایکٹیویٹیڈ روٹ۔ پیرنٹ پراپرٹی کا استعمال پیرنٹ روٹ سیگمنٹ کے ایکٹیویٹ روٹ مثال تک رسائی کے لئے کیا جاتا ہے۔ایکٹیویٹیڈ روٹ کے بارے میں کچھ اہم نکات یہ ہیں۔ پیرنٹ پراپرٹی: ایکٹیویٹڈ روٹ۔ پیرنٹ پراپرٹی @کونیی/روٹر پیکیج 12 میں ایکٹیویٹیٹ راؤٹ کلاس کی ایک پراپرٹی ہے۔ ایکٹیویٹیڈ راؤٹ پراپرٹی کو والدین روٹ سیگمنٹ کے ایکٹیویٹیٹ روٹ مثال کے طور پر استعمال کیا جاتا ہے۔. والدین کی پراپرٹی مفید ہے جب ڈویلپرز کو پیرنٹ روٹ سیگمنٹ کے پیرامیٹرز تک رسائی حاصل کرنے یا کسی بچے کے اجزاء سے پیرامیٹرز کو استفسار کرنے کی ضرورت ہوتی ہے۔کونیی روٹنگ میں: درآمد {اجزاء ،@@کونیی/کور 'سے ONINIT ؛ درآمد {ایکٹیویٹ روٹ} سے'@کونیی/راؤٹر 'سے@جزو ({سلیکٹر:' ایپ-چلڈ '، ٹیمپلیٹ: `<p> والدین پیرامیٹر: {{پیرنٹیڈ}} </p> `}) برآمد کلاس چائلڈ اجزاء کو اونٹ {پیرنٹیڈ: سٹرنگ ؛کنسٹرکٹر (نجی روٹ: ایکٹیویٹیڈ روٹ) {} ngoninit () {this.parentid = this.route.parent.snapshot.parammap.get ('id') ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے ایکٹیویٹ روٹ کلاس درآمد کی ہے۔ہم نے جزو کے کنسٹرکٹر میں ایکٹیویٹ روٹ کلاس انجکشن لگایا ہے۔ہم نے پیرنٹ روٹ سیگمنٹ کے ایکٹیویٹیٹ روٹ مثال کے طور پر ایکٹیویٹیٹ راؤٹ۔ پیرینٹ پراپرٹی کا استعمال کرتے ہوئے رسائی حاصل کی ہے۔ہم نے ایکٹیویٹیڈ راؤٹ.سناپ شاٹ.پارامپ.جیٹ () طریقہ کار کا استعمال کرتے ہوئے پیرنٹ روٹ سیگمنٹ کے پیرامیٹر ID تک رسائی حاصل کی ہے۔ڈویلپرز پیرنٹ روٹ طبقہ کے پیرامیٹرز تک رسائی حاصل کرنے یا کسی بچے کے جزو سے پیرامیٹرز کو استفسار کرنے کے لئے ایکٹیویٹیڈ روٹ۔ پیرنٹ پراپرٹی کا استعمال کرسکتے ہیں۔ایکٹیویٹیڈ راؤٹ۔ پیرنٹ پراپرٹی کو بچے کے جزو میں ایکٹیویٹیڈ روٹ سروس کا استعمال کرتے ہوئے رسائی حاصل کی جاتی ہے۔"
    },
    {
        "Question": "آپ کونیی روٹنگ میں استفسار پیرمز اور فریگمنٹ پراپرٹیز کے ساتھ راؤٹر۔ نیویگیٹ () طریقہ کس طرح استعمال کرتے ہیں؟",
        "Answer": "کونیی روٹنگ میں استفسار پیرمز اور فریگمنٹ پراپرٹیز کے ساتھ راؤٹر۔ نیویگیٹ () طریقہ استعمال کرنے کے لئے ، ڈویلپر ان مراحل کی پیروی کرسکتے ہیں: اجزاء میں @کونیی/روٹر سے روٹر کلاس درآمد کریں۔راؤٹر۔ نیویگیٹ () طریقہ کار کے ساتھ یو آر ایل طبقات کی ایک صف ، استفسار پیرمز کا ایک شے ، اور ایک ٹکڑا۔ استفسار پیرامیٹرز کو سنبھالنے کے لئے کس طرح کوئیر پیرام شینڈلنگ پراپرٹی کا استعمال کریں۔کونیی روٹنگ میں فریگمنٹ کی خصوصیات: '@کونیی/کور' سے {جزو} درآمد {روٹر@'@کونیی/روٹر' سے درآمد@اجزاء ({سلیکٹر: 'ایپ مثال' ، ٹیمپلیٹ: `<بٹن (کلک)= \"gootoexample ()\"> مثال کے طور پر </buttain> `}) برآمد کلاس مثال کے طور پر {کنسٹرکٹر (نجی روٹر: روٹر) {} gotoexample () {Const quesparams = {id: '123' ، نام: 'مثال'}؛const ٹکڑا = 'تفصیلات' ؛this.router.navigate (['/مثال'] ، {استفسار پیرمز ، ٹکڑا ، استفسار پیرامشینڈلنگ: 'انضمام'}) ؛}} مذکورہ بالا مثال میں ، ہم نے جزو میں @کونیی/روٹر سے روٹر کلاس درآمد کیا ہے۔ہم نے جزو کے کنسٹرکٹر میں روٹر کلاس انجکشن لگایا ہے۔ہم نے URL طبقات کی ایک صف ، استفسار پیرمز کا ایک مقصد ، اور ایک ٹکڑا کے ساتھ روٹر.نویگیٹ () طریقہ کو بلایا ہے۔ہم نے استفسار پیرامیٹرز کو موجودہ استفسار پیرامیٹرز کے ساتھ ضم کرنے کے لئے 'ضم' کرنے کے لئے کوئری پیرا میسینڈلنگ پراپرٹی کا تعین کیا ہے۔@جزو میں کونیی/روٹر ، جزو کے کنسٹرکٹر میں روٹر کلاس انجیکشن لگائیں ، URL طبقات کی ایک صف ، استفسار پیرمز کی ایک چیز ، اور ایک ٹکڑا کے ساتھ راؤٹر۔ نیویگیٹ () کے طریقہ کار کو کال کریں ، اور وضاحت کرنے کے لئے استفسار پیرام شینڈلنگ پراپرٹی کا استعمال کریں۔استفسار پیرامیٹرز کو کس طرح سنبھالیں"
    }
]